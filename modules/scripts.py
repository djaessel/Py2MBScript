# This Python file uses the following encoding: utf-8

#import sys
#sys.path.append("../data_objects/")


from MBParty import MBParty

import ID_animations as animID
import module_constants as mconst
import header_common as mcom
import strings as gstr
import scene_props as spr
import sounds as snd
import troops as trp
import items as itm
import map_icons as icon
import game_menus as mnu
import animations as anim
import factions as fac
import meshes as mesh
#import info_pages as ip
import dialogs as dlg
import mission_templates as mt
import parties as p
import party_templates as pt
import particle_systems as psys
import presentations as prnst
import postfxs as pfx
import quests as qst
import scenes as scn
import skills as skl


def game_start():
    faction_set_slot(fac.player_supporters_faction,21,2)
    _g_player_luck = 200
    _g_player_luck = 200
    troop_set_slot(trp.player,2,2)
    random_x_001 = store_random_in_range(p.training_ground_1,p.bridge_1)
    party_relocate_near_party(p.main_party,random_x_001,3)
    s5 = str_store_troop_name(trp.player)
    party_set_name(p.main_party,5)
    update_party_creation_random_limits()
    _g_player_party_icon = -1
    for troop_id_002 in range(0, trp.heroes_end):
        if troop_id_002 == trp.player or is_between(troop_id_002,trp.npc1,trp.heroes_end):
            troop_set_slot(troop_id_002,31,-1)
            troop_set_slot(troop_id_002,32,-1)
            troop_set_slot(troop_id_002,33,-1)
            troop_set_slot(troop_id_002,30,-1)
            troop_set_slot(troop_id_002,34,-1)
            troop_set_slot(troop_id_002,8,-1)
            troop_set_slot(troop_id_002,38,-1)
            troop_set_slot(troop_id_002,154,-1)
            random_x_003 = store_random_in_range(0,10000)
            troop_set_slot(troop_id_002,48,random_x_003)
            troop_set_slot(troop_id_002,49,random_x_003)
        #end
    #end
    _g_lord_long_term_count = 0
    initialize_banner_info()
    initialize_item_info()
    initialize_aristocracy()
    initialize_npcs()
    _disable_npc_complaints = 0
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        random_x_005 = store_random_in_range(0,312)
        random_x_005 *= -1
        faction_set_slot(fac_004,94,random_x_005)
    #end
    var006 = p.castle_1
    var006 -= p.town_1
    var007 = var006
    for slot_no_008 in range(0, var006):
        troop_set_slot(trp.random_town_sequence,slot_no_008,-1)
    #end
    slot_no_008 = 0
    for var009 in range(0, var007):
        random_x_010 = store_random_in_range(0,var006)
        var011 = 1
        for var012 in range(0, var006):
            if troop_slot_eq(trp.random_town_sequence,var012,random_x_010):
                var011 = 0
            #end
        #end
        if var011 == 1:
            troop_set_slot(trp.random_town_sequence,slot_no_008,random_x_010)
            slot_no_008 += 1
        else:
            var007 += 1
        #end
    #end
    faction_set_slot(fac.culture_1,41,trp.swadian_recruit)
    faction_set_slot(fac.culture_1,42,trp.swadian_militia)
    faction_set_slot(fac.culture_1,43,trp.swadian_footman)
    faction_set_slot(fac.culture_1,44,trp.swadian_infantry)
    faction_set_slot(fac.culture_1,45,trp.swadian_knight)
    faction_set_slot(fac.culture_2,41,trp.vaegir_recruit)
    faction_set_slot(fac.culture_2,42,trp.vaegir_footman)
    faction_set_slot(fac.culture_2,43,trp.vaegir_veteran)
    faction_set_slot(fac.culture_2,44,trp.vaegir_infantry)
    faction_set_slot(fac.culture_2,45,trp.vaegir_knight)
    faction_set_slot(fac.culture_3,41,trp.khergit_tribesman)
    faction_set_slot(fac.culture_3,42,trp.khergit_skirmisher)
    faction_set_slot(fac.culture_3,43,trp.khergit_horseman)
    faction_set_slot(fac.culture_3,44,trp.khergit_horse_archer)
    faction_set_slot(fac.culture_3,45,trp.khergit_veteran_horse_archer)
    faction_set_slot(fac.culture_4,41,trp.nord_recruit)
    faction_set_slot(fac.culture_4,42,trp.nord_footman)
    faction_set_slot(fac.culture_4,43,trp.nord_trained_footman)
    faction_set_slot(fac.culture_4,44,trp.nord_warrior)
    faction_set_slot(fac.culture_4,45,trp.nord_veteran)
    faction_set_slot(fac.culture_5,41,trp.rhodok_tribesman)
    faction_set_slot(fac.culture_5,42,trp.rhodok_spearman)
    faction_set_slot(fac.culture_5,43,trp.rhodok_trained_spearman)
    faction_set_slot(fac.culture_5,44,trp.rhodok_veteran_spearman)
    faction_set_slot(fac.culture_5,45,trp.rhodok_sergeant)
    faction_set_slot(fac.culture_6,41,trp.sarranid_recruit)
    faction_set_slot(fac.culture_6,42,trp.sarranid_footman)
    faction_set_slot(fac.culture_6,43,trp.sarranid_archer)
    faction_set_slot(fac.culture_6,44,trp.sarranid_horseman)
    faction_set_slot(fac.culture_6,45,trp.sarranid_mamluke)
    faction_set_slot(fac.culture_1,53,trp.town_walker_1)
    faction_set_slot(fac.culture_1,54,trp.town_walker_2)
    faction_set_slot(fac.culture_1,55,trp.village_walker_1)
    faction_set_slot(fac.culture_1,56,trp.village_walker_2)
    faction_set_slot(fac.culture_1,57,trp.spy_walker_1)
    faction_set_slot(fac.culture_1,58,trp.spy_walker_2)
    faction_set_slot(fac.culture_2,53,trp.town_walker_1)
    faction_set_slot(fac.culture_2,54,trp.town_walker_2)
    faction_set_slot(fac.culture_2,55,trp.village_walker_1)
    faction_set_slot(fac.culture_2,56,trp.village_walker_2)
    faction_set_slot(fac.culture_2,57,trp.spy_walker_1)
    faction_set_slot(fac.culture_2,58,trp.spy_walker_2)
    faction_set_slot(fac.culture_3,53,trp.khergit_townsman)
    faction_set_slot(fac.culture_3,54,trp.khergit_townswoman)
    faction_set_slot(fac.culture_3,55,trp.khergit_townsman)
    faction_set_slot(fac.culture_3,56,trp.khergit_townswoman)
    faction_set_slot(fac.culture_3,57,trp.spy_walker_1)
    faction_set_slot(fac.culture_3,58,trp.spy_walker_2)
    faction_set_slot(fac.culture_4,53,trp.town_walker_1)
    faction_set_slot(fac.culture_4,54,trp.town_walker_2)
    faction_set_slot(fac.culture_4,55,trp.village_walker_1)
    faction_set_slot(fac.culture_4,56,trp.village_walker_2)
    faction_set_slot(fac.culture_4,57,trp.spy_walker_1)
    faction_set_slot(fac.culture_4,58,trp.spy_walker_2)
    faction_set_slot(fac.culture_5,53,trp.town_walker_1)
    faction_set_slot(fac.culture_5,54,trp.town_walker_2)
    faction_set_slot(fac.culture_5,55,trp.village_walker_1)
    faction_set_slot(fac.culture_5,56,trp.village_walker_2)
    faction_set_slot(fac.culture_5,57,trp.spy_walker_1)
    faction_set_slot(fac.culture_5,58,trp.spy_walker_2)
    faction_set_slot(fac.culture_6,53,trp.sarranid_townsman)
    faction_set_slot(fac.culture_6,54,trp.sarranid_townswoman)
    faction_set_slot(fac.culture_6,55,trp.sarranid_townsman)
    faction_set_slot(fac.culture_6,56,trp.sarranid_townswoman)
    faction_set_slot(fac.culture_6,57,trp.spy_walker_1)
    faction_set_slot(fac.culture_6,58,trp.spy_walker_2)
    if _cheat_mode == 1:
        reg3 = _cheat_mode
        print("@{!}DEBUG : Completed faction troop assignments - cheat mode: {reg3}")
    #end
    faction_set_slot(fac.kingdom_1,10,fac.culture_1)
    faction_set_slot(fac.kingdom_1,11,trp.kingdom_1_lord)
    troop_set_slot(trp.kingdom_1_lord,7,1200)
    faction_set_slot(fac.kingdom_2,10,fac.culture_2)
    faction_set_slot(fac.kingdom_2,11,trp.kingdom_2_lord)
    troop_set_slot(trp.kingdom_2_lord,7,1200)
    faction_set_slot(fac.kingdom_3,10,fac.culture_3)
    faction_set_slot(fac.kingdom_3,11,trp.kingdom_3_lord)
    troop_set_slot(trp.kingdom_3_lord,7,1200)
    faction_set_slot(fac.kingdom_4,10,fac.culture_4)
    faction_set_slot(fac.kingdom_4,11,trp.kingdom_4_lord)
    troop_set_slot(trp.kingdom_4_lord,7,1200)
    faction_set_slot(fac.kingdom_5,10,fac.culture_5)
    faction_set_slot(fac.kingdom_5,11,trp.kingdom_5_lord)
    troop_set_slot(trp.kingdom_5_lord,7,1200)
    faction_set_slot(fac.kingdom_6,10,fac.culture_6)
    faction_set_slot(fac.kingdom_6,11,trp.kingdom_6_lord)
    troop_set_slot(trp.kingdom_6_lord,7,1200)
    var013 = fac.culture_1
    faction_set_slot(fac.player_supporters_faction,10,var013)
    faction_set_slot(fac.player_faction,10,var013)
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_set_slot(fac_004,8,-1)
    #end
    faction_set_slot(fac.player_supporters_faction,8,trp.player)
    initialize_faction_troop_types()
    for itm_014 in range(itm.spice, itm.siege_supply):
        slot_no_015 = itm_014 - itm.spice
        slot_no_015 += 250
        for p_016 in range(p.town_1, p.salt_mine):
            party_set_slot(p_016,slot_no_015,1000)
        #end
    #end
    initialize_trade_routes()
    initialize_town_arena_info()
    for p_017 in range(p.town_1, p.castle_1):
        random_x_018 = store_random_in_range(0,100)
        if random_x_018 < 20:
            random_x_019 = store_random_in_range(12,15)
            party_set_slot(p_017,156,random_x_019)
        #end
    #end
    for p_020 in range(p.castle_1, p.village_1):
        var021 = 999999
        party_id_022 = -1
        for p_023 in range(p.village_1, p.salt_mine):
            if not party_slot_ge(p_023,120,1):
                distance_parties_024 = store_distance_to_party_from_party(p_023,p_020)
                if distance_parties_024 < var021:
                    var021 = distance_parties_024
                    party_id_022 = p_023
                #end
            #end
        #end
        party_set_slot(party_id_022,120,p_020)
        party_faction_025 = store_faction_of_party(p_020)
        give_center_to_faction_aux(party_id_022,party_faction_025)
    #end
    for p_023 in range(p.village_1, p.salt_mine):
        if not party_slot_ge(p_023,120,1):
            var021 = 999999
            var026 = -1
            for p_027 in range(p.town_1, p.castle_1):
                distance_parties_024 = store_distance_to_party_from_party(p_023,p_027)
                if distance_parties_024 < var021:
                    var021 = distance_parties_024
                    var026 = p_027
                #end
            #end
        #end
        party_set_slot(p_023,120,var026)
        party_faction_025 = store_faction_of_party(var026)
        give_center_to_faction_aux(p_023,party_faction_025)
    #end
    for p_017 in range(p.town_1, p.castle_1):
        slot_no_015 = p_017 - p.town_1
        party_set_slot(p_017,0,3)
        var028 = scn.town_1_center
        var028 += slot_no_015
        party_set_slot(p_017,10,var028)
        var028 = scn.town_1_castle
        var028 += slot_no_015
        party_set_slot(p_017,11,var028)
        var028 = scn.town_1_prison
        var028 += slot_no_015
        party_set_slot(p_017,12,var028)
        var028 = scn.town_1_walls
        var028 += slot_no_015
        party_set_slot(p_017,18,var028)
        var028 = scn.town_1_tavern
        var028 += slot_no_015
        party_set_slot(p_017,13,var028)
        var028 = scn.town_1_store
        var028 += slot_no_015
        party_set_slot(p_017,14,var028)
        var028 = scn.town_1_arena
        var028 += slot_no_015
        party_set_slot(p_017,16,var028)
        var028 = scn.town_1_alley
        var028 += slot_no_015
        party_set_slot(p_017,17,var028)
        var028 = trp.town_1_mayor
        var028 += slot_no_015
        party_set_slot(p_017,25,var028)
        var028 = trp.town_1_tavernkeeper
        var028 += slot_no_015
        party_set_slot(p_017,20,var028)
        var028 = trp.town_1_weaponsmith
        var028 += slot_no_015
        party_set_slot(p_017,21,var028)
        var028 = trp.town_1_armorer
        var028 += slot_no_015
        party_set_slot(p_017,22,var028)
        var028 = trp.town_1_merchant
        var028 += slot_no_015
        party_set_slot(p_017,23,var028)
        var028 = trp.town_1_horse_merchant
        var028 += slot_no_015
        party_set_slot(p_017,24,var028)
        var028 = scn.town_1_center
        var028 += slot_no_015
        party_set_slot(p_017,10,var028)
        party_set_slot(p_017,60,pt.center_reinforcements)
    #end
    for p_029 in range(p.castle_1, p.village_1):
        slot_no_015 = p_029 - p.castle_1
        slot_no_015 *= 3
        var030 = scn.castle_1_exterior
        var030 += slot_no_015
        party_set_slot(p_029,10,var030)
        var031 = scn.castle_1_interior
        var031 += slot_no_015
        party_set_slot(p_029,11,var031)
        var031 = scn.castle_1_prison
        var031 += slot_no_015
        party_set_slot(p_029,12,var031)
        party_set_slot(p_029,60,pt.center_reinforcements)
        party_set_slot(p_029,0,2)
        party_set_slot(p_029,54,-1)
    #end
    party_set_slot(p.town_13,27,1)
    party_set_slot(p.town_16,27,1)
    party_set_slot(p.castle_1,27,1)
    party_set_slot(p.castle_2,27,1)
    party_set_slot(p.castle_4,27,1)
    party_set_slot(p.castle_7,27,1)
    party_set_slot(p.castle_8,27,1)
    party_set_slot(p.castle_9,27,1)
    party_set_slot(p.castle_11,27,1)
    party_set_slot(p.castle_13,27,1)
    party_set_slot(p.castle_21,27,1)
    party_set_slot(p.castle_25,27,1)
    party_set_slot(p.castle_34,27,1)
    party_set_slot(p.castle_35,27,1)
    party_set_slot(p.castle_38,27,1)
    party_set_slot(p.castle_40,27,1)
    party_set_slot(p.castle_41,27,1)
    party_set_slot(p.castle_42,27,1)
    party_set_slot(p.castle_43,27,1)
    for p_032 in range(p.village_1, p.salt_mine):
        slot_no_015 = p_032 - p.village_1
        var030 = scn.village_1
        var030 += slot_no_015
        party_set_slot(p_032,10,var030)
        var033 = trp.village_1_elder
        var033 += slot_no_015
        party_set_slot(p_032,25,var033)
        party_set_slot(p_032,0,4)
        party_set_slot(p_032,34,-1)
        refresh_village_defenders(p_032)
        refresh_village_defenders(p_032)
        refresh_village_defenders(p_032)
        refresh_village_defenders(p_032)
    #end
    for p_016 in range(p.town_1, p.salt_mine):
        party_set_slot(p_016,55,-1)
        party_set_slot(p_016,54,-1)
        party_set_slot(p_016,28,-1)
    #end
    faction_set_slot(fac.kingdom_1,15,mesh.banner_kingdom_f)
    faction_set_slot(fac.kingdom_2,15,mesh.banner_kingdom_b)
    faction_set_slot(fac.kingdom_3,15,mesh.banner_kingdom_c)
    faction_set_slot(fac.kingdom_4,15,mesh.banner_kingdom_a)
    faction_set_slot(fac.kingdom_5,15,mesh.banner_kingdom_d)
    faction_set_slot(fac.kingdom_6,15,mesh.banner_kingdom_e)
    for fac_034 in range(fac.kingdom_1, fac.kingdoms_end):
        faction_slot_035 = faction_get_slot(fac_034,11)
        faction_slot_036 = faction_get_slot(fac_034,15)
        faction_slot_036 -= mesh.banner_a01
        faction_slot_036 += spr.banner_a
        troop_set_slot(faction_slot_035,13,faction_slot_036)
    #end
    var037 = 0
    var038 = 0
    var039 = 0
    for trp_040 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_040,2,2) or troop_slot_eq(trp_040,2,9):
            troop_faction_041 = store_faction_of_troop(trp_040)
            if not faction_slot_eq(troop_faction_041,11,trp_040):
                if troop_faction_041 == fac.kingdom_3:
                    var042 = spr.banner_a
                    var042 += 63
                    var043 = var042 + var037
                    troop_set_slot(trp_040,13,var043)
                    var037 += 1
                elif troop_faction_041 == fac.kingdom_6:
                    var044 = spr.banner_a
                    var044 += 105
                    var043 = var044 + var038
                    troop_set_slot(trp_040,13,var043)
                    var038 += 1
                else:
                    var045 = var039
                    if var045 > 63:
                        var045 += 84
                        var045 -= 63
                    #end
                #end
            #end
            if var045 > 105:
                var045 += 125
                var045 -= 105
            #end
            var043 = spr.banner_a
            var043 += var045
            troop_set_slot(trp_040,13,var043)
            var039 += 1
        #end
        if var043 >= spr.banner_a or var043 > spr.banner_f21:
            print("@{!}ERROR: Not enough banners for heroes!")
        #end
        character_lvl_046 = store_character_level(trp_040)
        var047 = character_lvl_046 * character_lvl_046
        var047 /= 4
        troop_slot_048 = troop_get_slot(trp_040,18)
        var049 = troop_slot_048 * troop_slot_048
        var049 /= 8
        var047 += var049
        if faction_slot_eq(troop_faction_041,11,trp_040):
            random_x_050 = store_random_in_range(250,400)
        else:
            random_x_050 = store_random_in_range(0,100)
        #end
        var047 += random_x_050
        troop_set_slot(trp_040,7,var047)
    #end
    for trp_051 in range(trp.player, trp.merchants_end):
        add_troop_note_tableau_mesh(trp_051,tab.troop_note_mesh)
    #end
    for p_016 in range(p.town_1, p.salt_mine):
        add_party_note_tableau_mesh(p_016,tab.center_note_mesh)
    #end
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if is_between(fac_004,fac.kingdom_1,fac.kingdoms_end):
            add_faction_note_tableau_mesh(fac_004,tab.faction_note_mesh)
        else:
            add_faction_note_tableau_mesh(fac_004,tab.faction_note_mesh_banner)
        #end
    #end
    give_center_to_faction_aux(p.town_1,fac.kingdom_4)
    give_center_to_faction_aux(p.town_2,fac.kingdom_4)
    give_center_to_faction_aux(p.town_3,fac.kingdom_5)
    give_center_to_faction_aux(p.town_4,fac.kingdom_1)
    give_center_to_faction_aux(p.town_5,fac.kingdom_5)
    give_center_to_faction_aux(p.town_6,fac.kingdom_1)
    give_center_to_faction_aux(p.town_7,fac.kingdom_1)
    give_center_to_faction_aux(p.town_8,fac.kingdom_2)
    give_center_to_faction_aux(p.town_9,fac.kingdom_2)
    give_center_to_faction_aux(p.town_10,fac.kingdom_3)
    give_center_to_faction_aux(p.town_11,fac.kingdom_2)
    give_center_to_faction_aux(p.town_12,fac.kingdom_4)
    give_center_to_faction_aux(p.town_13,fac.kingdom_2)
    give_center_to_faction_aux(p.town_14,fac.kingdom_3)
    give_center_to_faction_aux(p.town_15,fac.kingdom_5)
    give_center_to_faction_aux(p.town_16,fac.kingdom_1)
    give_center_to_faction_aux(p.town_17,fac.kingdom_3)
    give_center_to_faction_aux(p.town_18,fac.kingdom_3)
    give_center_to_faction_aux(p.town_19,fac.kingdom_6)
    give_center_to_faction_aux(p.town_20,fac.kingdom_6)
    give_center_to_faction_aux(p.town_21,fac.kingdom_6)
    give_center_to_faction_aux(p.town_22,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_1,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_2,fac.kingdom_3)
    give_center_to_faction_aux(p.castle_3,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_4,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_5,fac.kingdom_4)
    give_center_to_faction_aux(p.castle_6,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_7,fac.kingdom_3)
    give_center_to_faction_aux(p.castle_8,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_9,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_10,fac.kingdom_4)
    give_center_to_faction_aux(p.castle_11,fac.kingdom_4)
    give_center_to_faction_aux(p.castle_12,fac.kingdom_4)
    give_center_to_faction_aux(p.castle_13,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_14,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_15,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_16,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_17,fac.kingdom_3)
    give_center_to_faction_aux(p.castle_18,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_19,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_20,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_21,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_22,fac.kingdom_3)
    give_center_to_faction_aux(p.castle_23,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_24,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_25,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_26,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_27,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_28,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_29,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_30,fac.kingdom_3)
    give_center_to_faction_aux(p.castle_31,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_32,fac.kingdom_4)
    give_center_to_faction_aux(p.castle_33,fac.kingdom_5)
    give_center_to_faction_aux(p.castle_34,fac.kingdom_4)
    give_center_to_faction_aux(p.castle_35,fac.kingdom_1)
    give_center_to_faction_aux(p.castle_36,fac.kingdom_4)
    give_center_to_faction_aux(p.castle_37,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_38,fac.kingdom_3)
    give_center_to_faction_aux(p.castle_39,fac.kingdom_2)
    give_center_to_faction_aux(p.castle_40,fac.kingdom_3)
    give_center_to_faction_aux(p.castle_41,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_42,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_43,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_44,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_45,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_46,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_47,fac.kingdom_6)
    give_center_to_faction_aux(p.castle_48,fac.kingdom_6)
    give_center_to_lord(p.town_1,trp.kingdom_4_lord,0)
    give_center_to_lord(p.town_2,trp.knight_4_1,0)
    give_center_to_lord(p.town_3,trp.knight_5_1,0)
    give_center_to_lord(p.town_4,trp.knight_1_1,0)
    give_center_to_lord(p.town_5,trp.kingdom_5_lord,0)
    give_center_to_lord(p.town_6,trp.kingdom_1_lord,0)
    give_center_to_lord(p.town_7,trp.knight_1_2,0)
    give_center_to_lord(p.town_8,trp.kingdom_2_lord,0)
    give_center_to_lord(p.town_9,trp.knight_2_1,0)
    give_center_to_lord(p.town_10,trp.kingdom_3_lord,0)
    give_center_to_lord(p.town_11,trp.knight_2_2,0)
    give_center_to_lord(p.town_12,trp.knight_4_2,0)
    give_center_to_lord(p.town_13,trp.knight_2_3,0)
    give_center_to_lord(p.town_14,trp.knight_3_1,0)
    give_center_to_lord(p.town_15,trp.knight_5_2,0)
    give_center_to_lord(p.town_16,trp.knight_1_4,0)
    give_center_to_lord(p.town_17,trp.knight_3_2,0)
    give_center_to_lord(p.town_18,trp.knight_3_3,0)
    give_center_to_lord(p.town_19,trp.kingdom_6_lord,0)
    give_center_to_lord(p.town_20,trp.knight_6_1,0)
    give_center_to_lord(p.town_21,trp.knight_6_2,0)
    give_center_to_lord(p.town_22,trp.knight_6_3,0)
    give_center_to_lord(p.castle_29,trp.knight_2_10,0)
    give_center_to_lord(p.castle_30,trp.knight_3_4,0)
    give_center_to_lord(p.castle_35,trp.knight_1_3,0)
    assign_lords_to_empty_centers()
    for p_016 in range(p.town_1, p.salt_mine):
        party_faction_052 = store_faction_of_party(p_016)
        faction_slot_053 = faction_get_slot(party_faction_052,10)
        party_set_slot(p_016,19,faction_slot_053)
        party_set_slot(p_016,61,party_faction_052)
        party_set_slot(p_016,62,party_faction_052)
    #end
    party_set_slot(p.castle_10,62,fac.kingdom_2)
    party_set_slot(p.castle_13,62,fac.kingdom_4)
    party_set_slot(p.castle_15,62,fac.kingdom_1)
    party_set_slot(p.castle_46,62,fac.kingdom_5)
    party_set_slot(p.castle_40,62,fac.kingdom_6)
    party_set_slot(p.town_11,62,fac.kingdom_3)
    party_set_slot(p.castle_15,62,fac.kingdom_1)
    party_set_slot(p.castle_22,62,fac.kingdom_1)
    update_village_market_towns()
    for var009 in range(0, 70):
        if _cheat_mode == 1:
            print("@{!}DEBUG -- initial war/peace check begins")
        #end
        randomly_start_war_peace_new(0)
    #end
    for p_016 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_016,0,3) or party_slot_eq(p_016,0,4):
            for var054 in range(0, 8):
                center_set_walker_to_type(p_016,var054,0)
            #end
        #end
    #end
    initialize_economic_information()
    for p_032 in range(p.village_1, p.salt_mine):
        refresh_village_merchant_inventory(p_032)
    #end
    for trp_055 in range(trp.kingdom_1_lord, trp.knight_1_1_wife):
        if True:
            troop_faction_056 = store_faction_of_troop(trp_055)
            if is_between(troop_faction_056,fac.player_supporters_faction,fac.kingdoms_end):
                troop_set_slot(trp_055,14,troop_faction_056)
                if is_between(trp_055,trp.kingdom_1_pretender,trp.knight_1_1_wife):
                    faction_set_slot(troop_faction_056,60,1)
                #end
            #end
        #end
        var057 = 6000
        if True:
            troop_faction_058 = store_faction_of_troop(trp_055)
            if faction_slot_eq(troop_faction_058,11,trp_055):
                var057 = 20000
            #end
        #end
        troop_set_slot(trp_055,11,var057)
    #end
    for p_016 in range(p.town_1, p.village_1):
        var057 = 2000
        if is_between(p_016,p.town_1,p.castle_1):
            var057 *= 2
        #end
        party_set_slot(p_016,49,var057)
        var059 = 15
        if party_slot_eq(p_016,0,3):
            var059 = 40
        #end
        for var009 in range(0, var059):
            if call_script(script.cf_reinforce_party,p_016):
                pass
            #end
        #end
        var060 = var059 / 5
        var060 += 2
        campaign_ai = game_get_reduce_campaign_ai()
        if campaign_ai == 0:
            var062 = 7500
        elif campaign_ai == 1:
            var062 = 5000
        elif campaign_ai == 2:
            var062 = 2500
        #end
        for var009 in range(0, var060):
            party_upgrade_with_xp(p_016,var062,0)
        #end
        center_get_food_store_limit(p_016)
        var063 = reg0
        var063 /= 2
        party_set_slot(p_016,53,var063)
        party_slot_064 = party_get_slot(p_016,7)
        if party_slot_064 >= 1 and troop_slot_eq(party_slot_064,10,0):
            _g_there_is_no_avaliable_centers = 0
            create_kingdom_hero_party(party_slot_064,p_016)
            var065 = _pout_party
            party_attach_to_party(var065,p_016)
            party_set_slot(p_016,51,1000)
        #end
    #end
    for trp_066 in range(trp.npc1, trp.kingdom_1_lord):
        for trp_067 in range(trp.npc1, trp.kingdom_1_lord):
            if trp_067 != trp_066 and not troop_slot_eq(trp_066,71,trp_067) and not troop_slot_eq(trp_066,73,trp_067):
                troop_change_relation_with_troop(trp_066,trp_067,7)
            #end
        #end
    #end
    for trp_068 in range(trp.kingdom_1_lord, trp.knight_1_1_wife):
        if troop_slot_eq(trp_068,2,2):
            troop_slot_069 = troop_get_slot(trp_068,14)
            for trp_070 in range(trp.kingdom_1_lord, trp.knight_1_1_wife):
                if troop_slot_eq(trp_070,2,2) or troop_slot_eq(trp_070,2,9):
                    troop_slot_071 = troop_get_slot(trp_070,14)
                    if troop_slot_071 == troop_slot_069:
                        troop_get_family_relation_to_troop(trp_068,trp_070)
                        troop_change_relation_with_troop(trp_068,trp_070,reg0)
                        random_x_072 = store_random_in_range(0,11)
                        troop_change_relation_with_troop(trp_068,trp_070,random_x_072)
                    #end
                #end
            #end
        #end
    #end
    for var009 in range(0, 5000):
        if call_script(script.cf_random_political_event):
            pass
        #end
    #end
    _total_random_quarrel_changes = 0
    _total_relation_adds = 0
    _total_relation_subs = 0
    for fac_073 in range(fac.player_supporters_faction, fac.kingdoms_end):
        evaluate_realm_stability(fac_073)
    #end
    if _cheat_mode == 1:
        reg3 = _cheat_mode
        print("@{!}DEBUG : Completed political events - cheat mode: {reg3}")
    #end
    for trp_074 in range(trp.knight_1_1, trp.kingdom_1_pretender):
        if troop_slot_eq(trp_074,30,-1) and not is_between(trp_074,trp.kingdom_1_lord,trp.knight_1_1) and not is_between(trp_074,trp.kingdom_1_pretender,trp.knight_1_1_wife):
            assign_troop_love_interests(trp_074)
        #end
    #end
    _romantic_attraction_seed = store_random_in_range(0,5)
    if _cheat_mode == 1:
        reg3 = _romantic_attraction_seed
        print("@{!}DEBUG : Assigned love interests. Attraction seed: {reg3}")
    #end
    for var009 in range(0, 10):
        spawn_bandits()
    #end
    set_spawn_radius(5)
    for p_023 in range(p.village_1, p.salt_mine):
        random_x_075 = store_random_in_range(0,5)
        if random_x_075 == 0:
            spawn_around_party(p_023,pt.looters)
        #end
    #end
    update_mercenary_units_of_towns()
    update_companion_candidates_in_taverns()
    update_ransom_brokers()
    update_tavern_travellers()
    update_tavern_minstrels()
    update_booksellers()
    for p_032 in range(p.village_1, p.salt_mine):
        update_volunteer_troops_in_village(p_032)
    #end
    for fac_076 in range(fac.player_supporters_faction, fac.kingdoms_end):
        update_faction_notes(fac_076)
        random_x_010 = store_random_in_range(-60,0)
        faction_set_slot(fac_004,95,random_x_010)
    #end
    for trp_074 in range(trp.kingdom_1_lord, trp.knight_1_1_wife):
        update_troop_notes(trp_074)
    #end
    for p_020 in range(p.town_1, p.salt_mine):
        update_center_notes(p_020)
    #end
    update_troop_notes(trp.player)
    for trp_055 in range(trp.knight_1_1_wife, trp.heroes_end):
        get_kingdom_lady_social_determinants(trp_055)
        troop_set_slot(trp_055,12,reg1)
    #end
    if _cheat_mode == 1:
        reg3 = _cheat_mode
        print("@{!}DEBUG : Located kingdom ladies - cheat mode: {reg3}")
    #end
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_recalculate_strength(fac_004)
    #end
    faction_set_slot(fac.kingdom_1,22,gstr.kingdom_1_adjective)
    faction_set_slot(fac.kingdom_2,22,gstr.kingdom_2_adjective)
    faction_set_slot(fac.kingdom_3,22,gstr.kingdom_3_adjective)
    faction_set_slot(fac.kingdom_4,22,gstr.kingdom_4_adjective)
    faction_set_slot(fac.kingdom_5,22,gstr.kingdom_5_adjective)
    faction_set_slot(fac.kingdom_6,22,gstr.kingdom_6_adjective)
    get_player_party_morale_values()
    party_set_morale(p.main_party,reg0)
    troop_set_note_available(trp.player,1)
    for trp_051 in range(trp.kingdom_1_lord, trp.knight_1_1):
        troop_set_note_available(trp_051,1)
    #end
    for trp_051 in range(trp.knight_1_1, trp.kingdom_1_pretender):
        troop_set_note_available(trp_051,1)
    #end
    for trp_051 in range(trp.knight_1_1_wife, trp.heroes_end):
        troop_set_note_available(trp_051,1)
    #end
    troop_set_note_available(trp.knight_1_1_wife,0)
    for trp_051 in range(trp.kingdom_1_pretender, trp.knight_1_1_wife):
        troop_set_note_available(trp_051,1)
    #end
    for fac_004 in range(fac.kingdom_1, fac.kingdoms_end):
        faction_set_note_available(fac_004,1)
    #end
    faction_set_note_available(fac.neutral,0)
    for p_077 in range(p.town_1, p.salt_mine):
        party_set_note_available(p_077,1)
    #end


def game_get_use_string(scene_prop_instance_id_001):
    var003_list2 = [
    spr.castle_f_door_a,
    spr.viking_keep_destroy_sally_door_right,
    spr.viking_keep_destroy_sally_door_left,
    spr.earth_sally_gate_right,
    spr.earth_sally_gate_left,
    spr.castle_f_sally_door_a,
    spr.castle_e_sally_door_a,
    spr.castle_f_door_b,
    spr.door_destructible,
    ]
    scene_prop_kind_002_list2 = [
    spr.siege_ladder_move_14m,
    spr.siege_ladder_move_12m,
    spr.siege_ladder_move_10m,
    spr.siege_ladder_move_8m,
    spr.siege_ladder_move_6m,
    spr.castle_f_door_a,
    spr.viking_keep_destroy_sally_door_right,
    spr.viking_keep_destroy_sally_door_left,
    spr.earth_sally_gate_right,
    spr.earth_sally_gate_left,
    spr.castle_f_sally_door_a,
    spr.castle_e_sally_door_a,
    spr.castle_f_door_b,
    spr.door_destructible,
    ]
    scene_prop_kind_002_list1 = [
    spr.winch,
    spr.winch_b,
    ]
    scene_prop_kind_002 = prop_instance_get_scene_prop_kind(scene_prop_instance_id_001)
    if scene_prop_kind_002 in scene_prop_kind_002_list1:
        var003 = spr.portcullis
    elif scene_prop_kind_002 in scene_prop_kind_002_list2:
        var003 = scene_prop_kind_002
    #end
    scene_prop_slot_004 = scene_prop_get_slot(scene_prop_instance_id_001,1)
    if var003 == spr.portcullis:
        if scene_prop_slot_004 == 0:
            s0 = str_store_string(gstr.open_gate)
        else:
            s0 = str_store_string(gstr.close_gate)
        #end
    elif var003 in var003_list2:
        if scene_prop_slot_004 == 0:
            s0 = str_store_string(gstr.open_door)
        else:
            s0 = str_store_string(gstr.close_door)
        #end
    elif scene_prop_kind_002 == spr.multiplayer_coop_item_drop:
        s0 = str_store_string(gstr.coop_open_chest)
        my_player = multiplayer_get_my_player()
        for slot_no_006 in range(50, 60):
            player_slot_007 = player_get_slot(my_player,slot_no_006)
            if player_slot_007 == scene_prop_instance_id_001 and not is_presentation_active(prsnt.coop_assign_drop_to_group_member):
                s0 = str_store_string(gstr.coop_already_opened)
            #end
        #end
    else:
        if scene_prop_slot_004 == 0:
            s0 = str_store_string(gstr.raise_ladder)
        else:
            s0 = str_store_string(gstr.drop_ladder)
        #end
    #end


def game_quick_start():
    _g_is_quick_battle = 0
    _g_quick_battle_game_type = 0
    _g_quick_battle_troop = trp.quick_battle_troop_1
    _g_quick_battle_map = scn.quick_battle_scene_1
    _g_quick_battle_team_1_faction = fac.kingdom_1
    _g_quick_battle_team_2_faction = fac.kingdom_2
    _g_quick_battle_army_1_size = 25
    _g_quick_battle_army_2_size = 25
    faction_set_slot(fac.outlaws,41,trp.mountain_bandit)
    faction_set_slot(fac.outlaws,42,trp.sea_raider)
    faction_set_slot(fac.outlaws,43,trp.forest_bandit)
    faction_set_slot(fac.outlaws,44,trp.taiga_bandit)
    faction_set_slot(fac.outlaws,45,trp.steppe_bandit)
    faction_set_slot(fac.outlaws,46,trp.desert_bandit)
    faction_set_slot(fac.kingdom_1,41,trp.swadian_footman)
    faction_set_slot(fac.kingdom_1,42,trp.swadian_infantry)
    faction_set_slot(fac.kingdom_1,43,trp.swadian_skirmisher)
    faction_set_slot(fac.kingdom_1,44,trp.swadian_crossbowman)
    faction_set_slot(fac.kingdom_1,45,trp.swadian_man_at_arms)
    faction_set_slot(fac.kingdom_1,46,trp.swadian_knight)
    faction_set_slot(fac.kingdom_2,41,trp.vaegir_footman)
    faction_set_slot(fac.kingdom_2,42,trp.vaegir_infantry)
    faction_set_slot(fac.kingdom_2,43,trp.vaegir_skirmisher)
    faction_set_slot(fac.kingdom_2,44,trp.vaegir_archer)
    faction_set_slot(fac.kingdom_2,45,trp.vaegir_horseman)
    faction_set_slot(fac.kingdom_2,46,trp.vaegir_knight)
    faction_set_slot(fac.kingdom_3,41,trp.khergit_dismounted_lancer_multiplayer_ai)
    faction_set_slot(fac.kingdom_3,42,trp.khergit_dismounted_lancer_multiplayer_ai)
    faction_set_slot(fac.kingdom_3,43,trp.khergit_horse_archer)
    faction_set_slot(fac.kingdom_3,44,trp.khergit_veteran_horse_archer)
    faction_set_slot(fac.kingdom_3,45,trp.khergit_lancer)
    faction_set_slot(fac.kingdom_3,46,trp.khergit_lancer)
    faction_set_slot(fac.kingdom_4,41,trp.nord_warrior)
    faction_set_slot(fac.kingdom_4,42,trp.nord_champion)
    faction_set_slot(fac.kingdom_4,43,trp.nord_archer)
    faction_set_slot(fac.kingdom_4,44,trp.nord_veteran_archer)
    faction_set_slot(fac.kingdom_4,45,trp.nord_scout_multiplayer_ai)
    faction_set_slot(fac.kingdom_4,46,trp.nord_scout_multiplayer_ai)
    faction_set_slot(fac.kingdom_5,41,trp.rhodok_veteran_spearman)
    faction_set_slot(fac.kingdom_5,42,trp.rhodok_sergeant)
    faction_set_slot(fac.kingdom_5,43,trp.rhodok_crossbowman)
    faction_set_slot(fac.kingdom_5,44,trp.rhodok_veteran_crossbowman)
    faction_set_slot(fac.kingdom_5,45,trp.rhodok_scout_multiplayer_ai)
    faction_set_slot(fac.kingdom_5,46,trp.rhodok_scout_multiplayer_ai)
    faction_set_slot(fac.kingdom_6,41,trp.sarranid_veteran_footman)
    faction_set_slot(fac.kingdom_6,42,trp.sarranid_infantry)
    faction_set_slot(fac.kingdom_6,43,trp.sarranid_skirmisher)
    faction_set_slot(fac.kingdom_6,44,trp.sarranid_archer)
    faction_set_slot(fac.kingdom_6,45,trp.sarranid_horseman)
    faction_set_slot(fac.kingdom_6,46,trp.sarranid_mamluke)
    _g_multiplayer_selected_map = scn.multi_scene_1
    _g_multiplayer_respawn_period = 5
    _g_multiplayer_round_max_seconds = 300
    _g_multiplayer_game_max_minutes = 30
    _g_multiplayer_game_max_points = 300
    _g_multiplayer_renaming_server_allowed = server_get_renaming_server_allowed()
    _g_multiplayer_changing_game_type_allowed = server_get_changing_game_type_allowed()
    _g_multiplayer_point_gained_from_flags = 100
    _g_multiplayer_point_gained_from_capturing_flag = 5
    _g_multiplayer_game_type = 0
    _g_multiplayer_team_1_faction = fac.kingdom_1
    _g_multiplayer_team_2_faction = fac.kingdom_2
    _g_multiplayer_next_team_1_faction = _g_multiplayer_team_1_faction
    _g_multiplayer_next_team_2_faction = _g_multiplayer_team_2_faction
    _g_multiplayer_num_bots_team_1 = 0
    _g_multiplayer_num_bots_team_2 = 0
    _g_multiplayer_number_of_respawn_count = 0
    _g_multiplayer_num_bots_voteable = 50
    _g_multiplayer_max_num_bots = 101
    _g_multiplayer_factions_voteable = 1
    _g_multiplayer_maps_voteable = 1
    _g_multiplayer_kick_voteable = 1
    _g_multiplayer_ban_voteable = 1
    _g_multiplayer_valid_vote_ratio = 51
    _g_multiplayer_auto_team_balance_limit = 3
    _g_multiplayer_player_respawn_as_bot = 1
    _g_multiplayer_stats_chart_opened_manually = 0
    _g_multiplayer_mission_end_screen = 0
    _g_multiplayer_ready_for_spawning_agent = 1
    _g_multiplayer_welcome_message_shown = 0
    _g_multiplayer_allow_player_banners = 1
    _g_multiplayer_force_default_armor = 1
    _g_multiplayer_disallow_ranged_weapons = 0
    _g_multiplayer_initial_gold_multiplier = 100
    _g_multiplayer_battle_earnings_multiplier = 100
    _g_multiplayer_round_earnings_multiplier = 100
    _g_multiplayer_is_game_type_captain = 0
    _g_multiplayer_ccoop_difficulty = 1
    faction_set_slot(fac.kingdom_1,15,mesh.banner_kingdom_f)
    faction_set_slot(fac.kingdom_2,15,mesh.banner_kingdom_b)
    faction_set_slot(fac.kingdom_3,15,mesh.banner_kingdom_c)
    faction_set_slot(fac.kingdom_4,15,mesh.banner_kingdom_a)
    faction_set_slot(fac.kingdom_5,15,mesh.banner_kingdom_d)
    faction_set_slot(fac.kingdom_6,15,mesh.banner_kingdom_e)
    for item_id_001 in range(0, itm.items_end):
        for fac_002 in range(fac.kingdom_1, fac.kingdoms_end):
            slot_no_003 = fac_002 - fac.kingdom_1
            slot_no_003 += 30
            item_set_slot(item_id_001,slot_no_003,100)
        #end
    #end
    slot_no_004 = fac.kingdom_1
    slot_no_004 -= fac.kingdom_1
    slot_no_004 += 30
    slot_no_005 = fac.kingdom_2
    slot_no_005 -= fac.kingdom_1
    slot_no_005 += 30
    slot_no_006 = fac.kingdom_3
    slot_no_006 -= fac.kingdom_1
    slot_no_006 += 30
    var007 = fac.kingdom_4
    var007 -= fac.kingdom_1
    var007 += 30
    var008 = fac.kingdom_5
    var008 -= fac.kingdom_1
    var008 += 30
    slot_no_009 = fac.kingdom_6
    slot_no_009 -= fac.kingdom_1
    slot_no_009 += 30
    item_set_slot(itm.awlpike,slot_no_004,80)
    item_set_slot(itm.awlpike_long,slot_no_004,90)
    item_set_slot(itm.sword_medieval_a,slot_no_004,80)
    item_set_slot(itm.sword_medieval_b,slot_no_004,80)
    item_set_slot(itm.sword_medieval_b_small,slot_no_004,80)
    item_set_slot(itm.sword_medieval_c,slot_no_004,80)
    item_set_slot(itm.sword_medieval_c_small,slot_no_004,80)
    item_set_slot(itm.leather_boots,slot_no_004,90)
    item_set_slot(itm.mail_chausses,slot_no_004,80)
    item_set_slot(itm.splinted_greaves,slot_no_004,80)
    item_set_slot(itm.plate_boots,slot_no_004,80)
    item_set_slot(itm.courser,slot_no_004,90)
    item_set_slot(itm.hunter,slot_no_004,75)
    item_set_slot(itm.norman_helmet,slot_no_004,75)
    item_set_slot(itm.helmet_with_neckguard,slot_no_004,75)
    item_set_slot(itm.red_gambeson,slot_no_004,75)
    item_set_slot(itm.darts,slot_no_004,50)
    item_set_slot(itm.war_darts,slot_no_004,50)
    item_set_slot(itm.tab_shield_heater_d,slot_no_004,80)
    item_set_slot(itm.brigandine_red,slot_no_004,75)
    item_set_slot(itm.bastard_sword_b,slot_no_004,65)
    item_set_slot(itm.bastard_sword_a,slot_no_004,85)
    item_set_slot(itm.steppe_horse,slot_no_006,120)
    item_set_slot(itm.courser,slot_no_006,80)
    item_set_slot(itm.hunter,slot_no_006,80)
    item_set_slot(itm.warhorse_steppe,slot_no_006,120)
    item_set_slot(itm.one_handed_war_axe_a,slot_no_006,300)
    item_set_slot(itm.tribal_warrior_outfit,slot_no_006,140)
    item_set_slot(itm.leather_gloves,slot_no_009,50)
    item_set_slot(itm.short_bow,slot_no_009,50)
    item_set_slot(itm.barbed_arrows,slot_no_009,80)
    item_set_slot(itm.jarid,slot_no_009,85)
    item_set_slot(itm.javelin,slot_no_009,85)
    item_set_slot(itm.lamellar_vest,slot_no_005,130)
    item_set_slot(itm.awlpike,slot_no_005,150)
    item_set_slot(itm.scimitar,slot_no_005,130)
    item_set_slot(itm.scimitar_b,slot_no_005,150)
    item_set_slot(itm.tab_shield_kite_a,slot_no_005,120)
    item_set_slot(itm.tab_shield_kite_b,slot_no_005,120)
    item_set_slot(itm.tab_shield_kite_c,slot_no_005,120)
    item_set_slot(itm.tab_shield_kite_d,slot_no_005,120)
    item_set_slot(itm.javelin,slot_no_005,120)
    item_set_slot(itm.arrows,60,14)
    item_set_slot(itm.barbed_arrows,60,14)
    item_set_slot(itm.bodkin_arrows,60,14)
    item_set_slot(itm.khergit_arrows,60,14)
    item_set_slot(itm.bolts,60,15)
    item_set_slot(itm.steel_bolts,60,15)
    item_set_slot(itm.crossbow,60,12)
    item_set_slot(itm.heavy_crossbow,60,12)
    item_set_slot(itm.sniper_crossbow,60,12)
    item_set_slot(itm.nomad_bow,60,12)
    item_set_slot(itm.khergit_bow,60,12)
    item_set_slot(itm.strong_bow,60,12)
    item_set_slot(itm.war_bow,60,12)
    item_set_slot(itm.short_bow,60,12)
    item_set_slot(itm.long_bow,60,12)
    item_set_slot(itm.light_crossbow,60,12)
    item_set_slot(itm.sword_medieval_a,60,1)
    item_set_slot(itm.sword_medieval_b,60,1)
    item_set_slot(itm.sword_medieval_b_small,60,1)
    item_set_slot(itm.sword_medieval_c,60,1)
    item_set_slot(itm.sword_medieval_c_small,60,1)
    item_set_slot(itm.scimitar,60,1)
    item_set_slot(itm.scimitar_b,60,1)
    item_set_slot(itm.dagger,60,1)
    item_set_slot(itm.sword_khergit_1,60,1)
    item_set_slot(itm.sword_khergit_2,60,1)
    item_set_slot(itm.sword_khergit_3,60,1)
    item_set_slot(itm.sword_khergit_4,60,1)
    item_set_slot(itm.sword_viking_1,60,1)
    item_set_slot(itm.sword_viking_2,60,1)
    item_set_slot(itm.sword_viking_2_small,60,1)
    item_set_slot(itm.sword_viking_3,60,1)
    item_set_slot(itm.sword_viking_3_small,60,1)
    item_set_slot(itm.bastard_sword_a,60,6)
    item_set_slot(itm.bastard_sword_b,60,6)
    item_set_slot(itm.sword_two_handed_a,60,6)
    item_set_slot(itm.sword_two_handed_b,60,6)
    item_set_slot(itm.arabian_sword_a,60,6)
    item_set_slot(itm.arabian_sword_b,60,6)
    item_set_slot(itm.sarranid_cavalry_sword,60,6)
    item_set_slot(itm.arabian_sword_d,60,6)
    item_set_slot(itm.axe,60,2)
    item_set_slot(itm.battle_axe,60,2)
    item_set_slot(itm.one_handed_war_axe_a,60,2)
    item_set_slot(itm.one_handed_war_axe_b,60,2)
    item_set_slot(itm.one_handed_battle_axe_a,60,2)
    item_set_slot(itm.one_handed_battle_axe_b,60,2)
    item_set_slot(itm.one_handed_battle_axe_c,60,2)
    item_set_slot(itm.two_handed_axe,60,7)
    item_set_slot(itm.two_handed_battle_axe_2,60,7)
    item_set_slot(itm.shortened_voulge,60,7)
    item_set_slot(itm.bardiche,60,7)
    item_set_slot(itm.great_axe,60,7)
    item_set_slot(itm.great_bardiche,60,7)
    item_set_slot(itm.long_axe,60,7)
    item_set_slot(itm.long_axe_b,60,7)
    item_set_slot(itm.long_axe_c,60,7)
    item_set_slot(itm.voulge,60,7)
    item_set_slot(itm.long_bardiche,60,7)
    item_set_slot(itm.great_long_bardiche,60,7)
    item_set_slot(itm.mace_1,60,3)
    item_set_slot(itm.mace_2,60,3)
    item_set_slot(itm.mace_3,60,3)
    item_set_slot(itm.mace_4,60,3)
    item_set_slot(itm.long_spiked_club,60,3)
    item_set_slot(itm.long_hafted_spiked_mace,60,3)
    item_set_slot(itm.maul,60,3)
    item_set_slot(itm.sledgehammer,60,3)
    item_set_slot(itm.warhammer,60,3)
    item_set_slot(itm.morningstar,60,3)
    item_set_slot(itm.military_sickle_a,60,4)
    item_set_slot(itm.fighting_pick,60,4)
    item_set_slot(itm.military_pick,60,4)
    item_set_slot(itm.club_with_spike_head,60,4)
    item_set_slot(itm.falchion,60,5)
    item_set_slot(itm.military_cleaver_b,60,5)
    item_set_slot(itm.military_cleaver_c,60,5)
    item_set_slot(itm.two_handed_cleaver,60,5)
    item_set_slot(itm.hafted_blade_a,60,5)
    item_set_slot(itm.hafted_blade_b,60,5)
    item_set_slot(itm.shortened_military_scythe,60,5)
    item_set_slot(itm.sarranid_mace_1,60,3)
    item_set_slot(itm.sarranid_axe_a,60,3)
    item_set_slot(itm.sarranid_axe_b,60,3)
    item_set_slot(itm.sarranid_two_handed_axe_a,60,7)
    item_set_slot(itm.sarranid_two_handed_axe_b,60,7)
    item_set_slot(itm.sarranid_two_handed_mace_1,60,7)
    item_set_slot(itm.bamboo_spear,60,8)
    item_set_slot(itm.double_sided_lance,60,8)
    item_set_slot(itm.glaive,60,8)
    item_set_slot(itm.poleaxe,60,8)
    item_set_slot(itm.polehammer,60,8)
    item_set_slot(itm.staff,60,8)
    item_set_slot(itm.quarter_staff,60,8)
    item_set_slot(itm.iron_staff,60,8)
    item_set_slot(itm.shortened_spear,60,8)
    item_set_slot(itm.spear,60,8)
    item_set_slot(itm.war_spear,60,8)
    item_set_slot(itm.military_scythe,60,8)
    item_set_slot(itm.pike,60,8)
    item_set_slot(itm.ashwood_pike,60,8)
    item_set_slot(itm.awlpike,60,8)
    item_set_slot(itm.awlpike_long,60,8)
    item_set_slot(itm.light_lance,60,9)
    item_set_slot(itm.lance,60,9)
    item_set_slot(itm.heavy_lance,60,9)
    item_set_slot(itm.great_lance,60,9)
    item_set_slot(itm.tab_shield_round_a,60,10)
    item_set_slot(itm.tab_shield_round_b,60,10)
    item_set_slot(itm.tab_shield_round_c,60,10)
    item_set_slot(itm.tab_shield_round_d,60,10)
    item_set_slot(itm.tab_shield_round_e,60,10)
    item_set_slot(itm.tab_shield_kite_a,60,10)
    item_set_slot(itm.tab_shield_kite_b,60,10)
    item_set_slot(itm.tab_shield_kite_c,60,10)
    item_set_slot(itm.tab_shield_kite_d,60,10)
    item_set_slot(itm.tab_shield_kite_cav_a,60,10)
    item_set_slot(itm.tab_shield_kite_cav_b,60,10)
    item_set_slot(itm.tab_shield_heater_a,60,10)
    item_set_slot(itm.tab_shield_heater_b,60,10)
    item_set_slot(itm.tab_shield_heater_c,60,10)
    item_set_slot(itm.tab_shield_heater_d,60,10)
    item_set_slot(itm.tab_shield_heater_cav_a,60,10)
    item_set_slot(itm.tab_shield_heater_cav_b,60,10)
    item_set_slot(itm.tab_shield_pavise_a,60,10)
    item_set_slot(itm.tab_shield_pavise_b,60,10)
    item_set_slot(itm.tab_shield_pavise_c,60,10)
    item_set_slot(itm.tab_shield_pavise_d,60,10)
    item_set_slot(itm.tab_shield_small_round_a,60,10)
    item_set_slot(itm.tab_shield_small_round_b,60,10)
    item_set_slot(itm.tab_shield_small_round_c,60,10)
    item_set_slot(itm.spear,60,8)
    item_set_slot(itm.darts,60,16)
    item_set_slot(itm.war_darts,60,16)
    item_set_slot(itm.javelin,60,16)
    item_set_slot(itm.jarid,60,16)
    item_set_slot(itm.throwing_spears,60,16)
    item_set_slot(itm.throwing_axes,60,17)
    item_set_slot(itm.light_throwing_axes,60,17)
    item_set_slot(itm.heavy_throwing_axes,60,17)
    item_set_slot(itm.red_shirt,60,19)
    item_set_slot(itm.red_tunic,60,19)
    item_set_slot(itm.aketon_green,60,19)
    item_set_slot(itm.padded_cloth,60,19)
    item_set_slot(itm.red_gambeson,60,19)
    item_set_slot(itm.leather_armor,60,19)
    item_set_slot(itm.haubergeon,60,19)
    item_set_slot(itm.coat_of_plates_red,60,19)
    item_set_slot(itm.brigandine_red,60,19)
    item_set_slot(itm.mail_with_surcoat,60,19)
    item_set_slot(itm.linen_tunic,60,19)
    item_set_slot(itm.leather_vest,60,19)
    item_set_slot(itm.leather_jerkin,60,19)
    item_set_slot(itm.studded_leather_coat,60,19)
    item_set_slot(itm.lamellar_vest,60,19)
    item_set_slot(itm.lamellar_armor,60,19)
    item_set_slot(itm.coarse_tunic,60,19)
    item_set_slot(itm.tribal_warrior_outfit,60,19)
    item_set_slot(itm.khergit_guard_armor,60,19)
    item_set_slot(itm.blue_tunic,60,19)
    item_set_slot(itm.mail_hauberk,60,19)
    item_set_slot(itm.mail_shirt,60,19)
    item_set_slot(itm.byrnie,60,19)
    item_set_slot(itm.lamellar_vest_khergit,60,19)
    item_set_slot(itm.steppe_armor,60,19)
    item_set_slot(itm.banded_armor,60,19)
    item_set_slot(itm.cuir_bouilli,60,19)
    item_set_slot(itm.scale_armor,60,19)
    item_set_slot(itm.padded_leather,60,19)
    item_set_slot(itm.green_tunic,60,19)
    item_set_slot(itm.tunic_with_green_cape,60,19)
    item_set_slot(itm.aketon_green,60,19)
    item_set_slot(itm.ragged_outfit,60,19)
    item_set_slot(itm.surcoat_over_mail,60,19)
    item_set_slot(itm.sarranid_elite_armor,60,19)
    item_set_slot(itm.skirmisher_armor,60,19)
    item_set_slot(itm.archers_vest,60,19)
    item_set_slot(itm.sarranid_leather_armor,60,19)
    item_set_slot(itm.sarranid_cloth_robe,60,19)
    item_set_slot(itm.sarranid_mail_shirt,60,19)
    item_set_slot(itm.sarranid_cavalry_robe,60,19)
    item_set_slot(itm.arabian_armor_b,60,19)
    item_set_slot(itm.mamluke_mail,60,19)
    item_set_slot(itm.khergit_elite_armor,60,19)
    item_set_slot(itm.vaegir_elite_armor,60,19)
    item_set_slot(itm.khergit_armor,60,19)
    item_set_slot(itm.hide_boots,60,24)
    item_set_slot(itm.ankle_boots,60,24)
    item_set_slot(itm.nomad_boots,60,24)
    item_set_slot(itm.leather_boots,60,24)
    item_set_slot(itm.splinted_leather_greaves,60,24)
    item_set_slot(itm.mail_chausses,60,24)
    item_set_slot(itm.splinted_leather_greaves,60,24)
    item_set_slot(itm.splinted_greaves,60,24)
    item_set_slot(itm.mail_boots,60,24)
    item_set_slot(itm.iron_greaves,60,24)
    item_set_slot(itm.sarranid_boots_b,60,24)
    item_set_slot(itm.sarranid_boots_c,60,24)
    item_set_slot(itm.sarranid_boots_d,60,24)
    item_set_slot(itm.plate_boots,60,24)
    item_set_slot(itm.khergit_leather_boots,60,24)
    item_set_slot(itm.khergit_guard_boots,60,24)
    item_set_slot(itm.leather_steppe_cap_a,60,22)
    item_set_slot(itm.leather_steppe_cap_b,60,22)
    item_set_slot(itm.steppe_cap,60,22)
    item_set_slot(itm.khergit_war_helmet,60,22)
    item_set_slot(itm.khergit_guard_helmet,60,22)
    item_set_slot(itm.arming_cap,60,22)
    item_set_slot(itm.padded_coif,60,22)
    item_set_slot(itm.mail_coif,60,22)
    item_set_slot(itm.footman_helmet,60,22)
    item_set_slot(itm.norman_helmet,60,22)
    item_set_slot(itm.kettle_hat,60,22)
    item_set_slot(itm.helmet_with_neckguard,60,22)
    item_set_slot(itm.bascinet_2,60,22)
    item_set_slot(itm.bascinet_3,60,22)
    item_set_slot(itm.flat_topped_helmet,60,22)
    item_set_slot(itm.guard_helmet,60,22)
    item_set_slot(itm.full_helm,60,22)
    item_set_slot(itm.great_helmet,60,22)
    item_set_slot(itm.nomad_cap_b,60,22)
    item_set_slot(itm.skullcap,60,22)
    item_set_slot(itm.leather_cap,60,22)
    item_set_slot(itm.spiked_helmet,60,22)
    item_set_slot(itm.nordic_archer_helmet,60,22)
    item_set_slot(itm.nordic_veteran_archer_helmet,60,22)
    item_set_slot(itm.nordic_footman_helmet,60,22)
    item_set_slot(itm.nordic_fighter_helmet,60,22)
    item_set_slot(itm.nordic_huscarl_helmet,60,22)
    item_set_slot(itm.nordic_warlord_helmet,60,22)
    item_set_slot(itm.sarranid_helmet1,60,22)
    item_set_slot(itm.sarranid_horseman_helmet,60,22)
    item_set_slot(itm.sarranid_felt_hat,60,22)
    item_set_slot(itm.sarranid_veiled_helmet,60,22)
    item_set_slot(itm.turban,60,22)
    item_set_slot(itm.desert_turban,60,22)
    item_set_slot(itm.sarranid_warrior_cap,60,22)
    item_set_slot(itm.sarranid_mail_coif,60,22)
    item_set_slot(itm.vaegir_fur_cap,60,22)
    item_set_slot(itm.vaegir_fur_helmet,60,22)
    item_set_slot(itm.vaegir_spiked_helmet,60,22)
    item_set_slot(itm.vaegir_lamellar_helmet,60,22)
    item_set_slot(itm.vaegir_noble_helmet,60,22)
    item_set_slot(itm.vaegir_war_helmet,60,22)
    item_set_slot(itm.vaegir_mask,60,22)
    item_set_slot(itm.leather_gloves,60,26)
    item_set_slot(itm.mail_mittens,60,26)
    item_set_slot(itm.scale_gauntlets,60,26)
    item_set_slot(itm.lamellar_gauntlets,60,26)
    item_set_slot(itm.gauntlets,60,26)
    item_set_slot(itm.saddle_horse,60,18)
    item_set_slot(itm.hunter,60,18)
    item_set_slot(itm.courser,60,18)
    item_set_slot(itm.hunter,60,18)
    item_set_slot(itm.warhorse,60,18)
    item_set_slot(itm.charger,60,18)
    item_set_slot(itm.steppe_horse,60,18)
    item_set_slot(itm.arabian_horse_a,60,18)
    item_set_slot(itm.arabian_horse_b,60,18)
    item_set_slot(itm.warhorse_steppe,60,18)
    item_set_slot(itm.warhorse_sarranid,60,18)
    multiplayer_set_item_available_for_troop(itm.bolts,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steel_bolts,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.crossbow,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_crossbow,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sniper_crossbow,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_a,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b_small,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_a,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_b,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_c,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.red_shirt,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.padded_cloth,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_armor,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.haubergeon,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ankle_boots,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_chausses,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arming_cap,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.norman_helmet,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.helmet_with_neckguard,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.flat_topped_helmet,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.guard_helmet,trp.swadian_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.awlpike,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.awlpike_long,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_a,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b_small,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_c,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_c_small,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bastard_sword_a,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bastard_sword_b,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_two_handed_a,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_two_handed_b,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.darts,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_darts,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_a,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_b,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_c,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_d,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.red_tunic,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.red_gambeson,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_armor,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.haubergeon,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.brigandine_red,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ankle_boots,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_chausses,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arming_cap,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.norman_helmet,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.helmet_with_neckguard,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.flat_topped_helmet,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.guard_helmet,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.great_helmet,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.gauntlets,trp.swadian_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.darts,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_darts,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lance,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_lance,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.great_lance,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_a,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b_small,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_c,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_c_small,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bastard_sword_a,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bastard_sword_b,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_a,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_b,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_c,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_d,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.red_tunic,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.padded_cloth,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_armor,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_with_surcoat,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.coat_of_plates_red,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ankle_boots,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_chausses,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.plate_boots,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arming_cap,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.norman_helmet,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.helmet_with_neckguard,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.flat_topped_helmet,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.guard_helmet,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.great_helmet,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.gauntlets,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.saddle_horse,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.courser,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hunter,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.warhorse,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.charger,trp.swadian_man_at_arms_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arrows,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.barbed_arrows,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_1,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_2,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.falchion,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_bow,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_bow,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.strong_bow,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_bow,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.linen_tunic,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_jerkin,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_vest,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_vest,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hide_boots,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_boots,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_cap,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_fur_cap,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_fur_helmet,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_spiked_helmet,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_lamellar_helmet,trp.vaegir_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.spear,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_spear,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.awlpike,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_a,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_b,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_c,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_d,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_1,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_2,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_3,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_4,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.long_hafted_spiked_mace,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.long_spiked_club,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scimitar,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scimitar_b,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bardiche,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.great_bardiche,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.long_bardiche,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.great_long_bardiche,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.linen_tunic,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_jerkin,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_vest,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_vest,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_armor,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_elite_armor,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hide_boots,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_boots,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_fur_cap,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_fur_helmet,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_spiked_helmet,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_lamellar_helmet,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_noble_helmet,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_war_helmet,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.vaegir_spearman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.darts,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_darts,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bardiche,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scimitar,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scimitar_b,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lance,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_lance,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_cav_a,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_cav_b,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_c,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_d,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.linen_tunic,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_vest,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_vest,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.studded_leather_coat,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_armor,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_elite_armor,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hide_boots,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_boots,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.plate_boots,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_fur_cap,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_fur_helmet,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_spiked_helmet,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_lamellar_helmet,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_noble_helmet,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_war_helmet,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.vaegir_mask,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.saddle_horse,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.courser,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hunter,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.warhorse_steppe,trp.vaegir_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_1,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_2,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_3,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_4,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_bow,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_bow,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.strong_bow,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arrows,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_arrows,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_steppe_cap_a,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_cap_b,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_steppe_cap_b,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_cap,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_armor,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_armor,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tribal_warrior_outfit,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_vest_khergit,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hide_boots,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_boots,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_leather_boots,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_horse,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.khergit_veteran_horse_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.jarid,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_1,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_2,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_3,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_4,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_a,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_b,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_c,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_round_b,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_round_c,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.spear,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hafted_blade_a,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hafted_blade_b,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_1,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_2,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_3,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_cap_b,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_steppe_cap_b,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_cap,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_war_helmet,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_guard_helmet,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_armor,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tribal_warrior_outfit,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_armor,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_elite_armor,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hide_boots,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_boots,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_leather_boots,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_gauntlets,trp.khergit_infantry_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_1,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_2,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_3,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_khergit_4,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_a,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_b,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_c,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lance,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_lance,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hafted_blade_a,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hafted_blade_b,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_war_axe_a,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_steppe_cap_a,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_cap_b,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_steppe_cap_b,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_cap,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_war_helmet,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_armor,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_armor,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tribal_warrior_outfit,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_armor,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hide_boots,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_boots,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.khergit_leather_boots,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lamellar_gauntlets,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steppe_horse,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.courser,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hunter,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.warhorse_steppe,trp.khergit_lancer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arrows,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.barbed_arrows,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bodkin_arrows,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_1,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_2,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_2_small,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_3,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_3_small,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_war_axe_a,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_war_axe_b,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.two_handed_axe,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.short_bow,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.long_bow,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.blue_tunic,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_jerkin,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.byrnie,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_chausses,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_boots,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_archer_helmet,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_veteran_archer_helmet,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_footman_helmet,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_fighter_helmet,trp.nord_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_1,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_2,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_2_small,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_3,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_3_small,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_war_axe_a,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_war_axe_b,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_battle_axe_a,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_battle_axe_b,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.one_handed_battle_axe_c,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.two_handed_axe,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.two_handed_battle_axe_2,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.great_axe,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.long_axe,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.long_axe_b,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.long_axe_c,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.spear,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_spear,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_round_a,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_round_b,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_round_c,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_round_d,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_round_e,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.light_throwing_axes,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.throwing_axes,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_throwing_axes,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_veteran_archer_helmet,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_footman_helmet,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_fighter_helmet,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_huscarl_helmet,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_warlord_helmet,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.blue_tunic,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_jerkin,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_shirt,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_hauberk,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.banded_armor,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_chausses,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_boots,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.nord_veteran_multiplayer)
    multiplayer_set_item_available_for_troop(itm.darts,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_darts,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.throwing_spears,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.light_throwing_axes,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.throwing_axes,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_1,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_2,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_viking_3,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.two_handed_axe,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.two_handed_battle_axe_2,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.shortened_voulge,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.spear,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_spear,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.light_lance,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lance,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_a,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_b,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_c,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_archer_helmet,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_veteran_archer_helmet,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_footman_helmet,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_fighter_helmet,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nordic_huscarl_helmet,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.blue_tunic,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_jerkin,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_shirt,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_hauberk,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_leather_greaves,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_chausses,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_boots,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.saddle_horse,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.courser,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hunter,trp.nord_scout_multiplayer)
    multiplayer_set_item_available_for_troop(itm.crossbow,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_crossbow,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sniper_crossbow,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bolts,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.steel_bolts,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.fighting_pick,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_pick,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.club_with_spike_head,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.maul,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sledgehammer,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_a,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b_small,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_a,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_b,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_c,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_d,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_cap,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.padded_coif,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.footman_helmet,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.kettle_hat,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tunic_with_green_cape,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.aketon_green,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_armor,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ankle_boots,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.rhodok_veteran_crossbowman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.darts,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_darts,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.fighting_pick,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_pick,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.morningstar,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.club_with_spike_head,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_cleaver_b,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_cleaver_c,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.two_handed_cleaver,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_sickle_a,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.maul,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sledgehammer,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.warhammer,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.spear,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.pike,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ashwood_pike,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_spear,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.glaive,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_a,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_b,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_c,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_pavise_d,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_cap,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.padded_coif,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.footman_helmet,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.kettle_hat,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bascinet_2,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.full_helm,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.green_tunic,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.aketon_green,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ragged_outfit,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_armor,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.surcoat_over_mail,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ankle_boots,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.iron_greaves,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.gauntlets,trp.rhodok_sergeant_multiplayer)
    multiplayer_set_item_available_for_troop(itm.darts,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.war_darts,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_a,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_b,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sword_medieval_c,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.fighting_pick,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_pick,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.morningstar,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_cleaver_b,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.military_cleaver_c,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.two_handed_cleaver,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.shortened_military_scythe,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.light_lance,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lance,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_lance,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_cav_a,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_heater_cav_b,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.padded_coif,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.footman_helmet,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.kettle_hat,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bascinet_3,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.green_tunic,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.aketon_green,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ragged_outfit,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_armor,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.surcoat_over_mail,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.ankle_boots,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_boots,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.splinted_greaves,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.plate_boots,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.gauntlets,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.saddle_horse,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.courser,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.hunter,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.warhorse,trp.rhodok_horseman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_cloth_robe,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.skirmisher_armor,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.archers_vest,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_armor_b,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_felt_hat,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.turban,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.desert_turban,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_mail_coif,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_horseman_helmet,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_warrior_cap,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_b,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_c,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.short_bow,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.nomad_bow,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arrows,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.barbed_arrows,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scimitar,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mace_1,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_a,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_b,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.sarranid_archer_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_cloth_robe,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.skirmisher_armor,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.archers_vest,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_leather_armor,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_armor_b,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_elite_armor,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_felt_hat,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.turban,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.desert_turban,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_mail_coif,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_warrior_cap,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_veiled_helmet,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_b,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_c,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_d,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_a,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_b,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_d,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_mace_1,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_axe_a,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_axe_b,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_two_handed_axe_a,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_two_handed_axe_b,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_two_handed_mace_1,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.bamboo_spear,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.spear,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.jarid,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_a,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_b,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_c,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_kite_d,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.sarranid_footman_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_cloth_robe,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.skirmisher_armor,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.archers_vest,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_mail_shirt,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_cavalry_robe,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mamluke_mail,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_elite_armor,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.turban,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.desert_turban,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_horseman_helmet,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_mail_coif,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_veiled_helmet,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_b,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_c,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_boots_d,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_a,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_b,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_cavalry_sword,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_sword_d,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_mace_1,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_axe_a,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_axe_b,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.sarranid_two_handed_axe_a,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.lance,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.heavy_lance,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.jarid,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.javelin,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_a,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_b,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.tab_shield_small_round_c,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.saddle_horse,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_horse_a,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.arabian_horse_b,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.warhorse_sarranid,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.leather_gloves,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.mail_mittens,trp.sarranid_mamluke_multiplayer)
    multiplayer_set_item_available_for_troop(itm.scale_gauntlets,trp.sarranid_mamluke_multiplayer)
    scene_set_slot(scn.multi_scene_11,1,1)
    scene_set_slot(scn.multi_scene_12,1,1)
    scene_set_slot(scn.multi_scene_18,1,1)
    scene_set_slot(scn.multi_scene_20,1,1)
    item_set_slot(itm.javelin_bow,59,1)


def get_army_size_from_slider_value(var001):
    var002 = var001
    if var001 > 25:
        var003 = var001 - 25
        var002 += var003
        if var001 > 50:
            var003 = var001 - 50
            var003 *= 3
            var002 += var003
        #end
    #end
    reg0 = var002


def spawn_quick_battle_army(entry_no_001, faction_id_002, var003, var004, var005, var006, var007):
    if var007 == 1:
        get_army_size_from_slider_value(_g_quick_battle_army_1_size)
        var008 = reg0
        set_player_troop(_g_quick_battle_troop)
        set_visitor(entry_no_001,_g_quick_battle_troop)
        if entry_no_001 == 0:
            if is_between(faction_id_002,fac.kingdom_1,fac.kingdoms_end):
                _g_quick_battle_team_0_banner = faction_get_slot(faction_id_002,15)
            else:
                _g_quick_battle_team_0_banner = mesh.banners_default_b
            #end
        else:
            if is_between(faction_id_002,fac.kingdom_1,fac.kingdoms_end):
                _g_quick_battle_team_1_banner = faction_get_slot(faction_id_002,15)
            else:
                _g_quick_battle_team_1_banner = mesh.banners_default_b
            #end
        #end
        entry_no_001 += 1
    else:
        get_army_size_from_slider_value(_g_quick_battle_army_2_size)
        var008 = reg0
        if entry_no_001 == 0:
            _g_quick_battle_team_0_banner = mesh.banners_default_a
        else:
            _g_quick_battle_team_1_banner = mesh.banners_default_a
        #end
        entry_no_001 += 1
    #end
    var009 = var003 * var008
    var009 /= 100
    var010 = var004 * var008
    var010 /= 100
    var011 = var005 * var008
    var011 /= 100
    if True:
        var012 = var009 + var010
        var012 += var011
        if var012 != var008:
            var013 = var008 - var012
            if var003 > var004 and var003 > var005:
                var009 += var013
            elif var004 > var005:
                var010 += var013
            else:
                var011 += var013
            #end
        #end
    #end
    var014 = var009 * 15
    var014 /= 100
    var015 = var009 * 45
    var015 /= 100
    random_x_016 = store_random_in_range(var014,var015)
    number_of_troops_017 = var009 - random_x_016
    var014 = var010 * 15
    var014 /= 100
    var015 = var010 * 45
    var015 /= 100
    random_x_018 = store_random_in_range(var014,var015)
    number_of_troops_019 = var010 - random_x_018
    var014 = var011 * 15
    var014 /= 100
    var015 = var011 * 45
    var015 /= 100
    random_x_020 = store_random_in_range(var014,var015)
    number_of_troops_021 = var011 - random_x_020
    faction_slot_022 = faction_get_slot(faction_id_002,42)
    set_visitors(entry_no_001,faction_slot_022,random_x_016)
    entry_no_001 += 1
    faction_slot_022 = faction_get_slot(faction_id_002,41)
    set_visitors(entry_no_001,faction_slot_022,number_of_troops_017)
    entry_no_001 += 1
    faction_slot_022 = faction_get_slot(faction_id_002,46)
    set_visitors(entry_no_001,faction_slot_022,random_x_020)
    entry_no_001 += 1
    faction_slot_022 = faction_get_slot(faction_id_002,45)
    set_visitors(entry_no_001,faction_slot_022,number_of_troops_021)
    entry_no_001 += 1
    if var006 == 0:
        faction_slot_022 = faction_get_slot(faction_id_002,44)
        set_visitors(entry_no_001,faction_slot_022,random_x_018)
        entry_no_001 += 1
        faction_slot_022 = faction_get_slot(faction_id_002,43)
        set_visitors(entry_no_001,faction_slot_022,number_of_troops_019)
        entry_no_001 += 1
    else:
        entry_no_001 = 40
        var023 = number_of_troops_019 / 8
        var023 *= 8
        if var023 != number_of_troops_019:
            var023 /= 8
            var023 += 1
            var023 *= 8
        #end
        var024 = random_x_018 / 8
        var024 *= 8
        if var024 != random_x_018:
            var024 /= 8
            var024 += 1
            var024 *= 8
        #end
        var025 = var023 + var024
        var026 = var025 / 8
        var027 = number_of_troops_019
        var028 = random_x_018
        var029 = 1000
        for var030 in range(0, var029):
            if var028 > 0:
                number_of_troops_031 = var026
                val_min(number_of_troops_031,var028)
                faction_slot_022 = faction_get_slot(faction_id_002,44)
                set_visitors(entry_no_001,faction_slot_022,number_of_troops_031)
                entry_no_001 += 1
                var028 -= number_of_troops_031
            elif var027 > 0:
                number_of_troops_032 = var026
                val_min(number_of_troops_032,var027)
                faction_slot_022 = faction_get_slot(faction_id_002,43)
                set_visitors(entry_no_001,faction_slot_022,number_of_troops_032)
                entry_no_001 += 1
                var027 -= number_of_troops_032
            else:
                var029 = 0
            #end
        #end
    #end


def player_arrived():
    var001 = fac.culture_1
    faction_set_slot(fac.player_supporters_faction,10,var001)
    faction_set_slot(fac.player_faction,10,var001)


def game_set_multiplayer_mission_end():
    _g_multiplayer_mission_end_screen = 1


def game_enable_cheat_menu(var001):
    if var001 == 0:
        _cheat_mode = 0
    elif var001 == 1:
        _cheat_mode = 1
    #end


def game_get_console_command(var001, var002, var003):
    if var001 == 2:
        pass
    #end
    if var001 == 1:
        reg0 = var002
        if var002 == 1:
            reg1 = _g_multiplayer_num_bots_team_1
            s0 = str_store_string(gstr.team_reg0_bot_count_is_reg1)
        elif var002 == 2:
            reg1 = _g_multiplayer_num_bots_team_2
            s0 = str_store_string(gstr.team_reg0_bot_count_is_reg1)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 2:
        reg0 = var002
        reg1 = var003
        if var002 == 1 and var003 >= 0:
            _g_multiplayer_num_bots_team_1 = var003
            s0 = str_store_string(gstr.team_reg0_bot_count_is_reg1)
        elif var002 == 2 and var003 >= 0:
            _g_multiplayer_num_bots_team_2 = var003
            s0 = str_store_string(gstr.team_reg0_bot_count_is_reg1)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 3:
        reg0 = _g_multiplayer_round_max_seconds
        s0 = str_store_string(gstr.maximum_seconds_for_round_is_reg0)
    elif var001 == 4:
        reg0 = var002
        if is_between(var002,60,901):
            _g_multiplayer_round_max_seconds = var002
            s0 = str_store_string(gstr.maximum_seconds_for_round_is_reg0)
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,59,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 5:
        reg0 = _g_multiplayer_respawn_period
        s0 = str_store_string(gstr.respawn_period_is_reg0_seconds)
    elif var001 == 6:
        reg0 = var002
        if is_between(var002,3,31):
            _g_multiplayer_respawn_period = var002
            s0 = str_store_string(gstr.respawn_period_is_reg0_seconds)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 7:
        reg0 = _g_multiplayer_num_bots_voteable
        s0 = str_store_string(gstr.bots_upper_limit_for_votes_is_reg0)
    elif var001 == 8:
        if is_between(var002,0,51):
            _g_multiplayer_num_bots_voteable = var002
            _g_multiplayer_max_num_bots = var002 + 1
            reg0 = _g_multiplayer_num_bots_voteable
            s0 = str_store_string(gstr.bots_upper_limit_for_votes_is_reg0)
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,81,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 9:
        if _g_multiplayer_maps_voteable == 1:
            s0 = str_store_string(gstr.map_is_voteable)
        else:
            s0 = str_store_string(gstr.map_is_not_voteable)
        #end
    elif var001 == 10:
        if is_between(var002,0,2):
            _g_multiplayer_maps_voteable = var002
            if var002 == 1:
                s0 = str_store_string(gstr.map_is_voteable)
            else:
                s0 = str_store_string(gstr.map_is_not_voteable)
            #end
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,83,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 11:
        if _g_multiplayer_factions_voteable == 1:
            s0 = str_store_string(gstr.factions_are_voteable)
        else:
            s0 = str_store_string(gstr.factions_are_not_voteable)
        #end
    elif var001 == 12:
        if is_between(var002,0,2):
            _g_multiplayer_factions_voteable = var002
            if var002 == 1:
                s0 = str_store_string(gstr.factions_are_voteable)
            else:
                s0 = str_store_string(gstr.factions_are_not_voteable)
            #end
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,82,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 13:
        if _g_multiplayer_player_respawn_as_bot == 1:
            s0 = str_store_string(gstr.players_respawn_as_bot)
        else:
            s0 = str_store_string(gstr.players_do_not_respawn_as_bot)
        #end
    elif var001 == 14:
        if is_between(var002,0,2):
            _g_multiplayer_player_respawn_as_bot = var002
            if var002 == 1:
                s0 = str_store_string(gstr.players_respawn_as_bot)
            else:
                s0 = str_store_string(gstr.players_do_not_respawn_as_bot)
            #end
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,85,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 15:
        if _g_multiplayer_kick_voteable == 1:
            s0 = str_store_string(gstr.kicking_a_player_is_voteable)
        else:
            s0 = str_store_string(gstr.kicking_a_player_is_not_voteable)
        #end
    elif var001 == 16:
        if is_between(var002,0,2):
            _g_multiplayer_kick_voteable = var002
            if var002 == 1:
                s0 = str_store_string(gstr.kicking_a_player_is_voteable)
            else:
                s0 = str_store_string(gstr.kicking_a_player_is_not_voteable)
            #end
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,90,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 17:
        if _g_multiplayer_ban_voteable == 1:
            s0 = str_store_string(gstr.banning_a_player_is_voteable)
        else:
            s0 = str_store_string(gstr.banning_a_player_is_not_voteable)
        #end
    elif var001 == 18:
        if is_between(var002,0,2):
            _g_multiplayer_ban_voteable = var002
            if var002 == 1:
                s0 = str_store_string(gstr.banning_a_player_is_voteable)
            else:
                s0 = str_store_string(gstr.banning_a_player_is_not_voteable)
            #end
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,91,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 19:
        reg0 = _g_multiplayer_valid_vote_ratio
        s0 = str_store_string(gstr.percentage_of_yes_votes_required_for_a_poll_to_get_accepted_is_reg0)
    elif var001 == 20:
        if is_between(var002,50,101):
            _g_multiplayer_valid_vote_ratio = var002
            reg0 = var002
            s0 = str_store_string(gstr.percentage_of_yes_votes_required_for_a_poll_to_get_accepted_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 21:
        reg0 = _g_multiplayer_auto_team_balance_limit
        s0 = str_store_string(gstr.auto_team_balance_threshold_is_reg0)
    elif var001 == 22:
        if is_between(var002,2,7):
            _g_multiplayer_auto_team_balance_limit = var002
            reg0 = _g_multiplayer_auto_team_balance_limit
            s0 = str_store_string(gstr.auto_team_balance_threshold_is_reg0)
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,93,var002)
                #end
            #end
        elif var002 >= 7:
            _g_multiplayer_auto_team_balance_limit = 1000
            reg0 = _g_multiplayer_auto_team_balance_limit
            s0 = str_store_string(gstr.auto_team_balance_threshold_is_reg0)
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,93,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 23:
        reg0 = _g_multiplayer_initial_gold_multiplier
        s0 = str_store_string(gstr.starting_gold_ratio_is_reg0)
    elif var001 == 24:
        if is_between(var002,0,1001):
            _g_multiplayer_initial_gold_multiplier = var002
            reg0 = _g_multiplayer_initial_gold_multiplier
            s0 = str_store_string(gstr.starting_gold_ratio_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 25:
        reg0 = _g_multiplayer_battle_earnings_multiplier
        s0 = str_store_string(gstr.combat_gold_bonus_ratio_is_reg0)
    elif var001 == 26:
        if is_between(var002,0,1001):
            _g_multiplayer_battle_earnings_multiplier = var002
            reg0 = _g_multiplayer_battle_earnings_multiplier
            s0 = str_store_string(gstr.combat_gold_bonus_ratio_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 27:
        reg0 = _g_multiplayer_round_earnings_multiplier
        s0 = str_store_string(gstr.round_gold_bonus_ratio_is_reg0)
    elif var001 == 28:
        if is_between(var002,0,1001):
            _g_multiplayer_round_earnings_multiplier = var002
            reg0 = _g_multiplayer_round_earnings_multiplier
            s0 = str_store_string(gstr.round_gold_bonus_ratio_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 29:
        if _g_multiplayer_allow_player_banners == 1:
            s0 = str_store_string(gstr.player_banners_are_allowed)
        else:
            s0 = str_store_string(gstr.player_banners_are_not_allowed)
        #end
    elif var001 == 30:
        if is_between(var002,0,2):
            _g_multiplayer_allow_player_banners = var002
            if var002 == 1:
                s0 = str_store_string(gstr.player_banners_are_allowed)
            else:
                s0 = str_store_string(gstr.player_banners_are_not_allowed)
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 31:
        if _g_multiplayer_force_default_armor == 1:
            s0 = str_store_string(gstr.default_armor_is_forced)
        else:
            s0 = str_store_string(gstr.default_armor_is_not_forced)
        #end
    elif var001 == 32:
        if is_between(var002,0,2):
            _g_multiplayer_force_default_armor = var002
            if var002 == 1:
                s0 = str_store_string(gstr.default_armor_is_forced)
            else:
                s0 = str_store_string(gstr.default_armor_is_not_forced)
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 33:
        reg0 = _g_multiplayer_point_gained_from_flags
        s0 = str_store_string(gstr.point_gained_from_flags_is_reg0)
    elif var001 == 34:
        if is_between(var002,25,401):
            _g_multiplayer_point_gained_from_flags = var002
            reg0 = _g_multiplayer_point_gained_from_flags
            s0 = str_store_string(gstr.point_gained_from_flags_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 35:
        reg0 = _g_multiplayer_point_gained_from_capturing_flag
        s0 = str_store_string(gstr.point_gained_from_capturing_flag_is_reg0)
    elif var001 == 36:
        if is_between(var002,0,11):
            _g_multiplayer_point_gained_from_capturing_flag = var002
            reg0 = _g_multiplayer_point_gained_from_capturing_flag
            s0 = str_store_string(gstr.point_gained_from_capturing_flag_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 37:
        reg0 = _g_multiplayer_game_max_minutes
        s0 = str_store_string(gstr.map_time_limit_is_reg0)
    elif var001 == 38:
        if is_between(var002,5,121):
            _g_multiplayer_game_max_minutes = var002
            reg0 = _g_multiplayer_game_max_minutes
            s0 = str_store_string(gstr.map_time_limit_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 39:
        reg0 = _g_multiplayer_game_max_points
        s0 = str_store_string(gstr.team_points_limit_is_reg0)
    elif var001 == 40:
        if is_between(var002,3,1001):
            _g_multiplayer_game_max_points = var002
            reg0 = _g_multiplayer_game_max_points
            s0 = str_store_string(gstr.team_points_limit_is_reg0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 41:
        reg0 = _g_multiplayer_number_of_respawn_count
        if reg0 == 0:
            s1 = str_store_string(gstr.unlimited)
        else:
            s1 = str_store_string(gstr.reg0)
        #end
        s0 = str_store_string(gstr.defender_spawn_count_limit_is_s1)
    elif var001 == 42:
        if is_between(var002,0,6):
            _g_multiplayer_number_of_respawn_count = var002
            reg0 = _g_multiplayer_number_of_respawn_count
            if reg0 == 0:
                s1 = str_store_string(gstr.unlimited)
            else:
                s1 = str_store_string(gstr.reg0)
            #end
            s0 = str_store_string(gstr.defender_spawn_count_limit_is_s1)
            max_players = get_max_players()
            for player_id_005 in range(1, max_players):
                if player_is_active(player_id_005):
                    multiplayer_send_int_to_player(player_id_005,88,var002)
                #end
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 43:
        if _g_multiplayer_disallow_ranged_weapons == 1:
            s0 = str_store_string(gstr.ranged_weapons_are_disallowed)
        else:
            s0 = str_store_string(gstr.ranged_weapons_are_allowed)
        #end
    elif var001 == 44:
        if is_between(var002,0,2):
            _g_multiplayer_disallow_ranged_weapons = var002
            if var002 == 1:
                s0 = str_store_string(gstr.ranged_weapons_are_disallowed)
            else:
                s0 = str_store_string(gstr.ranged_weapons_are_allowed)
            #end
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    elif var001 == 83:
        var006 = _g_multiplayer_ccoop_difficulty
        var006 += gstr.ccoop_easy
        s0 = str_store_string(var006)
        s0 = str_store_string(gstr.ccoop_difficulty_s0)
    elif var001 == 84:
        if is_between(var002,0,3):
            _g_multiplayer_ccoop_difficulty = var002
            var006 = gstr.ccoop_easy
            var006 += _g_multiplayer_ccoop_difficulty
            s0 = str_store_string(var006)
            s0 = str_store_string(gstr.ccoop_difficulty_s0)
        else:
            s0 = str_store_string(gstr.input_is_not_correct_for_the_command_type_help_for_more_information)
        #end
    else:
        s0 = str_store_string("@{!}DEBUG : SYSTEM ERROR!")
    #end


def game_event_party_encounter(_g_encountered_party, _g_encountered_party_2):
    _g_encountered_x_party_faction = store_faction_of_party(_g_encountered_party)
    _g_encountered_party_relation = store_relation(_g_encountered_x_party_faction,fac.player_faction)
    _g_encountered_party_type = party_get_slot(_g_encountered_party,0)
    _g_encountered_party_template = party_get_template_id(_g_encountered_party)
    party_count_fit_regulars(p.main_party)
    _playerparty_prebattle_regulars = reg0
    _g_last_rest_center = -1
    _talk_context = 0
    _g_player_surrenders = 0
    _g_enemy_surrenders = 0
    _g_leave_encounter = 0
    _g_engaged_enemy = 0
    if not is_between(_g_encountered_party,p.town_1,p.salt_mine):
        rest_for_hours(0)
        _g_infinite_camping = 0
    #end
    _new_encounter = 1
    if _g_encountered_party_2 < 0:
        if party_slot_eq(_g_encountered_party,0,3):
            jump_to_menu(mnu.castle_outside)
        elif party_slot_eq(_g_encountered_party,0,2):
            jump_to_menu(mnu.castle_outside)
        elif party_slot_eq(_g_encountered_party,0,16):
            jump_to_menu(mnu.ship_reembark)
        elif party_slot_eq(_g_encountered_party,0,4):
            jump_to_menu(mnu.village)
        elif party_slot_eq(_g_encountered_party,0,17):
            jump_to_menu(mnu.cattle_herd)
        elif is_between(_g_encountered_party,p.training_ground_1,p.bridge_1):
            jump_to_menu(mnu.training_ground)
        else:
            party_template_id_001 = party_get_template_id(_g_encountered_party)
            if party_template_id_001 >= pt.steppe_bandit_lair and party_template_id_001 < pt.bandit_lair_templates_end:
                _loot_screen_shown = 0
                jump_to_menu(mnu.bandit_lair)
            elif _g_encountered_party == p.zendar:
                jump_to_menu(mnu.zendar)
            elif _g_encountered_party == p.salt_mine:
                jump_to_menu(mnu.salt_mine)
            elif _g_encountered_party == p.four_ways_inn:
                jump_to_menu(mnu.four_ways_inn)
            elif _g_encountered_party == p.test_scene:
                jump_to_menu(mnu.test_scene)
            elif _g_encountered_party == p.battlefields:
                jump_to_menu(mnu.battlefields)
            elif _g_encountered_party == p.training_ground:
                jump_to_menu(mnu.tutorial)
            elif _g_encountered_party == p.camp_bandits:
                jump_to_menu(mnu.camp)
            else:
                jump_to_menu(mnu.simple_encounter)
            #end
        #end
    else:
        if party_slot_eq(_g_encountered_party,0,3) or party_slot_eq(_g_encountered_party,0,2):
            if _auto_enter_town == _g_encountered_party:
                jump_to_menu(mnu.town)
            elif _auto_besiege_town == _g_encountered_party:
                jump_to_menu(mnu.besiegers_camp_with_allies)
            else:
                jump_to_menu(mnu.join_siege_outside)
            #end
        else:
            jump_to_menu(mnu.pre_join)
        #end
    #end
    _auto_enter_town = 0
    _auto_besiege_town = 0


def game_event_simulate_battle(party_id_001, party_id_002):
    party_slot_030_list1 = [
    2,
    3,
    ]
    _g_battle_simulation_cancel_for_party_list1 = [
    party_id_002,
    party_id_001,
    ]
    _marshall_defeated_in_battle = -1
    cur_hours_003 = store_current_hours()
    for cur_party in __all_parties__:
        party_battle_opponent_005 = party_get_battle_opponent(cur_party)
        if party_battle_opponent_005 > 0:
            party_set_slot(cur_party,68,cur_hours_003)
        #end
    #end
    trigger_result_006 = 1
    if party_id_001 >= 0 and party_id_002 >= 0 and party_is_active(party_id_001) and party_is_active(party_id_002):
        party_faction_007 = store_faction_of_party(party_id_001)
        party_faction_008 = store_faction_of_party(party_id_002)
        faction_relation_009 = store_relation(party_faction_007,party_faction_008)
        if faction_relation_009 < 0:
            trigger_result_006 = 0
            if _g_battle_simulation_cancel_for_party in _g_battle_simulation_cancel_for_party_list1:
                _g_battle_simulation_cancel_for_party = -1
                _auto_enter_town = _g_battle_simulation_auto_enter_town_after_battle
                trigger_result_006 = 1
            else:
                if party_slot_eq(party_id_001,2,1) or party_slot_eq(party_id_002,2,1):
                    trigger_result_006 = 1
                #end
            #end
            party_set_slot(party_id_002,2,0)
            party_collect_attachments_to_party(party_id_001,p.collective_ally)
            party_collect_attachments_to_party(party_id_002,p.collective_enemy)
            party_calculate_strength(p.collective_ally,0)
            var010 = reg0
            party_calculate_strength(p.collective_enemy,0)
            var011 = reg0
            var010 = var010 / 20
            val_min(var010,50)
            val_max(var010,1)
            var011 = var011 / 20
            val_min(var011,50)
            var011 += 1
            if party_slot_eq(party_id_001,0,2) or party_slot_eq(party_id_001,0,3):
                var010 *= 123
                var010 /= 100
                var011 *= 100
                var011 /= 123
            #end
            party_count_fit_for_battle(p.collective_ally,0)
            var012 = reg0
            if not is_currently_night():
                inflict_casualties_to_party_group(party_id_002,var010,p.temp_casualties)
                party_collect_attachments_to_party(party_id_002,p.collective_enemy)
            #end
            party_count_fit_for_battle(p.collective_enemy,0)
            var013 = reg0
            if var013 > 0 and not is_currently_night():
                inflict_casualties_to_party_group(party_id_001,var011,p.temp_casualties)
                party_collect_attachments_to_party(party_id_001,p.collective_ally)
            #end
            party_count_fit_for_battle(p.collective_ally,0)
            var014 = reg0
            if var013 == 0 or var014 == 0:
                var015 = 0
                if not troop_is_wounded(trp.player) and var014 == 0 and _auto_enter_town == _g_encountered_party and var012 == var014:
                    var015 = 1
                #end
                if var015 == 0:
                    if var013 == 0 and var014 == 0:
                        party_id_016 = -1
                        party_id_017 = -1
                        party_id_018 = -1
                    elif var013 == 0:
                        party_id_016 = party_id_001
                        party_id_017 = party_id_002
                        party_id_018 = p.collective_enemy
                    else:
                        party_id_016 = party_id_002
                        party_id_017 = party_id_001
                        party_id_018 = p.collective_ally
                    #end
                #end
                if party_id_016 >= 0:
                    get_nonempty_party_in_group(party_id_016)
                    party_id_019 = reg0
                    party_faction_020 = store_faction_of_party(party_id_019)
                    party_faction_021 = store_faction_of_party(party_id_017)
                else:
                    party_id_019 = -1
                #end
                if party_id_018 >= 0:
                    party_num_companions_stacks_022 = party_get_num_companion_stacks(party_id_018)
                else:
                    party_num_companions_stacks_022 = 0
                #end
                for stack_no_023 in range(0, party_num_companions_stacks_022):
                    troop_id_024 = party_stack_get_troop_id(party_id_018,stack_no_023)
                    if troop_is_hero(troop_id_024):
                        if check_quest_active(qst.lend_surgeon) and quest_slot_eq(qst.lend_surgeon,6,troop_id_024):
                            abort_quest(qst.lend_surgeon,0)
                        #end
                    #end
                    remove_troop_from_prison(troop_id_024)
                    troop_set_slot(troop_id_024,10,-1)
                    random_x_025 = store_random_in_range(0,100)
                    s1 = str_store_troop_name_link(troop_id_024)
                    s2 = str_store_faction_name_link(party_faction_020)
                    troop_faction_026 = store_faction_of_troop(troop_id_024)
                    s3 = str_store_faction_name_link(troop_faction_026)
                    if random_x_025 >= 70:
                        troop_id_027 = party_stack_get_troop_id(party_id_019,0)
                        if is_between(troop_id_027,trp.npc1,trp.knight_1_1_wife):
                            party_add_prisoners(party_id_019,troop_id_024,1)
                            if reg0 > 0:
                                troop_set_slot(troop_id_024,8,party_id_019)
                                display_log_message(gstr.hero_taken_prisoner)
                                if cf_prisoner_offered_parole(troop_id_024):
                                    if _cheat_mode == 1:
                                        print("@{!}DEBUG : Prisoner granted parole")
                                    #end
                                #end
                            #end
                            troop_change_relation_with_troop(troop_id_027,troop_id_024,3)
                            _total_battle_enemy_changes += 3
                        else:
                            if _cheat_mode == 1:
                                print("@{!}DEBUG : Prisoner not offered parole")
                            #end
                            troop_change_relation_with_troop(troop_id_027,troop_id_024,-5)
                            _total_battle_enemy_changes += -5
                        #end
                        party_faction_028 = store_faction_of_party(party_id_019)
                        update_troop_location_notes_prisoned(troop_id_024,party_faction_028)
                    else:
                        print("@{s1} of {s3} was defeated in battle but managed to escape.")
                    #end
                    if True:
                        troop_faction_029 = store_faction_of_troop(troop_id_024)
                        if is_between(troop_faction_029,fac.player_supporters_faction,fac.kingdoms_end) and faction_slot_eq(troop_faction_029,8,troop_id_024) and is_between(troop_faction_029,fac.player_supporters_faction,fac.kingdoms_end):
                            _marshall_defeated_in_battle = troop_id_024
                            _g_recalculate_ais = 1
                        #end
                    #end
                #end
                if party_id_018 >= 0:
                    party_num_companions_stacks_022 = party_get_num_prisoner_stacks(party_id_018)
                else:
                    party_num_companions_stacks_022 = 0
                #end
                for stack_no_023 in range(0, party_num_companions_stacks_022):
                    troop_id_024 = party_prisoner_stack_get_troop_id(party_id_018,stack_no_023)
                    if troop_is_hero(troop_id_024):
                        remove_troop_from_prison(troop_id_024)
                        troop_faction_029 = store_faction_of_troop(troop_id_024)
                        s1 = str_store_troop_name_link(troop_id_024)
                        s2 = str_store_faction_name_link(party_faction_020)
                        s3 = str_store_faction_name_link(troop_faction_029)
                        display_log_message(gstr.hero_freed)
                    #end
                #end
                if party_id_018 >= 0:
                    party_clear(p.temp_party)
                    _g_move_heroes = 0
                    party_add_party_prisoners(p.temp_party,party_id_018)
                    party_prisoners_add_party_companions(p.temp_party,party_id_018)
                    distribute_party_among_party_group(p.temp_party,party_id_016)
                    battle_political_consequences(party_id_017,party_id_016)
                    clear_party_group(party_id_017)
                #end
                trigger_result_006 = 1
                if party_id_018 >= 0:
                    party_slot_030 = party_get_slot(party_id_017,0)
                    if party_slot_030 in party_slot_030_list1:
                        _g_recalculate_ais = 1
                        party_faction_031 = store_faction_of_party(party_id_016)
                        party_faction_021 = store_faction_of_party(party_id_017)
                        s1 = str_store_party_name(party_id_017)
                        s2 = str_store_faction_name(party_faction_031)
                        s3 = str_store_faction_name(party_faction_021)
                        display_log_message(gstr.center_captured)
                        cur_hours_003 = store_current_hours()
                        faction_set_slot(party_faction_031,98,cur_hours_003)
                        if _g_encountered_party == party_id_017:
                            add_log_entry(18,trp.player,_g_encountered_party,0,_g_encountered_x_party_faction)
                        #end
                    #end
                    if True:
                        party_num_companions_stacks_022 = party_get_num_companion_stacks(party_id_016)
                        if party_num_companions_stacks_022 > 0:
                            troop_id_032 = party_stack_get_troop_id(party_id_016,0)
                            if is_between(troop_id_032,trp.npc1,trp.knight_1_1_wife):
                                party_set_slot(party_id_017,28,troop_id_032)
                            else:
                                party_set_slot(party_id_017,28,-1)
                            #end
                        #end
                    #end
                    lift_siege(party_id_017,0)
                    party_faction_033 = store_faction_of_party(party_id_017)
                    if is_between(party_id_017,p.town_1,p.castle_1):
                        var034 = 40
                    else:
                        var034 = 20
                    #end
                    faction_inflict_war_damage_on_faction(party_faction_031,party_faction_033,var034)
                    give_center_to_faction(party_id_017,party_faction_031)
                    if party_faction_021 == fac.player_supporters_faction:
                        add_notification_menu(mnu.notification_center_lost,party_id_017,party_faction_031)
                    #end
                    party_num_attached_parties_035 = party_get_num_attached_parties(party_id_002)
                    for var036 in range(0, party_num_attached_parties_035):
                        party_attached_party_with_rank_037 = party_get_attached_party_with_rank(party_id_002,var036)
                        party_num_companions_stacks_022 = party_get_num_companion_stacks(party_attached_party_with_rank_037)
                        var038 = 0
                        for var039 in range(0, party_num_companions_stacks_022):
                            party_stack_size_040 = party_stack_get_size(party_attached_party_with_rank_037,var039)
                            var038 += party_stack_size_040
                        #end
                        if var038 >= 10:
                            var041 = 0
                            var042 = -1
                            var043 = 10
                            for var044 in range(0, var043):
                                random_x_045 = store_random_in_range(1,party_num_companions_stacks_022)
                                troop_id_046 = party_stack_get_troop_id(party_attached_party_with_rank_037,random_x_045)
                                party_stack_size_040 = party_stack_get_size(party_attached_party_with_rank_037,random_x_045)
                                if party_stack_size_040 >= 4 and random_x_045 != var042:
                                    var047 = var038 * 2
                                    var048 = var047
                                    val_min(var048,100)
                                    party_stack_size_040 *= var048
                                    party_stack_size_040 /= 100
                                    troop_id_049 = party_stack_get_troop_id(party_attached_party_with_rank_037,0)
                                    if troop_slot_eq(troop_id_049,52,6) or troop_slot_eq(troop_id_049,52,7) or troop_slot_eq(troop_id_049,52,1):
                                        reg2 = 0
                                        random_x_050 = store_random_in_range(40,50)
                                    elif troop_slot_eq(troop_id_049,52,2) or troop_slot_eq(troop_id_049,52,4):
                                        reg2 = 1
                                        random_x_050 = store_random_in_range(30,40)
                                    elif troop_slot_eq(troop_id_049,52,3) or troop_slot_eq(troop_id_049,52,8) or troop_slot_eq(troop_id_049,52,5):
                                        reg2 = 2
                                        random_x_050 = store_random_in_range(20,30)
                                    elif troop_slot_eq(troop_id_049,52,9) or troop_slot_eq(troop_id_049,52,10):
                                        reg2 = 3
                                        random_x_050 = store_random_in_range(50,60)
                                    #end
                                #end
                                val_min(random_x_050,100)
                                party_stack_size_040 *= random_x_050
                                party_stack_size_040 /= 100
                                party_add_members(party_id_001,troop_id_046,party_stack_size_040)
                                party_remove_members(party_attached_party_with_rank_037,troop_id_046,party_stack_size_040)
                                var041 += 1
                                var042 = random_x_045
                                if var041 == 3:
                                    var043 = 0
                                #end
                            #end
                        #end
                    #end
                    if not is_between(party_id_017,p.castle_1,p.village_1):
                        change_center_prosperity(party_id_017,-5)
                        _newglob_total_prosperity_from_townloot += -5
                    #end
                    order_best_besieger_party_to_guard_center(party_id_017,party_faction_031)
                    if call_script(script.cf_reinforce_party,party_id_017) and call_script(script.cf_reinforce_party,party_id_017):
                        pass
                    #end
                #end
            #end
            if party_slot_eq(party_id_002,0,13):
                var051 = 200
                campaign_ai = game_get_reduce_campaign_ai()
                party_faction_053 = store_faction_of_party(party_id_002)
                if party_id_002 == p.main_party or party_faction_053 == fac.player_supporters_faction or party_faction_053 == _players_kingdom:
                    pass
                elif campaign_ai == 0:
                    var051 *= 3
                    var051 /= 2
                elif campaign_ai == 1:
                    pass
                elif campaign_ai == 2:
                    var051 /= 2
                #end
                if var013 > 0:
                    upgrade_hero_party(party_id_002,var051)
                #end
            #end
            if party_slot_eq(party_id_001,0,13):
                var054 = 200
                party_faction_055 = store_faction_of_party(party_id_001)
                campaign_ai = game_get_reduce_campaign_ai()
                if party_id_001 == p.main_party or party_faction_055 == fac.player_supporters_faction or party_faction_055 == _players_kingdom:
                    pass
                elif campaign_ai == 0:
                    var054 *= 3
                    var054 /= 2
                elif campaign_ai == 1:
                    pass
                elif campaign_ai == 2:
                    var054 /= 2
                #end
                if var014 > 0:
                    upgrade_hero_party(party_id_001,var054)
                #end
            #end
            if not party_slot_eq(party_id_001,0,2) and not party_slot_eq(party_id_001,0,3):
                party_slot_056 = party_get_slot(party_id_002,56)
                party_slot_057 = party_get_slot(party_id_002,57)
                party_slot_058 = party_get_slot(party_id_002,59)
                var059 = party_slot_056 + party_slot_057
                var059 += party_slot_058
                party_slot_060 = party_get_slot(party_id_001,56)
                party_slot_061 = party_get_slot(party_id_001,57)
                party_slot_062 = party_get_slot(party_id_001,59)
                var063 = party_slot_060 + party_slot_061
                var059 += party_slot_062
                random_x_064 = store_random_in_range(0,100)
                if random_x_064 < 10:
                    trigger_result_006 = 1
                #end
            else:
                party_slot_056 = party_get_slot(party_id_002,56)
                party_slot_057 = party_get_slot(party_id_002,57)
                party_slot_065 = party_get_slot(party_id_002,59)
                var059 = party_slot_056 + party_slot_057
                var059 += party_slot_065
                party_slot_060 = party_get_slot(party_id_001,56)
                party_slot_061 = party_get_slot(party_id_001,57)
                var063 = party_slot_060 + party_slot_061
                var063 *= 13
                var063 /= 10
                if var063 > var059 and var063 > 3:
                    random_x_064 = store_random_in_range(0,100)
                    if random_x_064 < 15:
                        trigger_result_006 = 1
                        _g_recalculate_ais = 1
                        if _cheat_mode == 1:
                            print("@{!}DEBUG : Siege attackers are running away")
                        #end
                    #end
                #end
            #end
        #end
    #end
    set_trigger_result(trigger_result_006)


def game_event_battle_end():
    for trp_001 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_001,2,2):
            troop_slot_002 = troop_get_slot(trp_001,10)
            troop_slot_003 = troop_get_slot(trp_001,8)
            if troop_slot_002 >= 0:
                var004 = 0
                if not party_is_active(troop_slot_002):
                    var004 = 1
                else:
                    party_count_companions_of_type(party_companions_of_type_005,troop_slot_002,trp_001)
                    if party_companions_of_type_005 <= 0:
                        var004 = 1
                    #end
                #end
            #end
            if var004 == 1:
                if _cheat_mode == 1:
                    s1 = str_store_troop_name(trp_001)
                    print("@{!}DEBUG: {s1} no longer leads a party.")
                #end
            #end
            troop_set_slot(trp_001,10,-1)
        #end
        if troop_slot_003 >= 0:
            var004 = 0
            if not party_is_active(troop_slot_003):
                var004 = 1
            else:
                party_count_prisoners_of_type(party_companions_of_type_005,troop_slot_003,trp_001)
                if party_companions_of_type_005 <= 0:
                    var004 = 1
                #end
            #end
            if var004 == 1:
                if _cheat_mode == 1:
                    s1 = str_store_troop_name(trp_001)
                    print("@{!}DEBUG: {s1} is no longer a prisoner.")
                #end
            #end
            remove_troop_from_prison(trp_001)
            if True:
                party_count_prisoners_of_type(party_companions_of_type_005,p.main_party,trp_001)
                if party_companions_of_type_005 > 0:
                    troop_set_slot(trp_001,8,p.main_party)
                    var004 = 0
                    if _cheat_mode == 1:
                        s1 = str_store_troop_name(trp_001)
                        print("@{!}DEBUG: {s1} is now a prisoner of player.")
                    #end
                #end
            #end
            if var004 == 1:
                for trp_006 in range(trp.npc1, trp.knight_1_1_wife):
                    if troop_slot_eq(trp_006,2,2) and var004 == 1:
                        troop_slot_007 = troop_get_slot(trp_006,10)
                        if party_is_active(troop_slot_007):
                            party_count_prisoners_of_type(party_companions_of_type_005,troop_slot_007,trp_001)
                            if party_companions_of_type_005 > 0:
                                troop_set_slot(trp_001,8,troop_slot_007)
                                var004 = 0
                                if _cheat_mode == 1:
                                    s1 = str_store_troop_name(trp_001)
                                    s2 = str_store_party_name(troop_slot_007)
                                    print("@{!}DEBUG: {s1} is now a prisoner of {s2}.")
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            for troop_slot_007 in range(p.town_1, p.village_1):
                if var004 == 1:
                    party_count_prisoners_of_type(party_companions_of_type_005,troop_slot_007,trp_001)
                    if party_companions_of_type_005 > 0:
                        troop_set_slot(trp_001,8,troop_slot_007)
                        var004 = 0
                        if _cheat_mode == 1:
                            s1 = str_store_troop_name(trp_001)
                            s2 = str_store_party_name(troop_slot_007)
                            print("@{!}DEBUG: {s1} is now a prisoner of {s2}.")
                        #end
                    #end
                #end
            #end
        #end
    #end


def order_best_besieger_party_to_guard_center(var001, var002):
    party_id_003 = -1
    var004 = 0
    for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
        troop_slot_006 = troop_get_slot(trp_005,10)
        if troop_slot_006 > 0 and party_is_active(troop_slot_006):
            party_faction_007 = store_faction_of_party(troop_slot_006)
            if var002 == party_faction_007:
                distance_parties_008 = store_distance_to_party_from_party(troop_slot_006,var001)
                if distance_parties_008 < 5 and not faction_slot_eq(var002,8,trp_005):
                    var009 = 0
                    if party_slot_eq(troop_slot_006,4,1) and party_slot_eq(troop_slot_006,5,var001):
                        var009 = 1
                    elif party_slot_eq(troop_slot_006,4,11):
                        party_slot_010 = party_get_slot(troop_slot_006,5)
                        if party_slot_eq(party_slot_010,4,1) and party_slot_eq(party_slot_010,5,var001):
                            var009 = 1
                        #end
                    #end
                #end
            #end
        #end
        if var009 == 1:
            party_slot_011 = party_get_slot(troop_slot_006,56)
            if party_slot_011 > var004:
                var004 = party_slot_011
                party_id_003 = troop_slot_006
            #end
        #end
    #end
    if party_id_003 > 0:
        party_set_ai_state(party_id_003,7,var001)
        party_set_flags(party_id_003,65536,1)
    #end


def game_get_item_buy_price_factor(var001):
    party_slot_002 = 100
    get_trade_penalty(var001)
    var003 = reg0
    if is_between(_g_encountered_party,p.town_1,p.salt_mine) and is_between(var001,itm.spice,itm.siege_supply):
        slot_no_004 = var001 - itm.spice
        slot_no_004 += 250
        party_slot_002 = party_get_slot(_g_encountered_party,slot_no_004)
        party_slot_002 *= 100
        party_slot_002 /= 1000
    #end
    var005 = 100 + var003
    party_slot_002 *= var005
    party_slot_002 /= 100
    reg0 = party_slot_002
    set_trigger_result(reg0)


def game_get_item_sell_price_factor(var001):
    party_slot_002 = 100
    get_trade_penalty(var001)
    var003 = reg0
    if is_between(_g_encountered_party,p.town_1,p.salt_mine) and is_between(var001,itm.spice,itm.siege_supply):
        slot_no_004 = var001 - itm.spice
        slot_no_004 += 250
        party_slot_002 = party_get_slot(_g_encountered_party,slot_no_004)
        party_slot_002 *= 100
        party_slot_002 /= 1000
    else:
        var003 *= 4
    #end
    var005 = 100 + var003
    party_slot_002 *= 100
    party_slot_002 /= var005
    reg0 = party_slot_002
    set_trigger_result(reg0)


def get_trade_penalty(var001):
    var002 = 0
    party_skill_lvl_003 = party_get_skill_level(p.main_party,0)
    if is_between(var001,itm.spice,itm.siege_supply):
        var002 = 12
        var004 = party_skill_lvl_003 * 1
        var002 -= var004
        val_max(var002,3)
    else:
        var002 = 100
        var004 = party_skill_lvl_003 * 5
        var002 -= var004
    #end
    var005 = 1000
    if is_between(_g_encountered_party,p.town_1,p.salt_mine):
        party_slot_006 = party_get_slot(_g_encountered_party,26)
        var007 = party_slot_006 * -3
        var005 += var007
        if party_slot_006 < 0:
            var008 = 100 - party_slot_006
            var005 *= var008
            var005 /= 100
        #end
    #end
    troop_get_player_relation(_g_talk_troop)
    var009 = reg0
    if var009 < 0:
        var010 = 0 - var009
        var011 = var010 * 20
        var005 += var011
    #end
    if is_between(_g_encountered_party,p.village_1,p.salt_mine):
        var002 *= 5
        var002 /= 4
    #end
    var002 *= var005
    var002 /= 1000
    val_max(var002,1)
    reg0 = var002


def game_event_buy_item(var001, var002):
    if is_between(var001,itm.spice,itm.siege_supply):
        slot_no_003 = var001 - itm.spice
        slot_no_003 += 250
        party_slot_004 = party_get_slot(_g_encountered_party,slot_no_003)
        if var002 == 0:
            party_slot_004 += 20
        else:
            party_slot_004 += 30
        #end
        item_value_005 = store_item_value(var001)
        if item_value_005 >= 100:
            var006 = item_value_005 - 100
            var007 = var006 / 8
            party_slot_004 += var007
        #end
        val_min(party_slot_004,10000)
        party_set_slot(_g_encountered_party,slot_no_003,party_slot_004)
    #end


def game_event_sell_item(var001, var002):
    if is_between(var001,itm.spice,itm.siege_supply):
        slot_no_003 = var001 - itm.spice
        slot_no_003 += 250
        party_slot_004 = party_get_slot(_g_encountered_party,slot_no_003)
        if var002 == 0:
            party_slot_004 -= 30
        else:
            party_slot_004 -= 20
        #end
        item_value_005 = store_item_value(var001)
        if item_value_005 >= 100:
            var006 = item_value_005 - 100
            var007 = var006 / 8
            party_slot_004 -= var007
        #end
        val_max(party_slot_004,100)
        party_set_slot(_g_encountered_party,slot_no_003,party_slot_004)
    #end


def start_wedding_cutscene(_g_wedding_groom_troop, _g_wedding_bride_troop):
    _g_wedding_bishop_troop = trp.temporary_minister
    if is_between(_players_kingdom,fac.player_supporters_faction,fac.kingdoms_end) and not faction_slot_eq(_players_kingdom,11,_g_wedding_groom_troop) and not faction_slot_eq(_players_kingdom,11,_g_wedding_bride_troop):
        faction_slot_001 = faction_get_slot(_players_kingdom,11)
        troop_type_002 = troop_get_type(faction_slot_001)
        if troop_type_002 == 0 and faction_slot_001 != _g_wedding_groom_troop:
            _g_wedding_bishop_troop = faction_slot_001
        elif _players_kingdom == fac.player_supporters_faction and faction_slot_eq(_players_kingdom,11,trp.player) and _g_player_minister > 0:
            troop_type_002 = troop_get_type(_g_player_minister)
            if troop_type_002 == 0 and _g_player_minister != _g_wedding_groom_troop:
                _g_wedding_bishop_troop = _g_player_minister
            #end
        #end
    #end
    _g_wedding_brides_dad_troop = trp.temporary_minister
    if _g_wedding_bride_troop != trp.player:
        if True:
            troop_slot_003 = troop_get_slot(_g_wedding_bride_troop,31)
            if troop_slot_003 > 0:
                troop_type_002 = troop_get_type(troop_slot_003)
                if troop_type_002 == 0 and troop_slot_003 != _g_wedding_groom_troop and troop_slot_003 != _g_wedding_bishop_troop:
                    _g_wedding_brides_dad_troop = troop_slot_003
                else:
                    troop_slot_004 = troop_get_slot(_g_wedding_bride_troop,33)
                    if troop_slot_004 > 0:
                        troop_type_002 = troop_get_type(troop_slot_004)
                        if troop_type_002 == 0 and troop_slot_004 != _g_wedding_groom_troop and troop_slot_004 != _g_wedding_bishop_troop:
                            _g_wedding_brides_dad_troop = troop_slot_004
                        #end
                    #end
                #end
            #end
        #end
    else:
        for trp_005 in range(trp.npc1, trp.kingdom_1_lord):
            if troop_slot_eq(trp_005,2,5) or troop_slot_eq(trp_005,2,2):
                troop_type_002 = troop_get_type(trp_005)
                if troop_type_002 == 0 and trp_005 != _g_wedding_groom_troop and trp_005 != _g_wedding_bishop_troop:
                    _g_wedding_brides_dad_troop = trp_005
                #end
            #end
        #end
    #end
    modify_visitors_at_site(scn.wedding)
    reset_visitors(0)
    set_visitor(0,_g_wedding_groom_troop)
    set_visitor(1,_g_wedding_bride_troop)
    set_visitor(2,_g_wedding_brides_dad_troop)
    set_visitor(3,_g_wedding_bishop_troop)
    entry_no_006 = 4
    var007 = 0
    for trp_008 in range(trp.npc1, trp.heroes_end):
        if entry_no_006 < 32 and trp_008 != _g_wedding_groom_troop and trp_008 != _g_wedding_bride_troop and trp_008 != _g_wedding_brides_dad_troop and trp_008 != _g_wedding_bishop_troop:
            troop_faction_009 = store_faction_of_troop(trp_008)
            if is_between(troop_faction_009,fac.player_supporters_faction,fac.kingdoms_end) and troop_faction_009 == _players_kingdom and troop_slot_eq(trp_008,2,5) or troop_slot_eq(trp_008,2,2) or troop_slot_eq(trp_008,2,6):
                troop_type_002 = troop_get_type(trp_008)
                var010 = 1
                if troop_type_002 == 0:
                    var010 = 0
                    if var007 < 16:
                        var010 = 1
                        var007 += 1
                    #end
                #end
            #end
        #end
        if var010 == 1:
            set_visitor(entry_no_006,trp_008)
            entry_no_006 += 1
        #end
    #end
    set_jump_mission(mt.wedding)
    jump_to_scene(scn.wedding)
    change_screen_mission()


def game_get_troop_wage(var001, var002):
    var001_list1 = [
    trp.kidnapped_girl,
    trp.player,
    ]
    var003 = 0
    if var001 in var001_list1:
        pass
    elif is_between(var001,trp.kingdom_1_pretender,trp.knight_1_1_wife):
        pass
    else:
        character_lvl_004 = store_character_level(var001)
        var003 = character_lvl_004
        var003 += 3
        var003 *= var003
        var003 /= 25
    #end
    if not is_between(var001,trp.npc1,trp.kingdom_1_lord) and troop_is_mounted(var001):
        var003 *= 5
        var003 /= 3
    #end
    if is_between(var001,trp.watchman,trp.mercenaries_end):
        var003 *= 3
        var003 /= 2
    #end
    if is_between(var001,trp.npc1,trp.kingdom_1_lord):
        var003 *= 2
    #end
    skill_lvl_005 = store_skill_level(skl.leadership,trp.player)
    var006 = 5 * skill_lvl_005
    var007 = 100 - var006
    var003 *= var007
    var003 /= 100
    if var001 != trp.player and var001 != trp.kidnapped_girl and not is_between(var001,trp.kingdom_1_pretender,trp.knight_1_1_wife):
        val_max(var003,1)
    #end
    reg0 = var003
    set_trigger_result(reg0)


def game_get_total_wage():
    var001 = 0
    party_num_companions_stacks_002 = party_get_num_companion_stacks(p.main_party)
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(p.main_party,stack_no_003)
        party_stack_size_005 = party_stack_get_size(p.main_party,stack_no_003)
        game_get_troop_wage(troop_id_004,0)
        reg0 *= party_stack_size_005
        var001 += reg0
    #end
    reg0 = var001
    set_trigger_result(reg0)


def game_get_join_cost(troop_id_001):
    var002 = 0
    if troop_is_hero(troop_id_001):
        pass
    else:
        character_lvl_003 = store_character_level(troop_id_001)
        var002 = character_lvl_003
        var002 += 5
        var002 *= var002
        var002 += 40
        var002 /= 5
        if troop_is_mounted(troop_id_001):
            var002 *= 2
        #end
    #end
    reg0 = var002
    set_trigger_result(reg0)


def game_get_upgrade_xp(var001):
    level_no_002 = 0
    character_lvl_003 = store_character_level(var001)
    level_no_002 = character_lvl_003 + 3
    reg0 = get_level_boundary(level_no_002)
    reg0 *= 6
    reg0 /= 1000
    reg0 += 30
    if var001 >= trp.bandit and var001 < trp.black_khergit_horseman:
        reg0 *= 2
    #end
    set_trigger_result(reg0)


def game_get_upgrade_cost(var001):
    character_lvl_002 = store_character_level(var001)
    if is_between(character_lvl_002,0,6):
        reg0 = 10
    elif is_between(character_lvl_002,6,11):
        reg0 = 20
    elif is_between(character_lvl_002,11,16):
        reg0 = 40
    elif is_between(character_lvl_002,16,21):
        reg0 = 80
    elif is_between(character_lvl_002,21,26):
        reg0 = 120
    elif is_between(character_lvl_002,26,31):
        reg0 = 160
    else:
        reg0 = 200
    #end
    set_trigger_result(reg0)


def game_get_prisoner_price(var001):
    if is_between(_g_talk_troop,trp.ransom_broker_1,trp.tavern_traveler_1):
        character_lvl_002 = store_character_level(var001)
        var003 = character_lvl_002
        var003 += 10
        var003 *= var003
        var003 /= 6
    else:
        var003 = 50
    #end
    reg0 = var003
    set_trigger_result(reg0)


def game_check_prisoner_can_be_sold(var001):
    reg0 = 0
    if not troop_is_hero(var001):
        reg0 = 1
    #end
    set_trigger_result(reg0)


def game_get_morale_of_troops_from_faction(troop_id_001):
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    if troop_faction_002 >= fac.kingdom_1 and troop_faction_002 < fac.kingdoms_end:
        reg0 = faction_get_slot(troop_faction_002,99)
    else:
        reg0 = 0
    #end
    reg0 /= 100
    reg1 = party_get_morale(p.main_party)
    reg0 += reg1
    set_trigger_result(reg0)


def game_event_detect_party(party_id_001):
    if party_slot_eq(party_id_001,0,13):
        troop_id_002 = party_stack_get_troop_id(party_id_001,0)
        if is_between(troop_id_002,trp.npc1,trp.knight_1_1_wife):
            update_troop_location_notes(troop_id_002,0)
        elif is_between(party_id_001,p.town_1,p.village_1):
            party_num_attached_parties_003 = party_get_num_attached_parties(party_id_001)
            for var004 in range(0, party_num_attached_parties_003):
                party_attached_party_with_rank_005 = party_get_attached_party_with_rank(party_id_001,var004)
                troop_id_002 = party_stack_get_troop_id(party_attached_party_with_rank_005,0)
                if is_between(troop_id_002,trp.npc1,trp.knight_1_1_wife):
                    update_troop_location_notes(troop_id_002,0)
                #end
            #end
        #end
    #end


def game_event_undetect_party(party_id_001):
    if party_slot_eq(party_id_001,0,13):
        troop_id_002 = party_stack_get_troop_id(party_id_001,0)
        if is_between(troop_id_002,trp.npc1,trp.knight_1_1_wife):
            update_troop_location_notes(troop_id_002,0)
        #end
    #end


def game_get_statistics_line(var001):
    if var001 == 0:
        reg1 = get_player_agent_kill_count()
        s1 = str_store_string(gstr.number_of_troops_killed_reg1)
        set_result_string(1)
    elif var001 == 1:
        reg1 = get_player_agent_kill_count(1)
        s1 = str_store_string(gstr.number_of_troops_wounded_reg1)
        set_result_string(1)
    elif var001 == 2:
        reg1 = get_player_agent_own_troop_kill_count()
        s1 = str_store_string(gstr.number_of_own_troops_killed_reg1)
        set_result_string(1)
    elif var001 == 3:
        reg1 = get_player_agent_own_troop_kill_count(1)
        s1 = str_store_string(gstr.number_of_own_troops_wounded_reg1)
        set_result_string(1)
    #end


def game_get_date_text(var001):
    var004_list2 = [
    11,
    9,
    6,
    4,
    ]
    var004_list1 = [
    12,
    10,
    8,
    7,
    5,
    3,
    1,
    ]
    var002 = var001 / 24
    var003 = var002 + 23
    var004 = 3
    var005 = 1257
    var006 = 99999
    for var007 in range(0, var006):
        if var004 in var004_list1:
            var008 = 31
        elif var004 in var004_list2:
            var008 = 30
        else:
            if True:
                var009 = var005 / 4
                var009 *= 4
                if var009 == var005:
                    var008 = 29
                else:
                    var008 = 28
                #end
            #end
        #end
        if var003 > var008:
            var003 -= var008
            var004 += 1
            if var004 > 12:
                var004 -= 12
                var005 += 1
            #end
        else:
            var006 = 0
        #end
    #end
    reg1 = var003
    reg2 = var005
    if var004 == 1:
        s1 = str_store_string(gstr.january_reg1_reg2)
    elif var004 == 2:
        s1 = str_store_string(gstr.february_reg1_reg2)
    elif var004 == 3:
        s1 = str_store_string(gstr.march_reg1_reg2)
    elif var004 == 4:
        s1 = str_store_string(gstr.april_reg1_reg2)
    elif var004 == 5:
        s1 = str_store_string(gstr.may_reg1_reg2)
    elif var004 == 6:
        s1 = str_store_string(gstr.june_reg1_reg2)
    elif var004 == 7:
        s1 = str_store_string(gstr.july_reg1_reg2)
    elif var004 == 8:
        s1 = str_store_string(gstr.august_reg1_reg2)
    elif var004 == 9:
        s1 = str_store_string(gstr.september_reg1_reg2)
    elif var004 == 10:
        s1 = str_store_string(gstr.october_reg1_reg2)
    elif var004 == 11:
        s1 = str_store_string(gstr.november_reg1_reg2)
    elif var004 == 12:
        s1 = str_store_string(gstr.december_reg1_reg2)
    #end
    set_result_string(1)


def game_get_money_text(var001):
    if var001 == 1:
        s1 = str_store_string(gstr.one_denar)
    else:
        reg1 = var001
        s1 = str_store_string(gstr.reg1_denars)
    #end
    set_result_string(1)


def game_get_party_companion_limit():
    [troop_id_001] = trp.player
    var002 = 30
    skill_lvl_003 = store_skill_level(skl.leadership,[troop_id_001])
    attribute_lvl_004 = store_attribute_level([troop_id_001],3)
    skill_lvl_003 *= 5
    var002 += skill_lvl_003
    var002 += attribute_lvl_004
    troop_slot_005 = troop_get_slot([troop_id_001],7)
    var006 = troop_slot_005 / 25
    var002 += var006
    reg0 = var002
    set_trigger_result(reg0)


def game_reset_player_party_name():
    s5 = str_store_troop_name(trp.player)
    party_set_name(p.main_party,5)


def game_get_troop_note(troop_id_001, var002):
    var002_list1 = [
    2,
    1,
    0,
    ]
    var002_list1 = [
    2,
    1,
    ]
    set_trigger_result(0)
    s54 = str_store_troop_name(troop_id_001)
    if troop_id_001 == trp.player and _player_has_homage == 1 or _players_kingdom == fac.player_supporters_faction:
        troop_faction_003 = _players_kingdom
    else:
        troop_faction_003 = store_faction_of_troop(troop_id_001)
    #end
    str_clear(49)
    if is_between(troop_id_001,trp.knight_1_1,trp.heroes_end) or troop_id_001 == trp.player and not is_between(troop_id_001,trp.kingdom_1_pretender,trp.knight_1_1_wife):
        var004 = 0
        if True:
            troop_get_family_relation_to_troop(trp.player,troop_id_001)
            if reg0 > 0:
                var004 += 1
            #end
        #end
        for trp_005 in range(trp.knight_1_1, trp.heroes_end):
            troop_get_family_relation_to_troop(trp_005,troop_id_001)
            if reg0 > 0:
                var004 += 1
            #end
        #end
        if var004 > 0:
            if troop_id_001 == trp.player:
                s49 = str_store_string(gstr._family_)
            else:
                reg1 = troop_get_slot(troop_id_001,18)
                s49 = str_store_string(gstr._age_reg1_family_)
            #end
            if True:
                troop_get_family_relation_to_troop(trp.player,troop_id_001)
                if reg0 > 0:
                    s12 = str_store_troop_name_link(trp.player)
                    var004 -= 1
                    if var004 == 0:
                        s49 = str_store_string(gstr.s49_s12_s11_end)
                    else:
                        s49 = str_store_string(gstr.s49_s12_s11)
                    #end
                #end
            #end
            for trp_005 in range(trp.knight_1_1, trp.heroes_end):
                troop_get_family_relation_to_troop(trp_005,troop_id_001)
                if reg0 > 0:
                    if not is_between(trp_005,trp.knight_1_1_wife,trp.heroes_end) and _cheat_mode == 1:
                        s12 = str_store_troop_name_link(trp_005)
                        troop_get_relation_with_troop(trp_005,troop_id_001)
                        s49 = str_store_string(gstr.s49_s12_s11_rel_reg0)
                    else:
                        s12 = str_store_troop_name_link(trp_005)
                        var004 -= 1
                        if var004 == 0:
                            s49 = str_store_string(gstr.s49_s12_s11_end)
                        else:
                            s49 = str_store_string(gstr.s49_s12_s11)
                        #end
                    #end
                #end
            #end
        #end
    #end
    if troop_id_001 != trp.player and not is_between(troop_faction_003,fac.player_supporters_faction,fac.kingdoms_end) and not is_between(troop_id_001,trp.npc1,trp.kingdom_1_lord) and not is_between(troop_id_001,trp.kingdom_1_pretender,trp.knight_1_1_wife):
        if var002 == 0:
            s0 = str_store_string(gstr.s54_has_left_the_realm)
            set_trigger_result(1)
        else:
            str_clear(0)
            if var002 in var002_list1:
                set_trigger_result(1)
            #end
        #end
    elif is_between(troop_id_001,trp.npc1,trp.kingdom_1_lord) and not troop_slot_eq(troop_id_001,2,2) and var002 == 0:
        set_trigger_result(1)
        str_clear(0)
        troop_id_006 = troop_id_001
        s4 = str_store_troop_name(troop_id_006)
        if True:
            troop_slot_007 = troop_get_slot(troop_id_006,150)
            if main_party_has_troop(troop_id_006) or troop_slot_ge(troop_id_006,151,1) or _g_player_minister == troop_id_006:
                if troop_slot_eq(troop_id_006,151,1):
                    s8 = str_store_string(gstr.gathering_support)
                    if troop_slot_007 == 1:
                        s5 = str_store_string(gstr.expected_back_imminently)
                    else:
                        reg3 = troop_slot_007
                        s5 = str_store_string(gstr.expected_back_in_approximately_reg3_days)
                    #end
                #end
            elif troop_slot_eq(troop_id_006,151,2):
                troop_slot_008 = troop_get_slot(troop_id_006,67)
                s11 = str_store_party_name(troop_slot_008)
                s8 = str_store_string(gstr.gathering_intelligence)
                if troop_slot_007 == 1:
                    s5 = str_store_string(gstr.expected_back_imminently)
                else:
                    reg3 = troop_slot_007
                    s5 = str_store_string(gstr.expected_back_in_approximately_reg3_days)
                #end
            elif troop_slot_ge(troop_id_006,151,3) and not troop_slot_ge(troop_id_006,151,8):
                troop_slot_009 = troop_get_slot(troop_id_006,152)
                s9 = str_store_faction_name(troop_slot_009)
                s8 = str_store_string(gstr.diplomatic_embassy_to_s9)
                if troop_slot_007 == 1:
                    s5 = str_store_string(gstr.expected_back_imminently)
                else:
                    reg3 = troop_slot_007
                    s5 = str_store_string(gstr.expected_back_in_approximately_reg3_days)
                #end
            elif troop_id_006 == _g_player_minister:
                s8 = str_store_string(gstr.serving_as_minister)
                s9 = str_store_party_name(_g_player_court)
                if is_between(_g_player_court,p.town_1,p.salt_mine):
                    s5 = str_store_string(gstr.in_your_court_at_s9)
                elif troop_id_006 == _g_player_minister:
                    s8 = str_store_string(gstr.serving_as_minister)
                    s5 = str_store_string(gstr.awaiting_the_capture_of_a_fortress_which_can_serve_as_your_court)
                elif main_party_has_troop(troop_id_006):
                    s8 = str_store_string(gstr.under_arms)
                    s5 = str_store_string(gstr.in_your_party)
                #end
            #end
            s0 = str_store_string(gstr.s4_s8_s5)
        else:
            s0 = str_store_string(gstr.whereabouts_unknown)
        #end
    elif is_between(troop_id_001,trp.kingdom_1_pretender,trp.knight_1_1_wife) and not troop_slot_eq(troop_id_001,2,2) and troop_id_001 != _supported_pretender:
        troop_slot_010 = troop_get_slot(troop_id_001,14)
        if faction_slot_eq(troop_slot_010,21,0) and faction_slot_eq(troop_slot_010,60,1):
            if var002 == 0:
                s56 = str_store_faction_name_link(troop_slot_010)
                s0 = str_store_string("@{s54} is a claimant to the throne of {s56}.",0)
                set_trigger_result(1)
            #end
        else:
            if True:
                str_clear(0)
                if var002 in var002_list1:
                    set_trigger_result(1)
                #end
            #end
        #end
    else:
        if var002 == 0:
            faction_slot_011 = faction_get_slot(troop_faction_003,11)
            s55 = str_store_troop_name_link(faction_slot_011)
            s56 = str_store_faction_name_link(troop_faction_003)
            var012 = 0
            var013 = 0
            if troop_faction_003 == fac.player_faction:
                var012 = 1
            elif faction_slot_011 == troop_id_001:
                var013 = 1
            #end
            var014 = 0
            s58 = str_store_string("@nowhere")
            for p_015 in range(p.town_1, p.salt_mine):
                if party_slot_eq(p_015,7,troop_id_001):
                    if var014 == 0:
                        s58 = str_store_party_name_link(p_015)
                    elif var014 == 1:
                        s57 = str_store_party_name_link(p_015)
                        s58 = str_store_string("@{s57} and {s58}")
                    else:
                        s57 = str_store_party_name_link(p_015)
                        s58 = str_store_string("@{!}{s57}, {s58}")
                    #end
                #end
                var014 += 1
            #end
            reg3 = troop_get_type(troop_id_001)
            reg5 = troop_get_slot(troop_id_001,7)
            reg15 = troop_get_slot(troop_id_001,150)
            str_clear(59)
            if True:
                troop_get_player_relation(troop_id_001)
                var016 = reg0
                var017 = var016 + 100
                var017 += 5
                var018 = var017 / 10
                val_clamp(var018,0,20)
                var019 = gstr.relation_mnus_100_ns
                var019 += var018
                if var019 != gstr.relation_plus_0_ns:
                    s60 = str_store_string("@{reg3?She:He}")
                    s59 = str_store_string(var019)
                    s59 = str_store_string("@{!}^{s59}")
                #end
            #end
            reg9 = var014
            reg3 = troop_get_type(troop_id_001)
            reg5 = troop_get_slot(troop_id_001,7)
            reg4 = var013
            reg6 = var012
            reg17 = troop_get_slot(troop_id_001,11)
            s0 = str_store_string(gstr.lord_info_string)
            add_troop_note_tableau_mesh(troop_id_001,tab.troop_note_mesh)
            set_trigger_result(1)
        #end
    #end


def game_get_center_note(party_id_001, var002):
    set_trigger_result(0)
    if var002 == 0:
        party_slot_003 = party_get_slot(party_id_001,7)
        if party_slot_003 >= 0:
            troop_faction_004 = store_faction_of_troop(party_slot_003)
            s1 = str_store_troop_name_link(party_slot_003)
            if party_slot_003 == trp.player and _players_kingdom > 0:
                s2 = str_store_faction_name_link(_players_kingdom)
            else:
                s2 = str_store_faction_name_link(troop_faction_004)
            #end
            s50 = str_store_party_name(party_id_001)
            if party_slot_eq(party_id_001,0,3):
                s51 = str_store_string("@The town of {s50}")
            elif party_slot_eq(party_id_001,0,4):
                party_slot_005 = party_get_slot(party_id_001,120)
                s52 = str_store_party_name_link(party_slot_005)
                s51 = str_store_string("@The village of {s50} near {s52}")
            else:
                s51 = str_store_string("@{!}{s50}")
            #end
            s2 = str_store_string("@{s51} belongs to {s1} of {s2}.^")
        else:
            str_clear(2)
        #end
        if is_between(party_id_001,p.village_1,p.salt_mine):
            pass
        else:
            var006 = 0
            for p_007 in range(p.village_1, p.salt_mine):
                if party_slot_eq(p_007,120,party_id_001):
                    if var006 == 0:
                        s8 = str_store_party_name_link(p_007)
                    elif var006 == 1:
                        s7 = str_store_party_name_link(p_007)
                        s8 = str_store_string("@{s7} and {s8}")
                    else:
                        s7 = str_store_party_name_link(p_007)
                        s8 = str_store_string("@{!}{s7}, {s8}")
                    #end
                #end
                var006 += 1
            #end
            if var006 == 0:
                s2 = str_store_string("@{s2}It has no villages.^")
            else:
                reg0 = var006 - 1
                s2 = str_store_string("@{s2}{reg0?Its villages are:Its village is} {s8}.^")
            #end
        #end
        get_prosperity_text_to_s50(party_id_001)
        s0 = str_store_string("@{s2}Its prosperity is: {s50}")
        set_trigger_result(1)
    #end


def game_get_faction_note(faction_id_001, var002):
    var002_list1 = [
    1,
    0,
    ]
    set_trigger_result(0)
    if is_between(faction_id_001,fac.player_supporters_faction,fac.kingdoms_end) and faction_slot_eq(faction_id_001,21,0):
        if var002 == 0:
            faction_slot_003 = faction_get_slot(faction_id_001,11)
            s5 = str_store_faction_name(faction_id_001)
            s6 = str_store_troop_name_link(faction_slot_003)
            var004 = 0
            s8 = str_store_string("@nowhere")
            for p_005 in range(p.town_1, p.salt_mine):
                party_faction_006 = store_faction_of_party(p_005)
                if party_faction_006 == faction_id_001:
                    if var004 == 0:
                        s8 = str_store_party_name_link(p_005)
                    elif var004 == 1:
                        s7 = str_store_party_name_link(p_005)
                        s8 = str_store_string("@{s7} and {s8}")
                    else:
                        s7 = str_store_party_name_link(p_005)
                        s8 = str_store_string("@{!}{s7}, {s8}")
                    #end
                #end
                var004 += 1
            #end
            var007 = 0
            s10 = str_store_string("@noone")
            for trp_008 in range(trp.kingdom_heroes_including_player_begin, trp.knight_1_1_wife):
                troop_id_009 = trp_008
                if trp_008 == trp.kingdom_heroes_including_player_begin:
                    troop_id_009 = trp.player
                    troop_faction_010 = _players_kingdom
                else:
                    troop_faction_010 = store_faction_of_troop(troop_id_009)
                #end
                if troop_faction_010 == faction_id_001 and troop_id_009 != faction_slot_003 and troop_slot_eq(troop_id_009,2,2):
                    if var007 == 0:
                        s10 = str_store_troop_name_link(troop_id_009)
                    elif var007 == 1:
                        s9 = str_store_troop_name_link(troop_id_009)
                        s10 = str_store_string("@{s9} and {s10}")
                    else:
                        s9 = str_store_troop_name_link(troop_id_009)
                        s10 = str_store_string("@{!}{s9}, {s10}")
                    #end
                #end
                var007 += 1
            #end
            s12 = str_store_string("@noone")
            s21 = str_store_string(gstr.foreign_relations__)
            for fac_011 in range(fac.player_supporters_faction, fac.kingdoms_end):
                if faction_slot_eq(fac_011,21,0) and faction_id_001 != fac_011:
                    s14 = str_store_faction_name_link(fac_011)
                    diplomacy_faction_get_diplomatic_status_with_faction(faction_id_001,fac_011)
                    var012 = reg0
                    var013 = reg1
                    diplomacy_faction_get_diplomatic_status_with_faction(fac_011,faction_id_001)
                    var014 = reg0
                    if var012 == -2:
                        s21 = str_store_string(gstr.s21__the_s5_is_at_war_with_the_s14)
                        slot_no_015 = fac_011 + 140
                        slot_no_015 -= fac.player_supporters_faction
                        faction_slot_016 = faction_get_slot(faction_id_001,slot_no_015)
                        var017 = faction_slot_016 * 2
                        slot_no_018 = faction_id_001 + 140
                        slot_no_018 -= fac.player_supporters_faction
                        faction_slot_019 = faction_get_slot(fac_011,slot_no_018)
                        var020 = faction_slot_019 * 2
                        var021 = 0
                        var022 = 0
                        for slot_no_023 in range(0, _num_log_entries):
                            troop_slot_024 = troop_get_slot(trp.log_array_entry_type,slot_no_023)
                            if is_between(troop_slot_024,91,95):
                                troop_slot_025 = troop_get_slot(trp.log_array_actor,slot_no_023)
                                troop_slot_026 = troop_get_slot(trp.log_array_faction_object,slot_no_023)
                                if troop_slot_025 == fac_011 and troop_slot_026 == faction_id_001:
                                    var021 = troop_slot_024
                                    var022 = troop_slot_025
                                elif troop_slot_025 == faction_id_001 and troop_slot_026 == fac_011:
                                    var021 = troop_slot_024
                                    var022 = troop_slot_025
                                #end
                            #end
                        #end
                    #end
                    s25 = str_store_string(8)
                    if var021 > 0:
                        s8 = str_store_faction_name(var022)
                        if var021 == 91:
                            s21 = str_store_string(gstr.s21_the_s8_declared_war_out_of_personal_enmity)
                        elif var021 == 94:
                            s21 = str_store_string(gstr.s21_the_s8_declared_war_in_response_to_border_provocations)
                        elif var021 == 93:
                            s21 = str_store_string(gstr.s21_the_s8_declared_war_to_curb_the_other_realms_power)
                        elif var021 == 92:
                            s21 = str_store_string(gstr.s21_the_s8_declared_war_to_regain_lost_territory)
                        elif var021 == 90 and var022 != fac.player_supporters_faction:
                            s21 = str_store_string(gstr.s21_the_s8_declared_war_as_part_of_a_bid_to_conquer_all_calradia)
                        #end
                    #end
                    s8 = str_store_string(25)
                    if faction_slot_016 > var020:
                        s21 = str_store_string(gstr.s21_the_s5_has_had_the_upper_hand_in_the_fighting)
                    elif faction_slot_019 > var017:
                        s21 = str_store_string(gstr.s21_the_s5_has_gotten_the_worst_of_the_fighting)
                    elif faction_slot_016 > 100 and faction_slot_016 > 100:
                        s21 = str_store_string(gstr.s21_the_fighting_has_gone_on_for_some_time_and_the_war_may_end_soon_with_a_truce)
                    else:
                        s21 = str_store_string(gstr.s21_the_fighting_has_begun_relatively_recently_and_the_war_may_continue_for_some_time)
                    #end
                    if _cheat_mode == 1:
                        reg4 = faction_slot_016
                        reg5 = faction_slot_019
                        s21 = str_store_string(gstr.s21_reg4reg5)
                    #end
                elif var012 == 1:
                    str_clear(18)
                    if var014 != 1:
                        s18 = str_store_string(gstr._however_the_truce_is_no_longer_binding_on_the_s14)
                    #end
                    reg1 = var013
                    s21 = str_store_string(gstr.s21__the_s5_is_bound_by_truce_not_to_attack_the_s14s18_the_truce_will_expire_in_reg1_days)
                elif var012 == -1:
                    s21 = str_store_string(gstr.s21__the_s5_has_recently_suffered_provocation_by_subjects_of_the_s14_and_there_is_a_risk_of_war)
                elif var012 == 0:
                    s21 = str_store_string(gstr.s21__the_s5_has_no_outstanding_issues_with_the_s14)
                #end
                if var014 == -1:
                    s21 = str_store_string(gstr.s21_the_s14_was_recently_provoked_by_subjects_of_the_s5_and_there_is_a_risk_of_war_)
                #end
                if _cheat_mode == 1:
                    npc_decision_checklist_peace_or_war(faction_id_001,fac_011,-1)
                    s21 = str_store_string("@{!}DEBUG : {s21}.^CHEAT MODE ASSESSMENT: {s14}^")
                #end
            #end
            s0 = str_store_string(gstr.the_s5_is_ruled_by_s6_it_occupies_s8_its_vassals_are_s10__s21)
            set_trigger_result(1)
        #end
    elif is_between(faction_id_001,fac.player_supporters_faction,fac.kingdoms_end) and faction_slot_eq(faction_id_001,21,1):
        if var002 == 0:
            s5 = str_store_faction_name(faction_id_001)
            s0 = str_store_string("@{s5} has been defeated!")
            set_trigger_result(1)
        elif var002 == 1:
            str_clear(0)
            set_trigger_result(1)
        #end
    else:
        if var002 in var002_list1:
            str_clear(0)
            set_trigger_result(1)
        #end
    #end


def game_get_quest_note():
    set_trigger_result(0)


def game_get_info_page_note():
    set_trigger_result(0)


def game_get_scene_name(var001):
    if is_between(var001,scn.multi_scene_1,scn.multiplayer_maps_end):
        var002 = var001 - scn.multi_scene_1
        var002 += gstr.multi_scene_1
        s0 = str_store_string(var002)
    #end


def game_get_mission_template_name(var001):
    multiplayer_get_mission_template_game_type(var001)
    var002 = reg0
    if is_between(var002,0,9):
        var003 = var002 + gstr.multi_game_type_1
        s0 = str_store_string(var003)
    #end


def add_kill_death_counts(agent_id_001, agent_id_002):
    if _g_multiplayer_is_game_type_captain == 1:
        if agent_id_001 >= 0 and agent_is_human(agent_id_001):
            agent_group_003 = agent_get_group(agent_id_001)
            if player_is_active(agent_group_003):
                agent_id_001 = player_get_agent_id(agent_group_003)
            #end
        #end
        if agent_id_002 >= 0 and agent_is_human(agent_id_002):
            agent_group_003 = agent_get_group(agent_id_002)
            if player_is_active(agent_group_003):
                agent_id_002 = player_get_agent_id(agent_group_003)
            #end
        #end
    #end
    if agent_id_001 >= 0:
        agent_team_no_004 = agent_get_team(agent_id_001)
    else:
        agent_team_no_004 = -1
    #end
    if agent_id_002 >= 0:
        agent_team_no_005 = agent_get_team(agent_id_002)
    else:
        agent_team_no_005 = -1
    #end
    if True:
        if agent_id_001 >= 0 and agent_id_002 >= 0 and agent_is_human(agent_id_001) and agent_is_human(agent_id_002) and agent_id_001 != agent_id_002 and agent_team_no_004 == agent_team_no_005 or _g_multiplayer_game_type == 0 or _g_multiplayer_game_type == 7:
            agent_player_id_006 = agent_get_player_id(agent_id_001)
            if agent_is_non_player(agent_id_001):
                agent_team_no_004 = agent_get_team(agent_id_001)
                team_bot_kill_count_007 = team_get_bot_kill_count(agent_team_no_004)
                team_bot_kill_count_007 += 1
                team_set_bot_kill_count(agent_team_no_004,team_bot_kill_count_007)
            elif player_is_active(agent_player_id_006):
                kill_count_008 = player_get_kill_count(agent_player_id_006)
                kill_count_008 += 1
                player_set_kill_count(agent_player_id_006,kill_count_008)
            #end
        #end
        if agent_id_002 >= 0 and agent_is_human(agent_id_002):
            if agent_is_non_player(agent_id_002):
                agent_team_no_005 = agent_get_team(agent_id_002)
                team_bot_death_count_009 = team_get_bot_death_count(agent_team_no_005)
                team_bot_death_count_009 += 1
                team_set_bot_death_count(agent_team_no_005,team_bot_death_count_009)
            else:
                agent_player_id_010 = agent_get_player_id(agent_id_002)
                if player_is_active(agent_player_id_010):
                    death_count_011 = player_get_death_count(agent_player_id_010)
                    death_count_011 += 1
                    player_set_death_count(agent_player_id_010,death_count_011)
                #end
            #end
            if True:
                var012 = 0
                if agent_id_001 >= 0 or agent_id_001 == agent_id_002:
                    var012 = 1
                #end
                if agent_team_no_004 == agent_team_no_005 and _g_multiplayer_game_type != 0 and _g_multiplayer_game_type != 7:
                    var012 = 1
                #end
                if var012 == 1:
                    if agent_id_001 >= 0:
                        var013 = agent_id_001
                    else:
                        var013 = agent_id_002
                    #end
                #end
                if var013 >= 0 and not agent_is_non_player(var013):
                    agent_player_id_014 = agent_get_player_id(var013)
                    if agent_player_id_014 >= 0:
                        kill_count_015 = player_get_kill_count(agent_player_id_014)
                        kill_count_015 += -1
                        player_set_kill_count(agent_player_id_014,kill_count_015)
                    #end
                #end
            #end
        #end
    #end


def warn_player_about_auto_team_balance():
    _g_multiplayer_message_type = 3
    start_presentation(prsnt.multiplayer_message_2)


def check_team_balance():
    if multiplayer_is_server():
        var001 = 0
        var002 = 0
        max_players = get_max_players()
        for player_id_004 in range(0, max_players):
            if player_is_active(player_id_004):
                team_no_005 = player_get_team_no(player_id_004)
                if team_no_005 == 0:
                    var001 += 1
                elif team_no_005 == 1:
                    var002 += 1
                #end
            #end
        #end
        var006 = var001 - var002
        var007 = 0
        if True:
            if True:
                var008 = _g_multiplayer_auto_team_balance_limit * -1
                if var006 <= var008:
                    var007 = var006 / -2
                    var009 = 1
                    team_no_010 = 0
                elif var006 >= _g_multiplayer_auto_team_balance_limit:
                    var007 = var006 / 2
                    var009 = 0
                    team_no_010 = 1
                #end
            #end
        #end
        if var007 > 0:
            if _g_team_balance_next_round == 1:
                for var011 in range(0, var007):
                    var012 = 0
                    player_id_013 = -1
                    max_players = get_max_players()
                    for player_id_014 in range(0, max_players):
                        if player_is_active(player_id_014):
                            team_no_005 = player_get_team_no(player_id_014)
                            if team_no_005 == var009:
                                player_slot_015 = player_get_slot(player_id_014,21)
                                if player_slot_015 > var012:
                                    var012 = player_slot_015
                                    player_id_013 = player_id_014
                                #end
                            #end
                        #end
                    #end
                    if player_id_013 >= 0:
                        if True:
                            agent_id_016 = player_get_agent_id(player_id_013)
                            if agent_id_016 >= 0 and agent_is_alive(agent_id_016):
                                kill_count_017 = player_get_kill_count(player_id_013)
                                kill_count_017 += 1
                                player_set_kill_count(player_id_013,kill_count_017)
                                death_count_018 = player_get_death_count(player_id_013)
                                death_count_018 -= 1
                                player_set_death_count(player_id_013,death_count_018)
                                score_019 = player_get_score(player_id_013)
                                score_019 += 1
                                player_set_score(player_id_013,score_019)
                                for player_id_014 in range(1, max_players):
                                    if player_is_active(player_id_014):
                                        multiplayer_send_4_int_to_player(player_id_014,86,player_id_013,score_019,kill_count_017,death_count_018)
                                    #end
                                #end
                            #end
                            var020 = player_get_value_of_original_items(player_id_013)
                            gold_021 = player_get_gold(player_id_013)
                            gold_021 += var020
                            player_set_gold(player_id_013,gold_021,15000)
                        #end
                        player_set_troop_id(player_id_013,-1)
                        player_set_team_no(player_id_013,team_no_010)
                        multiplayer_send_message_to_player(player_id_013,79)
                    #end
                #end
                show_multiplayer_message(2,0)
                max_players = get_max_players()
                for player_id_014 in range(1, max_players):
                    if player_is_active(player_id_014):
                        multiplayer_send_int_to_player(player_id_014,68,2)
                    #end
                #end
                _g_team_balance_next_round = 0
            else:
                _g_team_balance_next_round = 1
                show_multiplayer_message(3,0)
                max_players = get_max_players()
                for player_id_014 in range(1, max_players):
                    if player_is_active(player_id_014):
                        multiplayer_send_int_to_player(player_id_014,68,3)
                    #end
                #end
            #end
        else:
            _g_team_balance_next_round = 0
        #end
    #end


def check_creating_ladder_dust_effect(scene_prop_instance_id_001, var002):
    if var002 < 15 and var002 > 3:
        scene_prop_slot_003 = scene_prop_get_slot(scene_prop_instance_id_001,2)
        scene_prop_slot_004 = scene_prop_get_slot(scene_prop_instance_id_001,1)
        if scene_prop_slot_003 == 0 and scene_prop_slot_004 == 0:
            pos0 = prop_instance_get_position(scene_prop_instance_id_001)
            var005 = -1
            for var006 in range(100, 110):
                pos1 = entry_point_get_position(var006)
                sq_distance_007 = get_sq_distance_between_positions(0,1)
                if var005 == -1 or sq_distance_007 < var005:
                    var005 = sq_distance_007
                    var008 = var006
                #end
            #end
            if True:
                set_fixed_point_multiplier(100)
                if var005 >= 0 and var005 < 22500:
                    pos1 = entry_point_get_position(var008)
                    position_rotate_x(1,-90)
                    scene_prop_kind_009 = prop_instance_get_scene_prop_kind(scene_prop_instance_id_001)
                    if scene_prop_kind_009 == spr.siege_ladder_move_6m:
                        init_position(2)
                        position_set_z(2,300)
                        position_transform_position_to_parent(3,1,2)
                        particle_system_burst(psys.ladder_dust_6m,3,100)
                        particle_system_burst(psys.ladder_straw_6m,3,100)
                    elif scene_prop_kind_009 == spr.siege_ladder_move_8m:
                        init_position(2)
                        position_set_z(2,400)
                        position_transform_position_to_parent(3,1,2)
                        particle_system_burst(psys.ladder_dust_8m,3,100)
                        particle_system_burst(psys.ladder_straw_8m,3,100)
                    elif scene_prop_kind_009 == spr.siege_ladder_move_10m:
                        init_position(2)
                        position_set_z(2,500)
                        position_transform_position_to_parent(3,1,2)
                        particle_system_burst(psys.ladder_dust_10m,3,100)
                        particle_system_burst(psys.ladder_straw_10m,3,100)
                    elif scene_prop_kind_009 == spr.siege_ladder_move_12m:
                        init_position(2)
                        position_set_z(2,600)
                        position_transform_position_to_parent(3,1,2)
                        particle_system_burst(psys.ladder_dust_12m,3,100)
                        particle_system_burst(psys.ladder_straw_12m,3,100)
                    elif scene_prop_kind_009 == spr.siege_ladder_move_14m:
                        init_position(2)
                        position_set_z(2,700)
                        position_transform_position_to_parent(3,1,2)
                        particle_system_burst(psys.ladder_dust_14m,3,100)
                        particle_system_burst(psys.ladder_straw_14m,3,100)
                    #end
                #end
                scene_prop_set_slot(scene_prop_instance_id_001,2,1)
            #end
        #end
    #end


def money_management_after_agent_death(var001, var002):
    _g_multiplayer_game_type_list2 = [
    3,
    2,
    ]
    _g_multiplayer_game_type_list1 = [
    5,
    8,
    4,
    1,
    7,
    0,
    ]
    _g_multiplayer_game_type_list2 = [
    3,
    2,
    ]
    _g_multiplayer_game_type_list1 = [
    5,
    8,
    4,
    1,
    7,
    0,
    ]
    _g_multiplayer_game_type_list2 = [
    3,
    2,
    ]
    _g_multiplayer_game_type_list1 = [
    5,
    8,
    4,
    1,
    7,
    0,
    ]
    _g_multiplayer_game_type_list1 = [
    3,
    2,
    ]
    agent_player_id_003 = -1
    if multiplayer_is_server() and var001 >= 0 and var002 >= 0 and agent_is_human(var002) and agent_is_human(var001):
        agent_team_no_004 = agent_get_team(var001)
        agent_team_no_005 = agent_get_team(var002)
        if _g_multiplayer_game_type == 0 or _g_multiplayer_game_type == 7 or agent_team_no_004 != agent_team_no_005 and var002 != var001:
            if not agent_is_non_player(var002):
                agent_player_id_006 = agent_get_player_id(var002)
                player_slot_007 = player_get_slot(agent_player_id_006,27)
            else:
                player_slot_007 = 0
            #end
        #end
        var008 = 0
        max_players = get_max_players()
        for player_id_010 in range(0, max_players):
            if player_is_active(player_id_010):
                team_no_011 = player_get_team_no(player_id_010)
                if team_no_011 == agent_team_no_005:
                    var008 += 1
                #end
            #end
        #end
        for player_id_010 in range(0, max_players):
            if player_is_active(player_id_010):
                if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                    var012 = 1
                else:
                    var012 = 0
                #end
            #end
            if var012 == 0 or player_slot_eq(player_id_010,0,0) or player_slot_eq(player_id_010,0,1):
                agent_id_013 = player_get_agent_id(player_id_010)
                if agent_id_013 == var002:
                    gold_014 = player_get_gold(player_id_010)
                    agent_player_id_003 = player_id_010
                    var015 = player_slot_007 * 48
                    var015 /= 100
                    var015 *= _g_multiplayer_battle_earnings_multiplier
                    var015 /= 100
                    if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                        var015 *= 4
                        var015 /= 3
                        gold_014 += var015
                    elif _g_multiplayer_game_type in _g_multiplayer_game_type_list2:
                        var015 *= 2
                        var015 /= 3
                        gold_014 += var015
                    else:
                        gold_014 += var015
                    #end
                #end
                player_set_gold(player_id_010,gold_014,15000)
            elif agent_id_013 == var001:
                gold_014 = player_get_gold(player_id_010)
                var016 = 150
                var016 *= _g_multiplayer_battle_earnings_multiplier
                var016 /= 100
                if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                    var016 *= 4
                    var016 /= 3
                    gold_014 += var016
                elif _g_multiplayer_game_type in _g_multiplayer_game_type_list2:
                    var016 *= 2
                    var016 /= 3
                    gold_014 += var016
                else:
                    gold_014 += var016
                #end
                var017 = player_slot_007 * 12
                var017 /= 100
                var017 *= _g_multiplayer_battle_earnings_multiplier
                var017 /= 100
                if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                    var017 *= 4
                    var017 /= 3
                    gold_014 += var017
                elif _g_multiplayer_game_type in _g_multiplayer_game_type_list2:
                    var017 *= 2
                    var017 /= 3
                    gold_014 += var017
                else:
                    gold_014 += var017
                #end
                if _g_multiplayer_game_type == 8:
                    gold_014 = player_get_gold(player_id_010)
                    var017 = _g_multiplayer_ccoop_wave_no * 20
                    var017 -= 20
                    var017 += 200
                    var017 *= _g_multiplayer_battle_earnings_multiplier
                    var017 /= 100
                    gold_014 += var017
                #end
                player_set_gold(player_id_010,gold_014,15000)
            else:
                player_id_010 = agent_get_player_id(var001)
                if player_id_010 == -1 and _g_multiplayer_is_game_type_captain == 1:
                    agent_group_018 = agent_get_group(var001)
                    if player_is_active(agent_group_018):
                        gold_014 = player_get_gold(agent_group_018)
                        if _g_multiplayer_game_type == 8:
                            var017 = _g_multiplayer_ccoop_wave_no * 20
                            var017 -= 20
                            var017 += 200
                            var017 *= _g_multiplayer_battle_earnings_multiplier
                            var017 /= 100
                            gold_014 += var017
                        else:
                            gold_014 += 60
                        #end
                    #end
                #end
                player_set_gold(agent_group_018,gold_014,15000)
            #end
        #end
    #end
    if multiplayer_is_server() and _g_multiplayer_game_type != 2 and _g_multiplayer_game_type != 3 and var002 >= 0 and agent_is_human(var002):
        agent_player_id_003 = agent_get_player_id(var002)
        if agent_player_id_003 >= 0:
            gold_014 = player_get_gold(agent_player_id_003)
            if True:
                var019 = _g_multiplayer_initial_gold_multiplier * 10
                if gold_014 < var019:
                    gold_014 = var019
                #end
            #end
        #end
        player_set_gold(agent_player_id_003,gold_014)
    #end
    if multiplayer_is_server() and _g_multiplayer_is_game_type_captain == 1 and var001 >= 0 and var002 >= 0 and agent_is_human(var001) and agent_is_non_player(var001):
        agent_group_018 = agent_get_group(var001)
        agent_team_no_020 = agent_get_team(var001)
        agent_team_no_021 = agent_get_team(var002)
        if agent_team_no_020 != agent_team_no_021 and player_is_active(agent_group_018):
            gold_014 = player_get_gold(agent_group_018)
            if _g_multiplayer_game_type != 8:
                gold_014 += 60
            #end
        #end
        player_set_gold(agent_group_018,gold_014,15000)
    #end


def initialize_aristocracy():
    var012_list1 = [
    0,
    1,
    ]
    for trp_001 in range(trp.kingdom_1_lord, trp.knight_1_1):
        troop_set_slot(trp_001,2,2)
        random_x_002 = store_random_in_range(50,60)
        troop_set_slot(trp_001,18,random_x_002)
        if trp_001 == trp.kingdom_5_lord:
            troop_set_slot(trp_001,18,47)
        #end
    #end
    for trp_001 in range(trp.knight_1_1_wife, trp.heroes_end):
        troop_set_slot(trp_001,2,6)
    #end
    troop_id_003 = trp.kingdom_1_lady_1
    for trp_001 in range(trp.knight_1_1, trp.kingdom_1_pretender):
        troop_set_slot(trp_001,2,2)
        random_x_004 = store_random_in_range(23,26)
        if is_between(trp_001,trp.knight_1_1,trp.knight_2_1):
            var005 = trp_001 - trp.knight_1_1
            var006 = 1
        elif is_between(trp_001,trp.knight_2_1,trp.knight_3_1):
            var005 = trp_001 - trp.knight_2_1
            var006 = 7
        elif is_between(trp_001,trp.knight_3_1,trp.knight_4_1):
            var005 = trp_001 - trp.knight_3_1
            var006 = 13
        elif is_between(trp_001,trp.knight_4_1,trp.knight_5_1):
            var005 = trp_001 - trp.knight_4_1
            var006 = 19
        elif is_between(trp_001,trp.knight_5_1,trp.knight_6_1):
            var005 = trp_001 - trp.knight_5_1
            var006 = 25
        elif is_between(trp_001,trp.knight_6_1,trp.kingdom_1_pretender):
            var005 = trp_001 - trp.knight_6_1
            var006 = 31
        #end
        if var005 < 8:
            random_x_007 = var005
            random_x_002 = store_random_in_range(45,64)
            random_x_008 = store_random_in_range(0,6)
            random_x_008 += var006
            troop_set_slot(trp_001,31,random_x_008)
            troop_set_slot(trp_001,30,troop_id_003)
            troop_set_slot(troop_id_003,30,trp_001)
            random_x_009 = store_random_in_range(20,26)
            if random_x_009 == 20:
                random_x_009 = 21
            #end
            troop_set_slot(troop_id_003,52,random_x_009)
            init_troop_age(troop_id_003,49)
            add_lady_items(troop_id_003)
            troop_id_003 += 1
            troop_set_slot(troop_id_003,31,trp_001)
            troop_slot_010 = troop_id_003 - 1
            init_troop_age(troop_id_003,19)
            troop_set_slot(troop_id_003,32,troop_slot_010)
            random_x_011 = store_random_in_range(21,34)
            if random_x_011 <= 25:
                troop_set_slot(troop_id_003,52,random_x_011)
            elif random_x_011 == 26:
                troop_set_slot(troop_id_003,52,21)
            elif random_x_011 == 27:
                troop_set_slot(troop_id_003,52,25)
            else:
                var012 = random_x_007
                if var012 in var012_list1:
                    troop_set_slot(troop_id_003,52,21)
                elif var012 == 2:
                    troop_set_slot(troop_id_003,52,23)
                elif var012 == 3:
                    troop_set_slot(troop_id_003,52,24)
                elif var012 == 4:
                    troop_set_slot(troop_id_003,52,22)
                elif var012 == 6:
                    troop_set_slot(troop_id_003,52,22)
                elif var012 == 5:
                    troop_set_slot(troop_id_003,52,24)
                elif var012 == 7:
                    troop_set_slot(troop_id_003,52,25)
                #end
            #end
            add_lady_items(troop_id_003)
            troop_id_003 += 1
        elif is_between(var005,8,12):
            random_x_002 = store_random_in_range(25,36)
            random_x_007 = store_random_in_range(0,8)
            random_x_013 = store_random_in_range(20,26)
            if random_x_013 == 20:
                random_x_013 = 21
            #end
            troop_set_slot(troop_id_003,52,random_x_013)
            troop_set_slot(troop_id_003,33,trp_001)
            init_troop_age(troop_id_003,21)
            add_lady_items(troop_id_003)
            troop_id_003 += 1
        else:
            random_x_008 = trp_001 - 12
            troop_set_slot(trp_001,31,random_x_008)
            troop_slot_010 = troop_get_slot(random_x_008,30)
            troop_set_slot(trp_001,32,troop_slot_010)
            troop_slot_014 = troop_get_slot(random_x_008,18)
            random_x_002 = troop_slot_014 - random_x_004
            if True:
                random_x_007 = store_random_in_range(0,16)
                if random_x_007 > 7:
                    random_x_007 = troop_get_slot(random_x_008,52)
                #end
            #end
        #end
        if random_x_007 == 0:
            random_x_007 = 1
        #end
        troop_set_slot(trp_001,52,random_x_007)
        init_troop_age(trp_001,random_x_002)
    #end
    if _cheat_mode == 1:
        reg3 = _cheat_mode
        print("@{!}DEBUG -- Assigned lord reputation and relations")
    #end
    for trp_001 in range(trp.kingdom_1_pretender, trp.knight_1_1_wife):
        troop_set_slot(trp_001,2,9)
        random_x_002 = store_random_in_range(25,30)
        troop_set_slot(trp_001,18,random_x_002)
        if trp_001 == trp.kingdom_5_pretender:
            troop_set_slot(trp_001,18,45)
        #end
    #end


def initialize_trade_routes():
    set_trade_route_between_centers(p.town_1,p.town_2)
    set_trade_route_between_centers(p.town_1,p.town_4)
    set_trade_route_between_centers(p.town_1,p.town_12)
    set_trade_route_between_centers(p.town_1,p.town_11)
    set_trade_route_between_centers(p.town_1,p.town_8)
    set_trade_route_between_centers(p.town_1,p.town_13)
    set_trade_route_between_centers(p.town_1,p.town_7)
    set_trade_route_between_centers(p.town_1,p.town_9)
    set_trade_route_between_centers(p.town_1,p.town_6)
    set_trade_route_between_centers(p.town_1,p.town_15)
    set_trade_route_between_centers(p.town_1,p.town_16)
    set_trade_route_between_centers(p.town_2,p.town_4)
    set_trade_route_between_centers(p.town_2,p.town_6)
    set_trade_route_between_centers(p.town_2,p.town_7)
    set_trade_route_between_centers(p.town_2,p.town_15)
    set_trade_route_between_centers(p.town_2,p.town_12)
    set_trade_route_between_centers(p.town_2,p.town_8)
    set_trade_route_between_centers(p.town_2,p.town_11)
    set_trade_route_between_centers(p.town_2,p.town_16)
    set_trade_route_between_centers(p.town_3,p.town_7)
    set_trade_route_between_centers(p.town_3,p.town_5)
    set_trade_route_between_centers(p.town_3,p.town_15)
    set_trade_route_between_centers(p.town_3,p.town_16)
    set_trade_route_between_centers(p.town_3,p.town_14)
    set_trade_route_between_centers(p.town_3,p.town_4)
    set_trade_route_between_centers(p.town_3,p.town_19)
    set_trade_route_between_centers(p.town_3,p.town_6)
    set_trade_route_between_centers(p.town_4,p.town_12)
    set_trade_route_between_centers(p.town_4,p.town_8)
    set_trade_route_between_centers(p.town_4,p.town_11)
    set_trade_route_between_centers(p.town_4,p.town_6)
    set_trade_route_between_centers(p.town_4,p.town_7)
    set_trade_route_between_centers(p.town_4,p.town_16)
    set_trade_route_between_centers(p.town_4,p.town_5)
    set_trade_route_between_centers(p.town_4,p.town_15)
    set_trade_route_between_centers(p.town_5,p.town_15)
    set_trade_route_between_centers(p.town_5,p.town_6)
    set_trade_route_between_centers(p.town_5,p.town_7)
    set_trade_route_between_centers(p.town_5,p.town_19)
    set_trade_route_between_centers(p.town_6,p.town_7)
    set_trade_route_between_centers(p.town_6,p.town_15)
    set_trade_route_between_centers(p.town_6,p.town_16)
    set_trade_route_between_centers(p.town_7,p.town_15)
    set_trade_route_between_centers(p.town_7,p.town_16)
    set_trade_route_between_centers(p.town_7,p.town_19)
    set_trade_route_between_centers(p.town_7,p.town_14)
    set_trade_route_between_centers(p.town_8,p.town_9)
    set_trade_route_between_centers(p.town_8,p.town_11)
    set_trade_route_between_centers(p.town_8,p.town_12)
    set_trade_route_between_centers(p.town_8,p.town_13)
    set_trade_route_between_centers(p.town_8,p.town_16)
    set_trade_route_between_centers(p.town_8,p.town_18)
    set_trade_route_between_centers(p.town_8,p.town_17)
    set_trade_route_between_centers(p.town_9,p.town_11)
    set_trade_route_between_centers(p.town_9,p.town_13)
    set_trade_route_between_centers(p.town_9,p.town_12)
    set_trade_route_between_centers(p.town_9,p.town_17)
    set_trade_route_between_centers(p.town_9,p.town_10)
    set_trade_route_between_centers(p.town_9,p.town_16)
    set_trade_route_between_centers(p.town_9,p.town_18)
    set_trade_route_between_centers(p.town_10,p.town_17)
    set_trade_route_between_centers(p.town_10,p.town_18)
    set_trade_route_between_centers(p.town_10,p.town_22)
    set_trade_route_between_centers(p.town_10,p.town_21)
    set_trade_route_between_centers(p.town_10,p.town_14)
    set_trade_route_between_centers(p.town_10,p.town_20)
    set_trade_route_between_centers(p.town_11,p.town_12)
    set_trade_route_between_centers(p.town_11,p.town_13)
    set_trade_route_between_centers(p.town_11,p.town_14)
    set_trade_route_between_centers(p.town_11,p.town_16)
    set_trade_route_between_centers(p.town_11,p.town_17)
    set_trade_route_between_centers(p.town_12,p.town_13)
    set_trade_route_between_centers(p.town_13,p.town_17)
    set_trade_route_between_centers(p.town_14,p.town_17)
    set_trade_route_between_centers(p.town_14,p.town_18)
    set_trade_route_between_centers(p.town_14,p.town_21)
    set_trade_route_between_centers(p.town_14,p.town_22)
    set_trade_route_between_centers(p.town_14,p.town_20)
    set_trade_route_between_centers(p.town_14,p.town_19)
    set_trade_route_between_centers(p.town_14,p.town_16)
    set_trade_route_between_centers(p.town_16,p.town_18)
    set_trade_route_between_centers(p.town_16,p.town_20)
    set_trade_route_between_centers(p.town_16,p.town_19)
    set_trade_route_between_centers(p.town_17,p.town_18)
    set_trade_route_between_centers(p.town_18,p.town_20)
    set_trade_route_between_centers(p.town_18,p.town_21)
    set_trade_route_between_centers(p.town_18,p.town_22)
    set_trade_route_between_centers(p.town_19,p.town_20)
    set_trade_route_between_centers(p.town_19,p.town_21)
    set_trade_route_between_centers(p.town_19,p.town_22)
    set_trade_route_between_centers(p.town_20,p.town_21)
    set_trade_route_between_centers(p.town_20,p.town_22)
    set_trade_route_between_centers(p.town_21,p.town_22)


def initialize_faction_troop_types():
    for fac_001 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_slot_002 = faction_get_slot(fac_001,10)
        faction_slot_003 = faction_get_slot(faction_slot_002,41)
        faction_set_slot(fac_001,41,faction_slot_003)
        faction_slot_003 = faction_get_slot(faction_slot_002,42)
        faction_set_slot(fac_001,42,faction_slot_003)
        faction_slot_003 = faction_get_slot(faction_slot_002,43)
        faction_set_slot(fac_001,43,faction_slot_003)
        faction_slot_003 = faction_get_slot(faction_slot_002,44)
        faction_set_slot(fac_001,44,faction_slot_003)
        faction_slot_003 = faction_get_slot(faction_slot_002,45)
        faction_set_slot(fac_001,45,faction_slot_003)
        if faction_slot_eq(fac_001,10,fac.culture_1):
            faction_set_slot(fac_001,48,trp.swadian_deserter)
            faction_set_slot(fac_001,49,trp.swadian_sergeant)
            faction_set_slot(fac_001,50,trp.swadian_messenger)
            faction_set_slot(fac_001,51,trp.swadian_prison_guard)
            faction_set_slot(fac_001,52,trp.swadian_castle_guard)
            faction_set_slot(fac_001,77,pt.kingdom_1_reinforcements_a)
            faction_set_slot(fac_001,78,pt.kingdom_1_reinforcements_b)
            faction_set_slot(fac_001,79,pt.kingdom_1_reinforcements_c)
        elif faction_slot_eq(fac_001,10,fac.culture_2):
            faction_set_slot(fac_001,48,trp.vaegir_deserter)
            faction_set_slot(fac_001,49,trp.vaegir_guard)
            faction_set_slot(fac_001,50,trp.vaegir_messenger)
            faction_set_slot(fac_001,51,trp.vaegir_prison_guard)
            faction_set_slot(fac_001,52,trp.vaegir_castle_guard)
            faction_set_slot(fac_001,77,pt.kingdom_2_reinforcements_a)
            faction_set_slot(fac_001,78,pt.kingdom_2_reinforcements_b)
            faction_set_slot(fac_001,79,pt.kingdom_2_reinforcements_c)
        elif faction_slot_eq(fac_001,10,fac.culture_3):
            faction_set_slot(fac_001,48,trp.khergit_deserter)
            faction_set_slot(fac_001,49,trp.khergit_horseman)
            faction_set_slot(fac_001,50,trp.khergit_messenger)
            faction_set_slot(fac_001,51,trp.khergit_prison_guard)
            faction_set_slot(fac_001,52,trp.khergit_castle_guard)
            faction_set_slot(fac_001,77,pt.kingdom_3_reinforcements_a)
            faction_set_slot(fac_001,78,pt.kingdom_3_reinforcements_b)
            faction_set_slot(fac_001,79,pt.kingdom_3_reinforcements_c)
        elif faction_slot_eq(fac_001,10,fac.culture_4):
            faction_set_slot(fac_001,48,trp.nord_deserter)
            faction_set_slot(fac_001,49,trp.nord_warrior)
            faction_set_slot(fac_001,50,trp.nord_messenger)
            faction_set_slot(fac_001,51,trp.nord_prison_guard)
            faction_set_slot(fac_001,52,trp.nord_castle_guard)
            faction_set_slot(fac_001,77,pt.kingdom_4_reinforcements_a)
            faction_set_slot(fac_001,78,pt.kingdom_4_reinforcements_b)
            faction_set_slot(fac_001,79,pt.kingdom_4_reinforcements_c)
        elif faction_slot_eq(fac_001,10,fac.culture_5):
            faction_set_slot(fac_001,48,trp.rhodok_deserter)
            faction_set_slot(fac_001,49,trp.rhodok_veteran_spearman)
            faction_set_slot(fac_001,50,trp.rhodok_messenger)
            faction_set_slot(fac_001,51,trp.rhodok_prison_guard)
            faction_set_slot(fac_001,52,trp.rhodok_castle_guard)
            faction_set_slot(fac_001,77,pt.kingdom_5_reinforcements_a)
            faction_set_slot(fac_001,78,pt.kingdom_5_reinforcements_b)
            faction_set_slot(fac_001,79,pt.kingdom_5_reinforcements_c)
        elif faction_slot_eq(fac_001,10,fac.culture_6):
            faction_set_slot(fac_001,48,trp.sarranid_deserter)
            faction_set_slot(fac_001,49,trp.sarranid_castle_guard)
            faction_set_slot(fac_001,50,trp.sarranid_messenger)
            faction_set_slot(fac_001,51,trp.sarranid_prison_guard)
            faction_set_slot(fac_001,52,trp.sarranid_castle_guard)
            faction_set_slot(fac_001,77,pt.kingdom_6_reinforcements_a)
            faction_set_slot(fac_001,78,pt.kingdom_6_reinforcements_b)
            faction_set_slot(fac_001,79,pt.kingdom_6_reinforcements_c)
        #end
    #end


def initialize_item_info():
    item_set_slot(itm.bread,1,8)
    item_set_slot(itm.grain,1,2)
    item_set_slot(itm.smoked_fish,1,4)
    item_set_slot(itm.dried_meat,1,5)
    item_set_slot(itm.cheese,1,5)
    item_set_slot(itm.sausages,1,5)
    item_set_slot(itm.butter,1,4)
    item_set_slot(itm.chicken,1,8)
    item_set_slot(itm.cattle_meat,1,7)
    item_set_slot(itm.pork,1,6)
    item_set_slot(itm.raw_olives,1,1)
    item_set_slot(itm.cabbages,1,2)
    item_set_slot(itm.raw_grapes,1,3)
    item_set_slot(itm.apples,1,4)
    item_set_slot(itm.raw_date_fruit,1,4)
    item_set_slot(itm.honey,1,6)
    item_set_slot(itm.wine,1,5)
    item_set_slot(itm.ale,1,4)
    item_set_slot(itm.grain,11,20)
    item_set_slot(itm.grain,12,20)
    item_set_slot(itm.grain,13,20)
    item_set_slot(itm.grain,14,209)
    item_set_slot(itm.grain,15,gstr.acres_grain)
    item_set_slot(itm.grain,53,30)
    item_set_slot(itm.bread,11,30)
    item_set_slot(itm.bread,12,30)
    item_set_slot(itm.bread,13,30)
    item_set_slot(itm.bread,14,221)
    item_set_slot(itm.bread,15,gstr.mills)
    item_set_slot(itm.bread,50,itm.grain)
    item_set_slot(itm.bread,52,6)
    item_set_slot(itm.bread,55,6)
    item_set_slot(itm.bread,56,30)
    item_set_slot(itm.bread,53,50)
    item_set_slot(itm.bread,58,1500)
    item_set_slot(itm.ale,11,10)
    item_set_slot(itm.ale,12,15)
    item_set_slot(itm.ale,13,0)
    item_set_slot(itm.ale,14,222)
    item_set_slot(itm.ale,15,gstr.breweries)
    item_set_slot(itm.ale,53,120)
    item_set_slot(itm.ale,50,itm.grain)
    item_set_slot(itm.ale,52,1)
    item_set_slot(itm.ale,55,2)
    item_set_slot(itm.ale,56,50)
    item_set_slot(itm.ale,53,120)
    item_set_slot(itm.ale,58,2500)
    item_set_slot(itm.wine,11,15)
    item_set_slot(itm.wine,12,10)
    item_set_slot(itm.wine,13,25)
    item_set_slot(itm.wine,14,223)
    item_set_slot(itm.wine,15,gstr.presses)
    item_set_slot(itm.wine,50,itm.raw_grapes)
    item_set_slot(itm.wine,52,4)
    item_set_slot(itm.wine,55,2)
    item_set_slot(itm.wine,56,60)
    item_set_slot(itm.wine,53,220)
    item_set_slot(itm.wine,58,5000)
    item_set_slot(itm.raw_grapes,11,0)
    item_set_slot(itm.raw_grapes,12,0)
    item_set_slot(itm.raw_grapes,13,0)
    item_set_slot(itm.raw_grapes,14,211)
    item_set_slot(itm.raw_grapes,15,gstr.acres_orchard)
    item_set_slot(itm.raw_grapes,51,itm.wine)
    item_set_slot(itm.raw_grapes,53,75)
    item_set_slot(itm.apples,11,4)
    item_set_slot(itm.apples,12,4)
    item_set_slot(itm.apples,13,0)
    item_set_slot(itm.apples,14,211)
    item_set_slot(itm.apples,15,gstr.acres_orchard)
    item_set_slot(itm.apples,53,44)
    item_set_slot(itm.smoked_fish,11,16)
    item_set_slot(itm.smoked_fish,12,16)
    item_set_slot(itm.smoked_fish,13,16)
    item_set_slot(itm.smoked_fish,14,214)
    item_set_slot(itm.smoked_fish,15,gstr.boats)
    item_set_slot(itm.salt,11,5)
    item_set_slot(itm.salt,12,3)
    item_set_slot(itm.salt,13,-1)
    item_set_slot(itm.salt,14,215)
    item_set_slot(itm.salt,15,gstr.pans)
    item_set_slot(itm.dried_meat,11,20)
    item_set_slot(itm.dried_meat,12,5)
    item_set_slot(itm.dried_meat,13,-1)
    item_set_slot(itm.dried_meat,14,205)
    item_set_slot(itm.dried_meat,15,gstr.head_cattle)
    item_set_slot(itm.cattle_meat,11,12)
    item_set_slot(itm.cattle_meat,12,3)
    item_set_slot(itm.cattle_meat,13,-1)
    item_set_slot(itm.cattle_meat,14,205)
    item_set_slot(itm.cattle_meat,15,gstr.head_cattle)
    item_set_slot(itm.cheese,11,10)
    item_set_slot(itm.cheese,12,10)
    item_set_slot(itm.cheese,13,10)
    item_set_slot(itm.cheese,14,205)
    item_set_slot(itm.cheese,15,gstr.head_cattle)
    item_set_slot(itm.butter,11,2)
    item_set_slot(itm.butter,12,2)
    item_set_slot(itm.butter,13,2)
    item_set_slot(itm.butter,14,205)
    item_set_slot(itm.butter,15,gstr.head_cattle)
    item_set_slot(itm.leatherwork,11,10)
    item_set_slot(itm.leatherwork,12,10)
    item_set_slot(itm.leatherwork,13,10)
    item_set_slot(itm.leatherwork,14,230)
    item_set_slot(itm.leatherwork,15,gstr.tanneries)
    item_set_slot(itm.leatherwork,50,itm.raw_leather)
    item_set_slot(itm.leatherwork,52,3)
    item_set_slot(itm.leatherwork,55,3)
    item_set_slot(itm.leatherwork,56,50)
    item_set_slot(itm.leatherwork,53,220)
    item_set_slot(itm.leatherwork,58,8000)
    item_set_slot(itm.raw_leather,11,0)
    item_set_slot(itm.raw_leather,12,0)
    item_set_slot(itm.raw_leather,13,0)
    item_set_slot(itm.raw_leather,14,205)
    item_set_slot(itm.raw_leather,15,gstr.head_cattle)
    item_set_slot(itm.raw_leather,51,itm.leatherwork)
    item_set_slot(itm.raw_leather,53,120)
    item_set_slot(itm.sausages,11,12)
    item_set_slot(itm.sausages,12,3)
    item_set_slot(itm.sausages,13,-1)
    item_set_slot(itm.sausages,14,206)
    item_set_slot(itm.sausages,15,gstr.head_sheep)
    item_set_slot(itm.wool,11,0)
    item_set_slot(itm.wool,12,0)
    item_set_slot(itm.wool,13,0)
    item_set_slot(itm.wool,14,206)
    item_set_slot(itm.wool,15,gstr.head_sheep)
    item_set_slot(itm.wool,51,itm.wool_cloth)
    item_set_slot(itm.wool,53,130)
    item_set_slot(itm.wool_cloth,11,15)
    item_set_slot(itm.wool_cloth,12,20)
    item_set_slot(itm.wool_cloth,13,5)
    item_set_slot(itm.wool_cloth,14,227)
    item_set_slot(itm.wool_cloth,15,gstr.looms)
    item_set_slot(itm.wool_cloth,50,itm.wool)
    item_set_slot(itm.wool_cloth,52,2)
    item_set_slot(itm.wool_cloth,55,2)
    item_set_slot(itm.wool_cloth,56,120)
    item_set_slot(itm.wool_cloth,53,250)
    item_set_slot(itm.wool_cloth,58,6000)
    item_set_slot(itm.raw_flax,11,0)
    item_set_slot(itm.raw_flax,12,0)
    item_set_slot(itm.raw_flax,13,0)
    item_set_slot(itm.raw_flax,14,212)
    item_set_slot(itm.raw_flax,15,gstr.acres_flax)
    item_set_slot(itm.raw_flax,51,itm.linen)
    item_set_slot(itm.raw_flax,53,150)
    item_set_slot(itm.linen,11,7)
    item_set_slot(itm.linen,12,3)
    item_set_slot(itm.linen,13,15)
    item_set_slot(itm.linen,14,225)
    item_set_slot(itm.linen,15,gstr.looms)
    item_set_slot(itm.linen,50,itm.raw_flax)
    item_set_slot(itm.linen,52,2)
    item_set_slot(itm.linen,55,2)
    item_set_slot(itm.linen,56,120)
    item_set_slot(itm.linen,53,250)
    item_set_slot(itm.linen,58,6000)
    item_set_slot(itm.iron,11,0)
    item_set_slot(itm.iron,12,0)
    item_set_slot(itm.iron,13,0)
    item_set_slot(itm.iron,14,219)
    item_set_slot(itm.iron,15,gstr.deposits)
    item_set_slot(itm.iron,51,itm.tools)
    item_set_slot(itm.iron,53,264)
    item_set_slot(itm.tools,11,7)
    item_set_slot(itm.tools,12,7)
    item_set_slot(itm.tools,13,7)
    item_set_slot(itm.tools,14,229)
    item_set_slot(itm.tools,15,gstr.smithies)
    item_set_slot(itm.tools,50,itm.iron)
    item_set_slot(itm.tools,52,2)
    item_set_slot(itm.tools,55,2)
    item_set_slot(itm.tools,56,60)
    item_set_slot(itm.tools,53,410)
    item_set_slot(itm.tools,58,3500)
    item_set_slot(itm.pottery,11,15)
    item_set_slot(itm.pottery,12,5)
    item_set_slot(itm.pottery,13,-1)
    item_set_slot(itm.pottery,14,228)
    item_set_slot(itm.pottery,15,gstr.kilns)
    item_set_slot(itm.oil,11,10)
    item_set_slot(itm.oil,12,5)
    item_set_slot(itm.oil,13,-1)
    item_set_slot(itm.oil,14,224)
    item_set_slot(itm.oil,15,gstr.presses)
    item_set_slot(itm.oil,50,itm.raw_olives)
    item_set_slot(itm.oil,52,6)
    item_set_slot(itm.oil,55,2)
    item_set_slot(itm.oil,56,80)
    item_set_slot(itm.oil,53,450)
    item_set_slot(itm.oil,58,4500)
    item_set_slot(itm.raw_olives,11,0)
    item_set_slot(itm.raw_olives,12,0)
    item_set_slot(itm.raw_olives,13,0)
    item_set_slot(itm.raw_olives,14,210)
    item_set_slot(itm.raw_olives,15,gstr.olive_groves)
    item_set_slot(itm.raw_olives,51,itm.oil)
    item_set_slot(itm.raw_olives,53,100)
    item_set_slot(itm.velvet,11,5)
    item_set_slot(itm.velvet,12,0)
    item_set_slot(itm.velvet,13,-1)
    item_set_slot(itm.velvet,14,226)
    item_set_slot(itm.velvet,15,gstr.looms)
    item_set_slot(itm.velvet,50,itm.raw_silk)
    item_set_slot(itm.velvet,52,2)
    item_set_slot(itm.velvet,55,2)
    item_set_slot(itm.velvet,56,160)
    item_set_slot(itm.velvet,53,1025)
    item_set_slot(itm.velvet,57,itm.raw_dyes)
    item_set_slot(itm.velvet,58,10000)
    item_set_slot(itm.raw_silk,11,0)
    item_set_slot(itm.raw_silk,12,0)
    item_set_slot(itm.raw_silk,14,217)
    item_set_slot(itm.raw_silk,15,gstr.mulberry_groves)
    item_set_slot(itm.raw_silk,51,itm.velvet)
    item_set_slot(itm.raw_silk,53,600)
    item_set_slot(itm.raw_dyes,11,3)
    item_set_slot(itm.raw_dyes,12,0)
    item_set_slot(itm.raw_dyes,13,-1)
    item_set_slot(itm.raw_dyes,15,gstr.caravans)
    item_set_slot(itm.raw_dyes,53,200)
    item_set_slot(itm.spice,11,5)
    item_set_slot(itm.spice,12,0)
    item_set_slot(itm.spice,13,5)
    item_set_slot(itm.spice,15,gstr.caravans)
    item_set_slot(itm.furs,11,5)
    item_set_slot(itm.furs,12,0)
    item_set_slot(itm.furs,13,-1)
    item_set_slot(itm.furs,14,220)
    item_set_slot(itm.furs,15,gstr.traps)
    item_set_slot(itm.honey,11,12)
    item_set_slot(itm.honey,12,3)
    item_set_slot(itm.honey,13,-1)
    item_set_slot(itm.honey,14,216)
    item_set_slot(itm.honey,15,gstr.hives)
    item_set_slot(itm.cabbages,11,7)
    item_set_slot(itm.cabbages,12,7)
    item_set_slot(itm.cabbages,13,7)
    item_set_slot(itm.cabbages,14,232)
    item_set_slot(itm.cabbages,15,gstr.gardens)
    item_set_slot(itm.raw_date_fruit,11,7)
    item_set_slot(itm.raw_date_fruit,12,7)
    item_set_slot(itm.raw_date_fruit,13,7)
    item_set_slot(itm.raw_date_fruit,14,232)
    item_set_slot(itm.raw_date_fruit,15,gstr.acres_oasis)
    item_set_slot(itm.chicken,11,40)
    item_set_slot(itm.chicken,12,10)
    item_set_slot(itm.chicken,13,-1)
    item_set_slot(itm.pork,11,40)
    item_set_slot(itm.pork,12,10)
    item_set_slot(itm.pork,13,-1)
    item_set_slot(itm.book_tactics,4,9)
    item_set_slot(itm.book_persuasion,4,8)
    item_set_slot(itm.book_leadership,4,7)
    item_set_slot(itm.book_intelligence,4,10)
    item_set_slot(itm.book_trade,4,11)
    item_set_slot(itm.book_weapon_mastery,4,9)
    item_set_slot(itm.book_engineering,4,12)
    item_set_slot(itm.book_wound_treatment_reference,4,10)
    item_set_slot(itm.book_training_reference,4,10)
    item_set_slot(itm.book_surgery_reference,4,10)


def initialize_town_arena_info():
    for p_001 in range(p.town_1, p.castle_1):
        party_set_slot(p_001,157,4)
        party_set_slot(p_001,158,8)
    #end
    party_set_slot(p.town_6,158,2)
    party_set_slot(p.town_1,80,2)
    party_set_slot(p.town_1,81,1)
    party_set_slot(p.town_1,82,4)
    party_set_slot(p.town_1,83,1)
    party_set_slot(p.town_1,84,4)
    party_set_slot(p.town_1,85,1)
    party_set_slot(p.town_2,80,4)
    party_set_slot(p.town_2,81,4)
    party_set_slot(p.town_2,82,4)
    party_set_slot(p.town_2,83,6)
    party_set_slot(p.town_2,84,4)
    party_set_slot(p.town_2,85,8)
    party_set_slot(p.town_3,80,2)
    party_set_slot(p.town_3,81,8)
    party_set_slot(p.town_3,82,2)
    party_set_slot(p.town_3,83,8)
    party_set_slot(p.town_3,84,2)
    party_set_slot(p.town_3,85,8)
    party_set_slot(p.town_4,80,2)
    party_set_slot(p.town_4,81,8)
    party_set_slot(p.town_4,82,3)
    party_set_slot(p.town_4,83,8)
    party_set_slot(p.town_4,84,2)
    party_set_slot(p.town_4,85,5)
    party_set_slot(p.town_5,80,2)
    party_set_slot(p.town_5,81,3)
    party_set_slot(p.town_5,82,2)
    party_set_slot(p.town_5,83,5)
    party_set_slot(p.town_5,84,2)
    party_set_slot(p.town_5,85,8)
    party_set_slot(p.town_6,80,2)
    party_set_slot(p.town_6,81,4)
    party_set_slot(p.town_6,82,3)
    party_set_slot(p.town_6,83,4)
    party_set_slot(p.town_6,84,3)
    party_set_slot(p.town_6,85,6)
    party_set_slot(p.town_7,80,4)
    party_set_slot(p.town_7,81,4)
    party_set_slot(p.town_7,82,4)
    party_set_slot(p.town_7,83,6)
    party_set_slot(p.town_7,84,4)
    party_set_slot(p.town_7,85,8)
    party_set_slot(p.town_8,80,3)
    party_set_slot(p.town_8,81,1)
    party_set_slot(p.town_8,82,3)
    party_set_slot(p.town_8,83,3)
    party_set_slot(p.town_8,84,3)
    party_set_slot(p.town_8,85,7)
    party_set_slot(p.town_9,80,2)
    party_set_slot(p.town_9,81,2)
    party_set_slot(p.town_9,82,2)
    party_set_slot(p.town_9,83,5)
    party_set_slot(p.town_9,84,2)
    party_set_slot(p.town_9,85,8)
    party_set_slot(p.town_10,80,2)
    party_set_slot(p.town_10,81,3)
    party_set_slot(p.town_10,82,2)
    party_set_slot(p.town_10,83,5)
    party_set_slot(p.town_10,84,2)
    party_set_slot(p.town_10,85,8)
    party_set_slot(p.town_11,80,2)
    party_set_slot(p.town_11,81,8)
    party_set_slot(p.town_11,82,3)
    party_set_slot(p.town_11,83,4)
    party_set_slot(p.town_11,84,3)
    party_set_slot(p.town_11,85,6)
    party_set_slot(p.town_12,80,3)
    party_set_slot(p.town_12,81,8)
    party_set_slot(p.town_12,82,4)
    party_set_slot(p.town_12,83,6)
    party_set_slot(p.town_12,84,4)
    party_set_slot(p.town_12,85,5)
    party_set_slot(p.town_13,80,2)
    party_set_slot(p.town_13,81,8)
    party_set_slot(p.town_13,82,4)
    party_set_slot(p.town_13,83,5)
    party_set_slot(p.town_13,84,4)
    party_set_slot(p.town_13,85,7)
    party_set_slot(p.town_14,80,2)
    party_set_slot(p.town_14,81,4)
    party_set_slot(p.town_14,82,2)
    party_set_slot(p.town_14,83,5)
    party_set_slot(p.town_14,84,2)
    party_set_slot(p.town_14,85,6)
    party_set_slot(p.town_15,80,2)
    party_set_slot(p.town_15,81,8)
    party_set_slot(p.town_15,82,3)
    party_set_slot(p.town_15,83,4)
    party_set_slot(p.town_15,84,3)
    party_set_slot(p.town_15,85,6)
    party_set_slot(p.town_16,80,3)
    party_set_slot(p.town_16,81,8)
    party_set_slot(p.town_16,82,4)
    party_set_slot(p.town_16,83,6)
    party_set_slot(p.town_16,84,4)
    party_set_slot(p.town_16,85,5)
    party_set_slot(p.town_17,80,2)
    party_set_slot(p.town_17,81,8)
    party_set_slot(p.town_17,82,4)
    party_set_slot(p.town_17,83,5)
    party_set_slot(p.town_17,84,4)
    party_set_slot(p.town_17,85,7)
    party_set_slot(p.town_18,80,2)
    party_set_slot(p.town_18,81,4)
    party_set_slot(p.town_18,82,2)
    party_set_slot(p.town_18,83,5)
    party_set_slot(p.town_18,84,2)
    party_set_slot(p.town_18,85,6)
    party_set_slot(p.town_19,80,2)
    party_set_slot(p.town_19,81,8)
    party_set_slot(p.town_19,82,4)
    party_set_slot(p.town_19,83,4)
    party_set_slot(p.town_19,84,4)
    party_set_slot(p.town_19,85,6)
    party_set_slot(p.town_20,80,4)
    party_set_slot(p.town_20,81,2)
    party_set_slot(p.town_20,82,4)
    party_set_slot(p.town_20,83,4)
    party_set_slot(p.town_20,84,4)
    party_set_slot(p.town_20,85,6)
    party_set_slot(p.town_21,80,3)
    party_set_slot(p.town_21,81,3)
    party_set_slot(p.town_21,82,2)
    party_set_slot(p.town_21,83,6)
    party_set_slot(p.town_21,84,2)
    party_set_slot(p.town_21,85,8)
    party_set_slot(p.town_22,80,4)
    party_set_slot(p.town_22,81,3)
    party_set_slot(p.town_22,82,3)
    party_set_slot(p.town_22,83,4)
    party_set_slot(p.town_22,84,2)
    party_set_slot(p.town_22,85,6)


def initialize_banner_info():
    for trp_001 in range(trp.npc1, trp.heroes_end):
        troop_set_slot(trp_001,96,-1)
        troop_set_slot(trp_001,99,-1)
    #end
    troop_set_slot(trp.player,96,-1)
    troop_set_slot(trp.player,99,-1)
    _g_election_date = store_random_in_range(0,45)
    troop_set_slot(trp.player,85,4294967295)
    troop_set_slot(trp.player,86,4294967295)
    troop_set_slot(trp.player,87,4294967295)
    troop_set_slot(trp.player,88,4294967295)
    troop_set_slot(trp.player,89,4294967295)
    troop_set_slot(trp.player,90,4294967295)
    troop_set_slot(trp.banner_background_color_array,0,4287579441)
    troop_set_slot(trp.banner_background_color_array,1,4292466641)
    troop_set_slot(trp.banner_background_color_array,2,4281808694)
    troop_set_slot(trp.banner_background_color_array,3,4288973608)
    troop_set_slot(trp.banner_background_color_array,4,4283004725)
    troop_set_slot(trp.banner_background_color_array,5,4286723629)
    troop_set_slot(trp.banner_background_color_array,6,4286133033)
    troop_set_slot(trp.banner_background_color_array,7,4280689953)
    troop_set_slot(trp.banner_background_color_array,8,4292467409)
    troop_set_slot(trp.banner_background_color_array,9,4283581795)
    troop_set_slot(trp.banner_background_color_array,10,4287705388)
    troop_set_slot(trp.banner_background_color_array,11,4289700401)
    troop_set_slot(trp.banner_background_color_array,12,4285558076)
    troop_set_slot(trp.banner_background_color_array,13,4292269006)
    troop_set_slot(trp.banner_background_color_array,14,4283571208)
    troop_set_slot(trp.banner_background_color_array,15,4281943428)
    troop_set_slot(trp.banner_background_color_array,16,4282541614)
    troop_set_slot(trp.banner_background_color_array,17,4292861654)
    troop_set_slot(trp.banner_background_color_array,18,4280887076)
    troop_set_slot(trp.banner_background_color_array,19,4283982107)
    troop_set_slot(trp.banner_background_color_array,20,4281416295)
    troop_set_slot(trp.banner_background_color_array,21,4288451146)
    troop_set_slot(trp.banner_background_color_array,22,4288252729)
    troop_set_slot(trp.banner_background_color_array,23,4281749864)
    troop_set_slot(trp.banner_background_color_array,24,4292269006)
    troop_set_slot(trp.banner_background_color_array,25,4287931970)
    troop_set_slot(trp.banner_background_color_array,26,4287906097)
    troop_set_slot(trp.banner_background_color_array,27,4287183668)
    troop_set_slot(trp.banner_background_color_array,28,4282537232)
    troop_set_slot(trp.banner_background_color_array,29,4287907118)
    troop_set_slot(trp.banner_background_color_array,30,4282866324)
    troop_set_slot(trp.banner_background_color_array,31,4291932721)
    troop_set_slot(trp.banner_background_color_array,32,4292993759)
    troop_set_slot(trp.banner_background_color_array,33,4288248862)
    troop_set_slot(trp.banner_background_color_array,34,4291213133)
    troop_set_slot(trp.banner_background_color_array,35,4289567256)
    troop_set_slot(trp.banner_background_color_array,36,4280362017)
    troop_set_slot(trp.banner_background_color_array,37,4287373345)
    troop_set_slot(trp.banner_background_color_array,38,4283265334)
    troop_set_slot(trp.banner_background_color_array,39,4281949572)
    troop_set_slot(trp.banner_background_color_array,40,4283594041)
    troop_set_slot(trp.banner_background_color_array,41,4288429113)
    troop_set_slot(trp.banner_background_color_array,42,4282536332)
    troop_set_slot(trp.banner_background_color_array,43,4288965164)
    troop_set_slot(trp.banner_background_color_array,44,4288631105)
    troop_set_slot(trp.banner_background_color_array,45,4281098633)
    troop_set_slot(trp.banner_background_color_array,46,4283786273)
    troop_set_slot(trp.banner_background_color_array,47,4288504350)
    troop_set_slot(trp.banner_background_color_array,48,4292796118)
    troop_set_slot(trp.banner_background_color_array,49,4285417617)
    troop_set_slot(trp.banner_background_color_array,50,4286994985)
    troop_set_slot(trp.banner_background_color_array,51,4292796377)
    troop_set_slot(trp.banner_background_color_array,52,4283581043)
    troop_set_slot(trp.banner_background_color_array,53,4287379489)
    troop_set_slot(trp.banner_background_color_array,54,4291940038)
    troop_set_slot(trp.banner_background_color_array,55,4281413681)
    troop_set_slot(trp.banner_background_color_array,56,4282868237)
    troop_set_slot(trp.banner_background_color_array,57,4285219129)
    troop_set_slot(trp.banner_background_color_array,58,4292270038)
    troop_set_slot(trp.banner_background_color_array,59,4281216812)
    troop_set_slot(trp.banner_background_color_array,60,4284498563)
    troop_set_slot(trp.banner_background_color_array,61,4281947524)
    troop_set_slot(trp.banner_background_color_array,62,4281413681)
    troop_set_slot(trp.banner_background_color_array,63,4286463790)
    troop_set_slot(trp.banner_background_color_array,64,4281611316)
    troop_set_slot(trp.banner_background_color_array,65,4282141035)
    troop_set_slot(trp.banner_background_color_array,66,4292466897)
    troop_set_slot(trp.banner_background_color_array,67,4288250428)
    troop_set_slot(trp.banner_background_color_array,68,4288643630)
    troop_set_slot(trp.banner_background_color_array,69,4281940025)
    troop_set_slot(trp.banner_background_color_array,70,4289022257)
    troop_set_slot(trp.banner_background_color_array,71,4292861142)
    troop_set_slot(trp.banner_background_color_array,72,4288629302)
    troop_set_slot(trp.banner_background_color_array,73,4287395105)
    troop_set_slot(trp.banner_background_color_array,74,4288628273)
    troop_set_slot(trp.banner_background_color_array,75,4286133028)
    troop_set_slot(trp.banner_background_color_array,76,4281946230)
    troop_set_slot(trp.banner_background_color_array,77,4281084716)
    troop_set_slot(trp.banner_background_color_array,78,4284838177)
    troop_set_slot(trp.banner_background_color_array,79,4286460193)
    troop_set_slot(trp.banner_background_color_array,80,4285944110)
    troop_set_slot(trp.banner_background_color_array,81,4293387230)
    troop_set_slot(trp.banner_background_color_array,82,4287920417)
    troop_set_slot(trp.banner_background_color_array,83,4283267964)
    troop_set_slot(trp.banner_background_color_array,84,4281611057)
    troop_set_slot(trp.banner_background_color_array,85,4289154358)
    troop_set_slot(trp.banner_background_color_array,86,4293387230)
    troop_set_slot(trp.banner_background_color_array,87,4292270286)
    troop_set_slot(trp.banner_background_color_array,88,4282273127)
    troop_set_slot(trp.banner_background_color_array,89,4288644142)
    troop_set_slot(trp.banner_background_color_array,90,4283263380)
    troop_set_slot(trp.banner_background_color_array,91,4283064600)
    troop_set_slot(trp.banner_background_color_array,92,4287904809)
    troop_set_slot(trp.banner_background_color_array,93,4281943161)
    troop_set_slot(trp.banner_background_color_array,94,4281611057)
    troop_set_slot(trp.banner_background_color_array,95,4282338653)
    troop_set_slot(trp.banner_background_color_array,96,4283065481)
    troop_set_slot(trp.banner_background_color_array,97,4281413681)
    troop_set_slot(trp.banner_background_color_array,98,4292270030)
    troop_set_slot(trp.banner_background_color_array,99,4291206656)
    troop_set_slot(trp.banner_background_color_array,100,4284714578)
    troop_set_slot(trp.banner_background_color_array,101,4292664275)
    troop_set_slot(trp.banner_background_color_array,102,4292598995)
    troop_set_slot(trp.banner_background_color_array,103,4286855217)
    troop_set_slot(trp.banner_background_color_array,104,4291743686)
    troop_set_slot(trp.banner_background_color_array,105,4291009841)
    troop_set_slot(trp.banner_background_color_array,106,4291540592)
    troop_set_slot(trp.banner_background_color_array,107,4281944600)
    troop_set_slot(trp.banner_background_color_array,108,4281804552)
    troop_set_slot(trp.banner_background_color_array,109,4288309264)
    troop_set_slot(trp.banner_background_color_array,110,4289886480)
    troop_set_slot(trp.banner_background_color_array,111,4287399457)
    troop_set_slot(trp.banner_background_color_array,112,4288109059)
    troop_set_slot(trp.banner_background_color_array,113,4281084196)
    troop_set_slot(trp.banner_background_color_array,114,4289369644)
    troop_set_slot(trp.banner_background_color_array,115,4288840238)
    troop_set_slot(trp.banner_background_color_array,116,4286286476)
    troop_set_slot(trp.banner_background_color_array,117,4282124552)
    troop_set_slot(trp.banner_background_color_array,118,4294902015)
    troop_set_slot(trp.banner_background_color_array,119,4284947988)
    troop_set_slot(trp.banner_background_color_array,120,4279251010)
    troop_set_slot(trp.banner_background_color_array,121,4283057408)
    troop_set_slot(trp.banner_background_color_array,122,4285543204)
    troop_set_slot(trp.banner_background_color_array,123,4280559932)
    troop_set_slot(trp.banner_background_color_array,124,4284311910)
    troop_set_slot(trp.banner_background_color_array,125,4290614833)
    troop_set_slot(trp.banner_background_color_array,126,4291211883)
    troop_set_slot(trp.banner_background_color_array,127,4281944344)
    troop_set_slot(trp.banner_background_color_array,128,4280361505)
    troop_set_slot(trp.banner_background_color_array,129,4280361505)
    troop_set_slot(trp.banner_background_color_array,130,4281219856)
    troop_set_slot(trp.banner_background_color_array,131,4282539387)
    troop_set_slot(trp.banner_background_color_array,132,4281943560)


def initialize_economic_information():
    p_008_list1 = [
    p.village_92,
    p.village_108,
    p.village_110,
    p.village_104,
    p.village_101,
    p.village_107,
    p.village_100,
    p.village_99,
    p.village_105,
    p.village_103,
    p.village_98,
    p.village_109,
    p.village_102,
    p.village_97,
    p.village_96,
    p.village_95,
    p.village_94,
    p.village_93,
    ]
    for p_001 in range(p.town_1, p.castle_1):
        random_x_002 = store_random_in_range(10,31)
        party_set_slot(p_001,227,random_x_002)
        random_x_003 = store_random_in_range(1,4)
        party_set_slot(p_001,222,random_x_003)
        random_x_004 = store_random_in_range(3,9)
        party_set_slot(p_001,228,random_x_004)
        random_x_005 = store_random_in_range(6,25)
        party_set_slot(p_001,229,random_x_005)
        random_x_004 = store_random_in_range(3,9)
        party_set_slot(p_001,221,random_x_004)
        random_x_003 = store_random_in_range(1,4)
        party_set_slot(p_001,230,random_x_003)
        random_x_006 = store_random_in_range(0,3)
        party_set_slot(p_001,223,random_x_006)
        random_x_003 = store_random_in_range(1,4)
        party_set_slot(p_001,224,random_x_003)
        random_x_007 = store_random_in_range(0,2001)
        party_set_slot(p_001,209,random_x_007)
        random_x_007 = store_random_in_range(0,2001)
        party_set_slot(p_001,211,random_x_007)
    #end
    party_set_slot(p.town_1,225,15)
    party_set_slot(p.town_1,223,4)
    party_set_slot(p.town_2,215,3)
    party_set_slot(p.town_2,214,25)
    party_set_slot(p.town_2,225,15)
    party_set_slot(p.town_3,223,10)
    party_set_slot(p.town_3,226,12)
    party_set_slot(p.town_4,226,12)
    party_set_slot(p.town_4,224,15)
    party_set_slot(p.town_5,226,24)
    party_set_slot(p.town_5,214,30)
    party_set_slot(p.town_6,222,10)
    party_set_slot(p.town_6,230,4)
    party_set_slot(p.town_6,214,10)
    party_set_slot(p.town_7,221,15)
    party_set_slot(p.town_7,230,4)
    party_set_slot(p.town_7,224,5)
    party_set_slot(p.town_8,229,25)
    party_set_slot(p.town_8,227,35)
    party_set_slot(p.town_8,223,4)
    party_set_slot(p.town_9,229,18)
    party_set_slot(p.town_9,230,3)
    party_set_slot(p.town_9,214,5)
    party_set_slot(p.town_10,215,2)
    party_set_slot(p.town_11,229,19)
    party_set_slot(p.town_11,219,10)
    party_set_slot(p.town_11,214,10)
    party_set_slot(p.town_12,215,3)
    party_set_slot(p.town_12,214,25)
    party_set_slot(p.town_13,227,30)
    party_set_slot(p.town_13,230,5)
    party_set_slot(p.town_13,214,20)
    party_set_slot(p.town_14,230,3)
    party_set_slot(p.town_14,228,18)
    party_set_slot(p.town_15,229,20)
    party_set_slot(p.town_15,223,6)
    party_set_slot(p.town_15,224,5)
    party_set_slot(p.town_15,214,25)
    party_set_slot(p.town_16,229,30)
    party_set_slot(p.town_16,230,4)
    party_set_slot(p.town_17,227,40)
    party_set_slot(p.town_18,227,35)
    party_set_slot(p.town_18,224,10)
    party_set_slot(p.town_19,230,5)
    party_set_slot(p.town_19,222,0)
    party_set_slot(p.town_19,223,0)
    party_set_slot(p.town_19,214,5)
    party_set_slot(p.town_19,224,5)
    party_set_slot(p.town_20,222,0)
    party_set_slot(p.town_20,223,0)
    party_set_slot(p.town_20,225,15)
    party_set_slot(p.town_20,228,12)
    party_set_slot(p.town_19,224,3)
    party_set_slot(p.town_21,222,0)
    party_set_slot(p.town_21,223,0)
    party_set_slot(p.town_21,228,24)
    party_set_slot(p.town_21,215,1)
    party_set_slot(p.town_22,222,0)
    party_set_slot(p.town_22,223,0)
    party_set_slot(p.town_22,228,12)
    party_set_slot(p.town_22,215,2)
    for p_008 in range(p.village_1, p.salt_mine):
        if p_008 in p_008_list1:
            var009 = 1
        else:
            var009 = 0
        #end
        random_x_010 = store_random_in_range(20,100)
        if var009 == 1:
            random_x_010 /= 5
        #end
        party_set_slot(p_008,205,random_x_010)
        random_x_011 = store_random_in_range(40,200)
        if var009 == 1:
            random_x_011 /= 5
        #end
        party_set_slot(p_008,206,random_x_011)
        random_x_012 = store_random_in_range(0,40000)
        random_x_013 = store_random_in_range(0,random_x_012)
        if var009 == 1:
            random_x_013 /= 5
        #end
        party_set_slot(p_008,209,random_x_013)
        random_x_014 = store_random_in_range(0,2000)
        random_x_015 = store_random_in_range(0,random_x_014)
        if var009 == 1:
            random_x_015 /= 5
        #end
        party_set_slot(p_008,211,random_x_015)
        random_x_014 = store_random_in_range(0,2000)
        random_x_015 = store_random_in_range(0,random_x_014)
        if var009 == 1:
            random_x_015 /= 5
        #end
        party_set_slot(p_008,210,random_x_015)
        random_x_016 = store_random_in_range(0,3)
        if var009 == 1:
            random_x_016 = 0
        #end
        party_set_slot(p_008,216,random_x_016)
        random_x_017 = store_random_in_range(0,5)
        if var009 == 1:
            random_x_017 = 0
        #end
        party_set_slot(p_008,232,random_x_017)
        random_x_016 = store_random_in_range(0,3)
        party_set_slot(p_008,221,random_x_016)
        random_x_017 = store_random_in_range(0,5)
        if var009 == 1:
            random_x_017 *= 5
        #end
        party_set_slot(p_008,228,random_x_017)
        if party_slot_eq(p_008,121,p.town_1):
            party_set_slot(p_008,212,4000)
            party_set_slot(p_008,211,8000)
        elif party_slot_eq(p_008,121,p.town_2):
            party_set_slot(p_008,211,8000)
            party_set_slot(p_008,232,10)
        elif party_slot_eq(p_008,121,p.town_3):
            party_set_slot(p_008,211,6000)
            party_set_slot(p_008,210,6000)
        elif party_slot_eq(p_008,121,p.town_4):
            party_set_slot(p_008,220,2)
            party_set_slot(p_008,210,8000)
        elif party_slot_eq(p_008,121,p.town_5):
            party_set_slot(p_008,217,1500)
            party_set_slot(p_008,218,1500)
        elif party_slot_eq(p_008,121,p.town_6):
            party_set_slot(p_008,212,4000)
            party_set_slot(p_008,222,4)
        elif party_slot_eq(p_008,121,p.town_7):
            party_set_slot(p_008,220,1)
            party_set_slot(p_008,210,8000)
            party_set_slot(p_008,216,8)
        elif party_slot_eq(p_008,121,p.town_8):
            party_set_slot(p_008,220,2)
            party_set_slot(p_008,205,100)
            party_set_slot(p_008,219,6)
        elif party_slot_eq(p_008,121,p.town_9):
            party_set_slot(p_008,220,2)
            party_set_slot(p_008,210,4000)
        elif party_slot_eq(p_008,121,p.town_10):
            party_set_slot(p_008,206,150)
            party_set_slot(p_008,215,1)
            party_set_slot(p_008,220,1)
            party_set_slot(p_008,216,8)
        elif party_slot_eq(p_008,121,p.town_11):
            party_set_slot(p_008,219,6)
            party_set_slot(p_008,220,2)
        elif party_slot_eq(p_008,121,p.town_12):
            party_set_slot(p_008,211,8000)
            party_set_slot(p_008,232,10)
            party_set_slot(p_008,215,1)
        elif party_slot_eq(p_008,121,p.town_13):
            party_set_slot(p_008,220,2)
            party_set_slot(p_008,205,100)
            party_set_slot(p_008,217,1500)
        elif party_slot_eq(p_008,121,p.town_14):
            party_set_slot(p_008,209,40000)
            party_set_slot(p_008,221,5)
        elif party_slot_eq(p_008,121,p.town_15):
            party_set_slot(p_008,211,8000)
            party_set_slot(p_008,210,8000)
            party_set_slot(p_008,232,10)
        elif party_slot_eq(p_008,121,p.town_16):
            party_set_slot(p_008,209,40000)
            party_set_slot(p_008,219,3)
            party_set_slot(p_008,221,5)
        elif party_slot_eq(p_008,121,p.town_17):
            party_set_slot(p_008,209,20000)
            party_set_slot(p_008,220,1)
        elif party_slot_eq(p_008,121,p.town_18):
            party_set_slot(p_008,209,20000)
            party_set_slot(p_008,219,3)
            party_set_slot(p_008,216,8)
            party_set_slot(p_008,212,4000)
        elif party_slot_eq(p_008,121,p.town_19):
            party_set_slot(p_008,209,6000)
            party_set_slot(p_008,212,2000)
            party_set_slot(p_008,210,3000)
            party_set_slot(p_008,213,5000)
        elif party_slot_eq(p_008,121,p.town_20):
            party_set_slot(p_008,209,3000)
            party_set_slot(p_008,213,10000)
            party_set_slot(p_008,215,1)
        elif party_slot_eq(p_008,121,p.town_21):
            party_set_slot(p_008,209,3000)
            party_set_slot(p_008,213,5000)
            party_set_slot(p_008,218,1500)
        elif party_slot_eq(p_008,121,p.town_22):
            party_set_slot(p_008,209,2000)
            party_set_slot(p_008,212,2000)
            party_set_slot(p_008,213,10000)
            party_set_slot(p_008,215,1)
            party_set_slot(p_008,218,1500)
        #end
    #end
    for p_008 in range(p.village_1, p.salt_mine):
        party_slot_018 = party_get_slot(p_008,120)
        if is_between(party_slot_018,p.castle_1,p.village_1):
            for slot_no_019 in range(209, 233):
                var020 = 0
                for p_021 in range(p.village_1, p.salt_mine):
                    party_slot_018 = party_get_slot(p_021,120)
                    if is_between(party_slot_018,p.town_1,p.castle_1):
                        distance_parties_022 = store_distance_to_party_from_party(p_008,p_021)
                        if distance_parties_022 <= 72:
                            party_slot_023 = party_get_slot(p_008,slot_no_019)
                            var024 = distance_parties_022 + 24
                            var025 = party_slot_023 * 12
                            var026 = var025 / var024
                            var026 /= 2
                            var020 += var026
                        #end
                    #end
                #end
            #end
            party_set_slot(p_008,slot_no_019,var020)
        #end
    #end
    party_set_slot(p.village_1,214,15)
    party_set_slot(p.village_3,214,15)
    party_set_slot(p.village_5,214,15)
    party_set_slot(p.village_8,214,15)
    party_set_slot(p.village_9,214,15)
    party_set_slot(p.village_20,214,15)
    party_set_slot(p.village_21,214,15)
    party_set_slot(p.village_23,214,15)
    party_set_slot(p.village_27,214,15)
    party_set_slot(p.village_30,214,20)
    party_set_slot(p.village_31,214,15)
    party_set_slot(p.village_35,214,15)
    party_set_slot(p.village_47,214,15)
    party_set_slot(p.village_49,214,15)
    party_set_slot(p.village_51,214,15)
    party_set_slot(p.village_56,214,15)
    party_set_slot(p.village_66,214,15)
    party_set_slot(p.village_68,214,15)
    party_set_slot(p.village_69,214,15)
    party_set_slot(p.village_77,214,25)
    party_set_slot(p.village_79,214,15)
    party_set_slot(p.village_81,214,15)
    party_set_slot(p.village_85,214,15)
    party_set_slot(p.village_87,214,15)
    party_set_slot(p.village_90,214,15)
    for p_027 in range(p.town_1, p.salt_mine):
        party_slot_028 = party_get_slot(p_027,205)
        party_slot_029 = party_get_slot(p_027,206)
        var030 = party_slot_028 * 4
        var030 += party_slot_029
        var030 += party_slot_029
        var030 *= 6
        var030 /= 5
        random_x_031 = store_random_in_range(60,150)
        var030 *= random_x_031
        var030 /= 100
        party_set_slot(p_027,208,var030)
    #end
    for var032 in range(0, 3):
        update_trade_good_prices()
    #end
    for p_033 in range(p.town_1, p.salt_mine):
        if not is_between(p_033,p.castle_1,p.village_1):
            random_x_034 = store_random_in_range(-10,10)
            get_center_ideal_prosperity(p_033)
            var035 = reg0
            var035 += random_x_034
            val_clamp(var035,0,100)
            party_set_slot(p_033,50,var035)
        #end
    #end
    calculate_castle_prosperities_by_using_its_villages()


def initialize_all_scene_prop_slots():
    initialize_scene_prop_slots(spr.siege_ladder_move_6m)
    initialize_scene_prop_slots(spr.siege_ladder_move_8m)
    initialize_scene_prop_slots(spr.siege_ladder_move_10m)
    initialize_scene_prop_slots(spr.siege_ladder_move_12m)
    initialize_scene_prop_slots(spr.siege_ladder_move_14m)
    initialize_scene_prop_slots(spr.castle_e_sally_door_a)
    initialize_scene_prop_slots(spr.castle_f_sally_door_a)
    initialize_scene_prop_slots(spr.earth_sally_gate_left)
    initialize_scene_prop_slots(spr.earth_sally_gate_right)
    initialize_scene_prop_slots(spr.viking_keep_destroy_sally_door_left)
    initialize_scene_prop_slots(spr.viking_keep_destroy_sally_door_right)
    initialize_scene_prop_slots(spr.castle_f_door_a)
    initialize_scene_prop_slots(spr.belfry_a)
    initialize_scene_prop_slots(spr.belfry_b)
    initialize_scene_prop_slots(spr.winch_b)


def initialize_scene_prop_slots(var001):
    scp_num_instances_002 = scene_prop_get_num_instances(var001)
    for var003 in range(0, scp_num_instances_002):
        scp_instance_004 = scene_prop_get_instance(var001,var003)
        for slot_no_005 in range(0, 6):
            scene_prop_set_slot(scp_instance_004,slot_no_005,0)
        #end
    #end


def use_item(scene_prop_instance_id_001, var002):
    var009_list2 = [
    spr.siege_ladder_move_14m,
    spr.siege_ladder_move_12m,
    spr.siege_ladder_move_10m,
    spr.siege_ladder_move_8m,
    spr.siege_ladder_move_6m,
    ]
    scene_prop_kind_003_list2 = [
    spr.siege_ladder_move_14m,
    spr.siege_ladder_move_12m,
    spr.siege_ladder_move_10m,
    spr.siege_ladder_move_8m,
    spr.siege_ladder_move_6m,
    spr.castle_f_door_a,
    spr.viking_keep_destroy_sally_door_right,
    spr.viking_keep_destroy_sally_door_left,
    spr.earth_sally_gate_right,
    spr.earth_sally_gate_left,
    spr.castle_f_sally_door_a,
    spr.castle_e_sally_door_a,
    spr.castle_f_door_b,
    spr.door_destructible,
    ]
    scene_prop_kind_003_list1 = [
    spr.winch,
    spr.winch_b,
    ]
    if game_in_multiplayer_mode():
        scene_prop_kind_003 = prop_instance_get_scene_prop_kind(scene_prop_instance_id_001)
        if scene_prop_kind_003 == spr.winch_b:
            my_player = multiplayer_get_my_player()
            if my_player > 0 or not multiplayer_is_dedicated_server() and my_player >= 0:
                agent_id_005 = player_get_agent_id(my_player)
                if agent_id_005 >= 0 and agent_is_active(agent_id_005):
                    agent_team_no_006 = agent_get_team(agent_id_005)
                    if agent_team_no_006 == 0:
                        scene_prop_slot_007 = scene_prop_get_slot(scene_prop_instance_id_001,1)
                        if var002 >= 0 and agent_is_active(var002):
                            agent_player_id_008 = agent_get_player_id(var002)
                            s7 = str_store_player_username(agent_player_id_008)
                            if scene_prop_slot_007 == 0:
                                print("@{s7} opened the gate")
                            else:
                                print("@{s7} closed the gate")
                            #end
                        #end
                    #end
                #end
            #end
        #end
    #end
    scene_prop_kind_003 = prop_instance_get_scene_prop_kind(scene_prop_instance_id_001)
    if scene_prop_kind_003 in scene_prop_kind_003_list1:
        var009 = spr.portcullis
    elif scene_prop_kind_003 in scene_prop_kind_003_list2:
        var009 = scene_prop_kind_003
    #end
    var010 = -1
    pos0 = prop_instance_get_position(scene_prop_instance_id_001)
    scp_num_instances_011 = scene_prop_get_num_instances(var009)
    for var012 in range(0, scp_num_instances_011):
        scp_instance_013 = scene_prop_get_instance(var009,var012)
        pos1 = prop_instance_get_position(scp_instance_013)
        sq_distance_014 = get_sq_distance_between_positions(0,1)
        if var010 == -1 or sq_distance_014 < var010:
            var010 = sq_distance_014
            scene_prop_instance_id_015 = scp_instance_013
        #end
    #end
    if scene_prop_instance_id_001 >= 0 and var010 >= 0:
        if var009 == spr.portcullis:
            scene_prop_slot_007 = scene_prop_get_slot(scene_prop_instance_id_001,1)
            if scene_prop_slot_007 == 0:
                scene_prop_enable_after_time(scene_prop_instance_id_001,400)
                if multiplayer_is_server() or not game_in_multiplayer_mode():
                    pos0 = prop_instance_get_position(scene_prop_instance_id_015)
                    position_move_z(0,375)
                    prop_instance_animate_to_position(scene_prop_instance_id_015,0,400)
                #end
                scene_prop_set_slot(scene_prop_instance_id_001,1,1)
                if scene_prop_kind_003 == spr.winch_b and multiplayer_is_server() or not game_in_multiplayer_mode():
                    pos1 = prop_instance_get_position(scene_prop_instance_id_001)
                    prop_instance_rotate_to_position(scene_prop_instance_id_001,1,400,72000)
                #end
            else:
                scene_prop_enable_after_time(scene_prop_instance_id_001,400)
                if multiplayer_is_server() or not game_in_multiplayer_mode():
                    pos0 = prop_instance_get_position(scene_prop_instance_id_015)
                    position_move_z(0,-375)
                    prop_instance_animate_to_position(scene_prop_instance_id_015,0,400)
                #end
                scene_prop_set_slot(scene_prop_instance_id_001,1,0)
                if scene_prop_kind_003 == spr.winch_b and multiplayer_is_server() or not game_in_multiplayer_mode():
                    pos1 = prop_instance_get_position(scene_prop_instance_id_001)
                    prop_instance_rotate_to_position(scene_prop_instance_id_001,1,400,-72000)
                #end
            #end
        elif var009 in var009_list2:
            if var009 == spr.siege_ladder_move_6m:
                var016 = 120
                var017 = 240
            elif var009 == spr.siege_ladder_move_8m:
                var016 = 140
                var017 = 280
            elif var009 == spr.siege_ladder_move_10m:
                var016 = 160
                var017 = 320
            elif var009 == spr.siege_ladder_move_12m:
                var016 = 190
                var017 = 360
            elif var009 == spr.siege_ladder_move_14m:
                var016 = 230
                var017 = 400
            #end
            scene_prop_slot_007 = scene_prop_get_slot(scene_prop_instance_id_001,1)
            if True:
                scene_prop_enable_after_time(scene_prop_instance_id_015,var017)
                if scene_prop_slot_007 == 0:
                    pos0 = prop_instance_get_starting_position(scene_prop_instance_id_015)
                    prop_instance_enable_physics(scene_prop_instance_id_015,0)
                    prop_instance_animate_to_position(scene_prop_instance_id_015,0,300)
                    scene_prop_set_slot(scene_prop_instance_id_015,1,1)
                else:
                    scene_prop_enable_after_time(scene_prop_instance_id_015,var016)
                    pos0 = prop_instance_get_position(scene_prop_instance_id_001)
                    var010 = -1
                    for var018 in range(100, 110):
                        pos1 = entry_point_get_position(var018)
                        sq_distance_014 = get_sq_distance_between_positions(0,1)
                        if var010 == -1 or sq_distance_014 < var010:
                            var010 = sq_distance_014
                            var019 = var018
                        #end
                    #end
                #end
                if var010 >= 0 and var010 < 22500:
                    pos1 = entry_point_get_position(var019)
                    position_rotate_x(1,-90)
                    scene_prop_set_slot(scene_prop_instance_id_015,2,0)
                    prop_instance_enable_physics(scene_prop_instance_id_015,0)
                    prop_instance_animate_to_position(scene_prop_instance_id_015,1,130)
                #end
                scene_prop_set_slot(scene_prop_instance_id_015,1,0)
            #end
        elif var009 == spr.door_destructible or var009 == spr.castle_f_door_b or scene_prop_kind_003 == spr.castle_e_sally_door_a or scene_prop_kind_003 == spr.castle_f_sally_door_a or scene_prop_kind_003 == spr.earth_sally_gate_left or scene_prop_kind_003 == spr.earth_sally_gate_right or scene_prop_kind_003 == spr.viking_keep_destroy_sally_door_left or scene_prop_kind_003 == spr.viking_keep_destroy_sally_door_right or scene_prop_kind_003 == spr.castle_f_door_a:
            scene_prop_instance_id_015 = scene_prop_instance_id_001
            scene_prop_slot_007 = scene_prop_get_slot(scene_prop_instance_id_015,1)
            if scene_prop_slot_007 == 0:
                pos0 = prop_instance_get_starting_position(scene_prop_instance_id_015)
                scene_prop_enable_after_time(scene_prop_instance_id_015,100)
                if scene_prop_kind_003 != spr.viking_keep_destroy_sally_door_left and scene_prop_kind_003 != spr.earth_sally_gate_left:
                    position_rotate_z(0,-85)
                else:
                    position_rotate_z(0,85)
                #end
                prop_instance_animate_to_position(scene_prop_instance_id_015,0,100)
                scene_prop_set_slot(scene_prop_instance_id_015,1,1)
            else:
                pos0 = prop_instance_get_starting_position(scene_prop_instance_id_015)
                scene_prop_enable_after_time(scene_prop_instance_id_015,100)
                prop_instance_animate_to_position(scene_prop_instance_id_015,0,100)
                scene_prop_set_slot(scene_prop_instance_id_015,1,0)
            #end
        #end
    #end


def determine_team_flags(var001):
    if _g_multiplayer_game_type == 4:
        if var001 == 0:
            team_faction_002 = team_get_faction(0)
            if team_faction_002 == fac.kingdom_1:
                _team_1_flag_scene_prop = spr.ctf_flag_kingdom_1
            elif team_faction_002 == fac.kingdom_2:
                _team_1_flag_scene_prop = spr.ctf_flag_kingdom_2
            elif team_faction_002 == fac.kingdom_3:
                _team_1_flag_scene_prop = spr.ctf_flag_kingdom_3
            elif team_faction_002 == fac.kingdom_4:
                _team_1_flag_scene_prop = spr.ctf_flag_kingdom_4
            elif team_faction_002 == fac.kingdom_5:
                _team_1_flag_scene_prop = spr.ctf_flag_kingdom_5
            elif team_faction_002 == fac.kingdom_6:
                _team_1_flag_scene_prop = spr.ctf_flag_kingdom_6
            #end
        else:
            team_faction_002 = team_get_faction(1)
            if team_faction_002 == fac.kingdom_1:
                _team_2_flag_scene_prop = spr.ctf_flag_kingdom_1
            elif team_faction_002 == fac.kingdom_2:
                _team_2_flag_scene_prop = spr.ctf_flag_kingdom_2
            elif team_faction_002 == fac.kingdom_3:
                _team_2_flag_scene_prop = spr.ctf_flag_kingdom_3
            elif team_faction_002 == fac.kingdom_4:
                _team_2_flag_scene_prop = spr.ctf_flag_kingdom_4
            elif team_faction_002 == fac.kingdom_5:
                _team_2_flag_scene_prop = spr.ctf_flag_kingdom_5
            elif team_faction_002 == fac.kingdom_6:
                _team_2_flag_scene_prop = spr.ctf_flag_kingdom_6
            #end
            if _team_1_flag_scene_prop == _team_2_flag_scene_prop:
                _team_2_flag_scene_prop = spr.ctf_flag_kingdom_7
            #end
        #end
    else:
        if var001 == 0:
            team_faction_002 = team_get_faction(0)
            if team_faction_002 == fac.kingdom_1:
                _team_1_flag_scene_prop = spr.headquarters_flag_swadian
            elif team_faction_002 == fac.kingdom_2:
                _team_1_flag_scene_prop = spr.headquarters_flag_vaegir
            elif team_faction_002 == fac.kingdom_3:
                _team_1_flag_scene_prop = spr.headquarters_flag_khergit
            elif team_faction_002 == fac.kingdom_4:
                _team_1_flag_scene_prop = spr.headquarters_flag_nord
            elif team_faction_002 == fac.kingdom_5:
                _team_1_flag_scene_prop = spr.headquarters_flag_rhodok
            elif team_faction_002 == fac.kingdom_6:
                _team_1_flag_scene_prop = spr.headquarters_flag_sarranid
            #end
        else:
            team_faction_002 = team_get_faction(1)
            if team_faction_002 == fac.kingdom_1:
                _team_2_flag_scene_prop = spr.headquarters_flag_swadian
            elif team_faction_002 == fac.kingdom_2:
                _team_2_flag_scene_prop = spr.headquarters_flag_vaegir
            elif team_faction_002 == fac.kingdom_3:
                _team_2_flag_scene_prop = spr.headquarters_flag_khergit
            elif team_faction_002 == fac.kingdom_4:
                _team_2_flag_scene_prop = spr.headquarters_flag_nord
            elif team_faction_002 == fac.kingdom_5:
                _team_2_flag_scene_prop = spr.headquarters_flag_rhodok
            elif team_faction_002 == fac.kingdom_6:
                _team_2_flag_scene_prop = spr.headquarters_flag_sarranid
            #end
            if _team_1_flag_scene_prop == _team_2_flag_scene_prop:
                _team_2_flag_scene_prop = spr.headquarters_flag_rebel
            #end
        #end
    #end


def calculate_flag_move_time(var001, var002):
    if var001 == 0:
        reg0 = var002 * 2500
    elif var001 == 1:
        reg0 = var002 * 500
    elif var001 == 2:
        reg0 = var002 * 300
    elif var001 == 3:
        reg0 = var002 * 195
    elif var001 == 4:
        reg0 = var002 * 137
    elif var001 == 5:
        reg0 = var002 * 102
    elif var001 == 6:
        reg0 = var002 * 82
    elif var001 == 7:
        reg0 = var002 * 66
    elif var001 == 8:
        reg0 = var002 * 59
    else:
        reg0 = var002 * 56
    #end
    var003 = 0
    max_players = get_max_players()
    for player_id_005 in range(0, max_players):
        if player_is_active(player_id_005):
            var003 += 1
        #end
    #end
    if var003 < 10:
        reg0 *= 50
    elif var003 < 35:
        var006 = 35 - var003
        var006 *= 2
        var006 = 100 - var006
        reg0 *= var006
    else:
        reg0 *= 100
    #end
    if _g_multiplayer_game_type == 6:
        reg0 *= 2
    #end
    reg0 /= 10000


def move_death_mode_flags_down():
    if True:
        scp_instance_001 = scene_prop_get_instance(spr.headquarters_pole_code_only,0)
        pos0 = prop_instance_get_position(scp_instance_001)
        position_move_z(0,-2000)
        prop_instance_set_position(scp_instance_001,0)
    #end
    if True:
        scp_instance_002 = scene_prop_get_instance(spr.headquarters_pole_code_only,1)
        pos1 = prop_instance_get_position(scp_instance_002)
        position_move_z(1,-2000)
        prop_instance_set_position(scp_instance_002,1)
    #end
    if True:
        scp_instance_001 = scene_prop_get_instance(spr.headquarters_pole_code_only,0)
        pos0 = prop_instance_get_position(scp_instance_001)
        scp_instance_003 = scene_prop_get_instance(_team_1_flag_scene_prop,0)
        prop_instance_stop_animating(scp_instance_003)
        position_move_z(0,100)
        prop_instance_set_position(scp_instance_003,0)
    #end
    if True:
        scp_instance_002 = scene_prop_get_instance(spr.headquarters_pole_code_only,1)
        pos1 = prop_instance_get_position(scp_instance_002)
        scp_instance_004 = scene_prop_get_instance(_team_2_flag_scene_prop,0)
        prop_instance_stop_animating(scp_instance_004)
        position_move_z(1,100)
        prop_instance_set_position(scp_instance_004,1)
    #end


def move_flag(var001, var002):
    if multiplayer_is_server():
        if var002 == 0:
            prop_instance_stop_animating(var001)
        else:
            prop_instance_animate_to_position(var001,0,var002)
        #end
    #end


def move_headquarters_flags(var001, var002, var003):
    slot_no_004 = 146 + var001
    troop_slot_005 = troop_get_slot(trp.multiplayer_data,slot_no_004)
    scp_num_instances_006 = scene_prop_get_num_instances(spr.headquarters_flag_gray_code_only)
    if True:
        scp_visibility_007 = 0
        if var001 < scp_num_instances_006:
            scp_instance_008 = scene_prop_get_instance(spr.headquarters_flag_gray_code_only,var001)
            scp_visibility_007 = scene_prop_get_visibility(scp_instance_008)
        #end
    #end
    if scp_visibility_007 == 1:
        var009 = 0
        var010 = scp_instance_008
    else:
        scp_num_instances_006 = scene_prop_get_num_instances(_team_1_flag_scene_prop)
        if True:
            scp_visibility_007 = 0
            if var001 < scp_num_instances_006:
                scp_instance_008 = scene_prop_get_instance(_team_1_flag_scene_prop,var001)
                scp_visibility_007 = scene_prop_get_visibility(scp_instance_008)
            #end
        #end
        if scp_visibility_007 == 1:
            var009 = 1
            var010 = scp_instance_008
        else:
            scp_num_instances_006 = scene_prop_get_num_instances(_team_2_flag_scene_prop)
            if True:
                scp_visibility_007 = 0
                if var001 < scp_num_instances_006:
                    scp_instance_008 = scene_prop_get_instance(_team_2_flag_scene_prop,var001)
                    scp_visibility_007 = scene_prop_get_visibility(scp_instance_008)
                #end
            #end
            if scp_visibility_007 == 1:
                var009 = 2
                var010 = scp_instance_008
            #end
        #end
    #end
    if True:
        scp_instance_011 = scene_prop_get_instance(spr.headquarters_pole_code_only,var001)
    #end
    if var009 == troop_slot_005:
        if var002 >= 1 and var003 >= 1:
            var012 = 0
        elif var002 == 0 and var003 == 0:
            var012 = 1
        else:
            if var002 >= 1 and var003 == 0 and troop_slot_005 == 1:
                var012 = 1
            elif var002 == 0 and var003 >= 1 and troop_slot_005 == 2:
                var012 = 1
            else:
                var012 = -1
            #end
        #end
    else:
        if var002 >= 1 and var003 >= 1:
            var012 = 0
        elif var002 == 0 and var003 == 0:
            var012 = -1
        else:
            if var002 >= 1 and var003 == 0:
                if var009 == 1:
                    var012 = 1
                elif troop_slot_005 != 1:
                    var012 = -1
                #end
            elif var002 == 0 and var003 >= 1:
                if var009 == 2:
                    var012 = 1
                elif troop_slot_005 != 2:
                    var012 = -1
                #end
            #end
        #end
    #end
    var013 = var002 + var003
    if var012 == 0:
        reg0 = 0
    elif var012 == 1:
        pos1 = prop_instance_get_position(var010)
        pos0 = prop_instance_get_position(scp_instance_011)
        position_move_z(0,900)
        distance_014 = get_distance_between_positions(0,1)
        calculate_flag_move_time(var013,distance_014)
    elif var012 == -1:
        pos1 = prop_instance_get_position(var010)
        pos0 = prop_instance_get_position(scp_instance_011)
        distance_014 = get_distance_between_positions(0,1)
        calculate_flag_move_time(var013,distance_014)
    #end
    move_flag(var010,reg0)


def set_num_agents_around_flag(var001, var002):
    var003 = var002 / 100
    var004 = store_mod(var002,100)
    slot_no_005 = 156 + var001
    troop_set_slot(trp.multiplayer_data,slot_no_005,var002)
    move_headquarters_flags(var001,var003,var004)


def change_flag_owner(var001, var002):
    if var002 < 0:
        var002 += 1
        var002 *= -1
    #end
    var003 = var002 / 100
    var004 = store_mod(var002,100)
    slot_no_005 = 146 + var001
    troop_slot_006 = troop_get_slot(trp.multiplayer_data,slot_no_005)
    slot_no_005 = 146 + var001
    troop_set_slot(trp.multiplayer_data,slot_no_005,var003)
    if multiplayer_is_server():
        scp_instance_007 = scene_prop_get_instance(spr.headquarters_pole_code_only,var001)
        if var003 == 0 and troop_slot_006 != -1:
            var008 = 1
            if multiplayer_is_server() and _g_placing_initial_flags == 1:
                var008 = 0
            #end
            if var008 == 1:
                pos0 = prop_instance_get_position(scp_instance_007)
                position_move_z(0,200)
            else:
                pos0 = prop_instance_get_position(scp_instance_007)
                position_move_z(0,900)
            #end
        #end
        scp_instance_009 = scene_prop_get_instance(_team_1_flag_scene_prop,var001)
        prop_instance_stop_animating(scp_instance_009)
        prop_instance_set_position(scp_instance_009,0)
        scp_instance_009 = scene_prop_get_instance(_team_2_flag_scene_prop,var001)
        prop_instance_stop_animating(scp_instance_009)
        prop_instance_set_position(scp_instance_009,0)
        scp_instance_009 = scene_prop_get_instance(spr.headquarters_flag_gray_code_only,var001)
        prop_instance_stop_animating(scp_instance_009)
        prop_instance_set_position(scp_instance_009,0)
    #end
    if var004 == 0:
        scp_instance_009 = scene_prop_get_instance(_team_1_flag_scene_prop,var001)
        scene_prop_set_visibility(scp_instance_009,0)
        scp_instance_009 = scene_prop_get_instance(_team_2_flag_scene_prop,var001)
        scene_prop_set_visibility(scp_instance_009,0)
        scp_instance_009 = scene_prop_get_instance(spr.headquarters_flag_gray_code_only,var001)
        scene_prop_set_visibility(scp_instance_009,1)
    elif var004 == 1:
        scp_instance_009 = scene_prop_get_instance(_team_1_flag_scene_prop,var001)
        scene_prop_set_visibility(scp_instance_009,1)
        scp_instance_009 = scene_prop_get_instance(_team_2_flag_scene_prop,var001)
        scene_prop_set_visibility(scp_instance_009,0)
        scp_instance_009 = scene_prop_get_instance(spr.headquarters_flag_gray_code_only,var001)
        scene_prop_set_visibility(scp_instance_009,0)
    elif var004 == 2:
        scp_instance_009 = scene_prop_get_instance(_team_1_flag_scene_prop,var001)
        scene_prop_set_visibility(scp_instance_009,0)
        scp_instance_009 = scene_prop_get_instance(_team_2_flag_scene_prop,var001)
        scene_prop_set_visibility(scp_instance_009,1)
        scp_instance_009 = scene_prop_get_instance(spr.headquarters_flag_gray_code_only,var001)
        scene_prop_set_visibility(scp_instance_009,0)
    #end
    slot_no_010 = 156 + var001
    troop_slot_011 = troop_get_slot(trp.multiplayer_data,slot_no_010)
    var012 = troop_slot_011 / 100
    var013 = store_mod(troop_slot_011,100)
    move_headquarters_flags(var001,var012,var013)


def move_object_to_nearest_entry_point(var001):
    scp_num_instances_002 = scene_prop_get_num_instances(var001)
    for var003 in range(0, scp_num_instances_002):
        scp_instance_004 = scene_prop_get_instance(var001,var003)
        pos0 = prop_instance_get_position(scp_instance_004)
        var005 = -1
        for var006 in range(100, 110):
            pos1 = entry_point_get_position(var006)
            sq_distance_007 = get_sq_distance_between_positions(0,1)
            if var005 == -1 or sq_distance_007 < var005:
                var005 = sq_distance_007
                var008 = var006
            #end
        #end
        if var005 >= 0 and var005 < 22500:
            pos1 = entry_point_get_position(var008)
            position_rotate_x(1,-90)
            prop_instance_animate_to_position(scp_instance_004,1,1)
        #end
    #end


def multiplayer_server_on_agent_spawn_common(agent_id_001):
    agent_set_slot(agent_id_001,21,-1)
    if agent_is_non_player(agent_id_001):
        _g_multiplayer_ready_for_spawning_agent = 1
    elif cf_multiplayer_can_buy_squad():
        agent_player_id_002 = agent_get_player_id(agent_id_001)
        set_show_messages(0)
        team_give_order(agent_player_id_002,9,1)
        set_show_messages(1)
    #end


def multiplayer_server_player_joined_common(player_id_001):
    if player_is_active(player_id_001) or player_id_001 == 0:
        multiplayer_init_player_slots(player_id_001)
        m_timer_a_002 = store_mission_timer_a()
        player_set_slot(player_id_001,21,m_timer_a_002)
        player_set_slot(player_id_001,24,1)
        player_set_slot(player_id_001,32,0)
        player_set_slot(player_id_001,33,0)
        if multiplayer_is_server():
            gold_003 = 1000
            gold_003 *= _g_multiplayer_initial_gold_multiplier
            gold_003 /= 100
            player_set_gold(player_id_001,gold_003)
            multiplayer_send_initial_information(player_id_001)
        #end
    #end


def multiplayer_server_before_mission_start_common():
    if scene_allows_mounted_units():
        _g_horses_are_avaliable = 1
        if _g_multiplayer_game_type == 8:
            cur_scene_001 = store_current_scene()
            _g_ccoop_disallow_horses = scene_get_slot(cur_scene_001,1)
            if _g_ccoop_disallow_horses == 1:
                _g_horses_are_avaliable = 0
            #end
        #end
    else:
        _g_horses_are_avaliable = 0
    #end
    scene_set_day_time(15)
    _g_multiplayer_mission_end_screen = 0
    max_players = get_max_players()
    for player_id_003 in range(0, max_players):
        if player_is_active(player_id_003):
            multiplayer_init_player_slots(player_id_003)
            gold_004 = 1000
            gold_004 *= _g_multiplayer_initial_gold_multiplier
            gold_004 /= 100
            player_set_gold(player_id_003,gold_004)
            player_set_slot(player_id_003,24,1)
        #end
    #end
    multiplayer_set_g_multiplayer_is_game_type_captain()


def multiplayer_server_on_agent_killed_or_wounded_common(var001, var002):
    _g_multiplayer_game_type_list1 = [
    3,
    2,
    ]
    multiplayer_event_agent_killed_or_wounded(var001,var002)
    if multiplayer_is_server():
        if var002 < 0 and var001 >= 0 and not agent_is_non_player(var001):
            agent_player_id_003 = agent_get_player_id(var001)
            if player_is_active(agent_player_id_003):
                score_004 = player_get_score(agent_player_id_003)
                score_004 += -1
                player_set_score(agent_player_id_003,score_004)
            elif var002 >= 0 and var001 >= 0:
                agent_team_no_005 = agent_get_team(var002)
                agent_team_no_006 = agent_get_team(var001)
                if agent_team_no_005 == agent_team_no_006 and not agent_is_non_player(var002):
                    agent_player_id_007 = agent_get_player_id(var002)
                    if player_is_active(agent_player_id_007):
                        score_008 = player_get_score(agent_player_id_007)
                        score_008 += -1
                        player_set_score(agent_player_id_007,score_008)
                    elif var002 >= 0 and var001 >= 0 and agent_is_human(var001) and agent_is_human(var002):
                        if _g_multiplayer_game_type == 2:
                            if _g_battle_death_mode_started == 1 and var001 != var002:
                                calculate_new_death_waiting_time_at_death_mod()
                            #end
                        #end
                    #end
                #end
            #end
            if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                agent_player_id_009 = agent_get_player_id(var001)
                if agent_player_id_009 >= 0 and player_is_active(agent_player_id_009) and not agent_is_non_player(var001):
                    for cur_agent in __all_agents__:
                        if agent_is_non_player(cur_agent) and agent_is_human(cur_agent) and agent_is_alive(cur_agent):
                            agent_group_011 = agent_get_group(cur_agent)
                            if agent_player_id_009 == agent_group_011:
                                agent_set_group(cur_agent,-1)
                            #end
                        #end
                    #end
                #end
            #end
            if not agent_is_non_player(var002):
                agent_player_id_007 = agent_get_player_id(var002)
                if player_is_active(agent_player_id_007):
                    score_008 = player_get_score(agent_player_id_007)
                    agent_team_no_012 = agent_get_team(var002)
                    agent_team_no_013 = agent_get_team(var001)
                    if agent_team_no_012 != agent_team_no_013:
                        score_008 += 1
                    else:
                        score_008 += -1
                    #end
                #end
            #end
            player_set_score(agent_player_id_007,score_008)
        #end
    #end
    if _g_multiplayer_is_game_type_captain == 1 and var001 >= 0 and not agent_is_non_player(var001):
        agent_team_no_006 = agent_get_team(var001)
        agent_player_id_009 = agent_get_player_id(var001)
        if player_is_active(agent_player_id_009):
            set_show_messages(0)
            team_give_order(agent_player_id_009,9,2)
            team_give_order(agent_player_id_009,9,13)
            team_give_order(agent_player_id_009,9,10)
            set_show_messages(1)
        #end
    #end
    add_kill_death_counts(var002,var001)
    money_management_after_agent_death(var002,var001)


def multiplayer_close_gate_if_it_is_open():
    scp_num_instances_001 = scene_prop_get_num_instances(spr.winch_b)
    for var002 in range(0, scp_num_instances_001):
        scp_instance_003 = scene_prop_get_instance(spr.winch_b,var002)
        if scene_prop_slot_eq(scp_instance_003,1,1):
            scp_instance_004 = scene_prop_get_instance(spr.portcullis,var002)
            pos0 = prop_instance_get_starting_position(scp_instance_004)
            prop_instance_animate_to_position(scp_instance_004,0,1)
        #end
    #end


def multiplayer_move_moveable_objects_initial_positions():
    move_object_to_nearest_entry_point(spr.siege_ladder_move_6m)
    move_object_to_nearest_entry_point(spr.siege_ladder_move_8m)
    move_object_to_nearest_entry_point(spr.siege_ladder_move_10m)
    move_object_to_nearest_entry_point(spr.siege_ladder_move_12m)
    move_object_to_nearest_entry_point(spr.siege_ladder_move_14m)


def move_belfries_to_their_first_entry_point(var001):
    set_fixed_point_multiplier(100)
    scp_num_instances_002 = scene_prop_get_num_instances(var001)
    for var003 in range(0, scp_num_instances_002):
        scp_instance_004 = scene_prop_get_instance(var001,var003)
        pos0 = prop_instance_get_position(scp_instance_004)
        if var001 == spr.belfry_a:
            scp_instance_005 = scene_prop_get_instance(spr.belfry_platform_a,var003)
            scp_instance_006 = scene_prop_get_instance(spr.belfry_platform_b,var003)
        else:
            scp_instance_005 = scene_prop_get_instance(spr.belfry_b_platform_a,var003)
        #end
        var007 = var003 * 3
        if var001 == spr.belfry_b:
            scp_num_instances_008 = scene_prop_get_num_instances(spr.belfry_a)
            var009 = scp_num_instances_008 * 3
            var007 += var009
        #end
        scp_instance_010 = scene_prop_get_instance(spr.belfry_wheel,var007)
        var007 += 1
        scp_instance_011 = scene_prop_get_instance(spr.belfry_wheel,var007)
        var007 += 1
        scp_instance_012 = scene_prop_get_instance(spr.belfry_wheel,var007)
        var013 = 11 + var003
        if var001 == spr.belfry_b:
            scp_num_instances_008 = scene_prop_get_num_instances(spr.belfry_a)
            var013 += scp_num_instances_008
        #end
        var013 *= 10
        pos1 = entry_point_get_position(var013)
        init_position(9)
        position_set_y(9,-500)
        position_set_x(9,-300)
        position_transform_position_to_parent(10,1,9)
        distance_to_terrain_014 = position_get_distance_to_terrain(10)
        init_position(9)
        position_set_y(9,-500)
        position_set_x(9,300)
        position_transform_position_to_parent(10,1,9)
        distance_to_terrain_015 = position_get_distance_to_terrain(10)
        var016 = distance_to_terrain_014 + distance_to_terrain_015
        var016 *= 100
        var017 = var016 / 24
        init_position(20)
        position_rotate_x_floating(20,var017)
        position_transform_position_to_parent(23,1,20)
        init_position(9)
        position_set_x(9,-300)
        position_transform_position_to_parent(10,1,9)
        distance_to_terrain_018 = position_get_distance_to_terrain(10)
        init_position(9)
        position_set_x(9,300)
        position_transform_position_to_parent(10,1,9)
        distance_to_terrain_019 = position_get_distance_to_terrain(10)
        distance_to_terrain_014 = distance_to_terrain_018 - distance_to_terrain_019
        init_position(9)
        position_set_x(9,-300)
        position_set_y(9,-500)
        position_transform_position_to_parent(10,1,9)
        distance_to_terrain_018 = position_get_distance_to_terrain(10)
        init_position(9)
        position_set_x(9,300)
        position_set_y(9,-500)
        position_transform_position_to_parent(10,1,9)
        distance_to_terrain_019 = position_get_distance_to_terrain(10)
        distance_to_terrain_015 = distance_to_terrain_018 - distance_to_terrain_019
        var016 = distance_to_terrain_014 + distance_to_terrain_015
        var016 *= 100
        var017 = var016 / 24
        var017 *= -1
        init_position(20)
        position_rotate_y_floating(20,var017)
        position_transform_position_to_parent(22,23,20)
        copy_position(1,22)
        prop_instance_stop_animating(scp_instance_004)
        prop_instance_set_position(scp_instance_004,1)
        if var001 == spr.belfry_a:
            pos6 = prop_instance_get_position(scp_instance_005)
            position_transform_position_to_local(7,0,6)
            position_transform_position_to_parent(8,1,7)
            if not scene_prop_slot_eq(scp_instance_004,5,0):
                init_position(20)
                position_rotate_x(20,90)
                position_transform_position_to_parent(8,8,20)
            #end
            prop_instance_stop_animating(scp_instance_005)
            prop_instance_set_position(scp_instance_005,8)
            pos6 = prop_instance_get_position(scp_instance_006)
            position_transform_position_to_local(7,0,6)
            position_transform_position_to_parent(8,1,7)
            prop_instance_stop_animating(scp_instance_006)
            prop_instance_set_position(scp_instance_006,8)
        else:
            pos6 = prop_instance_get_position(scp_instance_005)
            position_transform_position_to_local(7,0,6)
            position_transform_position_to_parent(8,1,7)
            if not scene_prop_slot_eq(scp_instance_004,5,0):
                init_position(20)
                position_rotate_x(20,50)
                position_transform_position_to_parent(8,8,20)
            #end
            prop_instance_stop_animating(scp_instance_005)
            prop_instance_set_position(scp_instance_005,8)
        #end
        var007 = var003 * 3
        if var001 == spr.belfry_b:
            scp_num_instances_008 = scene_prop_get_num_instances(spr.belfry_a)
            var009 = scp_num_instances_008 * 3
            var007 += var009
        #end
        pos6 = prop_instance_get_position(scp_instance_010)
        position_transform_position_to_local(7,0,6)
        position_transform_position_to_parent(8,1,7)
        prop_instance_stop_animating(scp_instance_010)
        prop_instance_set_position(scp_instance_010,8)
        pos6 = prop_instance_get_position(scp_instance_011)
        position_transform_position_to_local(7,0,6)
        position_transform_position_to_parent(8,1,7)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,8)
        pos6 = prop_instance_get_position(scp_instance_012)
        position_transform_position_to_local(7,0,6)
        position_transform_position_to_parent(8,1,7)
        prop_instance_stop_animating(scp_instance_012)
        prop_instance_set_position(scp_instance_012,8)
    #end


def team_set_score(team_id_001, team_score_002):
    team_set_score(team_id_001,team_score_002)


def player_set_score(player_id_001, score_002):
    player_set_score(player_id_001,score_002)


def player_set_kill_count(player_id_001, kill_count_002):
    player_set_kill_count(player_id_001,kill_count_002)


def player_set_death_count(player_id_001, death_count_002):
    player_set_death_count(player_id_001,death_count_002)


def set_attached_scene_prop(var001, var002):
    if True:
        scp_instance_003 = scene_prop_get_instance(spr.tutorial_flag_red,0)
        scp_instance_004 = scene_prop_get_instance(spr.tutorial_flag_blue,0)
        team_id_005 = -1
        if scp_instance_003 >= 0 and var002 == scp_instance_003:
            team_id_005 = 0
        elif scp_instance_004 >= 0 and var002 == scp_instance_004:
            team_id_005 = 1
        #end
        if team_id_005 >= 0:
            team_set_slot(team_id_005,0,1)
        #end
    #end
    agent_set_attached_scene_prop(var001,var002)
    agent_set_attached_scene_prop_x(var001,20)
    agent_set_attached_scene_prop_z(var001,50)


def set_team_flag_situation(team_id_001, var002):
    team_set_slot(team_id_001,0,var002)


def start_death_mode():
    _g_multiplayer_message_type = 18
    start_presentation(prsnt.multiplayer_message_1)


def calculate_new_death_waiting_time_at_death_mod():
    var001 = 0
    if True:
        for cur_agent in __all_agents__:
            if agent_is_human(cur_agent) and agent_is_alive(cur_agent):
                var001 += 1
            #end
        #end
    #end
    var001 += 15
    set_fixed_point_multiplier(100)
    var001 = var001 * 100
    var003 = store_sqrt(var001)
    _g_battle_waiting_seconds = 18000 / var003
    _g_death_mode_part_1_start_time = store_mission_timer_a()


def calculate_number_of_targets_destroyed():
    _g_number_of_targets_destroyed = 0
    scp_num_instances_001 = scene_prop_get_num_instances(spr.catapult_destructible)
    for var002 in range(0, scp_num_instances_001):
        scp_instance_003 = scene_prop_get_instance(spr.catapult_destructible,var002)
        pos0 = prop_instance_get_starting_position(scp_instance_003)
        pos1 = prop_instance_get_position(scp_instance_003)
        sq_distance_004 = get_sq_distance_between_positions_in_meters(0,1)
        if sq_distance_004 > 2:
            _g_number_of_targets_destroyed += 1
        #end
    #end
    scp_num_instances_001 = scene_prop_get_num_instances(spr.trebuchet_destructible)
    for var002 in range(0, scp_num_instances_001):
        scp_instance_003 = scene_prop_get_instance(spr.trebuchet_destructible,var002)
        pos0 = prop_instance_get_starting_position(scp_instance_003)
        pos1 = prop_instance_get_position(scp_instance_003)
        sq_distance_004 = get_sq_distance_between_positions_in_meters(0,1)
        if sq_distance_004 > 2:
            _g_number_of_targets_destroyed += 1
        #end
    #end


def initialize_objects():
    var001 = 0
    max_players = get_max_players()
    for player_id_003 in range(0, max_players):
        if player_is_active(player_id_003):
            var001 += 1
        #end
    #end
    set_fixed_point_multiplier(100)
    var001 *= 100
    var001 = store_sqrt(var001)
    var001 -= 100
    val_max(var001,0)
    var004 = var001 * 2
    var005 = 1200 + var004
    var006 = var005 * 15
    var006 /= 10
    var007 = var005 * 18
    var007 /= 10
    var008 = var007 * 2
    _g_number_of_targets_destroyed = 0
    scp_num_instances_009 = scene_prop_get_num_instances(spr.catapult_destructible)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.catapult_destructible,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var005)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.trebuchet_destructible)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.trebuchet_destructible,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var006)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_e_sally_door_a)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_e_sally_door_a,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_f_sally_door_a)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_f_sally_door_a,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.earth_sally_gate_left)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.earth_sally_gate_left,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var008)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.earth_sally_gate_right)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.earth_sally_gate_right,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var008)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.viking_keep_destroy_sally_door_left)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.viking_keep_destroy_sally_door_left,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.viking_keep_destroy_sally_door_right)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.viking_keep_destroy_sally_door_right,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    var012 = var007 / 3
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_f_door_a)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_f_door_a,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var012)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_f_door_b)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_f_door_b,var010)
        pos0 = prop_instance_get_starting_position(scp_instance_011)
        prop_instance_stop_animating(scp_instance_011)
        prop_instance_set_position(scp_instance_011,0)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var012)
    #end


def initialize_objects_clients():
    var001 = 0
    max_players = get_max_players()
    for player_id_003 in range(0, max_players):
        if player_is_active(player_id_003):
            var001 += 1
        #end
    #end
    set_fixed_point_multiplier(100)
    var001 *= 100
    var001 = store_sqrt(var001)
    var001 -= 100
    val_max(var001,0)
    var004 = var001 * 2
    var005 = 1200 + var004
    var006 = var005 * 15
    var006 /= 10
    var007 = var005 * 18
    var007 /= 10
    var008 = var007 * 2
    _g_number_of_targets_destroyed = 0
    scp_num_instances_009 = scene_prop_get_num_instances(spr.catapult_destructible)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.catapult_destructible,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var005)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.trebuchet_destructible)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.trebuchet_destructible,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var006)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_e_sally_door_a)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_e_sally_door_a,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_f_sally_door_a)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_f_sally_door_a,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.earth_sally_gate_left)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.earth_sally_gate_left,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var008)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.earth_sally_gate_right)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.earth_sally_gate_right,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var008)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.viking_keep_destroy_sally_door_left)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.viking_keep_destroy_sally_door_left,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.viking_keep_destroy_sally_door_right)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.viking_keep_destroy_sally_door_right,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var007)
    #end
    var012 = var007 / 3
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_f_door_a)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_f_door_a,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var012)
    #end
    scp_num_instances_009 = scene_prop_get_num_instances(spr.castle_f_door_b)
    for var010 in range(0, scp_num_instances_009):
        scp_instance_011 = scene_prop_get_instance(spr.castle_f_door_b,var010)
        prop_instance_enable_physics(scp_instance_011,1)
        scene_prop_set_hit_points(scp_instance_011,var012)
    #end


def show_multiplayer_message(var001, var002):
    _g_multiplayer_message_type = var001
    if var001 == 12:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
        if not multiplayer_is_server():
            _g_battle_death_mode_started = 0
        #end
    elif var001 == 2:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_2)
        _g_team_balance_next_round = 0
    elif var001 == 3:
        _g_team_balance_next_round = 1
        warn_player_about_auto_team_balance()
    elif var001 == 11:
        _g_team_balance_next_round = 0
    elif var001 == 4:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 5:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 6:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 7:
        _g_multiplayer_message_value_3 = var002
        start_presentation(prsnt.multiplayer_message_3)
    elif var001 == 8:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 9:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 10:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 14:
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 15:
        if _g_defender_team == 0:
            team_id_003 = 1
        else:
            team_id_003 = 0
        #end
        team_score_004 = team_get_score(team_id_003)
        team_score_004 += 1
        team_set_score(team_id_003,team_score_004)
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 16:
        _g_multiplayer_message_value_1 = var002
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 17:
        if _g_defender_team == 0:
            _g_multiplayer_message_value_1 = 1
        else:
            _g_multiplayer_message_value_1 = 0
        #end
        start_presentation(prsnt.multiplayer_message_1)
    #end


def get_headquarters_scores():
    var001 = 0
    var002 = 0
    for var003 in range(0, _g_number_of_flags):
        slot_no_004 = 146 + var003
        troop_slot_005 = troop_get_slot(trp.multiplayer_data,slot_no_004)
        if troop_slot_005 != 0:
            if troop_slot_005 == 1:
                var001 += 1
            else:
                var002 += 1
            #end
        #end
    #end
    reg0 = var001
    reg1 = var002


def draw_this_round(var001):
    if var001 == -9:
        _g_round_ended = 1
        _g_round_finish_time = store_mission_timer_a()
    elif var001 == -1:
        _g_round_ended = 1
        _g_round_finish_time = store_mission_timer_a()
        _g_multiplayer_message_value_1 = -1
        _g_multiplayer_message_type = 14
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 0:
        if _g_multiplayer_game_type == 6:
            my_player = multiplayer_get_my_player()
            if is_between(my_player,0,1000):
                agent_id_003 = player_get_agent_id(my_player)
                if agent_id_003 >= 0 and agent_is_alive(agent_id_003):
                    agent_team_no_004 = agent_get_team(agent_id_003)
                    if agent_team_no_004 == 0:
                        unlock_achievement(56)
                    #end
                #end
            #end
        #end
        _g_round_ended = 1
        _g_round_finish_time = store_mission_timer_a()
        team_faction_005 = team_get_faction(0)
        team_score_006 = team_get_score(0)
        team_score_006 += 1
        team_set_score(0,team_score_006)
        _g_winner_team = 0
        s1 = str_store_faction_name(team_faction_005)
        _g_multiplayer_message_value_1 = var001
        if _g_multiplayer_game_type != 2 and _g_multiplayer_game_type != 3:
            _g_multiplayer_message_type = 13
        else:
            _g_multiplayer_message_type = 12
        #end
        start_presentation(prsnt.multiplayer_message_1)
    elif var001 == 1:
        _g_round_ended = 1
        _g_round_finish_time = store_mission_timer_a()
        team_faction_005 = team_get_faction(1)
        team_score_007 = team_get_score(1)
        team_score_007 += 1
        team_set_score(1,team_score_007)
        _g_winner_team = 1
        s1 = str_store_faction_name(team_faction_005)
        _g_multiplayer_message_value_1 = var001
        if _g_multiplayer_game_type != 2 and _g_multiplayer_game_type != 3:
            _g_multiplayer_message_type = 13
        else:
            _g_multiplayer_message_type = 12
        #end
        start_presentation(prsnt.multiplayer_message_1)
    #end
    if is_between(var001,0,2):
        if _g_multiplayer_game_type == 2:
            my_player = multiplayer_get_my_player()
            if is_between(my_player,0,1000):
                agent_id_003 = player_get_agent_id(my_player)
                if agent_id_003 >= 0 and agent_is_alive(agent_id_003):
                    agent_team_no_004 = agent_get_team(agent_id_003)
                    if agent_team_no_004 == var001:
                        unlock_achievement(62)
                    #end
                #end
            #end
        #end
    #end


def check_achievement_last_man_standing(var001):
    if True:
        if is_between(var001,0,2):
            if _g_multiplayer_game_type == 2:
                my_player = multiplayer_get_my_player()
                if is_between(my_player,0,1000):
                    agent_id_003 = player_get_agent_id(my_player)
                    if agent_id_003 >= 0 and agent_is_alive(agent_id_003):
                        agent_team_no_004 = agent_get_team(agent_id_003)
                        if agent_team_no_004 == var001:
                            unlock_achievement(62)
                        #end
                    #end
                #end
            #end
        #end
    #end


def find_most_suitable_bot_to_control(player_id_001):
    set_fixed_point_multiplier(100)
    team_no_002 = player_get_team_no(player_id_001)
    player_slot_003 = player_get_slot(player_id_001,29)
    player_slot_004 = player_get_slot(player_id_001,30)
    player_slot_005 = player_get_slot(player_id_001,31)
    init_position(0)
    position_set_x(0,player_slot_003)
    position_set_y(0,player_slot_004)
    position_set_z(0,player_slot_005)
    var006 = -1
    var007 = -1
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_is_human(cur_agent) and agent_is_non_player(cur_agent):
            agent_team_no_009 = agent_get_team(cur_agent)
            if agent_team_no_009 == team_no_002:
                pos1 = agent_get_position(cur_agent)
                distance_010 = get_distance_between_positions_in_meters(0,1)
                if distance_010 < 500:
                    var011 = 500 - distance_010
                else:
                    var011 = 0
                #end
            #end
        #end
        var011 *= 6
        for cur_agent in __all_agents__:
            if agent_is_alive(cur_agent) and agent_is_human(cur_agent) and False:
                agent_team_no_013 = agent_get_team(cur_agent)
                if agent_team_no_013 != team_no_002:
                    pos1 = agent_get_position(cur_agent)
                    distance_014 = get_distance_between_positions(0,1)
                    if distance_014 < 300:
                        var015 = distance_014
                    else:
                        var015 = 300
                    #end
                #end
                var011 += var015
            else:
                pos1 = agent_get_position(cur_agent)
                distance_014 = get_distance_between_positions(0,1)
                if distance_014 < 300:
                    var016 = 300
                else:
                    var016 = 0
                #end
                var011 += var016
            #end
        #end
        agent_hit_points_017 = store_agent_hit_points(cur_agent)
        agent_hit_points_017 *= 2
        var011 += agent_hit_points_017
        if var011 >= var007:
            var007 = var011
            var006 = cur_agent
        #end
    #end
    reg0 = var006


def game_receive_url_response():
    pass


def game_get_cheat_mode():
    reg0 = _cheat_mode


def game_receive_network_message(player_id_001, var002, slot_no_003, var089, var090, var091, var092):
    scene_prop_kind_079_list2 = [
    spr.castle_f_door_b,
    spr.door_destructible,
    spr.castle_f_door_a,
    spr.viking_keep_destroy_sally_door_right,
    spr.viking_keep_destroy_sally_door_left,
    spr.earth_sally_gate_right,
    spr.earth_sally_gate_left,
    spr.castle_f_sally_door_a,
    spr.castle_e_sally_door_a,
    ]
    scene_prop_kind_079_list2 = [
    spr.siege_ladder_move_14m,
    spr.siege_ladder_move_12m,
    spr.siege_ladder_move_10m,
    spr.siege_ladder_move_8m,
    spr.siege_ladder_move_6m,
    spr.castle_f_door_b,
    spr.door_destructible,
    spr.castle_f_door_a,
    spr.viking_keep_destroy_sally_door_right,
    spr.viking_keep_destroy_sally_door_left,
    spr.earth_sally_gate_right,
    spr.earth_sally_gate_left,
    spr.castle_f_sally_door_a,
    spr.castle_e_sally_door_a,
    ]
    item_id_004_list1 = [
    4,
    3,
    ]
    if var002 == 0:
        if is_between(slot_no_003,2,11):
            var005 = 0
            if item_id_004 == -1:
                var005 = 1
            elif item_id_004 >= 0:
                troop_id_006 = player_get_troop_id(player_id_001)
                if is_between(troop_id_006,trp.swadian_crossbowman_multiplayer,trp.multiplayer_end):
                    slot_no_007 = troop_id_006 - trp.swadian_crossbowman_multiplayer
                    slot_no_007 += 61
                    item_slot_008 = item_get_slot(item_id_004,slot_no_007)
                    if item_slot_008 > 0:
                        var005 = 1
                        if _g_horses_are_avaliable != 1:
                            item_slot_009 = item_get_slot(item_id_004,60)
                            if is_between(item_slot_009,18,19):
                                var005 = 0
                            #end
                        #end
                    #end
                #end
                if _g_multiplayer_disallow_ranged_weapons == 1:
                    item_slot_009 = item_get_slot(item_id_004,60)
                    if is_between(item_slot_009,12,18):
                        var005 = 0
                    #end
                #end
            #end
            if var005 == 1:
                player_set_slot(player_id_001,slot_no_003,item_id_004)
            #end
        #end
    elif var002 == 1:
        if is_between(slot_no_003,35,39) and is_between(item_id_004,0,2):
            player_set_slot(player_id_001,slot_no_003,item_id_004)
        #end
    elif var002 == 19:
        if True:
            team_no_010 = player_get_team_no(player_id_001)
            if team_no_010 != item_id_004:
                if cf_multiplayer_team_is_available(player_id_001,item_id_004):
                    player_set_troop_id(player_id_001,-1)
                    player_set_team_no(player_id_001,item_id_004)
                    if item_id_004 != 2 and item_id_004 != 3:
                        m_timer_a_011 = store_mission_timer_a()
                        player_set_slot(player_id_001,28,m_timer_a_011)
                        multiplayer_send_message_to_player(player_id_001,66)
                    #end
                #end
            else:
                multiplayer_send_message_to_player(player_id_001,67)
            #end
        #end
    elif var002 == 20:
        if item_id_004 == -1:
            player_set_troop_id(player_id_001,-1)
        elif is_between(item_id_004,trp.swadian_crossbowman_multiplayer,trp.multiplayer_end):
            team_no_010 = player_get_team_no(player_id_001)
            if is_between(team_no_010,0,2):
                team_faction_012 = team_get_faction(team_no_010)
                troop_faction_013 = store_faction_of_troop(item_id_004)
                if troop_faction_013 == team_faction_012:
                    player_set_troop_id(player_id_001,item_id_004)
                    multiplayer_clear_player_selected_items(player_id_001)
                #end
            #end
        #end
    elif var002 == 2:
        if player_is_admin(player_id_001) and is_between(item_id_004,scn.multi_scene_1,scn.multiplayer_maps_end) and is_between(player_id_014,0,9):
            _g_multiplayer_changing_game_type_allowed = server_get_changing_game_type_allowed()
            if _g_multiplayer_changing_game_type_allowed == 1 or _g_multiplayer_game_type == player_id_014:
                multiplayer_fill_map_game_types(player_id_014)
                var015 = reg0
                var016 = 0
                var017 = 0 + var015
                for var018 in range(0, var017):
                    if troop_slot_eq(trp.multiplayer_data,var018,item_id_004):
                        var016 = 1
                        var017 = 0
                    #end
                #end
            #end
            if var016 == 1:
                _g_multiplayer_game_type = player_id_014
                multiplayer_set_g_multiplayer_is_game_type_captain()
                _g_multiplayer_selected_map = item_id_004
                team_set_faction(0,_g_multiplayer_next_team_1_faction)
                team_set_faction(1,_g_multiplayer_next_team_2_faction)
                game_multiplayer_get_game_type_mission_template(_g_multiplayer_game_type)
                if _g_multiplayer_game_type != 8 and not is_between(_g_multiplayer_next_team_2_faction,fac.player_supporters_faction,fac.kingdoms_end):
                    team_set_faction(1,fac.kingdom_1)
                #end
            #end
            start_multiplayer_mission(reg0,_g_multiplayer_selected_map,1)
        #end
    elif var002 == 3:
        if player_is_admin(player_id_001) and is_between(item_id_004,2,201):
            if _g_multiplayer_game_type == 8:
                val_min(item_id_004,12)
            #end
            server_set_max_num_players(item_id_004)
        #end
    elif var002 == 4:
        if player_is_admin(player_id_001) and is_between(item_id_004,1,3) and is_between(player_id_014,0,_g_multiplayer_max_num_bots):
            if item_id_004 == 1:
                _g_multiplayer_num_bots_team_1 = player_id_014
            else:
                _g_multiplayer_num_bots_team_2 = player_id_014
            #end
            max_players = get_max_players()
            for player_id_020 in range(1, max_players):
                if player_is_active(player_id_020):
                    multiplayer_send_2_int_to_player(player_id_020,51,item_id_004,player_id_014)
                #end
            #end
        #end
    elif var002 == 44:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
            server_set_anti_cheat(0)
        #end
    elif var002 == 5:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
            server_set_friendly_fire(item_id_004)
        #end
    elif var002 == 39:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
            server_set_melee_friendly_fire(item_id_004)
        #end
    elif var002 == 40:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,101):
            server_set_friendly_fire_damage_self_ratio(item_id_004)
        #end
    elif var002 == 41:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,101):
            server_set_friendly_fire_damage_friend_ratio(item_id_004)
        #end
    elif var002 == 6:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,4):
            server_set_ghost_mode(item_id_004)
        #end
    elif var002 == 7:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
            server_set_control_block_dir(item_id_004)
        #end
    elif var002 == 29:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,5):
            server_set_combat_speed(item_id_004)
        #end
    elif var002 == 30:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,6):
            _g_multiplayer_number_of_respawn_count = item_id_004
            max_players = get_max_players()
            for player_id_020 in range(1, max_players):
                if player_is_active(player_id_020):
                    multiplayer_send_int_to_player(player_id_020,88,item_id_004)
                #end
            #end
        #end
    elif var002 == 8:
        if player_is_admin(player_id_001):
            server_set_add_to_game_servers_list(item_id_004)
        #end
    elif var002 == 9:
        if player_is_admin(player_id_001) and is_between(item_id_004,3,31):
            _g_multiplayer_respawn_period = item_id_004
            max_players = get_max_players()
            for player_id_020 in range(1, max_players):
                if player_is_active(player_id_020):
                    multiplayer_send_int_to_player(player_id_020,57,item_id_004)
                #end
            #end
        #end
    elif var002 == 10:
        if player_is_admin(player_id_001) and is_between(item_id_004,5,121):
            _g_multiplayer_game_max_minutes = item_id_004
        #end
    elif var002 == 11:
        if player_is_admin(player_id_001) and is_between(item_id_004,60,901):
            _g_multiplayer_round_max_seconds = item_id_004
            max_players = get_max_players()
            for player_id_020 in range(1, max_players):
                if player_is_active(player_id_020):
                    multiplayer_send_int_to_player(player_id_020,59,item_id_004)
                #end
            #end
        #end
    elif var002 == 28:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
            _g_multiplayer_player_respawn_as_bot = item_id_004
            max_players = get_max_players()
            for player_id_020 in range(1, max_players):
                if player_is_active(player_id_020):
                    multiplayer_send_int_to_player(player_id_020,85,item_id_004)
                #end
            #end
        #end
    elif var002 == 12:
        if player_is_admin(player_id_001) and is_between(item_id_004,3,1001):
            _g_multiplayer_game_max_points = item_id_004
        #end
    elif var002 == 13:
        if player_is_admin(player_id_001) and is_between(item_id_004,25,401):
            _g_multiplayer_point_gained_from_flags = item_id_004
        #end
    elif var002 == 14:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,11):
            _g_multiplayer_point_gained_from_capturing_flag = item_id_004
        #end
    elif var002 == 36:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,1001):
            _g_multiplayer_initial_gold_multiplier = item_id_004
        #end
    elif var002 == 37:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,1001):
            _g_multiplayer_battle_earnings_multiplier = item_id_004
        #end
    elif var002 == 38:
        if player_is_admin(player_id_001) and is_between(item_id_004,0,1001):
            _g_multiplayer_round_earnings_multiplier = item_id_004
        #end
    elif var002 == 15:
        if player_is_admin(player_id_001):
            _g_multiplayer_renaming_server_allowed = server_get_renaming_server_allowed()
            if _g_multiplayer_renaming_server_allowed == 1:
                server_set_name(0)
            #end
        #end
    elif var002 == 16:
        if player_is_admin(player_id_001):
            server_set_password(0)
        #end
    elif var002 == 35:
        if player_is_admin(player_id_001):
            server_set_welcome_message(0)
        #end
    elif var002 == 17:
        if player_is_admin(player_id_001) and is_between(item_id_004,1,3):
            if item_id_004 == 1 and is_between(player_id_014,fac.kingdom_1,fac.kingdoms_end):
                _g_multiplayer_next_team_1_faction = player_id_014
            elif is_between(player_id_014,fac.kingdom_1,fac.kingdoms_end) or player_id_014 == fac.outlaws or player_id_014 == fac.ccoop_all_stars:
                _g_multiplayer_next_team_2_faction = player_id_014
            #end
        #end
    elif var002 == 45:
        if True:
            server_max_players = server_get_max_num_players()
            multiplayer_send_int_to_player(player_id_001,50,server_max_players)
            multiplayer_send_2_int_to_player(player_id_001,84,1,_g_multiplayer_next_team_1_faction)
            multiplayer_send_2_int_to_player(player_id_001,84,2,_g_multiplayer_next_team_2_faction)
            multiplayer_send_2_int_to_player(player_id_001,51,1,_g_multiplayer_num_bots_team_1)
            multiplayer_send_2_int_to_player(player_id_001,51,2,_g_multiplayer_num_bots_team_2)
            server_anti_cheat = server_get_anti_cheat()
            multiplayer_send_int_to_player(player_id_001,104,server_anti_cheat)
            server_friendly_fire = server_get_friendly_fire()
            multiplayer_send_int_to_player(player_id_001,52,server_friendly_fire)
            server_melee_friendly_fire = server_get_melee_friendly_fire()
            multiplayer_send_int_to_player(player_id_001,99,server_melee_friendly_fire)
            server_friendly_fire_damage_self_ratio = server_get_friendly_fire_damage_self_ratio()
            multiplayer_send_int_to_player(player_id_001,100,server_friendly_fire_damage_self_ratio)
            server_friendly_fire_damage_friend_ratio = server_get_friendly_fire_damage_friend_ratio()
            multiplayer_send_int_to_player(player_id_001,101,server_friendly_fire_damage_friend_ratio)
            server_ghost_mode = server_get_ghost_mode()
            multiplayer_send_int_to_player(player_id_001,53,server_ghost_mode)
            server_control_block_direction = server_get_control_block_dir()
            multiplayer_send_int_to_player(player_id_001,54,server_control_block_direction)
            server_combat_speed = server_get_combat_speed()
            multiplayer_send_int_to_player(player_id_001,55,server_combat_speed)
            server_add_to_game_servers_list = server_get_add_to_game_servers_list()
            multiplayer_send_int_to_player(player_id_001,56,server_add_to_game_servers_list)
            multiplayer_send_int_to_player(player_id_001,57,_g_multiplayer_respawn_period)
            multiplayer_send_int_to_player(player_id_001,58,_g_multiplayer_game_max_minutes)
            multiplayer_send_int_to_player(player_id_001,59,_g_multiplayer_round_max_seconds)
            multiplayer_send_int_to_player(player_id_001,85,_g_multiplayer_player_respawn_as_bot)
            multiplayer_send_int_to_player(player_id_001,60,_g_multiplayer_game_max_points)
            multiplayer_send_int_to_player(player_id_001,61,_g_multiplayer_point_gained_from_flags)
            multiplayer_send_int_to_player(player_id_001,62,_g_multiplayer_point_gained_from_capturing_flag)
            multiplayer_send_int_to_player(player_id_001,94,_g_multiplayer_initial_gold_multiplier)
            multiplayer_send_int_to_player(player_id_001,95,_g_multiplayer_battle_earnings_multiplier)
            multiplayer_send_int_to_player(player_id_001,96,_g_multiplayer_round_earnings_multiplier)
            multiplayer_send_int_to_player(player_id_001,92,_g_multiplayer_valid_vote_ratio)
            multiplayer_send_int_to_player(player_id_001,122,_g_multiplayer_ccoop_difficulty)
            s0 = str_store_server_name()
            multiplayer_send_string_to_player(player_id_001,63,0)
            multiplayer_send_message_to_player(player_id_001,105)
        #end
    elif var002 == 18:
        if player_is_admin(player_id_001):
            _g_multiplayer_renaming_server_allowed = server_get_renaming_server_allowed()
            multiplayer_send_int_to_player(player_id_001,97,_g_multiplayer_renaming_server_allowed)
            _g_multiplayer_changing_game_type_allowed = server_get_changing_game_type_allowed()
            multiplayer_send_int_to_player(player_id_001,98,_g_multiplayer_changing_game_type_allowed)
            server_max_players = server_get_max_num_players()
            multiplayer_send_int_to_player(player_id_001,50,server_max_players)
            multiplayer_send_2_int_to_player(player_id_001,84,1,_g_multiplayer_next_team_1_faction)
            multiplayer_send_2_int_to_player(player_id_001,84,2,_g_multiplayer_next_team_2_faction)
            multiplayer_send_2_int_to_player(player_id_001,51,1,_g_multiplayer_num_bots_team_1)
            multiplayer_send_2_int_to_player(player_id_001,51,2,_g_multiplayer_num_bots_team_2)
            server_anti_cheat = server_get_anti_cheat()
            multiplayer_send_int_to_player(player_id_001,104,server_anti_cheat)
            server_friendly_fire = server_get_friendly_fire()
            multiplayer_send_int_to_player(player_id_001,52,server_friendly_fire)
            server_melee_friendly_fire = server_get_melee_friendly_fire()
            multiplayer_send_int_to_player(player_id_001,99,server_melee_friendly_fire)
            server_friendly_fire_damage_self_ratio = server_get_friendly_fire_damage_self_ratio()
            multiplayer_send_int_to_player(player_id_001,100,server_friendly_fire_damage_self_ratio)
            server_friendly_fire_damage_friend_ratio = server_get_friendly_fire_damage_friend_ratio()
            multiplayer_send_int_to_player(player_id_001,101,server_friendly_fire_damage_friend_ratio)
            server_ghost_mode = server_get_ghost_mode()
            multiplayer_send_int_to_player(player_id_001,53,server_ghost_mode)
            server_control_block_direction = server_get_control_block_dir()
            multiplayer_send_int_to_player(player_id_001,54,server_control_block_direction)
            server_combat_speed = server_get_combat_speed()
            multiplayer_send_int_to_player(player_id_001,55,server_combat_speed)
            server_add_to_game_servers_list = server_get_add_to_game_servers_list()
            multiplayer_send_int_to_player(player_id_001,56,server_add_to_game_servers_list)
            multiplayer_send_int_to_player(player_id_001,57,_g_multiplayer_respawn_period)
            multiplayer_send_int_to_player(player_id_001,58,_g_multiplayer_game_max_minutes)
            multiplayer_send_int_to_player(player_id_001,59,_g_multiplayer_round_max_seconds)
            multiplayer_send_int_to_player(player_id_001,85,_g_multiplayer_player_respawn_as_bot)
            multiplayer_send_int_to_player(player_id_001,60,_g_multiplayer_game_max_points)
            multiplayer_send_int_to_player(player_id_001,61,_g_multiplayer_point_gained_from_flags)
            multiplayer_send_int_to_player(player_id_001,62,_g_multiplayer_point_gained_from_capturing_flag)
            multiplayer_send_int_to_player(player_id_001,94,_g_multiplayer_initial_gold_multiplier)
            multiplayer_send_int_to_player(player_id_001,95,_g_multiplayer_battle_earnings_multiplier)
            multiplayer_send_int_to_player(player_id_001,96,_g_multiplayer_round_earnings_multiplier)
            multiplayer_send_int_to_player(player_id_001,92,_g_multiplayer_valid_vote_ratio)
            multiplayer_send_int_to_player(player_id_001,106,_g_multiplayer_max_num_bots)
            multiplayer_send_int_to_player(player_id_001,122,_g_multiplayer_ccoop_difficulty)
            s0 = str_store_server_name()
            multiplayer_send_string_to_player(player_id_001,63,0)
            s0 = str_store_server_password()
            multiplayer_send_string_to_player(player_id_001,64,0)
        #end
    elif var002 == 21:
        if True:
            if _g_multiplayer_poll_running == 0:
                m_timer_a_031 = store_mission_timer_a()
                player_slot_032 = player_get_slot(player_id_001,26)
                if m_timer_a_031 >= player_slot_032:
                    var033 = 0
                    if item_id_004 == 1:
                        if _g_multiplayer_kick_voteable == 1 and player_is_active(player_id_014):
                            var033 = 1
                        #end
                    #end
                #end
            elif item_id_004 == 2:
                if _g_multiplayer_ban_voteable == 1 and player_is_active(player_id_014):
                    save_ban_info_of_player(player_id_014)
                    var033 = 1
                #end
            elif item_id_004 == 0:
                if _g_multiplayer_maps_voteable == 1:
                    multiplayer_fill_map_game_types(_g_multiplayer_game_type)
                    var015 = reg0
                    for var018 in range(0, var015):
                        var034 = var018 + 0
                        if troop_slot_eq(trp.multiplayer_data,var034,player_id_014):
                            var033 = 1
                            var015 = 0
                        #end
                    #end
                #end
            elif item_id_004 == 3:
                if _g_multiplayer_factions_voteable == 1:
                    multiplayer_fill_map_game_types(_g_multiplayer_game_type)
                    var015 = reg0
                    for var018 in range(0, var015):
                        var034 = var018 + 0
                        if troop_slot_eq(trp.multiplayer_data,var034,player_id_014):
                            var033 = 1
                            var015 = 0
                        #end
                    #end
                    if var033 == 1 and is_between(var035,fac.kingdom_1,fac.kingdoms_end) or is_between(var036,fac.kingdom_1,fac.kingdoms_end) or var035 == var036:
                        var033 = 0
                    #end
                #end
            elif item_id_004 == 4:
                var037 = _g_multiplayer_num_bots_voteable + 1
                if is_between(player_id_014,0,var037) and is_between(var035,0,var037):
                    var033 = 1
                #end
            #end
            if var033 == 1:
                s0 = str_store_player_username(player_id_001)
                if item_id_004 == 1:
                    s1 = str_store_player_username(player_id_014)
                    server_add_message_to_log(gstr.poll_kick_player_s1_by_s0)
                elif item_id_004 == 2:
                    s1 = str_store_player_username(player_id_014)
                    server_add_message_to_log(gstr.poll_ban_player_s1_by_s0)
                elif item_id_004 == 0:
                    var038 = player_id_014 - scn.multi_scene_1
                    var038 += gstr.multi_scene_1
                    s1 = str_store_string(var038)
                    server_add_message_to_log(gstr.poll_change_map_to_s1_by_s0)
                elif item_id_004 == 3:
                    var038 = player_id_014 - scn.multi_scene_1
                    var038 += gstr.multi_scene_1
                    s1 = str_store_string(var038)
                    s2 = str_store_faction_name(var035)
                    s3 = str_store_faction_name(var036)
                    server_add_message_to_log(gstr.poll_change_map_to_s1_and_factions_to_s2_and_s3_by_s0)
                elif item_id_004 == 4:
                    reg0 = player_id_014
                    reg1 = var035
                    server_add_message_to_log(gstr.poll_change_number_of_bots_to_reg0_and_reg1_by_s0)
                #end
            #end
            _g_multiplayer_poll_running = 1
            _g_multiplayer_poll_ended = 0
            _g_multiplayer_poll_num_sent = 0
            _g_multiplayer_poll_yes_count = 0
            _g_multiplayer_poll_no_count = 0
            _g_multiplayer_poll_to_show = item_id_004
            _g_multiplayer_poll_value_to_show = player_id_014
            if item_id_004 == 3:
                _g_multiplayer_poll_value_2_to_show = var035
                _g_multiplayer_poll_value_3_to_show = var036
            elif item_id_004 == 4:
                _g_multiplayer_poll_value_2_to_show = var035
                _g_multiplayer_poll_value_3_to_show = -1
            else:
                _g_multiplayer_poll_value_2_to_show = -1
                _g_multiplayer_poll_value_3_to_show = -1
            #end
            var039 = m_timer_a_031 + 900
            player_set_slot(player_id_001,26,var039)
            _g_multiplayer_poll_end_time = m_timer_a_031 + 60
            max_players = get_max_players()
            for player_id_020 in range(0, max_players):
                if player_is_active(player_id_020):
                    player_set_slot(player_id_020,23,1)
                    _g_multiplayer_poll_num_sent += 1
                    multiplayer_send_4_int_to_player(player_id_020,74,_g_multiplayer_poll_to_show,_g_multiplayer_poll_value_to_show,_g_multiplayer_poll_value_2_to_show,_g_multiplayer_poll_value_3_to_show)
                #end
            #end
        #end
    elif var002 == 22:
        if True:
            if _g_multiplayer_poll_running == 1 and is_between(item_id_004,0,2) and player_slot_eq(player_id_001,23,1):
                player_set_slot(player_id_001,23,0)
                if item_id_004 == 0:
                    _g_multiplayer_poll_no_count += 1
                elif item_id_004 == 1:
                    _g_multiplayer_poll_yes_count += 1
                #end
            #end
        #end
    elif var002 == 23:
        if True:
            if player_is_admin(player_id_001) and player_is_active(item_id_004):
                kick_player(item_id_004)
            #end
        #end
    elif var002 == 24:
        if True:
            if player_is_admin(player_id_001) and player_is_active(item_id_004):
                ban_player(item_id_004,0,player_id_001)
            #end
        #end
    elif var002 == 33:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,50,101):
                _g_multiplayer_valid_vote_ratio = item_id_004
            #end
        #end
    elif var002 == 34:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,2,7) or item_id_004 == 1000:
                _g_multiplayer_auto_team_balance_limit = item_id_004
                max_players = get_max_players()
                for player_id_020 in range(1, max_players):
                    if player_is_active(player_id_020):
                        multiplayer_send_int_to_player(player_id_020,93,item_id_004)
                    #end
                #end
            #end
        #end
    elif var002 == 25:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,51) and is_between(item_id_004,0,_g_multiplayer_max_num_bots):
                _g_multiplayer_num_bots_voteable = item_id_004
                max_players = get_max_players()
                for player_id_020 in range(1, max_players):
                    if player_is_active(player_id_020):
                        multiplayer_send_int_to_player(player_id_020,81,item_id_004)
                    #end
                #end
            #end
        #end
    elif var002 == 26:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
                _g_multiplayer_factions_voteable = item_id_004
                max_players = get_max_players()
                for player_id_020 in range(1, max_players):
                    if player_is_active(player_id_020):
                        multiplayer_send_int_to_player(player_id_020,82,item_id_004)
                    #end
                #end
            #end
        #end
    elif var002 == 27:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
                _g_multiplayer_maps_voteable = item_id_004
                max_players = get_max_players()
                for player_id_020 in range(1, max_players):
                    if player_is_active(player_id_020):
                        multiplayer_send_int_to_player(player_id_020,83,item_id_004)
                    #end
                #end
            #end
        #end
    elif var002 == 31:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
                _g_multiplayer_kick_voteable = item_id_004
                max_players = get_max_players()
                for player_id_020 in range(1, max_players):
                    if player_is_active(player_id_020):
                        multiplayer_send_int_to_player(player_id_020,90,item_id_004)
                    #end
                #end
            #end
        #end
    elif var002 == 32:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
                _g_multiplayer_ban_voteable = item_id_004
                max_players = get_max_players()
                for player_id_020 in range(1, max_players):
                    if player_is_active(player_id_020):
                        multiplayer_send_int_to_player(player_id_020,91,item_id_004)
                    #end
                #end
            #end
        #end
    elif var002 == 42:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
                _g_multiplayer_allow_player_banners = item_id_004
            #end
        #end
    elif var002 == 43:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
                _g_multiplayer_force_default_armor = item_id_004
            #end
        #end
    elif var002 == 46:
        if True:
            if _g_multiplayer_game_type == 7 and agent_is_active(item_id_004) and agent_is_alive(item_id_004) and agent_is_human(item_id_004):
                agent_id_040 = player_get_agent_id(player_id_001)
                if agent_is_active(agent_id_040) and agent_is_alive(agent_id_040):
                    pos0 = agent_get_position(agent_id_040)
                    pos1 = agent_get_position(item_id_004)
                    sq_distance_041 = get_sq_distance_between_positions_in_meters(0,1)
                    if sq_distance_041 <= 49 and agent_check_offer_from_agent(agent_id_040,item_id_004) or agent_slot_eq(agent_id_040,21,-1) and not agent_slot_eq(agent_id_040,21,item_id_004):
                        if agent_check_offer_from_agent(agent_id_040,item_id_004):
                            multiplayer_accept_duel(agent_id_040,item_id_004)
                        else:
                            var042 = 1
                            if agent_check_offer_from_agent(item_id_004,agent_id_040):
                                var042 = 0
                            #end
                        #end
                    #end
                #end
                agent_add_offer_with_timeout(item_id_004,agent_id_040,10000)
                agent_player_id_043 = agent_get_player_id(item_id_004)
                if player_is_active(agent_player_id_043):
                    if var042 == 1:
                        multiplayer_send_int_to_player(agent_player_id_043,108,agent_id_040)
                    #end
                else:
                    multiplayer_accept_duel(item_id_004,agent_id_040)
                #end
            #end
        #end
    elif var002 == 47:
        if True:
            if player_is_admin(player_id_001) and is_between(item_id_004,0,2):
                _g_multiplayer_disallow_ranged_weapons = item_id_004
            #end
        #end
    elif var002 == 48:
        if item_id_004 == 0:
            if _g_multiplayer_is_game_type_captain == 1:
                if is_between(slot_no_044,43,45) and is_between(troop_id_045,trp.npc1_1,trp.npc1_2) and player_slot_eq(player_id_001,42,0):
                    player_set_slot(player_id_001,slot_no_044,troop_id_045)
                elif is_between(slot_no_044,45,47):
                    troop_faction_046 = store_faction_of_troop(troop_id_045)
                    team_faction_047 = team_get_faction(0)
                    slot_no_048 = slot_no_044 - 2
                    player_slot_049 = player_get_slot(player_id_001,slot_no_048)
                    if player_slot_049 == troop_id_045:
                        player_set_slot(player_id_001,slot_no_044,troop_id_045)
                    elif team_faction_047 == troop_faction_046:
                        character_lvl_050 = store_character_level(troop_id_045)
                        if character_lvl_050 == 4:
                            player_set_slot(player_id_001,slot_no_044,troop_id_045)
                        #end
                    #end
                #end
            #end
        elif item_id_004 == 14:
            if True:
                if player_is_admin(player_id_001) and is_between(var051,0,3):
                    _g_multiplayer_ccoop_difficulty = var051
                    reg0 = var051
                #end
            #end
        elif item_id_004 == 17:
            if item_id_004 >= 0 and call_script(script.cf_coop_give_item_to_assigned_group_member,player_id_001,item_id_004):
                pass
            else:
                player_set_slot(player_id_001,49,-1)
            #end
        elif not multiplayer_is_dedicated_server():
            if item_id_004 in item_id_004_list1:
                _g_multiplayer_ccoop_enable_count_down = 1
                if item_id_004 == 3:
                    var052 = 1
                elif item_id_004 == 4:
                    var052 = 0
                #end
                if var052 > 0:
                    _g_multiplayer_ccoop_next_wave_start_time = store_mission_timer_a()
                    _g_multiplayer_ccoop_next_wave_start_time += _g_multiplayer_ccoop_enemy_respawn_secs
                    start_presentation(prsnt.multiplayer_ccoop_next_wave_time_counter)
                #end
            elif item_id_004 == 15:
                if not multiplayer_is_server():
                    if agent_is_active(agent_no_053) and agent_is_human(agent_no_053) and agent_is_alive(agent_no_053) and var054 >= 0:
                        agent_unequip_item(agent_no_053,var054,var055)
                    #end
                #end
            elif item_id_004 == 16:
                if not multiplayer_is_server():
                    if agent_is_active(agent_no_053) and agent_is_human(agent_no_053) and agent_is_alive(agent_no_053) and var056 >= 0:
                        agent_equip_item(agent_no_053,var056)
                    #end
                #end
            elif item_id_004 == 5:
                multiplayer_ccoop_set_prison_cart_visibility(1)
                scp_instance_058 = scene_prop_get_instance(spr.prison_cart_door_right,0)
                scene_prop_set_hit_points(scp_instance_058,var057)
                scp_instance_059 = scene_prop_get_instance(spr.prison_cart_door_left,0)
                scene_prop_set_hit_points(scp_instance_059,var057)
                if True:
                    agent_no_053 = get_player_agent_no()
                    if agent_no_053 >= 0:
                        print(gstr.prison_cart_hint)
                    #end
                #end
                start_presentation(prsnt.multiplayer_ccoop_next_wave_time_counter)
            elif item_id_004 == 6:
                multiplayer_ccoop_set_prison_cart_visibility(0)
                scp_instance_059 = scene_prop_get_instance(spr.prison_cart_door_left,0)
                scp_instance_058 = scene_prop_get_instance(spr.prison_cart_door_right,0)
                random_x_060 = store_random_in_range(35,80)
                random_x_061 = store_random_in_range(-80,-35)
                random_x_062 = store_random_in_range(100,350)
                random_x_063 = store_random_in_range(100,350)
                pos1 = prop_instance_get_position(scp_instance_059)
                position_rotate_z(1,random_x_060,1)
                prop_instance_animate_to_position(scp_instance_059,1,random_x_062)
                pos1 = prop_instance_get_position(scp_instance_058)
                position_rotate_z(1,random_x_061,1)
                prop_instance_animate_to_position(scp_instance_058,1,random_x_063)
            elif item_id_004 == 7:
                troop_set_slot(trp.multiplayer_data,186,var064)
                troop_set_slot(trp.multiplayer_data,187,var065)
                troop_set_slot(trp.multiplayer_data,188,var066)
            elif item_id_004 == 8:
                troop_set_slot(trp.multiplayer_data,189,var064)
                troop_set_slot(trp.multiplayer_data,190,var065)
                troop_set_slot(trp.multiplayer_data,191,var066)
            elif item_id_004 == 9:
                troop_set_slot(trp.multiplayer_data,192,var064)
                troop_set_slot(trp.multiplayer_data,193,var065)
                troop_set_slot(trp.multiplayer_data,194,var066)
            elif item_id_004 == 10:
                troop_set_slot(trp.multiplayer_data,195,var064)
                troop_set_slot(trp.multiplayer_data,196,var065)
                troop_set_slot(trp.multiplayer_data,197,var066)
            elif item_id_004 == 11:
                troop_set_slot(trp.multiplayer_data,198,var064)
                troop_set_slot(trp.multiplayer_data,199,var065)
                troop_set_slot(trp.multiplayer_data,200,var066)
            elif item_id_004 == 12:
                troop_set_slot(trp.multiplayer_data,201,var064)
                start_presentation(prsnt.multiplayer_flag_projection_display_ccoop_wave)
            elif item_id_004 == 18:
                if agent_is_active(var067) and agent_is_alive(var067) and agent_is_non_player(var067) and is_between(var068,0,2):
                    agent_set_team(var067,var068)
                    if player_is_active(player_id_069):
                        agent_set_group(var067,player_id_069)
                    #end
                #end
            elif item_id_004 == 1:
                my_player = multiplayer_get_my_player()
                player_set_slot(my_player,42,var070)
            elif item_id_004 == 13:
                if is_between(var073,0,4) and is_between(slot_no_072,47,49):
                    my_player = multiplayer_get_my_player()
                    player_set_slot(my_player,slot_no_072,var073)
                #end
            #end
        #end
    elif not multiplayer_is_dedicated_server():
        if var002 == 97:
            _g_multiplayer_renaming_server_allowed = item_id_004
        elif var002 == 98:
            _g_multiplayer_changing_game_type_allowed = item_id_004
        elif var002 == 50:
            server_set_max_num_players(item_id_004)
        elif var002 == 84:
            if item_id_004 == 1:
                _g_multiplayer_next_team_1_faction = player_id_014
            else:
                _g_multiplayer_next_team_2_faction = player_id_014
            #end
        elif var002 == 51:
            if item_id_004 == 1:
                _g_multiplayer_num_bots_team_1 = player_id_014
            else:
                _g_multiplayer_num_bots_team_2 = player_id_014
            #end
        elif var002 == 104:
            server_set_anti_cheat(0)
        elif var002 == 52:
            server_set_friendly_fire(item_id_004)
        elif var002 == 99:
            server_set_melee_friendly_fire(item_id_004)
        elif var002 == 100:
            server_set_friendly_fire_damage_self_ratio(item_id_004)
        elif var002 == 101:
            server_set_friendly_fire_damage_friend_ratio(item_id_004)
        elif var002 == 53:
            server_set_ghost_mode(item_id_004)
        elif var002 == 54:
            server_set_control_block_dir(item_id_004)
        elif var002 == 56:
            server_set_add_to_game_servers_list(item_id_004)
        elif var002 == 57:
            _g_multiplayer_respawn_period = item_id_004
        elif var002 == 58:
            _g_multiplayer_game_max_minutes = item_id_004
        elif var002 == 59:
            _g_multiplayer_round_max_seconds = item_id_004
        elif var002 == 85:
            _g_multiplayer_player_respawn_as_bot = item_id_004
        elif var002 == 60:
            _g_multiplayer_game_max_points = item_id_004
        elif var002 == 61:
            _g_multiplayer_point_gained_from_flags = item_id_004
        elif var002 == 62:
            _g_multiplayer_point_gained_from_capturing_flag = item_id_004
        elif var002 == 94:
            _g_multiplayer_initial_gold_multiplier = item_id_004
        elif var002 == 95:
            _g_multiplayer_battle_earnings_multiplier = item_id_004
        elif var002 == 96:
            _g_multiplayer_round_earnings_multiplier = item_id_004
        elif var002 == 88:
            _g_multiplayer_number_of_respawn_count = item_id_004
        elif var002 == 63:
            server_set_name(0)
        elif var002 == 64:
            server_set_password(0)
            start_presentation(prsnt.game_multiplayer_admin_panel)
        elif var002 == 105:
            _g_multiplayer_show_server_rules = 1
            start_presentation(prsnt.multiplayer_welcome_message)
        elif var002 == 65:
            _g_multiplayer_game_type = item_id_004
            multiplayer_set_g_multiplayer_is_game_type_captain()
        elif var002 == 92:
            _g_multiplayer_valid_vote_ratio = item_id_004
        elif var002 == 106:
            _g_multiplayer_max_num_bots = item_id_004
        elif var002 == 107:
            _server_mission_timer_while_player_joined = item_id_004
        elif var002 == 93:
            _g_multiplayer_auto_team_balance_limit = item_id_004
        elif var002 == 81:
            _g_multiplayer_num_bots_voteable = item_id_004
        elif var002 == 82:
            _g_multiplayer_factions_voteable = item_id_004
        elif var002 == 83:
            _g_multiplayer_maps_voteable = item_id_004
        elif var002 == 90:
            _g_multiplayer_kick_voteable = item_id_004
        elif var002 == 91:
            _g_multiplayer_ban_voteable = item_id_004
        elif var002 == 102:
            _g_multiplayer_allow_player_banners = item_id_004
        elif var002 == 103:
            _g_multiplayer_force_default_armor = item_id_004
        elif var002 == 112:
            _g_multiplayer_disallow_ranged_weapons = item_id_004
        elif var002 == 66:
            _g_confirmation_result = 1
        elif var002 == 67:
            _g_confirmation_result = -1
        elif var002 == 68:
            show_multiplayer_message(item_id_004,player_id_014)
        elif var002 == 69:
            draw_this_round(item_id_004)
        elif var002 == 70:
            set_attached_scene_prop(item_id_004,player_id_014)
            if _g_multiplayer_game_type == 4:
                if player_id_014 != -1:
                    agent_set_horse_speed_factor(item_id_004,75)
                else:
                    agent_set_horse_speed_factor(item_id_004,100)
                #end
            #end
        elif var002 == 71:
            set_team_flag_situation(item_id_004,player_id_014)
        elif var002 == 72:
            team_set_score(item_id_004,player_id_014)
        elif var002 == 86:
            player_set_score(item_id_004,player_id_014)
            player_set_kill_count(item_id_004,var035)
            player_set_death_count(item_id_004,var036)
        elif var002 == 73:
            set_num_agents_around_flag(var074,var075)
        elif var002 == 74:
            var076 = 0
            if item_id_004 == 1 or item_id_004 == 2 and player_is_active(player_id_014):
                var076 = 1
            else:
                var076 = 1
            #end
            if var076 == 1:
                _g_multiplayer_poll_to_show = item_id_004
                _g_multiplayer_poll_value_to_show = player_id_014
                _g_multiplayer_poll_value_2_to_show = var035
                _g_multiplayer_poll_value_3_to_show = var036
                m_timer_a_031 = store_mission_timer_a()
                _g_multiplayer_poll_client_end_time = m_timer_a_031 + 60
                start_presentation(prsnt.multiplayer_poll)
            #end
        elif var002 == 75:
            change_flag_owner(var074,var077)
        elif var002 == 76:
            use_item(item_id_004,player_id_014)
        elif var002 == 121:
            if is_between(item_id_004,50,60):
                player_id_001 = multiplayer_get_my_player()
                player_set_slot(player_id_001,item_id_004,player_id_014)
            #end
        elif var002 == 120:
            coop_drop_item(item_id_004,player_id_014,var035)
        elif var002 == 77:
            scene_prop_set_slot(scene_prop_instance_id_078,1,1)
            scene_prop_kind_079 = prop_instance_get_scene_prop_kind(scene_prop_instance_id_078)
            if scene_prop_kind_079 == spr.winch_b:
                var080 = spr.portcullis
            elif scene_prop_kind_079 in scene_prop_kind_079_list2:
                var080 = scene_prop_kind_079
            #end
            if var080 == spr.portcullis:
                var081 = -1
                pos0 = prop_instance_get_position(scene_prop_instance_id_078)
                scp_num_instances_082 = scene_prop_get_num_instances(var080)
                for var083 in range(0, scp_num_instances_082):
                    scp_instance_084 = scene_prop_get_instance(var080,var083)
                    pos1 = prop_instance_get_position(scp_instance_084)
                    sq_distance_085 = get_sq_distance_between_positions(0,1)
                    if var081 == -1 or sq_distance_085 < var081:
                        var081 = sq_distance_085
                        var086 = scp_instance_084
                    #end
                #end
                if var081 >= 0:
                    prop_instance_is_animating(var087,var086)
                    if var087 == 0:
                        pos0 = prop_instance_get_starting_position(var086)
                        position_move_z(0,375)
                        prop_instance_animate_to_position(var086,0,1)
                    elif scene_prop_kind_079 in scene_prop_kind_079_list2:
                        var086 = scene_prop_instance_id_078
                        pos0 = prop_instance_get_starting_position(var086)
                        position_rotate_z(0,-80)
                        prop_instance_animate_to_position(var086,0,1)
                    else:
                        var086 = scene_prop_instance_id_078
                        prop_instance_is_animating(var087,var086)
                        if var087 == 0:
                            pos0 = prop_instance_get_starting_position(var086)
                            prop_instance_animate_to_position(var086,0,1)
                        #end
                    #end
                #end
            #end
        elif var002 == 78:
            if item_id_004 != -9999:
                _g_round_start_time = item_id_004
            else:
                _g_round_start_time = store_mission_timer_a()
                initialize_scene_prop_slots(spr.siege_ladder_move_6m)
                initialize_scene_prop_slots(spr.siege_ladder_move_8m)
                initialize_scene_prop_slots(spr.siege_ladder_move_10m)
                initialize_scene_prop_slots(spr.siege_ladder_move_12m)
                initialize_scene_prop_slots(spr.siege_ladder_move_14m)
                initialize_scene_prop_slots(spr.winch_b)
            #end
        elif var002 == 79:
            if is_presentation_active(prsnt.multiplayer_item_select):
                _g_close_equipment_selection = 1
            #end
            start_presentation(prsnt.multiplayer_troop_select)
        elif var002 == 80:
            _g_battle_death_mode_started = 2
            start_presentation(prsnt.multiplayer_flag_projection_display_bt)
            start_death_mode()
        elif var002 == 89:
            if _g_my_spawn_count > 0:
                _g_my_spawn_count = _g_my_spawn_count + item_id_004
            else:
                _g_my_spawn_count = item_id_004
            #end
        elif var002 == 108:
            if agent_is_active(item_id_004):
                agent_player_id_088 = agent_get_player_id(item_id_004)
                if player_is_active(agent_player_id_088):
                    s0 = str_store_player_username(agent_player_id_088)
                else:
                    s0 = str_store_agent_name(item_id_004)
                #end
                print(gstr.s0_offers_a_duel_with_you)
                if True:
                    agent_no_053 = get_player_agent_no()
                    if agent_is_active(agent_no_053):
                        agent_add_offer_with_timeout(agent_no_053,item_id_004,10000)
                    #end
                #end
            #end
        elif var002 == 109:
            m_timer_a_031 = store_mission_timer_a()
            if agent_is_active(item_id_004):
                agent_no_053 = get_player_agent_no()
                if agent_is_active(agent_no_053):
                    agent_player_id_088 = agent_get_player_id(item_id_004)
                    if player_is_active(agent_player_id_088):
                        s0 = str_store_player_username(agent_player_id_088)
                    else:
                        s0 = str_store_agent_name(item_id_004)
                    #end
                #end
                print(gstr.a_duel_between_you_and_s0_will_start_in_3_seconds)
                _g_multiplayer_duel_start_time = m_timer_a_031
                start_presentation(prsnt.multiplayer_duel_start_counter)
                agent_set_slot(agent_no_053,21,item_id_004)
                agent_set_slot(item_id_004,21,agent_no_053)
                agent_set_slot(agent_no_053,22,m_timer_a_031)
                agent_set_slot(item_id_004,22,m_timer_a_031)
                agent_clear_relations_with_agents(agent_no_053)
                agent_clear_relations_with_agents(item_id_004)
            #end
        elif var002 == 110:
            if agent_is_active(item_id_004):
                agent_player_id_088 = agent_get_player_id(item_id_004)
                if player_is_active(agent_player_id_088):
                    s0 = str_store_player_username(agent_player_id_088)
                else:
                    s0 = str_store_agent_name(item_id_004)
                #end
                print(gstr.your_duel_with_s0_is_cancelled)
            #end
            if True:
                agent_no_053 = get_player_agent_no()
                if agent_is_active(agent_no_053):
                    agent_set_slot(agent_no_053,21,-1)
                    agent_clear_relations_with_agents(agent_no_053)
                #end
            #end
        elif var002 == 111:
            print(gstr.server_s0,4294927974)
        elif var002 == 113:
            if is_between(slot_no_003,35,39) and is_between(item_id_004,0,2):
                player_set_slot(player_id_001,slot_no_003,item_id_004)
            elif var002 == 122:
                reg0 = item_id_004
                _g_multiplayer_ccoop_difficulty = item_id_004
            elif var002 == 123:
                start_presentation(prsnt.multiplayer_ccoop_victory_message)
            elif var002 == 124:
                pass
            elif var002 == 117:
                if is_between(var092,0,snd.sounds_end):
                    set_fixed_point_multiplier(100)
                    init_position(1)
                    position_set_x(1,var089)
                    position_set_y(1,var090)
                    position_set_z(1,var091)
                    play_sound_at_position(var092,1)
                #end
            #end
        #end
    #end


def cf_multiplayer_evaluate_poll():
    var001 = 0
    _g_multiplayer_poll_ended = 1
    var002 = _g_multiplayer_poll_yes_count + _g_multiplayer_poll_no_count
    var003 = _g_multiplayer_poll_num_sent - var002
    var004 = 3 * var003
    var004 /= 10
    var002 += var004
    val_max(var002,1)
    var005 = 100 * _g_multiplayer_poll_yes_count
    var005 /= var002
    if var005 >= _g_multiplayer_valid_vote_ratio:
        var001 = 1
        if _g_multiplayer_poll_to_show == 1:
            if player_is_active(_g_multiplayer_poll_value_to_show):
                kick_player(_g_multiplayer_poll_value_to_show)
            #end
        elif _g_multiplayer_poll_to_show == 2:
            ban_player_using_saved_ban_info()
        elif _g_multiplayer_poll_to_show == 3:
            team_set_faction(0,_g_multiplayer_poll_value_2_to_show)
            team_set_faction(1,_g_multiplayer_poll_value_3_to_show)
        elif _g_multiplayer_poll_to_show == 4:
            _g_multiplayer_num_bots_team_1 = _g_multiplayer_poll_value_to_show
            _g_multiplayer_num_bots_team_2 = _g_multiplayer_poll_value_2_to_show
            max_players = get_max_players()
            for player_id_007 in range(1, max_players):
                if player_is_active(player_id_007):
                    multiplayer_send_2_int_to_player(player_id_007,51,1,_g_multiplayer_num_bots_team_1)
                    multiplayer_send_2_int_to_player(player_id_007,51,2,_g_multiplayer_num_bots_team_2)
                #end
            #end
        #end
    else:
        _g_multiplayer_poll_running = 0
    #end
    max_players = get_max_players()
    show_multiplayer_message(7,var001)
    for player_id_007 in range(1, max_players):
        if player_is_active(player_id_007):
            multiplayer_send_2_int_to_player(player_id_007,68,7,var001)
        #end
    #end


def multiplayer_accept_duel(agent_id_001, agent_id_002):
    if agent_slot_ge(agent_id_001,21,0):
        agent_slot_003 = agent_get_slot(agent_id_001,21)
        if agent_is_active(agent_slot_003):
            agent_clear_relations_with_agents(agent_slot_003)
            agent_set_slot(agent_slot_003,21,-1)
            agent_player_id_004 = agent_get_player_id(agent_slot_003)
            if player_is_active(agent_player_id_004):
                multiplayer_send_int_to_player(agent_player_id_004,110,agent_id_001)
            else:
                agent_force_rethink(agent_slot_003)
            #end
        #end
    #end
    if agent_slot_ge(agent_id_002,21,0):
        agent_slot_003 = agent_get_slot(agent_id_002,21)
        if agent_is_active(agent_slot_003):
            agent_clear_relations_with_agents(agent_slot_003)
            agent_set_slot(agent_slot_003,21,-1)
            if player_is_active(agent_player_id_004):
                multiplayer_send_int_to_player(agent_player_id_004,110,agent_id_002)
            else:
                agent_force_rethink(agent_slot_003)
            #end
        #end
    #end
    agent_set_slot(agent_id_001,21,agent_id_002)
    agent_set_slot(agent_id_002,21,agent_id_001)
    agent_clear_relations_with_agents(agent_id_001)
    agent_clear_relations_with_agents(agent_id_002)
    agent_player_id_004 = agent_get_player_id(agent_id_001)
    m_timer_a_005 = store_mission_timer_a()
    if player_is_active(agent_player_id_004):
        multiplayer_send_int_to_player(agent_player_id_004,109,agent_id_002)
    else:
        agent_force_rethink(agent_id_001)
    #end
    agent_set_slot(agent_id_001,22,m_timer_a_005)
    agent_player_id_006 = agent_get_player_id(agent_id_002)
    if player_is_active(agent_player_id_006):
        multiplayer_send_int_to_player(agent_player_id_006,109,agent_id_001)
    else:
        agent_force_rethink(agent_id_002)
    #end
    agent_set_slot(agent_id_002,22,m_timer_a_005)


def game_get_multiplayer_server_option_for_mission_template(var001, var002):
    if var002 == 0:
        reg0 = _g_multiplayer_team_1_faction
        set_trigger_result(1)
    elif var002 == 1:
        reg0 = _g_multiplayer_team_2_faction
        set_trigger_result(1)
    elif var002 == 2:
        reg0 = _g_multiplayer_num_bots_team_1
        set_trigger_result(1)
    elif var002 == 3:
        reg0 = _g_multiplayer_num_bots_team_2
        set_trigger_result(1)
    elif var002 == 4:
        reg0 = server_get_friendly_fire()
        set_trigger_result(1)
    elif var002 == 5:
        reg0 = server_get_melee_friendly_fire()
        set_trigger_result(1)
    elif var002 == 6:
        reg0 = server_get_friendly_fire_damage_self_ratio()
        set_trigger_result(1)
    elif var002 == 7:
        reg0 = server_get_friendly_fire_damage_friend_ratio()
        set_trigger_result(1)
    elif var002 == 8:
        reg0 = server_get_ghost_mode()
        set_trigger_result(1)
    elif var002 == 9:
        reg0 = server_get_control_block_dir()
        set_trigger_result(1)
    elif var002 == 10:
        reg0 = server_get_combat_speed()
        set_trigger_result(1)
    else:
        if var001 == mt.multiplayer_hq:
            var002 += 1
        #end
        if var002 == 11:
            reg0 = _g_multiplayer_game_max_minutes
            set_trigger_result(1)
        else:
            if var001 != mt.multiplayer_bt and var001 != mt.multiplayer_fd and var001 != mt.multiplayer_sg:
                var002 += 1
            #end
        #end
        if var002 == 12:
            reg0 = _g_multiplayer_round_max_seconds
            set_trigger_result(1)
        else:
            if var001 != mt.multiplayer_bt and var001 != mt.multiplayer_fd:
                var002 += 1
            #end
        #end
        if var002 == 13:
            reg0 = _g_multiplayer_player_respawn_as_bot
            set_trigger_result(1)
        else:
            if var001 != mt.multiplayer_sg:
                var002 += 1
            #end
        #end
        if var002 == 14:
            reg0 = _g_multiplayer_number_of_respawn_count
            set_trigger_result(1)
        elif var002 == 15:
            reg0 = _g_multiplayer_game_max_points
            set_trigger_result(1)
        else:
            if var001 != mt.multiplayer_hq:
                var002 += 1
            #end
        #end
        if var002 == 16:
            reg0 = _g_multiplayer_point_gained_from_flags
            set_trigger_result(1)
        else:
            if var001 != mt.multiplayer_cf:
                var002 += 1
            #end
        #end
        if var002 == 17:
            reg0 = _g_multiplayer_point_gained_from_capturing_flag
            set_trigger_result(1)
        elif var002 == 18:
            reg0 = _g_multiplayer_respawn_period
            set_trigger_result(1)
        elif var002 == 19:
            reg0 = _g_multiplayer_initial_gold_multiplier
            set_trigger_result(1)
        elif var002 == 20:
            reg0 = _g_multiplayer_battle_earnings_multiplier
            set_trigger_result(1)
        else:
            if var001 != mt.multiplayer_bt and var001 != mt.multiplayer_fd and var001 != mt.multiplayer_sg:
                var002 += 1
            #end
        #end
        if var002 == 21:
            reg0 = _g_multiplayer_round_earnings_multiplier
            set_trigger_result(1)
        #end
    #end


def game_multiplayer_server_option_for_mission_template_to_string(var001, var002, var003):
    str_clear(0)
    if var002 == 0:
        reg1 = 1
        s0 = str_store_string(gstr.team_reg1_faction)
        s1 = str_store_faction_name(var003)
        s0 = str_store_string(gstr.s0_s1)
    elif var002 == 1:
        reg1 = 2
        s0 = str_store_string(gstr.team_reg1_faction)
        s1 = str_store_faction_name(var003)
        s0 = str_store_string(gstr.s0_s1)
    elif var002 == 2:
        reg1 = 1
        s0 = str_store_string(gstr.number_of_bots_in_team_reg1)
        reg0 = var003
        s0 = str_store_string(gstr.s0_reg0)
    elif var002 == 3:
        reg1 = 2
        s0 = str_store_string(gstr.number_of_bots_in_team_reg1)
        reg0 = var003
        s0 = str_store_string(gstr.s0_reg0)
    elif var002 == 4:
        s0 = str_store_string(gstr.allow_friendly_fire)
        if var003 == 0:
            s1 = str_store_string(gstr.no_wo_dot)
        else:
            s1 = str_store_string(gstr.yes_wo_dot)
        #end
        s0 = str_store_string(gstr.s0_s1)
    elif var002 == 5:
        s0 = str_store_string(gstr.allow_melee_friendly_fire)
        if var003 == 0:
            s1 = str_store_string(gstr.no_wo_dot)
        else:
            s1 = str_store_string(gstr.yes_wo_dot)
        #end
        s0 = str_store_string(gstr.s0_s1)
    elif var002 == 6:
        s0 = str_store_string(gstr.friendly_fire_damage_self_ratio)
        reg0 = var003
        s0 = str_store_string(gstr.s0_reg0)
    elif var002 == 7:
        s0 = str_store_string(gstr.friendly_fire_damage_friend_ratio)
        reg0 = var003
        s0 = str_store_string(gstr.s0_reg0)
    elif var002 == 8:
        s0 = str_store_string(gstr.spectator_camera)
        if var003 == 0:
            s1 = str_store_string(gstr.free)
        elif var003 == 1:
            s1 = str_store_string(gstr.stick_to_any_player)
        elif var003 == 2:
            s1 = str_store_string(gstr.stick_to_team_members)
        else:
            s1 = str_store_string(gstr.stick_to_team_members_view)
        #end
        s0 = str_store_string(gstr.s0_s1)
    elif var002 == 9:
        s0 = str_store_string(gstr.control_block_direction)
        if var003 == 0:
            s1 = str_store_string(gstr.automatic)
        else:
            s1 = str_store_string(gstr.by_mouse_movement)
        #end
        s0 = str_store_string(gstr.s0_s1)
    elif var002 == 10:
        s0 = str_store_string(gstr.combat_speed)
        if var003 == 0:
            s1 = str_store_string(gstr.combat_speed_0)
        elif var003 == 1:
            s1 = str_store_string(gstr.combat_speed_1)
        elif var003 == 2:
            s1 = str_store_string(gstr.combat_speed_2)
        elif var003 == 3:
            s1 = str_store_string(gstr.combat_speed_3)
        else:
            s1 = str_store_string(gstr.combat_speed_4)
        #end
        s0 = str_store_string(gstr.s0_s1)
    elif var001 == mt.multiplayer_hq:
        var002 += 1
        if var002 == 11:
            s0 = str_store_string(gstr.map_time_limit)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        else:
            if var001 != mt.multiplayer_bt and var001 != mt.multiplayer_fd and var001 != mt.multiplayer_sg:
                var002 += 1
            #end
        #end
        if var002 == 12:
            s0 = str_store_string(gstr.round_time_limit)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        else:
            if var001 != mt.multiplayer_bt and var001 != mt.multiplayer_fd:
                var002 += 1
            #end
        #end
        if var002 == 13:
            s0 = str_store_string(gstr.players_take_control_of_a_bot_after_death)
            if var003 == 0:
                s1 = str_store_string(gstr.no_wo_dot)
            else:
                s1 = str_store_string(gstr.yes_wo_dot)
            #end
        #end
        s0 = str_store_string(gstr.s0_s1)
    elif var001 != mt.multiplayer_sg:
        var002 += 1
        if var002 == 14:
            s0 = str_store_string(gstr.defender_spawn_count_limit)
            if var003 == 0:
                s1 = str_store_string(gstr.unlimited)
            else:
                reg1 = var003
                s1 = str_store_string(gstr.reg1)
            #end
        #end
        s0 = str_store_string(gstr.s0_s1)
    elif var002 == 15:
        s0 = str_store_string(gstr.team_points_limit)
        reg0 = var003
        s0 = str_store_string(gstr.s0_reg0)
    else:
        if var001 != mt.multiplayer_hq:
            var002 += 1
        #end
        if var002 == 16:
            s0 = str_store_string(gstr.point_gained_from_flags)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        else:
            if var001 != mt.multiplayer_cf:
                var002 += 1
            #end
        #end
        if var002 == 17:
            s0 = str_store_string(gstr.point_gained_from_capturing_flag)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        elif var002 == 18:
            s0 = str_store_string(gstr.respawn_period)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        elif var002 == 19:
            s0 = str_store_string(gstr.initial_gold_multiplier)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        elif var002 == 20:
            s0 = str_store_string(gstr.battle_earnings_multiplier)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        else:
            if var001 != mt.multiplayer_bt and var001 != mt.multiplayer_fd and var001 != mt.multiplayer_sg:
                var002 += 1
            #end
        #end
        if var002 == 21:
            s0 = str_store_string(gstr.round_earnings_multiplier)
            reg0 = var003
            s0 = str_store_string(gstr.s0_reg0)
        #end
    #end


def cf_multiplayer_team_is_available(var001, var002):
    var003 = 1
    if _g_multiplayer_game_type == 8 and var002 == 1:
        var003 = 0
    elif _g_multiplayer_game_type == 8 and var002 == 0:
        var003 = 1
    elif _g_multiplayer_game_type != 0 and _g_multiplayer_game_type != 7 and is_between(var002,0,2) and not teams_are_enemies(var002,var002):
        var003 = 0
        var004 = 0
        var005 = 0
        max_players = get_max_players()
        for player_id_007 in range(0, max_players):
            if player_is_active(player_id_007) and player_id_007 != var001:
                team_no_008 = player_get_team_no(player_id_007)
                if team_no_008 == 0:
                    var004 += 1
                elif team_no_008 == 1:
                    var005 += 1
                #end
            #end
        #end
        var009 = var004 - var005
        if var009 >= 0:
            var009 += 1
        else:
            var009 += -1
        #end
        if var002 == 0 and var009 < _g_multiplayer_auto_team_balance_limit:
            var003 = 1
        elif var002 == 1:
            var010 = _g_multiplayer_auto_team_balance_limit * -1
            if var009 > var010:
                var003 = 1
            #end
        #end
    #end


def find_number_of_agents_constant():
    var001 = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent):
            var001 += 1
        #end
    #end
    if var001 <= 2:
        reg0 = 100
    elif var001 <= 4:
        reg0 = 140
    elif var001 <= 7:
        reg0 = 180
    elif var001 <= 11:
        reg0 = 220
    elif var001 <= 17:
        reg0 = 260
    elif var001 <= 25:
        reg0 = 300
    elif var001 <= 36:
        reg0 = 340
    elif var001 <= 50:
        reg0 = 380
    elif var001 <= 68:
        reg0 = 420
    elif var001 <= 91:
        reg0 = 460
    else:
        reg0 = 500
    #end


def game_multiplayer_event_duel_offered(var001):
    agent_no_002 = get_player_agent_no()
    if agent_is_active(agent_no_002) and agent_slot_eq(agent_no_002,21,-1) or agent_check_offer_from_agent(agent_no_002,var001) and not agent_slot_eq(agent_no_002,21,var001):
        multiplayer_send_int_to_server(46,var001)
        agent_player_id_003 = agent_get_player_id(var001)
        if player_is_active(agent_player_id_003):
            s0 = str_store_player_username(agent_player_id_003)
        else:
            s0 = str_store_agent_name(var001)
        #end
        print(gstr.a_duel_request_is_sent_to_s0)
    #end


def game_get_multiplayer_game_type_enum():
    reg0 = 0
    reg1 = 9


def game_multiplayer_get_game_type_mission_template(var002):
    var001 = -1
    if var002 == 0:
        var001 = mt.multiplayer_dm
    elif var002 == 1:
        var001 = mt.multiplayer_tdm
    elif var002 == 2:
        var001 = mt.multiplayer_bt
    elif var002 == 3:
        var001 = mt.multiplayer_fd
    elif var002 == 4:
        var001 = mt.multiplayer_cf
    elif var002 == 5:
        var001 = mt.multiplayer_hq
    elif var002 == 6:
        var001 = mt.multiplayer_sg
    elif var002 == 7:
        var001 = mt.multiplayer_duel
    elif var002 == 8:
        var001 = mt.multiplayer_ccoop
    #end
    reg0 = var001


def multiplayer_get_mission_template_game_type(var001):
    var002 = -1
    if var001 == mt.multiplayer_dm:
        var002 = 0
    elif var001 == mt.multiplayer_tdm:
        var002 = 1
    elif var001 == mt.multiplayer_bt:
        var002 = 2
    elif var001 == mt.multiplayer_fd:
        var002 = 3
    elif var001 == mt.multiplayer_cf:
        var002 = 4
    elif var001 == mt.multiplayer_hq:
        var002 = 5
    elif var001 == mt.multiplayer_sg:
        var002 = 6
    elif var001 == mt.multiplayer_duel:
        var002 = 7
    elif var001 == mt.multiplayer_ccoop:
        var002 = 8
    #end
    reg0 = var002


def multiplayer_fill_available_factions_combo_button(var001, var002):
    for fac_003 in range(fac.kingdom_1, fac.kingdoms_end):
        s0 = str_store_faction_name(fac_003)
        overlay_add_item(var001,0)
    #end
    if _g_multiplayer_game_type == 8 and var001 == _g_presentation_obj_admin_panel_12:
        s0 = str_store_faction_name(fac.outlaws)
        overlay_add_item(var001,0)
        s0 = str_store_faction_name(fac.ccoop_all_stars)
        overlay_add_item(var001,0)
        if var002 == fac.outlaws:
            overlay_set_val(var001,6)
        elif var002 == fac.ccoop_all_stars:
            overlay_set_val(var001,7)
        else:
            var002 -= fac.kingdom_1
            overlay_set_val(var001,var002)
        #end
    else:
        if var002 > fac.kingdoms_end:
            overlay_set_val(var001,1)
        else:
            var002 -= fac.kingdom_1
            overlay_set_val(var001,var002)
        #end
    #end


def multiplayer_get_troop_class(var001):
    var001_list2 = [
    trp.nord_veteran_multiplayer,
    trp.sarranid_footman_multiplayer,
    trp.swadian_infantry_multiplayer,
    ]
    var001_list2 = [
    trp.rhodok_veteran_crossbowman_multiplayer,
    trp.swadian_crossbowman_multiplayer,
    ]
    var001_list2 = [
    trp.vaegir_horseman_multiplayer,
    trp.sarranid_mamluke_multiplayer,
    trp.rhodok_horseman_multiplayer,
    trp.nord_scout_multiplayer,
    trp.swadian_man_at_arms_multiplayer,
    ]
    var001_list1 = [
    trp.sarranid_archer_multiplayer,
    trp.nord_archer_multiplayer,
    trp.vaegir_archer_multiplayer,
    ]
    var002 = 0
    if var001 in var001_list1:
        var002 = 4
    elif var001 in var001_list2:
        var002 = 3
    elif var001 == trp.khergit_veteran_horse_archer_multiplayer:
        var002 = 6
    elif var001 in var001_list2:
        var002 = 5
    elif var001 in var001_list2:
        var002 = 1
    elif var001 == trp.vaegir_spearman_multiplayer:
        var002 = 2
    #end
    reg0 = var002


def multiplayer_clear_player_selected_items(player_id_001):
    for slot_no_002 in range(2, 11):
        player_set_slot(player_id_001,slot_no_002,-1)
    #end


def multiplayer_init_player_slots(player_id_001):
    multiplayer_clear_player_selected_items(player_id_001)
    player_set_slot(player_id_001,0,0)
    player_set_slot(player_id_001,1,0)
    player_set_slot(player_id_001,26,0)
    player_set_slot(player_id_001,35,0)
    player_set_slot(player_id_001,36,0)
    player_set_slot(player_id_001,37,0)
    player_set_slot(player_id_001,38,0)


def multiplayer_initialize_belfry_wheel_rotations():
    scp_num_instances_001 = scene_prop_get_num_instances(spr.belfry_wheel)
    for var002 in range(0, scp_num_instances_001):
        scp_instance_003 = scene_prop_get_instance(spr.belfry_wheel,var002)
        prop_instance_initialize_rotation_angles(scp_instance_003)
    #end
    scp_num_instances_004 = scene_prop_get_num_instances(spr.winch)
    for var005 in range(0, scp_num_instances_004):
        scp_instance_006 = scene_prop_get_instance(spr.winch,var005)
        prop_instance_initialize_rotation_angles(scp_instance_006)
    #end
    scp_num_instances_007 = scene_prop_get_num_instances(spr.winch_b)
    for var008 in range(0, scp_num_instances_007):
        scp_instance_009 = scene_prop_get_instance(spr.winch_b,var008)
        prop_instance_initialize_rotation_angles(scp_instance_009)
    #end


def send_open_close_information_of_object(player_id_001, var002):
    scp_num_instances_003 = scene_prop_get_num_instances(var002)
    for var004 in range(0, scp_num_instances_003):
        scp_instance_005 = scene_prop_get_instance(var002,var004)
        scene_prop_slot_006 = scene_prop_get_slot(scp_instance_005,1)
        if scene_prop_slot_006 == 1:
            multiplayer_send_int_to_player(player_id_001,77,scp_instance_005)
        #end
    #end


def multiplayer_send_initial_information(player_id_001):
    _g_multiplayer_game_type_list2 = [
    6,
    5,
    ]
    _g_multiplayer_game_type_list1 = [
    6,
    3,
    2,
    ]
    multiplayer_send_2_int_to_player(player_id_001,51,1,_g_multiplayer_num_bots_team_1)
    multiplayer_send_2_int_to_player(player_id_001,51,2,_g_multiplayer_num_bots_team_2)
    multiplayer_send_int_to_player(player_id_001,93,_g_multiplayer_auto_team_balance_limit)
    multiplayer_send_int_to_player(player_id_001,81,_g_multiplayer_num_bots_voteable)
    multiplayer_send_int_to_player(player_id_001,82,_g_multiplayer_factions_voteable)
    multiplayer_send_int_to_player(player_id_001,83,_g_multiplayer_maps_voteable)
    multiplayer_send_int_to_player(player_id_001,90,_g_multiplayer_kick_voteable)
    multiplayer_send_int_to_player(player_id_001,91,_g_multiplayer_ban_voteable)
    multiplayer_send_int_to_player(player_id_001,102,_g_multiplayer_allow_player_banners)
    multiplayer_send_int_to_player(player_id_001,103,_g_multiplayer_force_default_armor)
    multiplayer_send_int_to_player(player_id_001,112,_g_multiplayer_disallow_ranged_weapons)
    multiplayer_send_int_to_player(player_id_001,57,_g_multiplayer_respawn_period)
    multiplayer_send_int_to_player(player_id_001,59,_g_multiplayer_round_max_seconds)
    multiplayer_send_int_to_player(player_id_001,65,_g_multiplayer_game_type)
    multiplayer_send_int_to_player(player_id_001,85,_g_multiplayer_player_respawn_as_bot)
    multiplayer_send_int_to_player(player_id_001,122,_g_multiplayer_ccoop_difficulty)
    m_timer_a_002 = store_mission_timer_a()
    multiplayer_send_int_to_player(player_id_001,107,m_timer_a_002)
    if _g_multiplayer_game_type == 6:
        multiplayer_send_int_to_player(player_id_001,88,_g_multiplayer_number_of_respawn_count)
    #end
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent):
            agent_attached_scene_prop_004 = agent_get_attached_scene_prop(cur_agent)
            if agent_attached_scene_prop_004 >= 0:
                multiplayer_send_2_int_to_player(player_id_001,70,cur_agent,agent_attached_scene_prop_004)
            #end
        #end
    #end
    send_open_close_information_of_object(player_id_001,spr.siege_ladder_move_6m)
    send_open_close_information_of_object(player_id_001,spr.siege_ladder_move_8m)
    send_open_close_information_of_object(player_id_001,spr.siege_ladder_move_10m)
    send_open_close_information_of_object(player_id_001,spr.siege_ladder_move_12m)
    send_open_close_information_of_object(player_id_001,spr.siege_ladder_move_14m)
    send_open_close_information_of_object(player_id_001,spr.winch_b)
    send_open_close_information_of_object(player_id_001,spr.castle_e_sally_door_a)
    send_open_close_information_of_object(player_id_001,spr.castle_f_sally_door_a)
    send_open_close_information_of_object(player_id_001,spr.earth_sally_gate_left)
    send_open_close_information_of_object(player_id_001,spr.earth_sally_gate_right)
    send_open_close_information_of_object(player_id_001,spr.viking_keep_destroy_sally_door_left)
    send_open_close_information_of_object(player_id_001,spr.viking_keep_destroy_sally_door_right)
    send_open_close_information_of_object(player_id_001,spr.castle_f_door_a)
    send_open_close_information_of_object(player_id_001,spr.door_destructible)
    send_open_close_information_of_object(player_id_001,spr.castle_f_door_b)
    if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
        m_timer_a_005 = store_mission_timer_a()
        m_timer_a_005 -= _g_round_start_time
        m_timer_a_005 *= -1
        multiplayer_send_int_to_player(player_id_001,78,m_timer_a_005)
    elif _g_multiplayer_game_type == 4:
        team_slot_006 = team_get_slot(0,0)
        multiplayer_send_2_int_to_player(player_id_001,71,0,team_slot_006)
        team_slot_007 = team_get_slot(1,0)
        multiplayer_send_2_int_to_player(player_id_001,71,1,team_slot_007)
    elif _g_multiplayer_game_type in _g_multiplayer_game_type_list2:
        for var008 in range(0, _g_number_of_flags):
            var009 = 0
            var010 = 0
            scp_instance_011 = scene_prop_get_instance(spr.headquarters_pole_code_only,var008)
            pos0 = prop_instance_get_position(scp_instance_011)
            for cur_agent in __all_agents__:
                if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and not agent_is_non_player(cur_agent):
                    agent_team_no_012 = agent_get_team(cur_agent)
                    pos1 = agent_get_position(cur_agent)
                    sq_distance_013 = get_sq_distance_between_positions(0,1)
                    sq_distance_014 = get_sq_distance_between_position_heights(0,1)
                    sq_distance_013 += sq_distance_014
                    if sq_distance_013 < 1600:
                        if agent_team_no_012 == 0:
                            var009 += 1
                        elif agent_team_no_012 == 1:
                            var010 += 1
                        #end
                    #end
                #end
            #end
            var015 = var009 * 100
            var015 += var010
            multiplayer_send_2_int_to_player(player_id_001,73,var008,var015)
        #end
        _g_placing_initial_flags = 1
        for var016 in range(0, _g_number_of_flags):
            slot_no_017 = 146 + var016
            troop_slot_018 = troop_get_slot(trp.multiplayer_data,slot_no_017)
            var019 = troop_slot_018 * 100
            var019 += troop_slot_018
            var019 += 1
            var019 *= -1
            multiplayer_send_2_int_to_player(player_id_001,75,var016,var019)
        #end
        _g_placing_initial_flags = 0
    #end


def multiplayer_remove_headquarters_flags():
    var001 = spr.headquarters_flag_gray
    var001 += 1
    for var002 in range(spr.headquarters_flag_red, var001):
        replace_scene_props(var002,spr.empty)
    #end


def multiplayer_remove_destroy_mod_targets():
    replace_scene_props(spr.catapult_destructible,spr.empty)
    replace_scene_props(spr.trebuchet_destructible,spr.empty)


def multiplayer_init_mission_variables():
    _g_multiplayer_team_1_first_spawn = 1
    _g_multiplayer_team_2_first_spawn = 1
    _g_multiplayer_poll_running = 0
    _g_waiting_for_confirmation_to_terminate = 0
    _g_confirmation_result = 0
    _g_team_balance_next_round = 0
    _g_multiplayer_team_1_faction = team_get_faction(0)
    _g_multiplayer_team_2_faction = team_get_faction(1)
    _g_multiplayer_next_team_1_faction = _g_multiplayer_team_1_faction
    _g_multiplayer_next_team_2_faction = _g_multiplayer_team_2_faction
    _g_multiplayer_bot_type_1_wanted = 0
    _g_multiplayer_bot_type_2_wanted = 0
    _g_multiplayer_bot_type_3_wanted = 0
    _g_multiplayer_bot_type_4_wanted = 0
    music_set_situation_with_culture(2048)


def multiplayer_event_mission_end():
    if True:
        my_player = multiplayer_get_my_player()
        if is_between(my_player,0,1000):
            kill_count_002 = player_get_kill_count(my_player)
            death_count_003 = player_get_death_count(my_player)
            if kill_count_002 > death_count_003:
                unlock_achievement(63)
            #end
        #end
    #end


def multiplayer_event_agent_killed_or_wounded(var001, var002):
    item_slot_013_list1 = [
    17,
    16,
    ]
    my_player = multiplayer_get_my_player()
    if _g_multiplayer_game_type != 8:
        agent_id_004 = player_get_agent_id(my_player)
        if agent_id_004 != -1 and agent_id_004 == var001:
            _g_multiplayer_respawn_start_time = store_mission_timer_a()
        #end
    #end
    if _g_multiplayer_game_type != 8 and is_between(my_player,0,1000):
        agent_id_005 = player_get_agent_id(my_player)
        if var001 == agent_id_005:
            var006 = 0
            if _g_multiplayer_game_type != 2:
                var006 = 1
            elif _g_multiplayer_player_respawn_as_bot == 1:
                team_no_007 = player_get_team_no(my_player)
                var008 = 0
                for cur_agent in __all_agents__:
                    if var008 == 0 and agent_is_alive(cur_agent) and agent_is_human(cur_agent) and agent_is_non_player(cur_agent):
                        agent_team_no_010 = agent_get_team(cur_agent)
                        if agent_team_no_010 == team_no_007:
                            var008 = 1
                        #end
                    #end
                #end
            #end
            if var008 == 1:
                var006 = 1
            #end
        #end
        if _g_multiplayer_game_type == 6 and _g_multiplayer_number_of_respawn_count > 0 and _g_my_spawn_count >= _g_multiplayer_number_of_respawn_count:
            my_player = multiplayer_get_my_player()
            team_no_007 = player_get_team_no(my_player)
            if team_no_007 == 0 or _g_my_spawn_count >= 999:
                _g_show_no_more_respawns_remained = 1
            else:
                _g_show_no_more_respawns_remained = 0
            #end
        #end
        if var006 == 1:
            start_presentation(prsnt.multiplayer_respawn_time_counter)
        #end
    #end
    if is_between(my_player,0,1000):
        agent_id_004 = player_get_agent_id(my_player)
        if agent_id_004 >= 0:
            if agent_id_004 == var001:
                _g_multiplayer_respawn_start_time = store_mission_timer_a()
            #end
        #end
        if agent_id_004 == var002 and agent_id_004 != var001 and agent_is_human(var001) and agent_is_alive(agent_id_004) and not agent_is_ally(var001):
            agent_horse_011 = agent_get_horse(agent_id_004)
            agent_wieled_item_012 = agent_get_wielded_item(agent_id_004,0)
            item_slot_013 = -1
            if agent_wieled_item_012 >= 0:
                item_slot_013 = item_get_slot(agent_wieled_item_012,60)
            #end
            if agent_horse_011 < 0:
                agent_horse_014 = agent_get_horse(var001)
                if agent_horse_014 >= 0:
                    var015 = get_achievement_stat(57,0)
                    if var015 < 50:
                        var015 += 1
                        set_achievement_stat(57,0,var015)
                        if var015 >= 50:
                            unlock_achievement(57)
                        #end
                    #end
                #end
            #end
            if agent_horse_011 >= 0 and item_slot_013 == 12 or item_slot_013 == 13 or item_slot_013 == 16 or item_slot_013 == 17:
                var015 = get_achievement_stat(58,0)
                if var015 < 100:
                    var015 += 1
                    set_achievement_stat(58,0,var015)
                    if var015 >= 100:
                        unlock_achievement(58)
                    #end
                #end
            #end
            if item_slot_013 in item_slot_013_list1:
                var015 = get_achievement_stat(59,0)
                if var015 < 25:
                    var015 += 1
                    set_achievement_stat(59,0,var015)
                    if var015 >= 25:
                        unlock_achievement(59)
                    #end
                #end
            #end
            if agent_horse_011 >= 0 and item_slot_013 == 9:
                var015 = get_achievement_stat(60,0)
                if var015 < 25:
                    var015 += 1
                    set_achievement_stat(60,0,var015)
                    if var015 >= 25:
                        unlock_achievement(60)
                    #end
                #end
            #end
            if item_slot_013 == 1 or item_slot_013 == 2 or item_slot_013 == 5 or item_slot_013 == 6 or item_slot_013 == 7 or agent_wieled_item_012 == itm.sarranid_axe_a or agent_wieled_item_012 == itm.sarranid_axe_b and agent_wieled_item_012 != itm.sarranid_two_handed_mace_1:
                var015 = get_achievement_stat(64,0)
                if var015 < 50:
                    var015 += 1
                    set_achievement_stat(64,0,var015)
                    if var015 >= 50:
                        unlock_achievement(64)
                    #end
                #end
            #end
            if item_slot_013 == 3 or agent_wieled_item_012 == itm.sarranid_two_handed_mace_1 and agent_wieled_item_012 != itm.sarranid_axe_b and agent_wieled_item_012 != itm.sarranid_axe_a:
                var015 = get_achievement_stat(65,0)
                if var015 < 25:
                    var015 += 1
                    set_achievement_stat(65,0,var015)
                    if var015 >= 25:
                        unlock_achievement(65)
                    #end
                #end
            #end
            if item_slot_013 == 17:
                var015 = get_achievement_stat(66,0)
                if var015 < 50:
                    var015 += 1
                    set_achievement_stat(66,0,var015)
                    if var015 >= 50:
                        unlock_achievement(66)
                    #end
                #end
            #end
        #end
    #end
    if is_between(my_player,0,1000):
        agent_id_005 = player_get_agent_id(my_player)
        if var001 == agent_id_005:
            var006 = 0
            if _g_multiplayer_game_type != 2 and _g_multiplayer_game_type != 3 and _g_multiplayer_game_type != 8:
                var006 = 1
            elif _g_multiplayer_game_type != 8 and _g_multiplayer_player_respawn_as_bot == 1:
                team_no_007 = player_get_team_no(my_player)
                var008 = 0
                for cur_agent in __all_agents__:
                    if var008 == 0 and agent_is_alive(cur_agent) and agent_is_human(cur_agent) and agent_is_non_player(cur_agent):
                        agent_team_no_010 = agent_get_team(cur_agent)
                        if agent_team_no_010 == team_no_007:
                            var008 = 1
                        #end
                    #end
                #end
            #end
            if var008 == 1:
                var006 = 1
            #end
        #end
        if _g_multiplayer_game_type == 6 and _g_multiplayer_number_of_respawn_count > 0 and _g_my_spawn_count >= _g_multiplayer_number_of_respawn_count:
            my_player = multiplayer_get_my_player()
            team_no_007 = player_get_team_no(my_player)
            if team_no_007 == 0 or _g_my_spawn_count >= 999:
                _g_show_no_more_respawns_remained = 1
            else:
                _g_show_no_more_respawns_remained = 0
            #end
        #end
        if var006 == 1:
            start_presentation(prsnt.multiplayer_respawn_time_counter)
        #end
    #end


def multiplayer_get_item_value_for_troop(item_id_001, troop_id_002):
    if cf_multiplayer_is_item_default_for_troop(item_id_001,troop_id_002):
        item_value_003 = 0
    else:
        item_value_003 = store_item_value(item_id_001)
        troop_faction_004 = store_faction_of_troop(troop_id_002)
        slot_no_005 = troop_faction_004 - fac.kingdom_1
        slot_no_005 += 30
        item_slot_006 = item_get_slot(item_id_001,slot_no_005)
        item_value_003 *= item_slot_006
        item_value_003 /= 100
    #end
    reg0 = item_value_003


def multiplayer_get_previous_item_for_item_and_troop(item_id_001, var002):
    item_slot_003 = item_get_slot(item_id_001,60)
    multiplayer_get_item_value_for_troop(item_id_001,var002)
    var004 = reg0
    var005 = var002 - trp.swadian_crossbowman_multiplayer
    var005 += 61
    var006 = -1
    var007 = -1
    for item_id_008 in range(0, itm.items_end):
        if item_slot_eq(item_id_008,60,item_slot_003) and item_slot_ge(item_id_008,var005,1):
            multiplayer_get_item_value_for_troop(item_id_008,var002)
            var009 = reg0
            if var009 == 0 and var007 == 0:
                item_value_010 = store_item_value(item_id_008)
                item_value_011 = store_item_value(var006)
                if item_value_010 > item_value_011:
                    var007 = var009
                    var006 = item_id_008
                #end
            #end
        elif var009 > var007 and var009 < var004:
            var007 = var009
            var006 = item_id_008
        #end
    #end
    if var006 == -1:
        var012 = -1
        if is_between(item_slot_003,1,10):
            var012 = 0
        elif is_between(item_slot_003,10,12):
            var012 = 1
        elif item_slot_003 == 12:
            var012 = 2
        elif item_slot_003 == 13:
            var012 = 3
        elif item_slot_003 == 14:
            var012 = 4
        elif item_slot_003 == 15:
            var012 = 5
        elif item_slot_003 == 16:
            var012 = 6
        elif is_between(item_slot_003,22,24):
            var012 = 7
        elif is_between(item_slot_003,19,22):
            var012 = 8
        elif is_between(item_slot_003,24,26):
            var012 = 9
        elif is_between(item_slot_003,26,27):
            var012 = 10
        elif is_between(item_slot_003,18,19):
            var012 = 11
        #end
        if var012 != 0:
            var013 = itm.items_end
            for item_id_008 in range(0, var013):
                if item_slot_ge(item_id_008,var005,1):
                    item_slot_014 = item_get_slot(item_id_008,60)
                    if is_between(item_slot_014,1,10):
                        var015 = 0
                    elif is_between(item_slot_014,10,12):
                        var015 = 1
                    elif item_slot_014 == 12:
                        var015 = 2
                    elif item_slot_014 == 13:
                        var015 = 3
                    elif item_slot_014 == 14:
                        var015 = 4
                    elif item_slot_014 == 15:
                        var015 = 5
                    elif item_slot_014 == 16:
                        var015 = 6
                    elif is_between(item_slot_014,22,24):
                        var015 = 7
                    elif is_between(item_slot_014,19,22):
                        var015 = 8
                    elif is_between(item_slot_014,24,26):
                        var015 = 9
                    elif is_between(item_slot_014,26,27):
                        var015 = 10
                    elif is_between(item_slot_014,18,19):
                        var015 = 11
                    #end
                #end
            #end
            if var015 == var012 and cf_multiplayer_is_item_default_for_troop(item_id_008,var002):
                var006 = item_id_008
                var013 = 0
            #end
        #end
    #end
    reg0 = var006


def cf_multiplayer_is_item_default_for_troop(var001, troop_id_002):
    var003 = 0
    if not is_between(var001,itm.sumpter_horse,itm.arrows) and var001 != itm.warhorse_sarranid and var001 != itm.warhorse_steppe:
        troop_inv_capacity_004 = troop_get_inventory_capacity(troop_id_002)
        for inventory_slot_no_005 in range(0, troop_inv_capacity_004):
            troop_inv_slot_006 = troop_get_inventory_slot(troop_id_002,inventory_slot_no_005)
            if var001 == troop_inv_slot_006:
                var003 = 1
                troop_inv_capacity_004 = 0
            #end
        #end
    #end


def multiplayer_calculate_cur_selected_items_cost(player_id_001, var002):
    var003 = 0
    troop_id_004 = player_get_troop_id(player_id_001)
    if var002 == 0:
        var005 = 11
        var006 = 20
    else:
        var005 = 2
        var006 = 11
    #end
    for slot_no_007 in range(var005, var006):
        player_slot_008 = player_get_slot(player_id_001,slot_no_007)
        if player_slot_008 >= 0:
            multiplayer_get_item_value_for_troop(player_slot_008,troop_id_004)
            var003 += reg0
        #end
    #end
    reg0 = var003


def multiplayer_set_item_available_for_troop(item_id_001, var002):
    slot_no_003 = var002 - trp.swadian_crossbowman_multiplayer
    slot_no_003 += 61
    item_set_slot(item_id_001,slot_no_003,1)


def multiplayer_send_item_selections():
    my_player = multiplayer_get_my_player()
    for slot_no_002 in range(2, 11):
        player_slot_003 = player_get_slot(my_player,slot_no_002)
        multiplayer_send_2_int_to_server(0,slot_no_002,player_slot_003)
    #end
    if cf_multiplayer_can_buy_squad():
        for slot_no_004 in range(43, 47):
            player_slot_005 = player_get_slot(my_player,slot_no_004)
            multiplayer_send_3_int_to_server(48,0,slot_no_004,player_slot_005)
        #end
    #end


def multiplayer_set_default_item_selections_for_troop(troop_id_001):
    my_player = multiplayer_get_my_player()
    multiplayer_clear_player_selected_items(my_player)
    var003 = 0
    troop_inv_capacity_004 = troop_get_inventory_capacity(troop_id_001)
    for inventory_slot_no_005 in range(0, troop_inv_capacity_004):
        troop_inv_slot_006 = troop_get_inventory_slot(troop_id_001,inventory_slot_no_005)
        if troop_inv_slot_006 >= 0:
            item_slot_007 = item_get_slot(troop_inv_slot_006,60)
            if is_between(item_slot_007,1,18) and _g_multiplayer_disallow_ranged_weapons == 0 or not is_between(item_slot_007,12,18):
                slot_no_008 = 2 + var003
                player_set_slot(my_player,slot_no_008,troop_inv_slot_006)
                var003 += 1
            elif is_between(item_slot_007,22,24):
                slot_no_008 = 2 + 4
                player_set_slot(my_player,slot_no_008,troop_inv_slot_006)
            elif is_between(item_slot_007,19,22):
                slot_no_008 = 2 + 5
                player_set_slot(my_player,slot_no_008,troop_inv_slot_006)
            elif is_between(item_slot_007,24,26):
                slot_no_008 = 2 + 6
                player_set_slot(my_player,slot_no_008,troop_inv_slot_006)
            elif is_between(item_slot_007,26,27):
                slot_no_008 = 2 + 7
                player_set_slot(my_player,slot_no_008,troop_inv_slot_006)
            elif is_between(item_slot_007,18,19) and _g_horses_are_avaliable == 1:
                slot_no_008 = 2 + 8
                player_set_slot(my_player,slot_no_008,troop_inv_slot_006)
            #end
        #end
    #end


def multiplayer_display_available_items_for_troop_and_item_classes(var001, var002, var003, var004, var005):
    var006 = 100
    if var004 > 500:
        var006 = -100
    #end
    var007 = var001 - trp.swadian_crossbowman_multiplayer
    var007 += 61
    for slot_no_008 in range(46, 146):
        troop_set_slot(trp.multiplayer_data,slot_no_008,-1)
    #end
    var009 = 0
    for item_id_010 in range(0, itm.items_end):
        item_slot_011 = item_get_slot(item_id_010,60)
        if is_between(item_slot_011,var002,var003) and _g_multiplayer_disallow_ranged_weapons == 0 or not is_between(item_slot_011,12,18) and item_slot_ge(item_id_010,var007,1):
            slot_no_012 = var009 + 46
            troop_set_slot(trp.multiplayer_data,slot_no_012,item_id_010)
            var009 += 1
        #end
    #end
    var013 = var009 + 46
    var014 = var013 - 1
    for slot_no_008 in range(46, var014):
        var015 = slot_no_008 + 1
        for slot_no_016 in range(var015, var013):
            troop_slot_017 = troop_get_slot(trp.multiplayer_data,slot_no_008)
            troop_slot_018 = troop_get_slot(trp.multiplayer_data,slot_no_016)
            multiplayer_get_item_value_for_troop(troop_slot_017,var001)
            var019 = reg0
            multiplayer_get_item_value_for_troop(troop_slot_018,var001)
            var020 = reg0
            item_slot_021 = item_get_slot(troop_slot_017,60)
            item_slot_022 = item_get_slot(troop_slot_018,60)
            item_slot_021 *= 1000000
            item_slot_022 *= 1000000
            var019 += item_slot_021
            var020 += item_slot_022
            if var020 < var019:
                troop_set_slot(trp.multiplayer_data,slot_no_008,troop_slot_018)
                troop_set_slot(trp.multiplayer_data,slot_no_016,troop_slot_017)
            #end
        #end
    #end
    troop_slot_023 = troop_get_slot(trp.multiplayer_data,46)
    var024 = 0
    if troop_slot_023 >= 0:
        item_slot_025 = item_get_slot(troop_slot_023,60)
        for slot_no_008 in range(46, var013):
            item_id_010 = troop_get_slot(trp.multiplayer_data,slot_no_008)
            item_slot_011 = item_get_slot(item_id_010,60)
            if item_slot_011 != item_slot_025:
                var024 += 1
                item_slot_025 = item_slot_011
            #end
        #end
        if True:
            var026 = var024 * 100
            if var026 > var005:
                var027 = var026 - var005
                var027 /= 100
                var027 += 1
                var027 *= 100
                var005 += var027
            #end
        #end
        item_slot_025 = item_get_slot(troop_slot_023,60)
    #end
    var028 = var004
    var029 = var005
    for slot_no_008 in range(46, var013):
        item_id_010 = troop_get_slot(trp.multiplayer_data,slot_no_008)
        item_slot_011 = item_get_slot(item_id_010,60)
        if item_slot_011 != item_slot_025:
            var029 -= 100
            var028 = var004
            item_slot_025 = item_slot_011
        #end
        create_image_button_overlay(image_button_overlay_030,mesh.mp_inventory_choose,mesh.mp_inventory_choose)
        position_set_x(1,800)
        position_set_y(1,800)
        overlay_set_size(image_button_overlay_030,1)
        position_set_x(1,var028)
        position_set_y(1,var029)
        overlay_set_position(image_button_overlay_030,1)
        create_mesh_overlay_with_item_id(reg0,item_id_010)
        var031 = var028 + 50
        var032 = var029 + 50
        position_set_x(1,var031)
        position_set_y(1,var032)
        overlay_set_position(reg0,1)
        var028 += var006
    #end


def multiplayer_fill_map_game_types(var001):
    var001_list1 = [
    1,
    7,
    0,
    ]
    for slot_no_002 in range(0, 30):
        troop_set_slot(trp.multiplayer_data,slot_no_002,-1)
    #end
    var003 = 0
    if var001 in var001_list1:
        troop_set_slot(trp.multiplayer_data,0,scn.multi_scene_1)
        troop_set_slot(trp.multiplayer_data,1,scn.multi_scene_2)
        troop_set_slot(trp.multiplayer_data,2,scn.multi_scene_4)
        troop_set_slot(trp.multiplayer_data,3,scn.multi_scene_7)
        troop_set_slot(trp.multiplayer_data,4,scn.multi_scene_9)
        troop_set_slot(trp.multiplayer_data,5,scn.multi_scene_11)
        troop_set_slot(trp.multiplayer_data,6,scn.multi_scene_12)
        troop_set_slot(trp.multiplayer_data,7,scn.multi_scene_14)
        troop_set_slot(trp.multiplayer_data,8,scn.multi_scene_17)
        troop_set_slot(trp.multiplayer_data,9,scn.multi_scene_18)
        troop_set_slot(trp.multiplayer_data,10,scn.multi_scene_19)
        troop_set_slot(trp.multiplayer_data,11,scn.multi_scene_20)
        troop_set_slot(trp.multiplayer_data,12,scn.random_multi_plain_medium)
        troop_set_slot(trp.multiplayer_data,13,scn.random_multi_plain_large)
        troop_set_slot(trp.multiplayer_data,14,scn.random_multi_steppe_medium)
        troop_set_slot(trp.multiplayer_data,15,scn.random_multi_steppe_large)
        var003 = 16
    elif var001 == 2:
        troop_set_slot(trp.multiplayer_data,0,scn.multi_scene_1)
        troop_set_slot(trp.multiplayer_data,1,scn.multi_scene_2)
        troop_set_slot(trp.multiplayer_data,2,scn.multi_scene_4)
        troop_set_slot(trp.multiplayer_data,3,scn.multi_scene_7)
        troop_set_slot(trp.multiplayer_data,4,scn.multi_scene_9)
        troop_set_slot(trp.multiplayer_data,5,scn.multi_scene_11)
        troop_set_slot(trp.multiplayer_data,6,scn.multi_scene_12)
        troop_set_slot(trp.multiplayer_data,7,scn.multi_scene_14)
        troop_set_slot(trp.multiplayer_data,8,scn.multi_scene_17)
        troop_set_slot(trp.multiplayer_data,9,scn.multi_scene_18)
        troop_set_slot(trp.multiplayer_data,10,scn.multi_scene_19)
        troop_set_slot(trp.multiplayer_data,11,scn.multi_scene_20)
        troop_set_slot(trp.multiplayer_data,12,scn.random_multi_plain_medium)
        troop_set_slot(trp.multiplayer_data,13,scn.random_multi_plain_large)
        troop_set_slot(trp.multiplayer_data,14,scn.random_multi_steppe_medium)
        troop_set_slot(trp.multiplayer_data,15,scn.random_multi_steppe_large)
        var003 = 16
    elif var001 == 3:
        troop_set_slot(trp.multiplayer_data,0,scn.multi_scene_1)
        troop_set_slot(trp.multiplayer_data,1,scn.multi_scene_2)
        troop_set_slot(trp.multiplayer_data,2,scn.multi_scene_4)
        troop_set_slot(trp.multiplayer_data,3,scn.multi_scene_7)
        troop_set_slot(trp.multiplayer_data,4,scn.multi_scene_9)
        troop_set_slot(trp.multiplayer_data,5,scn.multi_scene_12)
        troop_set_slot(trp.multiplayer_data,6,scn.multi_scene_14)
        troop_set_slot(trp.multiplayer_data,7,scn.multi_scene_19)
        troop_set_slot(trp.multiplayer_data,8,scn.multi_scene_20)
        var003 = 9
    elif var001 == 4:
        troop_set_slot(trp.multiplayer_data,0,scn.multi_scene_1)
        troop_set_slot(trp.multiplayer_data,1,scn.multi_scene_2)
        troop_set_slot(trp.multiplayer_data,2,scn.multi_scene_4)
        troop_set_slot(trp.multiplayer_data,3,scn.multi_scene_7)
        troop_set_slot(trp.multiplayer_data,4,scn.multi_scene_9)
        troop_set_slot(trp.multiplayer_data,5,scn.multi_scene_11)
        troop_set_slot(trp.multiplayer_data,6,scn.multi_scene_12)
        troop_set_slot(trp.multiplayer_data,7,scn.multi_scene_14)
        troop_set_slot(trp.multiplayer_data,8,scn.multi_scene_17)
        troop_set_slot(trp.multiplayer_data,9,scn.multi_scene_18)
        troop_set_slot(trp.multiplayer_data,10,scn.multi_scene_19)
        troop_set_slot(trp.multiplayer_data,11,scn.multi_scene_20)
        troop_set_slot(trp.multiplayer_data,12,scn.random_multi_plain_medium)
        troop_set_slot(trp.multiplayer_data,13,scn.random_multi_plain_large)
        troop_set_slot(trp.multiplayer_data,14,scn.random_multi_steppe_medium)
        troop_set_slot(trp.multiplayer_data,15,scn.random_multi_steppe_large)
        var003 = 16
    elif var001 == 5:
        troop_set_slot(trp.multiplayer_data,0,scn.multi_scene_1)
        troop_set_slot(trp.multiplayer_data,1,scn.multi_scene_2)
        troop_set_slot(trp.multiplayer_data,2,scn.multi_scene_4)
        troop_set_slot(trp.multiplayer_data,3,scn.multi_scene_7)
        troop_set_slot(trp.multiplayer_data,4,scn.multi_scene_9)
        troop_set_slot(trp.multiplayer_data,5,scn.multi_scene_11)
        troop_set_slot(trp.multiplayer_data,6,scn.multi_scene_12)
        troop_set_slot(trp.multiplayer_data,7,scn.multi_scene_14)
        troop_set_slot(trp.multiplayer_data,8,scn.multi_scene_17)
        troop_set_slot(trp.multiplayer_data,9,scn.multi_scene_18)
        troop_set_slot(trp.multiplayer_data,10,scn.multi_scene_19)
        troop_set_slot(trp.multiplayer_data,11,scn.multi_scene_20)
        var003 = 12
    elif var001 == 6:
        troop_set_slot(trp.multiplayer_data,0,scn.multi_scene_3)
        troop_set_slot(trp.multiplayer_data,1,scn.multi_scene_8)
        troop_set_slot(trp.multiplayer_data,2,scn.multi_scene_10)
        troop_set_slot(trp.multiplayer_data,3,scn.multi_scene_13)
        troop_set_slot(trp.multiplayer_data,4,scn.multi_scene_15)
        troop_set_slot(trp.multiplayer_data,5,scn.multi_scene_16)
        var003 = 6
    elif var001 == 8:
        troop_set_slot(trp.multiplayer_data,0,scn.multi_scene_1)
        troop_set_slot(trp.multiplayer_data,1,scn.multi_scene_4)
        troop_set_slot(trp.multiplayer_data,2,scn.multi_scene_7)
        troop_set_slot(trp.multiplayer_data,3,scn.multi_scene_9)
        troop_set_slot(trp.multiplayer_data,4,scn.multi_scene_11)
        troop_set_slot(trp.multiplayer_data,5,scn.multi_scene_12)
        troop_set_slot(trp.multiplayer_data,6,scn.multi_scene_14)
        troop_set_slot(trp.multiplayer_data,7,scn.multi_scene_17)
        troop_set_slot(trp.multiplayer_data,8,scn.multi_scene_18)
        troop_set_slot(trp.multiplayer_data,9,scn.multi_scene_19)
        troop_set_slot(trp.multiplayer_data,10,scn.multi_scene_20)
        var003 = 11
    #end
    reg0 = var003


def multiplayer_count_players_bots():
    max_players = get_max_players()
    for player_id_002 in range(0, max_players):
        if player_is_active(player_id_002):
            player_set_slot(player_id_002,34,0)
        #end
    #end
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and agent_is_alive(cur_agent):
            agent_player_id_004 = agent_get_player_id(cur_agent)
            if agent_player_id_004 < 0:
                agent_group_005 = agent_get_group(cur_agent)
                if player_is_active(agent_group_005):
                    player_slot_006 = player_get_slot(agent_group_005,34)
                    player_slot_006 += 1
                    player_set_slot(agent_group_005,34,player_slot_006)
                #end
            #end
        #end
    #end


def multiplayer_find_player_leader_for_bot(team_id_001, var002):
    team_faction_003 = team_get_faction(team_id_001)
    var004 = 0
    for trp_005 in range(trp.swadian_crossbowman_multiplayer_ai, trp.swadian_crossbowman_multiplayer):
        troop_faction_006 = store_faction_of_troop(trp_005)
        if troop_faction_006 == team_faction_003:
            var004 += 1
        #end
    #end
    multiplayer_count_players_bots()
    var007 = 0
    max_players = get_max_players()
    for player_id_009 in range(0, max_players):
        var010 = 0
        if player_is_active(player_id_009):
            if var002 == 0:
                var010 = 1
            elif var002 != 0:
                agent_id_011 = player_get_agent_id(player_id_009)
                if agent_id_011 >= 0 and agent_is_alive(agent_id_011):
                    var010 = 1
                #end
            #end
        #end
        if var010 == 1:
            team_no_012 = player_get_team_no(player_id_009)
            if team_id_001 == team_no_012:
                var007 += 1
            #end
        #end
    #end
    var013 = -1
    if var007 > 0:
        var014 = _g_multiplayer_num_bots_team_1
        if team_id_001 == 1:
            var014 = _g_multiplayer_num_bots_team_2
        #end
        var015 = var014 / var007
        var016 = var015 * var007
        if var016 < var014:
            var015 += 1
        #end
        var017 = 0
        for player_id_009 in range(0, max_players):
            if player_is_active(player_id_009):
                agent_id_011 = player_get_agent_id(player_id_009)
                if agent_id_011 >= 0 and agent_is_alive(agent_id_011):
                    team_no_012 = player_get_team_no(player_id_009)
                    if team_id_001 == team_no_012:
                        var018 = 0
                        var019 = 35 + var004
                        for var020 in range(35, var019):
                            if player_slot_ge(player_id_009,var020,1):
                                var018 = 1
                                var019 = 0
                            #end
                        #end
                    #end
                #end
            #end
            if var018 == 1:
                player_slot_021 = player_get_slot(player_id_009,34)
                if player_slot_021 < var015:
                    var017 += var015
                    var017 -= player_slot_021
                #end
            #end
        #end
        if var017 > 0:
            random_x_022 = store_random_in_range(0,var017)
            for player_id_009 in range(0, max_players):
                if player_is_active(player_id_009):
                    agent_id_011 = player_get_agent_id(player_id_009)
                    if agent_id_011 >= 0 and agent_is_alive(agent_id_011):
                        team_no_012 = player_get_team_no(player_id_009)
                        if team_id_001 == team_no_012:
                            var018 = 0
                            var019 = 35 + var004
                            for var020 in range(35, var019):
                                if player_slot_ge(player_id_009,var020,1):
                                    var018 = 1
                                    var019 = 0
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if var018 == 1:
                player_slot_021 = player_get_slot(player_id_009,34)
                if player_slot_021 < var015:
                    random_x_022 -= var015
                    random_x_022 += player_slot_021
                    if random_x_022 < 0:
                        var013 = player_id_009
                        max_players = 0
                    #end
                #end
            #end
        #end
    #end
    reg0 = var013


def multiplayer_find_bot_troop_and_group_for_spawn(team_id_001, var002):
    multiplayer_find_player_leader_for_bot(team_id_001,var002)
    var003 = reg0
    var004 = 0
    var005 = 0
    team_faction_006 = team_get_faction(team_id_001)
    for trp_007 in range(trp.swadian_crossbowman_multiplayer_ai, trp.swadian_crossbowman_multiplayer):
        troop_faction_008 = store_faction_of_troop(trp_007)
        if troop_faction_008 == team_faction_006:
            var009 = 35 + var004
            var004 += 1
            if var003 >= 0 or player_slot_ge(var003,var009,1):
                var005 += 1
            #end
        #end
    #end
    var004 = 0
    random_x_010 = store_random_in_range(0,var005)
    var011 = trp.swadian_crossbowman_multiplayer
    for trp_007 in range(trp.swadian_crossbowman_multiplayer_ai, var011):
        troop_faction_008 = store_faction_of_troop(trp_007)
        if troop_faction_008 == team_faction_006:
            var009 = 35 + var004
            var004 += 1
            if var003 >= 0 or player_slot_ge(var003,var009,1):
                random_x_010 -= 1
                if random_x_010 < 0:
                    var011 = 0
                    var012 = trp_007
                #end
            #end
        #end
    #end
    reg0 = var012
    reg1 = var003


def multiplayer_change_leader_of_bot(var001):
    agent_team_no_002 = agent_get_team(var001)
    multiplayer_find_player_leader_for_bot(agent_team_no_002,1)
    var003 = reg0
    agent_set_group(var001,var003)


def multiplayer_find_spawn_point(team_no_001, var002, var003):
    set_fixed_point_multiplier(100)
    examine_all_spawn_points_004 = 0
    if var002 == 1:
        val_or(examine_all_spawn_points_004,4)
    #end
    if var003 == 1:
        val_or(examine_all_spawn_points_004,2)
    #end
    if _g_multiplayer_game_type == 0 and _g_multiplayer_game_type == 7:
        val_or(examine_all_spawn_points_004,1)
        val_or(examine_all_spawn_points_004,2048)
    elif _g_multiplayer_game_type == 1:
        val_or(examine_all_spawn_points_004,2048)
    elif _g_multiplayer_game_type == 6:
        val_or(examine_all_spawn_points_004,32)
        val_or(examine_all_spawn_points_004,512)
        val_or(examine_all_spawn_points_004,128)
        val_or(examine_all_spawn_points_004,4096)
    elif _g_multiplayer_game_type == 4:
        val_or(examine_all_spawn_points_004,16)
        val_or(examine_all_spawn_points_004,8)
        val_or(examine_all_spawn_points_004,2048)
    elif _g_multiplayer_game_type == 5:
        scene_prop_id_005 = 0
        var006 = 900 - 50
        var007 = var006 * var006
        var007 /= 100
        for var008 in range(0, _g_number_of_flags):
            slot_no_009 = 146 + var008
            troop_slot_010 = troop_get_slot(trp.multiplayer_data,slot_no_009)
            scp_instance_011 = scene_prop_get_instance(spr.headquarters_pole_code_only,var008)
            pos0 = prop_instance_get_position(scp_instance_011)
            if troop_slot_010 == 1:
                scp_instance_012 = scene_prop_get_instance(_team_1_flag_scene_prop,var008)
                pos1 = prop_instance_get_position(scp_instance_012)
                sq_distance_013 = get_sq_distance_between_positions(0,1)
                if sq_distance_013 >= var007:
                    set_spawn_effector_scene_prop_id(scene_prop_id_005,scp_instance_012)
                    scene_prop_id_005 += 1
                elif troop_slot_010 == 2:
                    scp_instance_014 = scene_prop_get_instance(_team_2_flag_scene_prop,var008)
                    pos1 = prop_instance_get_position(scp_instance_014)
                    sq_distance_013 = get_sq_distance_between_positions(0,1)
                    if sq_distance_013 >= var007:
                        set_spawn_effector_scene_prop_id(scene_prop_id_005,scp_instance_014)
                        scene_prop_id_005 += 1
                    #end
                #end
            #end
        #end
        set_spawn_effector_scene_prop_id(scene_prop_id_005,-1)
    #end
    multiplayer_find_spawn_point(reg0,team_no_001,examine_all_spawn_points_004)


def multiplayer_find_spawn_point_2(var001, var002, var003):
    _g_multiplayer_game_type_list1 = [
    6,
    4,
    ]
    _g_multiplayer_game_type_list1 = [
    1,
    4,
    7,
    0,
    6,
    ]
    _g_multiplayer_game_type_list1 = [
    1,
    7,
    0,
    6,
    ]
    _g_multiplayer_game_type_list2 = [
    7,
    0,
    ]
    _g_multiplayer_game_type_list1 = [
    6,
    5,
    4,
    1,
    ]
    _g_multiplayer_game_type_list1 = [
    5,
    4,
    1,
    ]
    _g_multiplayer_game_type_list1 = [
    6,
    5,
    4,
    ]
    var004 = -10000000
    var005 = 0
    var006 = 0
    var007 = 0
    if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
        for cur_agent in __all_agents__:
            if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
                var007 += 1
            #end
        #end
    #end
    var009 = var007
    if var009 <= 4:
        var010 = 2
    elif var009 <= 8:
        var010 = 2
    elif var009 <= 16:
        var010 = 3
    elif var009 <= 24:
        var010 = 4
    elif var009 <= 32:
        var010 = 5
    elif var009 <= 40:
        var010 = 6
    else:
        var010 = 7
    #end
    var007 /= 3
    var007 += 1
    var011 = var007 * -1
    if var002 == 1:
        var010 = 1
    #end
    if _g_multiplayer_game_type == 5:
        var012 = 0
        var013 = 0
        for var014 in range(0, _g_number_of_flags):
            slot_no_015 = 146 + var014
            troop_slot_016 = troop_get_slot(trp.multiplayer_data,slot_no_015)
            if troop_slot_016 != 0:
                troop_slot_016 -= 1
                if troop_slot_016 == var001:
                    var012 += 1
                else:
                    var013 += 1
                #end
            #end
        #end
    #end
    var017 = 0
    if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
        if var001 == 0 and _g_multiplayer_team_1_first_spawn == 1:
            var017 = 1
            _g_multiplayer_team_1_first_spawn = 0
        elif var001 == 1 and _g_multiplayer_team_2_first_spawn == 1:
            var017 = 1
            _g_multiplayer_team_2_first_spawn = 0
        #end
    #end
    if var017 == 1:
        var005 = var001 * 32
    else:
        for var018 in range(0, 64):
            var019 = 3000
            var020 = 3000
            var021 = 0
            random_x_022 = store_random_in_range(0,var010)
            if random_x_022 == 0:
                pos0 = entry_point_get_position(var018)
                for cur_agent in __all_agents__:
                    if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
                        agent_team_no_023 = agent_get_team(cur_agent)
                        if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                            if teams_are_enemies(var001,agent_team_no_023):
                                var024 = -2
                            else:
                                var024 = 1
                            #end
                        #end
                    elif _g_multiplayer_game_type in _g_multiplayer_game_type_list2:
                        var024 = -1
                    #end
                #end
                pos1 = agent_get_position(cur_agent)
                distance_025 = get_distance_between_positions_in_meters(0,1)
                var006 += 1
                if True:
                    if var024 < 0:
                        if distance_025 < var019:
                            var020 = var019
                            var019 = distance_025
                        elif distance_025 < var020:
                            var020 = distance_025
                        #end
                    #end
                    if distance_025 < 100:
                        if distance_025 < 3:
                            if var002 == 0 or var024 >= 0 or _g_multiplayer_game_type != 6:
                                if distance_025 < 1:
                                    var026 = -1000000
                                elif distance_025 < 2:
                                    if var024 < 0:
                                        var026 = -20000
                                    else:
                                        var026 = -2000
                                    #end
                                #end
                            else:
                                if var024 < 0:
                                    var026 = -10000
                                else:
                                    var026 = -1000
                                #end
                            #end
                        else:
                            if distance_025 < 1:
                                var026 = -20000
                            elif distance_025 < 2:
                                var026 = -2000
                            else:
                                var026 = -1000
                            #end
                        #end
                        var026 *= var007
                    else:
                        var026 = 0
                        if _g_multiplayer_game_type == 6 or var024 >= 0 or var001 == 1:
                            if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                                var026 = 45 - distance_025
                                val_max(var026,0)
                                var026 *= var026
                            else:
                                var027 = 45 * 3
                                var027 /= 2
                                var026 = var027 - distance_025
                                var026 *= var026
                            #end
                        #end
                        var026 *= var024
                    #end
                    var021 += var026
                #end
            #end
            if _g_multiplayer_game_type == 6:
                var028 = 1000 * var007
                if var021 >= var028:
                    var021 = var028
                #end
            #end
            if _g_multiplayer_game_type != 6:
                if var019 < 3000:
                    if var019 > 32:
                        var019 -= 32
                        var029 = var019 * -50
                        var029 *= var007
                        var021 += var029
                    #end
                #end
                if var020 < 3000:
                    if var020 > 32:
                        var020 -= 32
                        var030 = var020 * -50
                        var030 *= var007
                        var021 += var030
                    #end
                #end
            #end
            if var003 != -1:
                distance_to_terrain_031 = position_get_distance_to_terrain(0)
                val_max(distance_to_terrain_031,0)
                val_min(distance_to_terrain_031,300)
                if distance_to_terrain_031 >= 40:
                    var032 = distance_to_terrain_031 * var007
                    if _g_multiplayer_game_type == 1:
                        var032 *= 16
                    else:
                        var032 *= 4
                    #end
                #end
                if var003 == 0:
                    if _g_multiplayer_game_type == 6 and var001 == 0:
                        var021 += var032
                    #end
                else:
                    var032 *= 5
                    var021 -= var032
                #end
            #end
            if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                if _g_multiplayer_game_type != 6:
                    random_x_022 = store_random_in_range(0,400)
                    if _g_multiplayer_game_type == 4:
                        random_x_022 *= 5
                    #end
                elif var001 == 1:
                    random_x_022 = store_random_in_range(0,600)
                else:
                    random_x_022 = store_random_in_range(0,200)
                #end
                random_x_022 *= var007
                var021 += random_x_022
            #end
            if _g_multiplayer_game_type in _g_multiplayer_game_type_list1:
                if _g_multiplayer_game_type == 4:
                    if var001 == 0:
                        pos1 = entry_point_get_position(64)
                        pos2 = entry_point_get_position(65)
                    else:
                        pos1 = entry_point_get_position(65)
                        pos2 = entry_point_get_position(64)
                    #end
                else:
                    if var001 == 0:
                        pos1 = entry_point_get_position(66)
                        pos2 = entry_point_get_position(32)
                    else:
                        pos1 = entry_point_get_position(32)
                        pos2 = entry_point_get_position(66)
                    #end
                #end
                if _g_multiplayer_game_type == 6:
                    pos_z_033 = position_get_z(0)
                    position_set_z(1,pos_z_033)
                    position_set_z(2,pos_z_033)
                #end
                sq_distance_034 = get_sq_distance_between_positions_in_meters(0,1)
                sq_distance_035 = get_sq_distance_between_positions_in_meters(0,2)
                distance_036 = get_distance_between_positions_in_meters(0,2)
                var037 = 0
                if _g_multiplayer_game_type == 4:
                    distance_038 = get_distance_between_positions_in_meters(0,1)
                    if distance_038 < 100:
                        var037 = 100 - distance_038
                        if var037 > 75:
                            var037 = 75
                        #end
                    #end
                    var037 *= 50
                    var037 *= var007
                elif sq_distance_034 < 10000:
                    if var001 == 0:
                        if sq_distance_034 < 2500:
                            sq_distance_034 = 0
                        else:
                            sq_distance_034 -= 2500
                            sq_distance_034 *= 2
                        #end
                    #end
                    var037 = 10000 - sq_distance_034
                    var037 += 5000
                    if var001 == 0:
                        pass
                    else:
                        var037 /= 45
                    #end
                    var037 *= var007
                #end
                var021 += var037
                var039 = 0
                if _g_multiplayer_game_type == 4 and distance_036 < 150:
                    var039 = 150 - distance_036
                    if var039 > 50:
                        var040 = var039 - 50
                        var040 *= 2
                        var039 += var040
                    #end
                    var039 *= -50
                    var039 *= var007
                elif _g_multiplayer_game_type == 6 or var001 == 1:
                    var039 = 0
                    if _g_multiplayer_game_type != 6:
                        if sq_distance_035 < 10000:
                            var039 = 10000 - sq_distance_035
                            var039 /= 4
                            var039 *= var011
                        #end
                    else:
                        val_max(distance_036,60)
                        if var003 == 1:
                            var041 = 120
                        else:
                            var041 = 80
                        #end
                        if distance_036 <= var041:
                            var039 = var041 - distance_036
                            var039 *= 180
                        else:
                            var039 = distance_036 - var041
                            var039 *= 30
                        #end
                        var039 -= 600
                        val_max(var039,0)
                        var039 *= var011
                    #end
                #end
                var021 += var039
            elif _g_multiplayer_game_type == 5:
                for var014 in range(0, _g_number_of_flags):
                    slot_no_015 = 146 + var014
                    troop_slot_016 = troop_get_slot(trp.multiplayer_data,slot_no_015)
                    if troop_slot_016 != 0:
                        troop_slot_016 -= 1
                        scp_instance_042 = scene_prop_get_instance(spr.headquarters_pole_code_only,var014)
                        pos1 = prop_instance_get_position(scp_instance_042)
                        sq_distance_043 = get_sq_distance_between_positions_in_meters(0,1)
                        if sq_distance_043 < 6400:
                            if troop_slot_016 == var001:
                                var044 = 6400 - sq_distance_043
                                var044 *= 2
                                var044 /= var012
                                var044 *= var007
                            else:
                                var044 = 6400 - sq_distance_043
                                var044 *= 2
                                var044 /= var013
                                var044 *= var011
                            #end
                        #end
                    #end
                    var021 += var044
                #end
            #end
            if var021 > var004:
                var004 = var021
                var005 = var018
            #end
        #end
    #end
    reg0 = var005


def multiplayer_buy_agent_equipment(player_id_001):
    var017_list1 = [
    3,
    2,
    1,
    0,
    ]
    troop_id_002 = player_get_troop_id(player_id_001)
    gold_003 = player_get_gold(player_id_001)
    player_slot_004 = player_get_slot(player_id_001,1)
    player_set_slot(player_id_001,1,0)
    gold_003 += player_slot_004
    var005 = 0
    for slot_no_006 in range(2, 11):
        player_slot_007 = player_get_slot(player_id_001,slot_no_006)
        slot_no_008 = slot_no_006 - 2
        if player_item_slot_is_picked_up(player_id_001,slot_no_008):
            player_slot_007 = -1
        #end
        slot_no_008 += 11
        player_set_slot(player_id_001,slot_no_008,player_slot_007)
    #end
    var009 = 1000
    for var010 in range(0, var009):
        multiplayer_calculate_cur_selected_items_cost(player_id_001,0)
        var011 = reg0
        if var011 > gold_003:
            multiplayer_get_troop_class(troop_id_002)
            var012 = reg0
            var013 = 0
            slot_no_014 = -1
            for slot_no_006 in range(11, 20):
                player_slot_015 = player_get_slot(player_id_001,slot_no_006)
                if player_slot_015 >= 0:
                    multiplayer_get_item_value_for_troop(player_slot_015,troop_id_002)
                    var016 = reg0
                    var017 = slot_no_006 - 11
                    if var017 in var017_list1:
                        var016 *= 5
                    elif var017 == 4:
                        var016 *= 4
                    elif var017 == 5:
                        var016 *= 2
                    elif var017 == 6:
                        var016 *= 8
                    elif var017 == 7:
                        var016 *= 8
                    else:
                        pass
                    #end
                #end
                item_slot_018 = item_get_slot(player_slot_015,60)
                if var012 == 1 and item_slot_018 == 1 or item_slot_018 == 2 or item_slot_018 == 3 or item_slot_018 == 4 or item_slot_018 == 6 or item_slot_018 == 10 or item_slot_018 == 7:
                    var016 /= 2
                elif var012 == 2 and item_slot_018 == 8 or item_slot_018 == 11:
                    var016 /= 2
                elif var012 == 3 and item_slot_018 == 9 or item_slot_018 == 1 or item_slot_018 == 18:
                    var016 /= 2
                elif var012 == 4 and item_slot_018 == 12 or item_slot_018 == 14:
                    var016 /= 2
                elif var012 == 5 and item_slot_018 == 13 or item_slot_018 == 15:
                    var016 /= 2
                elif var012 == 6 and item_slot_018 == 12 or item_slot_018 == 14 or item_slot_018 == 18:
                    var016 /= 2
                elif var012 == 7 and item_slot_018 == 13 or item_slot_018 == 15 or item_slot_018 == 18:
                    var016 /= 2
                #end
                if var016 > var013:
                    var013 = var016
                    slot_no_014 = slot_no_006
                #end
            #end
            player_slot_015 = player_get_slot(player_id_001,slot_no_014)
            multiplayer_get_previous_item_for_item_and_troop(player_slot_015,troop_id_002)
            player_slot_015 = reg0
            player_set_slot(player_id_001,slot_no_014,player_slot_015)
        else:
            var009 = 0
            gold_003 -= var011
            player_set_gold(player_id_001,gold_003,15000)
            for slot_no_006 in range(11, 20):
                player_slot_015 = player_get_slot(player_id_001,slot_no_006)
                if player_slot_015 >= 0:
                    pass
                else:
                    var019 = slot_no_006 - 11
                    slot_no_020 = var019 + 2
                    player_slot_007 = player_get_slot(player_id_001,slot_no_020)
                    if player_slot_007 == -1 or player_item_slot_is_picked_up(player_id_001,var019):
                        pass
                    else:
                        item_slot_018 = item_get_slot(player_slot_007,60)
                        if is_between(item_slot_018,1,18):
                            var021 = -1
                            for var022 in range(1, 10):
                                if var021 < 0:
                                    var023 = 0
                                    for slot_no_024 in range(11, 20):
                                        player_slot_025 = player_get_slot(player_id_001,slot_no_024)
                                        if player_slot_025 >= 0:
                                            item_slot_026 = item_get_slot(player_slot_025,60)
                                            if item_slot_026 == var022:
                                                var023 = 1
                                            #end
                                        #end
                                    #end
                                #end
                            #end
                        #end
                        if var023 == 0:
                            var027 = itm.items_end
                            for var028 in range(0, var027):
                                if item_slot_eq(var028,60,var022) and cf_multiplayer_is_item_default_for_troop(var028,troop_id_002):
                                    var027 = 0
                                    var021 = var028
                                #end
                            #end
                        #end
                    #end
                    if var021 >= 0:
                        player_set_slot(player_id_001,slot_no_006,var021)
                        player_slot_015 = var021
                    #end
                #end
                if player_slot_015 >= 0:
                    item_slot_no_029 = slot_no_006 - 11
                    player_add_spawn_item(player_id_001,item_slot_no_029,player_slot_015)
                    if item_slot_no_029 == 5:
                        var005 = 1
                    #end
                #end
            #end
            player_set_slot(player_id_001,27,var011)
        #end
    #end
    if var005 == 0 and _g_multiplayer_force_default_armor == 1:
        var009 = itm.items_end
        for item_id_030 in range(0, var009):
            if item_slot_eq(item_id_030,60,19) or item_slot_eq(item_id_030,60,20) or item_slot_eq(item_id_030,60,21) and cf_multiplayer_is_item_default_for_troop(item_id_030,troop_id_002):
                var009 = 0
                player_add_spawn_item(player_id_001,5,item_id_030)
            #end
        #end
    #end


def party_get_ideal_size(party_id_001):
    var002 = 30
    if party_slot_eq(party_id_001,0,13):
        troop_id_003 = party_stack_get_troop_id(party_id_001,0)
        party_faction_004 = store_faction_of_party(party_id_001)
        var002 = 10
        skill_lvl_005 = store_skill_level(skl.leadership,troop_id_003)
        attribute_lvl_006 = store_attribute_level(troop_id_003,3)
        skill_lvl_005 *= 5
        var002 += skill_lvl_005
        var002 += attribute_lvl_006
        troop_slot_007 = troop_get_slot(troop_id_003,7)
        var008 = troop_slot_007 / 25
        var002 += var008
        if faction_slot_eq(party_faction_004,11,troop_id_003):
            var002 += 100
        #end
        if faction_slot_eq(party_faction_004,8,troop_id_003):
            var002 += 20
        #end
        for p_009 in range(p.castle_1, p.village_1):
            if party_slot_eq(p_009,7,troop_id_003):
                var002 += 20
            #end
        #end
    #end
    character_lvl_010 = store_character_level(trp.player)
    val_min(character_lvl_010,80)
    var011 = 80 + character_lvl_010
    var002 *= var011
    var002 /= 80
    reg0 = var002


def game_get_party_prisoner_limit():
    [troop_id_001] = trp.player
    var002 = 0
    skill_lvl_003 = store_skill_level(skl.prisoner_management,[troop_id_001])
    var002 = skill_lvl_003 * 5
    reg0 = var002
    set_trigger_result(reg0)


def game_get_item_extra_text(item_id_001, var002, var003):
    if is_between(item_id_001,itm.smoked_fish,itm.siege_supply):
        if var002 == 0:
            var004 = 1
            if item_id_001 == itm.cattle_meat or item_id_001 == itm.pork or item_id_001 == itm.chicken and var003 == 41:
                var004 = 0
            #end
            if var004 == 1:
                item_slot_005 = item_get_slot(item_id_001,1)
                reg1 = item_slot_005
                set_result_string("@+{reg1} to party morale")
                set_trigger_result(4474111)
            #end
        #end
    elif is_between(item_id_001,itm.book_tactics,itm.book_wound_treatment_reference):
        if var002 == 0:
            reg1 = item_get_slot(item_id_001,4)
            set_result_string("@Requires {reg1} intelligence to read")
            set_trigger_result(16772829)
        elif var002 == 1:
            item_slot_006 = item_get_slot(item_id_001,2)
            item_slot_006 /= 10
            reg1 = item_slot_006
            set_result_string("@Reading Progress: {reg1}%")
            set_trigger_result(16772829)
        #end
    elif is_between(item_id_001,itm.book_wound_treatment_reference,itm.spice):
        if var002 == 0:
            if item_id_001 == itm.book_wound_treatment_reference:
                s1 = str_store_string("@wound treament")
            elif item_id_001 == itm.book_training_reference:
                s1 = str_store_string("@trainer")
            elif item_id_001 == itm.book_surgery_reference:
                s1 = str_store_string("@surgery")
            #end
            set_result_string("@+1 to {s1} while in inventory")
            set_trigger_result(16772829)
        #end
    #end


def game_on_disembark():
    jump_to_menu(mnu.disembark)


def game_context_menu_get_buttons(party_id_001):
    if party_id_001 != p.main_party:
        context_menu_add_item("@Move here",-7)
    #end
    if is_between(party_id_001,p.town_1,p.salt_mine):
        context_menu_add_item("@View notes",1)
    else:
        party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
        if party_num_companions_stacks_002 > 0:
            troop_id_003 = party_stack_get_troop_id(party_id_001,0)
            if is_between(troop_id_003,trp.npc1,trp.knight_1_1_wife):
                context_menu_add_item("@View notes",2)
            #end
        #end
    #end
    if party_id_001 != p.main_party:
        party_faction_004 = store_faction_of_party(party_id_001)
        if party_faction_004 == _players_kingdom or party_faction_004 == fac.player_supporters_faction or party_slot_eq(party_id_001,0,11) and not is_between(party_id_001,p.town_1,p.salt_mine):
            context_menu_add_item("@Accompany",-6)
        #end
    #end


def game_event_context_menu_button_clicked(party_id_001, var002):
    if var002 == 1:
        change_screen_notes(3,party_id_001)
    elif var002 == 2:
        troop_id_003 = party_stack_get_troop_id(party_id_001,0)
        change_screen_notes(1,troop_id_003)
    #end


def game_get_skill_modifier_for_troop(var001, var002):
    trigger_result_003 = 0
    if var002 == skl.wound_treatment:
        get_troop_item_amount(var001,itm.book_wound_treatment_reference)
        if reg0 > 0:
            trigger_result_003 += 1
        elif var002 == skl.trainer:
            get_troop_item_amount(var001,itm.book_training_reference)
            if reg0 > 0:
                trigger_result_003 += 1
            elif var002 == skl.surgery:
                get_troop_item_amount(var001,itm.book_surgery_reference)
                if reg0 > 0:
                    trigger_result_003 += 1
                #end
            #end
        #end
    #end
    set_trigger_result(trigger_result_003)


def npc_get_troop_wage(troop_id_001):
    character_lvl_002 = 0
    if troop_is_hero(troop_id_001):
        pass
    else:
        character_lvl_002 = store_character_level(troop_id_001)
        character_lvl_002 *= character_lvl_002
        character_lvl_002 += 50
        character_lvl_002 /= 30
        if troop_is_mounted(troop_id_001):
            character_lvl_002 *= 5
            character_lvl_002 /= 4
        #end
    #end
    reg0 = character_lvl_002


def setup_talk_info():
    talk_info_set_relation_bar(_g_talk_troop_relation)
    s61 = str_store_troop_name(_g_talk_troop)
    s61 = str_store_string("@{!} {s61}")
    reg1 = _g_talk_troop_relation
    s62 = str_store_string(gstr.relation_reg1)
    talk_info_set_line(0,61)
    talk_info_set_line(1,62)
    describe_relation_to_s63(_g_talk_troop_relation)
    talk_info_set_line(3,63)


def setup_talk_info_companions():
    npc_morale(_g_talk_troop)
    var001 = reg0
    talk_info_set_relation_bar(var001)
    s61 = str_store_troop_name(_g_talk_troop)
    s61 = str_store_string("@{!} {s61}")
    reg1 = var001
    s62 = str_store_string(gstr.morale_reg1)
    talk_info_set_line(0,61)
    talk_info_set_line(1,62)
    talk_info_set_line(3,63)


def update_party_creation_random_limits():
    character_lvl_001 = store_character_level(trp.player)
    var002 = character_lvl_001 * 3
    var002 += 25
    val_min(var002,100)
    set_party_creation_random_limits(0,var002)
    reg0 = var002


def set_trade_route_between_centers(party_id_001, party_id_002):
    var003 = 0
    var004 = 0
    for slot_no_005 in range(190, 205):
        if var003 == 0 and party_slot_eq(party_id_001,slot_no_005,0):
            party_set_slot(party_id_001,slot_no_005,party_id_002)
            var003 = 1
        #end
        if var004 == 0 and party_slot_eq(party_id_002,slot_no_005,0):
            party_set_slot(party_id_002,slot_no_005,party_id_001)
            var004 = 1
        #end
    #end
    if var003 == 0:
        s1 = str_store_party_name(party_id_001)
        print("@{!}DEBUG -- ERROR: More than 15 trade routes are given for {s1}.")
    #end
    if var004 == 0:
        s1 = str_store_party_name(party_id_002)
        print("@{!}DEBUG -- ERROR: More than 15 trade routes are given for {s1}.")
    #end


def average_trade_good_prices():
    var001 = 250 - itm.spice
    for p_002 in range(p.town_1, p.castle_1):
        if is_between(p_002,p.town_1,p.castle_1) or is_between(p_002,p.village_1,p.salt_mine):
            for p_003 in range(p.town_1, p.salt_mine):
                if is_between(p_002,p.town_1,p.castle_1) or is_between(p_002,p.village_1,p.salt_mine) and p_003 != p_002:
                    distance_parties_004 = store_distance_to_party_from_party(p_002,p_003)
                    if distance_parties_004 < 50:
                        var005 = 50 - distance_parties_004
                        for itm_006 in range(itm.spice, itm.siege_supply):
                            slot_no_007 = itm_006 + var001
                            party_slot_008 = party_get_slot(p_002,slot_no_007)
                            party_slot_009 = party_get_slot(p_003,slot_no_007)
                            var010 = party_slot_008 - party_slot_009
                            var011 = var010
                            var011 *= var005
                            var011 /= 1000
                            party_slot_009 += var011
                            party_set_slot(p_003,slot_no_007,party_slot_009)
                            party_slot_008 -= var011
                            party_set_slot(p_002,slot_no_007,party_slot_008)
                        #end
                    #end
                #end
            #end
        #end
    #end


def average_trade_good_prices_2():
    var001 = 250 - itm.spice
    for p_002 in range(p.town_1, p.castle_1):
        for p_003 in range(p.town_1, p.salt_mine):
            if is_between(p_003,p.town_1,p.castle_1) or is_between(p_003,p.village_1,p.salt_mine) and party_slot_eq(p_003,121,p_002) or party_slot_eq(p_002,190,p_003) or party_slot_eq(p_002,191,p_003) or party_slot_eq(p_002,192,p_003) or party_slot_eq(p_002,193,p_003) or party_slot_eq(p_002,194,p_003) or party_slot_eq(p_002,195,p_003) or party_slot_eq(p_002,196,p_003) or party_slot_eq(p_002,197,p_003) or party_slot_eq(p_002,198,p_003) or party_slot_eq(p_002,199,p_003) or party_slot_eq(p_002,200,p_003) or party_slot_eq(p_002,201,p_003) or party_slot_eq(p_002,202,p_003) or party_slot_eq(p_002,203,p_003) or party_slot_eq(p_002,204,p_003):
                for itm_004 in range(itm.spice, itm.siege_supply):
                    slot_no_005 = itm_004 + var001
                    party_slot_006 = party_get_slot(p_002,slot_no_005)
                    party_slot_007 = party_get_slot(p_003,slot_no_005)
                    var008 = party_slot_006 - party_slot_007
                    var009 = var008 / 5
                    party_slot_007 += var009
                    party_set_slot(p_003,slot_no_005,party_slot_007)
                    party_slot_006 -= var009
                    party_set_slot(p_002,slot_no_005,party_slot_006)
                #end
            #end
        #end
    #end


def average_trade_good_productions():
    var001 = 500 - itm.spice
    for p_002 in range(p.town_1, p.castle_1):
        if is_between(p_002,p.town_1,p.castle_1) or is_between(p_002,p.village_1,p.salt_mine):
            for p_003 in range(p.town_1, p.salt_mine):
                if is_between(p_002,p.town_1,p.castle_1) or is_between(p_002,p.village_1,p.salt_mine) and p_003 != p_002:
                    distance_parties_004 = store_distance_to_party_from_party(p_002,p_003)
                    if distance_parties_004 < 110:
                        var005 = 110 - distance_parties_004
                        for itm_006 in range(itm.spice, itm.siege_supply):
                            slot_no_007 = itm_006 + var001
                            party_slot_008 = party_get_slot(p_002,slot_no_007)
                            party_slot_009 = party_get_slot(p_003,slot_no_007)
                            var010 = party_slot_008 - party_slot_009
                            if var010 > 0:
                                var011 = var010 * 1
                                var011 *= var005
                                var011 /= 110
                                party_slot_009 += var011
                                party_set_slot(p_003,slot_no_007,party_slot_009)
                            #end
                        #end
                    #end
                #end
            #end
        #end
    #end


def normalize_trade_good_productions():
    var001 = 500 - itm.spice
    for itm_002 in range(itm.spice, itm.siege_supply):
        var003 = 0
        var004 = 0
        slot_no_005 = itm_002 + var001
        for p_006 in range(p.town_1, p.salt_mine):
            var004 += 1
            if is_between(p_006,p.town_1,p.castle_1):
                var004 += 4
            #end
            party_slot_007 = party_get_slot(p_006,slot_no_005)
            var003 += party_slot_007
        #end
        var008 = var003 / var004
        if var008 != 0:
            for p_006 in range(p.town_1, p.salt_mine):
                if is_between(p_006,p.town_1,p.castle_1) or is_between(p_006,p.village_1,p.salt_mine):
                    party_slot_007 = party_get_slot(p_006,slot_no_005)
                    party_slot_007 -= var008
                    party_set_slot(p_006,slot_no_005,party_slot_007)
                #end
            #end
        #end
    #end


def update_trade_good_prices():
    for p_001 in range(p.town_1, p.salt_mine):
        if is_between(p_001,p.town_1,p.castle_1) or is_between(p_001,p.village_1,p.salt_mine):
            update_trade_good_price_for_party(p_001)
        #end
    #end
    for itm_002 in range(itm.spice, itm.siege_supply):
        var003 = 0
        var004 = 0
        for p_001 in range(p.town_1, p.salt_mine):
            if is_between(p_001,p.town_1,p.castle_1) or is_between(p_001,p.village_1,p.salt_mine):
                slot_no_005 = itm_002 - itm.spice
                slot_no_005 += 250
                party_slot_006 = party_get_slot(p_001,slot_no_005)
                if is_between(p_001,p.town_1,p.castle_1):
                    var007 = 5
                else:
                    var007 = 1
                #end
            #end
            party_slot_006 *= var007
            var003 += party_slot_006
            var004 += var007
        #end
        for p_001 in range(p.town_1, p.salt_mine):
            if is_between(p_001,p.town_1,p.castle_1) or is_between(p_001,p.village_1,p.salt_mine):
                slot_no_005 = itm_002 - itm.spice
                slot_no_005 += 250
                party_slot_006 = party_get_slot(p_001,slot_no_005)
                party_slot_006 *= 1000
                party_slot_006 *= var004
                party_slot_006 /= var003
                val_clamp(party_slot_006,100,10000)
                party_set_slot(p_001,slot_no_005,party_slot_006)
            #end
        #end
    #end


def update_trade_good_price_for_party(party_id_001):
    for itm_002 in range(itm.spice, itm.siege_supply):
        slot_no_003 = itm_002 - itm.spice
        slot_no_003 += 250
        party_slot_004 = party_get_slot(party_id_001,slot_no_003)
        center_get_production(party_id_001,itm_002)
        var005 = reg0
        center_get_consumption(party_id_001,itm_002)
        var006 = reg0
        var005 -= var006
        if var005 > 0:
            var007 = var005 * 1
            random_x_008 = store_random_in_range(0,var007)
            random_x_008 += var007
            random_x_008 += var007
            var009 = party_slot_004 - random_x_008
            val_clamp(var009,100,10000)
            if var009 < 1000:
                var010 = var009 + 300
                random_x_008 *= var010
                random_x_008 /= 1300
            #end
            party_slot_004 -= random_x_008
        elif var005 < 0:
            var007 = 0 - var005
            var007 *= 1
            random_x_008 = store_random_in_range(0,var007)
            random_x_008 += var007
            random_x_008 += var007
            party_slot_004 += random_x_008
        #end
        if is_between(party_id_001,p.village_1,p.salt_mine):
            var011 = party_slot_004 - 1000
            var011 *= 96
            var011 /= 100
            var012 = 1000 + var011
        else:
            var011 = party_slot_004 - 1000
            var011 *= 96
            var011 /= 100
            var012 = 1000 + var011
        #end
        if True:
            item_slot_013 = item_get_slot(itm_002,50)
            if item_slot_013 != 0:
                slot_no_014 = item_slot_013 - itm.spice
                slot_no_014 += 250
                party_slot_015 = party_get_slot(party_id_001,slot_no_014)
                party_slot_015 *= 3
                var016 = 3
                for p_017 in range(p.village_1, p.salt_mine):
                    if party_slot_eq(p_017,120,party_id_001):
                        party_slot_018 = party_get_slot(p_017,slot_no_014)
                        party_slot_015 += party_slot_018
                        var016 += 1
                    #end
                #end
            #end
            var019 = party_slot_015 / var016
            if var019 > var012:
                var020 = var019 - var012
                var020 /= 10
                var012 += var020
            #end
        #end
        val_clamp(var012,100,10000)
        party_set_slot(party_id_001,slot_no_003,var012)
    #end


def center_get_production(party_id_001, var002):
    party_id_001_list2 = [
    p.village_100,
    p.village_99,
    p.village_42,
    p.village_37,
    ]
    party_id_001_list2 = [
    p.village_25,
    p.village_11,
    ]
    var002_list2 = [
    itm.chicken,
    itm.pork,
    ]
    party_slot_003 = 0
    if var002 == itm.bread:
        party_slot_003 = party_get_slot(party_id_001,221)
        party_slot_003 *= 20
    elif var002 == itm.grain:
        party_slot_003 = party_get_slot(party_id_001,209)
        party_slot_003 /= 125
    elif var002 == itm.ale:
        party_slot_003 = party_get_slot(party_id_001,222)
        party_slot_003 *= 25
    elif var002 == itm.smoked_fish:
        party_slot_003 = party_get_slot(party_id_001,214)
        party_slot_003 *= 4
    elif var002 == itm.salt:
        party_slot_003 = party_get_slot(party_id_001,215)
        party_slot_003 *= 35
    elif var002 == itm.cattle_meat:
        party_slot_003 = party_get_slot(party_id_001,205)
        party_slot_003 /= 4
    elif var002 == itm.dried_meat:
        party_slot_003 = party_get_slot(party_id_001,205)
        party_slot_003 /= 2
    elif var002 == itm.cheese:
        party_slot_003 = party_get_slot(party_id_001,205)
        party_slot_004 = party_get_slot(party_id_001,206)
        party_slot_004 /= 2
        party_slot_003 += party_slot_004
        party_slot_005 = party_get_slot(party_id_001,232)
        party_slot_003 *= party_slot_005
        party_slot_003 /= 10
    elif var002 == itm.butter:
        party_slot_003 = party_get_slot(party_id_001,205)
        party_slot_005 = party_get_slot(party_id_001,232)
        party_slot_003 *= party_slot_005
        party_slot_003 /= 15
    elif var002 == itm.raw_leather:
        party_slot_003 = party_get_slot(party_id_001,205)
        party_slot_003 /= 6
        party_slot_004 = party_get_slot(party_id_001,206)
        party_slot_004 /= 12
        party_slot_003 += party_slot_004
    elif var002 == itm.leatherwork:
        party_slot_003 = party_get_slot(party_id_001,230)
        party_slot_003 *= 20
    elif var002 == itm.honey:
        party_slot_003 = party_get_slot(party_id_001,216)
        party_slot_003 *= 6
    elif var002 == itm.cabbages:
        party_slot_003 = party_get_slot(party_id_001,232)
        party_slot_003 *= 10
    elif var002 == itm.apples:
        party_slot_003 = party_get_slot(party_id_001,232)
        party_slot_003 *= 10
    elif var002 == itm.sausages:
        party_slot_003 = party_get_slot(party_id_001,206)
        party_slot_003 /= 15
    elif var002 == itm.wool:
        party_slot_003 = party_get_slot(party_id_001,206)
        party_slot_003 /= 5
    elif var002 == itm.wool_cloth:
        party_slot_003 = party_get_slot(party_id_001,227)
        party_slot_003 *= 5
    elif var002 in var002_list2:
        if is_between(party_id_001,p.village_1,p.salt_mine):
            party_slot_003 = 30
        else:
            party_slot_003 = 0
        #end
    elif var002 == itm.iron:
        party_slot_003 = party_get_slot(party_id_001,219)
        party_slot_003 *= 10
    elif var002 == itm.tools:
        party_slot_003 = party_get_slot(party_id_001,229)
        party_slot_003 *= 3
    elif var002 == itm.pottery:
        party_slot_003 = party_get_slot(party_id_001,228)
        party_slot_003 *= 5
    elif var002 == itm.raw_grapes:
        party_slot_003 = party_get_slot(party_id_001,211)
        party_slot_003 /= 100
    elif var002 == itm.wine:
        party_slot_003 = party_get_slot(party_id_001,223)
        party_slot_003 *= 25
    elif var002 == itm.raw_olives:
        party_slot_003 = party_get_slot(party_id_001,210)
        party_slot_003 /= 150
    elif var002 == itm.oil:
        party_slot_003 = party_get_slot(party_id_001,224)
        party_slot_003 *= 12
    elif var002 == itm.linen:
        party_slot_003 = party_get_slot(party_id_001,225)
        party_slot_003 *= 5
    elif var002 == itm.raw_flax:
        party_slot_003 = party_get_slot(party_id_001,212)
        party_slot_003 /= 80
    elif var002 == itm.velvet:
        party_slot_003 = party_get_slot(party_id_001,226)
        party_slot_003 *= 5
    elif var002 == itm.raw_silk:
        party_slot_003 = party_get_slot(party_id_001,217)
        party_slot_003 /= 20
    elif var002 == itm.raw_dyes:
        party_slot_003 = party_get_slot(party_id_001,218)
        party_slot_003 /= 20
    elif var002 == itm.raw_date_fruit:
        party_slot_003 = party_get_slot(party_id_001,213)
        party_slot_003 /= 120
    elif var002 == itm.furs:
        party_slot_003 = party_get_slot(party_id_001,220)
        party_slot_003 *= 25
    elif var002 == itm.spice:
        if party_id_001 == p.town_10:
            party_slot_003 = 100
        elif party_id_001 == p.town_17:
            party_slot_003 = 50
        elif party_id_001 == p.town_19:
            party_slot_003 = 50
        elif party_id_001 == p.town_22:
            party_slot_003 = 50
        elif party_id_001 in party_id_001_list2:
            party_slot_003 = 50
        elif party_id_001 in party_id_001_list2:
            party_slot_003 = 25
        #end
    #end
    var006 = party_slot_003
    if var002 == itm.bread:
        good_price_affects_good_production(party_id_001,itm.grain,party_slot_003,1)
        var006 = reg0
    elif var002 == itm.ale:
        good_price_affects_good_production(party_id_001,itm.grain,party_slot_003,2)
        var006 = reg0
    elif var002 == itm.dried_meat:
        good_price_affects_good_production(party_id_001,itm.salt,party_slot_003,2)
        var006 = reg0
    elif var002 == itm.smoked_fish:
        good_price_affects_good_production(party_id_001,itm.salt,party_slot_003,2)
        var006 = reg0
    elif var002 == itm.tools:
        good_price_affects_good_production(party_id_001,itm.iron,party_slot_003,1)
        var006 = reg0
    elif var002 == itm.wool_cloth:
        good_price_affects_good_production(party_id_001,itm.wool,party_slot_003,1)
        var006 = reg0
    elif var002 == itm.wine:
        good_price_affects_good_production(party_id_001,itm.raw_grapes,party_slot_003,1)
        var006 = reg0
    elif var002 == itm.oil:
        good_price_affects_good_production(party_id_001,itm.raw_olives,party_slot_003,1)
        var006 = reg0
    elif var002 == itm.velvet:
        good_price_affects_good_production(party_id_001,itm.raw_silk,party_slot_003,1)
        var007 = reg0
        good_price_affects_good_production(party_id_001,itm.raw_dyes,var007,2)
        var006 = reg0
    elif var002 == itm.leatherwork:
        good_price_affects_good_production(party_id_001,itm.raw_leather,party_slot_003,1)
        var006 = reg0
    elif var002 == itm.linen:
        good_price_affects_good_production(party_id_001,itm.raw_flax,party_slot_003,1)
        var006 = reg0
    #end
    var008 = var006
    if True:
        party_slot_009 = party_get_slot(party_id_001,50)
        party_slot_009 += 75
        var006 *= party_slot_009
        var006 /= 125
    #end
    if party_slot_eq(party_id_001,35,1) or party_slot_eq(party_id_001,35,2):
        var006 = 0
    #end
    reg0 = var006
    reg1 = var008
    reg2 = party_slot_003


def center_get_consumption(party_id_001, item_id_002):
    item_slot_003 = 0
    if is_between(party_id_001,p.town_19,p.castle_1) or party_id_001 >= p.village_91 and item_slot_ge(item_id_002,13,0):
        item_slot_003 = item_get_slot(item_id_002,13)
    elif is_between(party_id_001,p.village_1,p.salt_mine):
        item_slot_003 = item_get_slot(item_id_002,12)
    elif is_between(party_id_001,p.town_1,p.castle_1):
        item_slot_003 = item_get_slot(item_id_002,11)
    #end
    party_slot_004 = 0
    if item_id_002 == itm.grain:
        party_slot_005 = party_get_slot(party_id_001,221)
        party_slot_005 *= 20
        party_slot_006 = party_get_slot(party_id_001,222)
        party_slot_006 *= 5
        party_slot_004 = party_slot_005 + party_slot_006
    elif item_id_002 == itm.iron:
        party_slot_004 = party_get_slot(party_id_001,229)
        party_slot_004 *= 3
    elif item_id_002 == itm.wool:
        party_slot_004 = party_get_slot(party_id_001,227)
        party_slot_004 *= 5
    elif item_id_002 == itm.raw_flax:
        party_slot_004 = party_get_slot(party_id_001,225)
        party_slot_004 *= 5
    elif item_id_002 == itm.raw_leather:
        party_slot_004 = party_get_slot(party_id_001,230)
        party_slot_004 *= 20
    elif item_id_002 == itm.raw_grapes:
        party_slot_004 = party_get_slot(party_id_001,223)
        party_slot_004 *= 30
    elif item_id_002 == itm.raw_olives:
        party_slot_004 = party_get_slot(party_id_001,224)
        party_slot_004 *= 12
    elif item_id_002 == itm.raw_dyes:
        party_slot_004 = party_get_slot(party_id_001,226)
        party_slot_004 *= 1
    elif item_id_002 == itm.raw_silk:
        party_slot_004 = party_get_slot(party_id_001,226)
        party_slot_004 *= 5
    elif item_id_002 == itm.salt:
        party_slot_007 = party_get_slot(party_id_001,205)
        party_slot_007 /= 10
        party_slot_008 = party_get_slot(party_id_001,214)
        party_slot_008 /= 5
        party_slot_004 = party_slot_007 + party_slot_008
    #end
    if party_slot_004 > 0:
        var009 = 250 - itm.spice
        slot_no_010 = item_id_002 + var009
        party_slot_011 = party_get_slot(party_id_001,slot_no_010)
        if party_slot_011 > 1000:
            party_slot_004 *= 1000
            party_slot_004 /= party_slot_011
        #end
    #end
    var012 = item_slot_003 + party_slot_004
    if True:
        party_slot_013 = party_get_slot(party_id_001,50)
        party_slot_013 += 75
        var012 *= party_slot_013
        var012 /= 125
    #end
    reg0 = var012
    reg1 = party_slot_004
    reg2 = item_slot_003


def get_enterprise_name(var001):
    var002 = gstr.bread_site
    if var001 == itm.bread:
        var002 = gstr.bread_site
    elif var001 == itm.ale:
        var002 = gstr.ale_site
    elif var001 == itm.oil:
        var002 = gstr.oil_site
    elif var001 == itm.wine:
        var002 = gstr.wine_site
    elif var001 == itm.leatherwork:
        var002 = gstr.leather_site
    elif var001 == itm.wool_cloth:
        var002 = gstr.wool_cloth_site
    elif var001 == itm.linen:
        var002 = gstr.linen_site
    elif var001 == itm.velvet:
        var002 = gstr.velvet_site
    elif var001 == itm.tools:
        var002 = gstr.tool_site
    #end
    reg0 = var002


def do_merchant_town_trade(party_id_001, party_id_002):
    party_slot_003 = party_get_slot(party_id_001,126)
    if _cheat_mode == 2:
        s4 = str_store_party_name(party_id_002)
        s5 = str_store_party_name(party_slot_003)
        print("@{!}DEBUG -- Caravan trades in {s4}; originally from {s5}")
    #end
    add_log_entry(5,party_id_001,party_slot_003,party_id_002,-1)
    do_party_center_trade(party_id_001,party_id_002,4)
    var004 = reg0
    var004 /= 2
    s1 = str_store_party_name(party_id_001)
    s2 = str_store_party_name(party_id_002)
    reg1 = var004
    party_slot_005 = party_get_slot(party_id_002,48)
    party_slot_006 = party_get_slot(party_id_002,50)
    var007 = var004
    var007 *= party_slot_006
    var007 /= 100
    var007 /= 10
    party_slot_005 += var007
    if _cheat_mode >= 3:
        reg4 = var007
        s4 = str_store_party_name(party_id_002)
        reg5 = party_slot_005
        print("@{!}New tariffs at {s4} = {reg4}; total = {reg5}")
    #end
    party_set_slot(party_id_002,48,party_slot_005)
    if True:
        random_x_008 = store_random_in_range(0,80)
        center_get_goods_availability(party_id_002)
        var009 = reg0
        if random_x_008 > var009:
            if True:
                random_x_008 = store_random_in_range(0,100)
                if random_x_008 > 82:
                    change_center_prosperity(party_id_002,1)
                    _newglob_total_prosperity_from_caravan_trade += 1
                #end
            #end
        #end
    #end


def party_calculate_regular_strength(party_id_001):
    reg0 = 0
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        if not troop_is_hero(troop_id_004):
            character_lvl_005 = store_character_level(troop_id_004)
            character_lvl_005 += 12
            character_lvl_005 *= character_lvl_005
            character_lvl_005 /= 100
            party_stack_size_006 = party_stack_get_size(party_id_001,stack_no_003)
            party_stack_num_wounded_007 = party_stack_get_num_wounded(party_id_001,stack_no_003)
            party_stack_size_006 -= party_stack_num_wounded_007
            character_lvl_005 *= party_stack_size_006
            reg0 += character_lvl_005
        #end
    #end


def party_calculate_strength(party_id_001, var002):
    reg0 = 0
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_001)
    var004 = 0
    if var002 != 0:
        var004 = 1
    #end
    for stack_no_005 in range(var004, party_num_companions_stacks_003):
        troop_id_006 = party_stack_get_troop_id(party_id_001,stack_no_005)
        character_lvl_007 = store_character_level(troop_id_006)
        character_lvl_007 += 4
        character_lvl_007 *= character_lvl_007
        character_lvl_007 *= 2
        character_lvl_007 /= 100
        val_max(character_lvl_007,1)
        if not troop_is_hero(troop_id_006):
            party_stack_size_008 = party_stack_get_size(party_id_001,stack_no_005)
            party_stack_num_wounded_009 = party_stack_get_num_wounded(party_id_001,stack_no_005)
            party_stack_size_008 -= party_stack_num_wounded_009
            character_lvl_007 *= party_stack_size_008
        elif troop_is_wounded(troop_id_006):
            character_lvl_007 = 0
        #end
        reg0 += character_lvl_007
    #end
    party_set_slot(party_id_001,56,reg0)


def loot_player_items(party_id_001):
    troop_inv_capacity_002 = troop_get_inventory_capacity(trp.player)
    for inventory_slot_no_003 in range(0, troop_inv_capacity_002):
        troop_inv_slot_004 = troop_get_inventory_slot(trp.player,inventory_slot_no_003)
        if troop_inv_slot_004 >= 0:
            troop_inv_slot_modifier_005 = troop_get_inventory_slot_modifier(trp.player,inventory_slot_no_003)
            if is_between(troop_inv_slot_004,itm.spice,itm.siege_supply):
                var006 = 20
            elif is_between(troop_inv_slot_004,itm.sumpter_horse,itm.arrows) or troop_inv_slot_004 == itm.warhorse_sarranid or troop_inv_slot_004 == itm.warhorse_steppe:
                var006 = 15
            elif is_between(troop_inv_slot_004,itm.wooden_stick,itm.wooden_shield) or is_between(troop_inv_slot_004,itm.darts,itm.torch):
                var006 = 5
            elif is_between(troop_inv_slot_004,itm.leather_gloves,itm.wooden_stick) or troop_inv_slot_004 == itm.plate_boots or is_between(troop_inv_slot_004,itm.wooden_shield,itm.darts):
                var006 = 5
            #end
        #end
        random_x_007 = store_random_in_range(0,100)
        if random_x_007 < var006:
            troop_remove_item(trp.player,troop_inv_slot_004)
            if party_id_001 > 0:
                party_slot_008 = party_get_slot(party_id_001,109)
                party_slot_008 += 110
                party_set_slot(party_id_001,party_slot_008,troop_inv_slot_004)
                party_slot_008 -= 110
                party_slot_008 += 115
                party_set_slot(party_id_001,party_slot_008,troop_inv_slot_modifier_005)
                party_slot_008 -= 115
                party_slot_008 += 1
                party_slot_008 %= 5
                party_set_slot(party_id_001,109,party_slot_008)
            #end
        #end
    #end
    troop_gold_009 = store_troop_gold(trp.player)
    var010 = troop_gold_009 / 5
    var011 = troop_gold_009 / 10
    random_x_012 = store_random_in_range(var011,var010)
    troop_remove_gold(trp.player,random_x_012)


def party_calculate_loot(party_id_001):
    calculate_main_party_shares()
    var002 = reg0
    for var003 in range(0, 5):
        slot_no_004 = var003 + 110
        party_slot_005 = party_get_slot(_g_enemy_party,slot_no_004)
        if party_slot_005 > 0:
            party_set_slot(_g_enemy_party,slot_no_004,0)
            slot_no_004 -= 110
            slot_no_004 += 115
            party_slot_006 = party_get_slot(_g_enemy_party,slot_no_004)
            troop_add_item(trp.temp_troop,party_slot_005,party_slot_006)
        #end
    #end
    party_set_slot(_g_enemy_party,109,0)
    var007 = 0
    if party_slot_eq(_g_enemy_party,0,11) or party_slot_eq(_g_enemy_party,0,18) or party_slot_eq(_g_enemy_party,0,15):
        merch_amount_008 = 10 * 30
        merch_amount_008 *= _g_strength_contribution_of_player
        merch_amount_008 /= 100
        merch_amount_008 /= var002
        if party_slot_eq(_g_enemy_party,0,11):
            reset_item_probabilities(100)
            var009 = itm.spice
            var010 = itm.siege_supply
        elif party_slot_eq(_g_enemy_party,0,18):
            merch_amount_008 /= 2
            reset_item_probabilities(1)
            var009 = itm.smoked_fish
            var010 = itm.siege_supply
        else:
            merch_amount_008 /= 5
            reset_item_probabilities(1)
            var009 = itm.smoked_fish
            var010 = itm.siege_supply
        #end
        var011 = 250 - itm.spice
        for item_id_012 in range(var009, var010):
            if not party_slot_eq(_g_enemy_party,0,18):
                slot_no_013 = item_id_012 + var011
                party_slot_014 = party_get_slot(_g_enemy_party,slot_no_013)
            else:
                party_slot_014 = 10000
                party_slot_014 += 1000
                party_slot_014 /= 3
            #end
            item_probability_015 = 100
            item_probability_015 *= 1000
            item_probability_015 /= party_slot_014
            reg0 = item_probability_015
            set_item_probability_in_merchandise(item_id_012,item_probability_015)
        #end
        troop_add_merchandise(trp.temp_troop,11,merch_amount_008)
        var007 += merch_amount_008
    #end
    probability_016 = 10 * 3
    probability_016 *= _g_strength_contribution_of_player
    party_skill_lvl_017 = party_get_skill_level(p.main_party,skl.looting)
    party_skill_lvl_017 += 10
    probability_016 *= party_skill_lvl_017
    probability_016 /= 10
    probability_016 /= var002
    party_num_companions_stacks_018 = party_get_num_companion_stacks(party_id_001)
    for stack_no_019 in range(0, party_num_companions_stacks_018):
        troop_id_020 = party_stack_get_troop_id(party_id_001,stack_no_019)
        if not troop_is_hero(troop_id_020):
            party_stack_size_021 = party_stack_get_size(party_id_001,stack_no_019)
            for var022 in range(0, party_stack_size_021):
                troop_loot_troop(trp.temp_troop,troop_id_020,probability_016)
            #end
        #end
    #end
    troop_inv_capacity_023 = troop_get_inventory_capacity(trp.temp_troop)
    for inventory_slot_no_024 in range(0, troop_inv_capacity_023):
        troop_inv_slot_025 = troop_get_inventory_slot(trp.temp_troop,inventory_slot_no_024)
        if troop_inv_slot_025 >= 0:
            var007 += 1
        #end
    #end
    reg0 = var007


def calculate_main_party_shares():
    var001 = 10
    party_num_companions_stacks_002 = party_get_num_companion_stacks(p.main_party)
    for stack_no_003 in range(1, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(p.main_party,stack_no_003)
        if not troop_is_hero(troop_id_004):
            party_stack_size_005 = party_stack_get_size(p.main_party,stack_no_003)
            var001 += party_stack_size_005
        else:
            var001 += 3
        #end
    #end
    reg0 = var001


def party_give_xp_and_gold(party_id_001):
    calculate_main_party_shares()
    var002 = reg0
    var003 = 0
    party_num_companions_stacks_004 = party_get_num_companion_stacks(party_id_001)
    for stack_no_005 in range(0, party_num_companions_stacks_004):
        troop_id_006 = party_stack_get_troop_id(party_id_001,stack_no_005)
        if not troop_is_hero(troop_id_006):
            party_stack_size_007 = party_stack_get_size(party_id_001,stack_no_005)
            character_lvl_008 = store_character_level(troop_id_006)
            var009 = character_lvl_008 + 10
            var009 *= var009
            var009 /= 10
            var010 = var009 * party_stack_size_007
            var003 += var010
        #end
    #end
    var003 *= _g_strength_contribution_of_player
    var003 /= 100
    val_min(var003,40000)
    var011 = var003
    random_x_012 = store_random_in_range(50,100)
    var011 *= random_x_012
    var011 /= 100
    party_add_xp(p.main_party,var011)
    var013 = var003 * 10
    val_min(var013,60000)
    random_x_012 = store_random_in_range(50,100)
    var013 *= random_x_012
    var013 /= 100
    var013 /= var002
    party_num_companions_stacks_004 = party_get_num_companion_stacks(p.main_party)
    for stack_no_005 in range(0, party_num_companions_stacks_004):
        troop_id_006 = party_stack_get_troop_id(p.main_party,stack_no_005)
        if troop_is_hero(troop_id_006):
            troop_add_gold(troop_id_006,var013)
        #end
    #end


def setup_troop_meeting(troop_id_001, dna):
    get_meeting_scene()
    scene_id_003 = reg0
    modify_visitors_at_site(scene_id_003)
    reset_visitors()
    set_visitor(0,trp.player)
    if dna > -1:
        set_visitor(17,troop_id_001,dna)
    else:
        set_visitor(17,troop_id_001)
    #end
    set_jump_mission(mt.conversation_encounter)
    jump_to_scene(scene_id_003)
    change_screen_map_conversation(troop_id_001)


def setup_party_meeting(party_id_001):
    if _g_encountered_party_relation < 0:
        pass
    #end
    get_meeting_scene()
    scene_id_002 = reg0
    modify_visitors_at_site(scene_id_002)
    reset_visitors()
    set_visitor(0,trp.player)
    troop_id_003 = party_stack_get_troop_id(party_id_001,0)
    party_stack_troop_dna_004 = party_stack_get_troop_dna(party_id_001,0)
    set_visitor(17,troop_id_003,party_stack_troop_dna_004)
    set_jump_mission(mt.conversation_encounter)
    jump_to_scene(scene_id_002)
    change_screen_map_conversation(troop_id_003)


def get_meeting_scene():
    party_cur_terrain_001 = party_get_current_terrain(p.main_party)
    var002 = scn.random_scene
    if party_cur_terrain_001 == 2:
        var002 = scn.meeting_scene_steppe
    elif party_cur_terrain_001 == 3:
        var002 = scn.meeting_scene_plain
    elif party_cur_terrain_001 == 4:
        var002 = scn.meeting_scene_snow
    elif party_cur_terrain_001 == 5:
        var002 = scn.meeting_scene_desert
    elif party_cur_terrain_001 == 10:
        var002 = scn.meeting_scene_steppe
    elif party_cur_terrain_001 == 11:
        var002 = scn.meeting_scene_plain
    elif party_cur_terrain_001 == 12:
        var002 = scn.meeting_scene_snow
    elif party_cur_terrain_001 == 13:
        var002 = scn.meeting_scene_desert
    else:
        var002 = scn.meeting_scene_plain
    #end
    reg0 = var002


def party_remove_all_companions(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        party_stack_size_005 = party_stack_get_size(party_id_001,stack_no_003)
        if troop_is_hero(troop_id_004) and not is_between(troop_id_004,trp.kingdom_1_pretender,trp.knight_1_1_wife) and troop_id_004 != trp.player and _g_prison_heroes == 1 and party_id_001 == p.main_party:
            random_x_006 = store_random_in_range(0,2)
            if random_x_006 != 0:
                troop_set_health(troop_id_004,100)
                party_faction_007 = store_faction_of_party(_g_enemy_party)
                var008 = 99999
                var009 = -1
                for p_010 in range(p.town_1, p.village_1):
                    party_faction_011 = store_faction_of_party(p_010)
                    if party_faction_011 == party_faction_007:
                        distance_parties_012 = store_distance_to_party_from_party(p_010,p.main_party)
                        if distance_parties_012 < var008:
                            var008 = distance_parties_012
                            var009 = p_010
                        #end
                    #end
                #end
            #end
            reg1 = var009
            if var009 >= 0:
                random_x_006 = store_random_in_range(0,4)
                if random_x_006 != 0:
                    party_add_prisoners(var009,troop_id_004,party_stack_size_005)
                    troop_set_slot(troop_id_004,8,var009)
                    troop_set_slot(troop_id_004,82,1)
                    troop_set_slot(troop_id_004,81,0)
                    troop_set_slot(troop_id_004,2,0)
                    party_remove_members(party_id_001,troop_id_004,party_stack_size_005)
                    if _cheat_mode == 1:
                        s1 = str_store_party_name(var009)
                        print(gstr.your_hero_prisoned_at_s1)
                    #end
                #end
            else:
                var013 = 1000
                for var014 in range(0, var013):
                    random_x_015 = store_random_in_range(p.town_1,p.castle_1)
                    if not troop_slot_eq(troop_id_004,60,random_x_015) and not troop_slot_eq(troop_id_004,59,random_x_015):
                        var013 = -1
                    #end
                #end
                troop_set_slot(troop_id_004,12,random_x_015)
                troop_set_slot(troop_id_004,82,1)
                troop_set_slot(troop_id_004,81,0)
                troop_set_slot(troop_id_004,2,0)
                party_remove_members(party_id_001,troop_id_004,party_stack_size_005)
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(troop_id_004)
                    s5 = str_store_party_name(random_x_015)
                    print("@{!}{s4} is sent to {s5} after defeat")
                #end
            #end
        elif troop_is_hero(troop_id_004) or _g_move_heroes == 1:
            party_remove_members(party_id_001,troop_id_004,party_stack_size_005)
        #end
    #end


def party_remove_all_prisoners(var001):
    party_num_prisoners_stacks_002 = party_get_num_prisoner_stacks(var001)
    for var003 in range(0, party_num_prisoners_stacks_002):
        party_prisoner_troop_id_004 = party_prisoner_stack_get_troop_id(var001,var003)
        if troop_is_hero(party_prisoner_troop_id_004) or _g_move_heroes == 1:
            party_prisoner_stack_size_005 = party_prisoner_stack_get_size(var001,var003)
            party_remove_prisoners(var001,party_prisoner_troop_id_004,party_prisoner_stack_size_005)
        #end
    #end


def party_add_party_companions(var001, party_id_002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_002)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(party_id_002,stack_no_004)
        if troop_is_hero(troop_id_005) or _g_move_heroes == 1:
            party_stack_size_006 = party_stack_get_size(party_id_002,stack_no_004)
            party_add_members(var001,troop_id_005,party_stack_size_006)
            party_stack_num_wounded_007 = party_stack_get_num_wounded(party_id_002,stack_no_004)
            party_wound_members(var001,troop_id_005,party_stack_num_wounded_007)
        #end
    #end


def party_add_party_prisoners(var001, var002):
    party_num_prisoners_stacks_003 = party_get_num_prisoner_stacks(var002)
    for var004 in range(0, party_num_prisoners_stacks_003):
        party_prisoner_troop_id_005 = party_prisoner_stack_get_troop_id(var002,var004)
        if troop_is_hero(party_prisoner_troop_id_005) or _g_move_heroes == 1:
            party_prisoner_stack_size_006 = party_prisoner_stack_get_size(var002,var004)
            party_add_members(var001,party_prisoner_troop_id_005,party_prisoner_stack_size_006)
        #end
    #end


def party_prisoners_add_party_companions(var001, party_id_002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_002)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(party_id_002,stack_no_004)
        if troop_is_hero(troop_id_005) or _g_move_heroes == 1:
            party_stack_size_006 = party_stack_get_size(party_id_002,stack_no_004)
            party_add_prisoners(var001,troop_id_005,party_stack_size_006)
        #end
    #end


def party_prisoners_add_party_prisoners(var001, var002):
    party_num_prisoners_stacks_003 = party_get_num_prisoner_stacks(var002)
    for var004 in range(0, party_num_prisoners_stacks_003):
        party_prisoner_troop_id_005 = party_prisoner_stack_get_troop_id(var002,var004)
        if troop_is_hero(party_prisoner_troop_id_005) or _g_move_heroes == 1:
            party_prisoner_stack_size_006 = party_prisoner_stack_get_size(var002,var004)
            party_add_prisoners(var001,party_prisoner_troop_id_005,party_prisoner_stack_size_006)
        #end
    #end


def party_add_party(var001, party_id_002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_002)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(party_id_002,stack_no_004)
        if troop_is_hero(troop_id_005) or _g_move_heroes == 1:
            party_stack_size_006 = party_stack_get_size(party_id_002,stack_no_004)
            party_add_members(var001,troop_id_005,party_stack_size_006)
            party_stack_num_wounded_007 = party_stack_get_num_wounded(party_id_002,stack_no_004)
            party_wound_members(var001,troop_id_005,party_stack_num_wounded_007)
        #end
    #end


def party_copy(var001, var002):
    _g_move_heroes = 1
    party_clear(var001)
    party_add_party(var001,var002)


def clear_party_group(var001):
    party_clear(var001)
    party_num_attached_parties_002 = party_get_num_attached_parties(var001)
    for var003 in range(0, party_num_attached_parties_002):
        party_attached_party_with_rank_004 = party_get_attached_party_with_rank(var001,var003)
        clear_party_group(party_attached_party_with_rank_004)
    #end


def party_add_wounded_members_as_prisoners(var001, party_id_002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_002)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        party_stack_num_wounded_005 = party_stack_get_num_wounded(party_id_002,stack_no_004)
        if party_stack_num_wounded_005 >= 1:
            troop_id_006 = party_stack_get_troop_id(party_id_002,stack_no_004)
            if troop_is_hero(troop_id_006) or _g_move_heroes == 1:
                party_add_prisoners(var001,troop_id_006,party_stack_num_wounded_005)
            #end
        #end
    #end


def get_nonempty_party_in_group(var001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(var001)
    if party_num_companions_stacks_002 > 0:
        reg0 = var001
    else:
        reg0 = -1
        party_num_attached_parties_003 = party_get_num_attached_parties(var001)
        for var004 in range(0, party_num_attached_parties_003):
            if reg0 < 0:
                party_attached_party_with_rank_005 = party_get_attached_party_with_rank(var001,var004)
                get_nonempty_party_in_group(party_attached_party_with_rank_005)
            #end
        #end
    #end


def collect_prisoners_from_empty_parties(party_id_001, var002):
    party_num_companions_003 = party_get_num_companions(party_id_001)
    if party_num_companions_003 == 0:
        party_num_prisoners_stacks_004 = party_get_num_prisoner_stacks(party_id_001)
        for var005 in range(0, party_num_prisoners_stacks_004):
            party_prisoner_troop_id_006 = party_prisoner_stack_get_troop_id(party_id_001,var005)
            if troop_is_hero(party_prisoner_troop_id_006):
                party_add_members(var002,party_prisoner_troop_id_006,1)
            #end
        #end
    #end
    party_num_attached_parties_007 = party_get_num_attached_parties(party_id_001)
    for var008 in range(0, party_num_attached_parties_007):
        party_attached_party_with_rank_009 = party_get_attached_party_with_rank(party_id_001,var008)
        collect_prisoners_from_empty_parties(party_attached_party_with_rank_009,var002)
    #end


def change_party_morale(var001, var002):
    party_morale_003 = party_get_morale(var001)
    var004 = party_morale_003 + var002
    val_clamp(var004,0,100)
    party_set_morale(var001,var004)
    s1 = str_store_party_name(var001)
    if var004 < party_morale_003:
        reg1 = party_morale_003 - var004
    elif var004 > party_morale_003:
        reg1 = var004 - party_morale_003
    #end


def count_casualties_and_adjust_morale():
    calculate_main_party_shares()
    var001 = reg0
    var002 = 0
    party_num_companions_stacks_003 = party_get_num_companion_stacks(p.player_casualties)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(p.player_casualties,stack_no_004)
        party_stack_size_006 = party_stack_get_size(p.player_casualties,stack_no_004)
        party_stack_num_wounded_007 = party_stack_get_num_wounded(p.player_casualties,stack_no_004)
        var008 = party_stack_size_006 * 2
        store_sub(var009, party_stack_num_wounded_007)
        character_lvl_010 = store_character_level(troop_id_005)
        var011 = character_lvl_010 + 3
        if troop_id_005 == trp.player:
            character_lvl_010 += 75
        elif troop_is_hero(troop_id_005):
            character_lvl_010 += 50
        #end
        var011 *= var011
        var011 /= 10
        reg0 = var011
        var011 *= party_stack_size_006
        if not troop_is_hero(troop_id_005):
            var011 *= var009
            var011 /= var008
        #end
        if _cheat_mode == 1:
            reg1 = party_stack_size_006
            reg2 = var011
            print(gstr.our_per_person__reg0_num_people__reg1_total_gain__reg2)
        #end
        var002 += var011
    #end
    var012 = 0
    var013 = 0
    party_num_companions_stacks_003 = party_get_num_companion_stacks(p.enemy_casualties)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(p.enemy_casualties,stack_no_004)
        party_stack_size_006 = party_stack_get_size(p.enemy_casualties,stack_no_004)
        party_stack_num_wounded_007 = party_stack_get_num_wounded(p.enemy_casualties,stack_no_004)
        var008 = party_stack_size_006 * 2
        var009 = var008 - party_stack_num_wounded_007
        character_lvl_010 = store_character_level(troop_id_005)
        var011 = character_lvl_010 + 3
        if troop_is_hero(troop_id_005):
            character_lvl_010 += 50
        #end
        var011 *= var011
        var011 /= 10
        reg0 = var011
        var011 *= party_stack_size_006
        if not troop_is_hero(troop_id_005):
            var011 *= var009
            var011 /= var008
        #end
        if _cheat_mode == 1:
            reg1 = party_stack_size_006
            reg2 = var011
            print(gstr.ene_per_person__reg0_num_people__reg1_total_gain__reg2)
        #end
        var013 += var011
        var012 += party_stack_size_006
    #end
    var014 = 0
    if _any_allies_at_the_last_battle == 1:
        party_num_companions_stacks_003 = party_get_num_companion_stacks(p.ally_casualties)
        for stack_no_004 in range(0, party_num_companions_stacks_003):
            troop_id_005 = party_stack_get_troop_id(p.ally_casualties,stack_no_004)
            party_stack_size_006 = party_stack_get_size(p.ally_casualties,stack_no_004)
            party_stack_num_wounded_007 = party_stack_get_num_wounded(p.ally_casualties,stack_no_004)
            var008 = party_stack_size_006 * 2
            store_sub(var009, party_stack_num_wounded_007)
            character_lvl_010 = store_character_level(troop_id_005)
            var011 = character_lvl_010 + 3
            if troop_is_hero(troop_id_005):
                character_lvl_010 += 50
            #end
            var011 *= var011
            var011 /= 10
            reg0 = var011
            var011 *= party_stack_size_006
            if not troop_is_hero(troop_id_005):
                var011 *= var009
                var011 /= var008
            #end
            if _cheat_mode == 1:
                reg1 = party_stack_size_006
                reg2 = var011
                print(gstr.all_per_person__reg0_num_people__reg1_total_gain__reg2)
            #end
            var014 += var011
        #end
    #end
    var015 = var002 + var014
    var016 = var013
    var015 *= 100
    if _cheat_mode == 1:
        reg0 = var016
        print("@{!}DEBUGS : enemy loses : {reg0}")
    #end
    if var016 > 0:
        var017 = var015 / var016
    else:
        var017 = 1000
    #end
    if _cheat_mode == 1:
        reg1 = var017
        print(gstr.loss_ratio_is_reg1)
    #end
    if not is_between(_g_enemy_party,p.town_1,p.salt_mine):
        var018 = 60 - var017
    else:
        var018 = 100 - var017
    #end
    if var018 < 0:
        var018 /= 2
    #end
    if _cheat_mode == 1:
        reg0 = var018
        print("@{!}DEBUGS1 : total gain : {reg0}")
    #end
    val_max(var018,-60)
    var018 *= var016
    var018 /= 100
    var019 = var018 * -1
    var018 *= _g_strength_contribution_of_player
    var018 /= 100
    if _cheat_mode == 1:
        reg0 = var018
        print("@{!}DEBUGS2 : total gain : {reg0}")
    #end
    if party_is_active(_g_enemy_party):
        var020 = 0
        var020 += 10
        party_num_companions_stacks_003 = party_get_num_companion_stacks(_g_enemy_party)
        for stack_no_004 in range(0, party_num_companions_stacks_003):
            troop_id_005 = party_stack_get_troop_id(_g_enemy_party,stack_no_004)
            party_stack_size_006 = party_stack_get_size(_g_enemy_party,stack_no_004)
            var020 += party_stack_size_006
        #end
        var021 = var020
        party_num_attached_parties_022 = party_get_num_attached_parties(_g_enemy_party)
        for var023 in range(0, party_num_attached_parties_022):
            var020 += 10
            party_attached_party_with_rank_024 = party_get_attached_party_with_rank(_g_enemy_party,var023)
            party_num_companions_stacks_003 = party_get_num_companion_stacks(party_attached_party_with_rank_024)
            for stack_no_004 in range(0, party_num_companions_stacks_003):
                troop_id_005 = party_stack_get_troop_id(party_attached_party_with_rank_024,stack_no_004)
                party_stack_size_006 = party_stack_get_size(party_attached_party_with_rank_024,stack_no_004)
                var020 += party_stack_size_006
            #end
        #end
        var025 = var020
        reg5 = var025
        reg6 = var019
        set_fixed_point_multiplier(100)
        var025 *= 100
        var026 = store_sqrt(var025)
        var026 /= 100
        var019 /= var026
        var019 /= 4
        if _cheat_mode == 1:
            reg7 = var019
            print(gstr.total_enemy_morale_gain__reg6_last_total_enemy_morale_gain__reg7_remaining_enemy_population__reg5)
        #end
        var027 = var019 * var021
        var027 /= var020
        if party_is_active(_g_enemy_party):
            change_party_morale(_g_enemy_party,var027)
            party_num_attached_parties_022 = party_get_num_attached_parties(_g_enemy_party)
            for var023 in range(0, party_num_attached_parties_022):
                party_attached_party_with_rank_024 = party_get_attached_party_with_rank(_g_enemy_party,var023)
                party_num_companions_stacks_003 = party_get_num_companion_stacks(party_attached_party_with_rank_024)
                var028 = 0
                for stack_no_004 in range(0, party_num_companions_stacks_003):
                    troop_id_005 = party_stack_get_troop_id(party_attached_party_with_rank_024,stack_no_004)
                    party_stack_size_006 = party_stack_get_size(party_attached_party_with_rank_024,stack_no_004)
                    var028 += party_stack_size_006
                #end
                var027 = var019 * var028
                var027 /= var020
                change_party_morale(party_attached_party_with_rank_024,var027)
            #end
        #end
    #end
    var029 = var018
    var029 /= var001
    if _cheat_mode == 1:
        reg0 = var001
        reg1 = var018
        print("@{!}DEBUGS3 : num player party shares:{reg0} - total gain:{reg1}")
    #end
    change_player_party_morale(var029)
    var030 = var012 * _g_strength_contribution_of_player
    var031 = var030 / 8
    if var031 > 2000:
        var031 = 2000
    #end
    if _g_ally_party >= 0:
        var032 = var031 / 3
        var032 *= 2
        party_faction_033 = store_faction_of_party(_g_ally_party)
        faction_slot_034 = faction_get_slot(party_faction_033,99)
        faction_slot_034 += var032
        faction_set_slot(party_faction_033,99,faction_slot_034)
    #end
    if not party_is_active(_g_enemy_party) and _current_town >= 0:
        var031 *= 2
        party_faction_033 = store_faction_of_party(_current_town)
        faction_slot_034 = faction_get_slot(party_faction_033,99)
        faction_slot_034 += var031
        faction_set_slot(party_faction_033,99,faction_slot_034)
    elif party_is_active(_g_enemy_party):
        var035 = 0
        if _players_kingdom == fac.player_supporters_faction and not faction_slot_eq(fac.player_supporters_faction,11,trp.player):
            var035 = 1
        #end
        if var035 == 0:
            var031 = var031 / 3
            var031 *= 2
            party_faction_036 = store_faction_of_party(_g_enemy_party)
            faction_slot_034 = faction_get_slot(party_faction_036,99)
            faction_slot_034 -= var031
            faction_set_slot(party_faction_036,99,faction_slot_034)
        #end
    #end


def print_casualties_to_s0(party_id_001, var002):
    party_id_001_list1 = [
    p.player_casualties,
    p.main_party,
    ]
    str_clear(0)
    var003 = 0
    var004 = 0
    var005 = 0
    var006 = 0
    party_num_companions_stacks_007 = party_get_num_companion_stacks(party_id_001)
    for stack_no_008 in range(0, party_num_companions_stacks_007):
        troop_id_009 = party_stack_get_troop_id(party_id_001,stack_no_008)
        party_stack_size_010 = party_stack_get_size(party_id_001,stack_no_008)
        party_stack_num_wounded_011 = party_stack_get_num_wounded(party_id_001,stack_no_008)
        if party_id_001 in party_id_001_list1:
            troop_slot_012 = troop_get_slot(troop_id_009,146)
            troop_set_slot(troop_id_009,146,0)
        else:
            party_attached_013 = party_get_attached_to(party_id_001)
            if party_id_001 == p.ally_casualties or party_attached_013 >= 0 and party_id_001 == p.ally_casualties or party_attached_013 == p.main_party:
                troop_slot_012 = troop_get_slot(troop_id_009,147)
                troop_set_slot(troop_id_009,147,0)
            else:
                troop_slot_012 = troop_get_slot(troop_id_009,148)
                troop_set_slot(troop_id_009,148,0)
            #end
        #end
        var014 = party_stack_size_010 - party_stack_num_wounded_011
        var014 -= troop_slot_012
        var005 += var014
        var004 += party_stack_num_wounded_011
        var006 += troop_slot_012
        if var014 > 0 or party_stack_num_wounded_011 > 0 or troop_slot_012 > 0:
            reg3 = var014 + party_stack_num_wounded_011
            reg3 = reg3 + troop_slot_012
            s1 = str_store_troop_name_by_count(troop_id_009,reg3)
            if troop_is_hero(troop_id_009):
                reg3 = 0
            #end
            if var014 > 0 and party_stack_num_wounded_011 > 0 and troop_slot_012 > 0:
                reg4 = var014
                reg5 = party_stack_num_wounded_011
                reg6 = troop_slot_012
                s2 = str_store_string(gstr.reg4_killed_reg5_wounded_reg6_routed)
            elif var014 > 0 and troop_slot_012 > 0:
                reg4 = var014
                reg5 = troop_slot_012
                s2 = str_store_string(gstr.reg4_killed_reg5_routed)
            elif var014 > 0 and party_stack_num_wounded_011 > 0:
                reg4 = var014
                reg5 = party_stack_num_wounded_011
                s2 = str_store_string(gstr.reg4_killed_reg5_wounded)
            elif party_stack_num_wounded_011 > 0 and troop_slot_012 > 0:
                reg4 = party_stack_num_wounded_011
                reg5 = troop_slot_012
                s2 = str_store_string(gstr.reg4_wounded_reg5_routed)
            elif var014 > 0:
                reg1 = var014
                s3 = str_store_string("@killed")
                s2 = str_store_string(gstr.reg1_blank_s3)
            elif party_stack_num_wounded_011 > 0:
                reg1 = party_stack_num_wounded_011
                s3 = str_store_string("@wounded")
                s2 = str_store_string(gstr.reg1_blank_s3)
            else:
                reg1 = troop_slot_012
                s3 = str_store_string(gstr.routed)
                s2 = str_store_string(gstr.reg1_blank_s3)
            #end
            if var002 == 1:
                if var003 == 0:
                    s0 = str_store_string("@{!}{reg3?{reg3}:} {s1} [[[{s2}]]]")
                else:
                    s0 = str_store_string("@{!}{s0}, {reg3?{reg3}:} {s1} [[[[{s2}]]]")
                #end
            else:
                s0 = str_store_string("@{!}{s0}^{reg3?{reg3}:} {s1} [[[{s2}]]]")
            #end
            var003 += 1
        #end
    #end
    if var005 > 0 or var004 > 0 or var006 > 0:
        var015 = var005 + var004
        var015 += var006
        reg3 = var015
        if var005 > 0 and var004 > 0 and var006 > 0:
            reg4 = var005
            reg5 = var004
            reg6 = var006
            s2 = str_store_string(gstr.reg4_killed_reg5_wounded_reg6_routed)
        elif var005 > 0 and var006 > 0:
            reg4 = var005
            reg5 = var006
            s2 = str_store_string(gstr.reg4_killed_reg5_routed)
        elif var005 > 0 and var004 > 0:
            reg4 = var005
            reg5 = var004
            s2 = str_store_string(gstr.reg4_killed_reg5_wounded)
        elif var004 > 0 and var006 > 0:
            reg4 = var004
            reg5 = var006
            s2 = str_store_string(gstr.reg4_wounded_reg5_routed)
        elif var005 > 0:
            s2 = str_store_string("@killed")
        elif var004 > 0:
            s2 = str_store_string("@wounded")
        else:
            s2 = str_store_string(gstr.routed)
        #end
        s0 = str_store_string("@{s0}^TOTAL: {reg3} [[[{s2}]]]")
    else:
        if var002 == 1:
            s0 = str_store_string("@None")
        else:
            s0 = str_store_string("@^None")
        #end
    #end


def write_fit_party_members_to_stack_selection(party_id_001, var002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_001)
    slot_no_004 = 2
    var005 = 0
    for stack_no_006 in range(0, party_num_companions_stacks_003):
        troop_id_007 = party_stack_get_troop_id(party_id_001,stack_no_006)
        party_stack_size_008 = 0
        if troop_is_hero(troop_id_007):
            if not troop_is_wounded(troop_id_007) and var002 == 0 or stack_no_006 != 0:
                party_stack_size_008 = 1
            #end
        else:
            party_stack_size_008 = party_stack_get_size(party_id_001,stack_no_006)
            party_stack_num_wounded_009 = party_stack_get_num_wounded(party_id_001,stack_no_006)
            party_stack_size_008 -= party_stack_num_wounded_009
        #end
        if party_stack_size_008 > 0:
            troop_set_slot(trp.stack_selection_amounts,slot_no_004,party_stack_size_008)
            troop_set_slot(trp.stack_selection_ids,slot_no_004,troop_id_007)
            slot_no_004 += 1
        #end
        var005 += party_stack_size_008
    #end
    slot_no_004 -= 2
    troop_set_slot(trp.stack_selection_amounts,0,slot_no_004)
    troop_set_slot(trp.stack_selection_amounts,1,var005)


def remove_fit_party_member_from_stack_selection(slot_no_001):
    slot_no_001 += 2
    troop_slot_002 = troop_get_slot(trp.stack_selection_amounts,slot_no_001)
    troop_slot_003 = troop_get_slot(trp.stack_selection_ids,slot_no_001)
    troop_slot_002 -= 1
    troop_set_slot(trp.stack_selection_amounts,slot_no_001,troop_slot_002)
    troop_slot_004 = troop_get_slot(trp.stack_selection_amounts,1)
    troop_slot_004 -= 1
    troop_set_slot(trp.stack_selection_amounts,1,troop_slot_004)
    if troop_slot_002 <= 0:
        troop_slot_005 = troop_get_slot(trp.stack_selection_amounts,0)
        var006 = troop_slot_005 + 2
        var007 = slot_no_001 + 1
        for slot_no_008 in range(var007, var006):
            slot_no_009 = slot_no_008 - 1
            troop_slot_010 = troop_get_slot(trp.stack_selection_amounts,slot_no_008)
            troop_set_slot(trp.stack_selection_amounts,slot_no_009,troop_slot_010)
            troop_slot_010 = troop_get_slot(trp.stack_selection_ids,slot_no_008)
            troop_set_slot(trp.stack_selection_ids,slot_no_009,troop_slot_010)
        #end
        troop_slot_005 -= 1
        troop_set_slot(trp.stack_selection_amounts,0,troop_slot_005)
    #end
    reg0 = troop_slot_003


def remove_random_fit_party_member_from_stack_selection():
    troop_slot_001 = troop_get_slot(trp.stack_selection_amounts,1)
    random_x_002 = store_random_in_range(0,troop_slot_001)
    troop_slot_003 = troop_get_slot(trp.stack_selection_amounts,0)
    var004 = troop_slot_003 + 2
    for slot_no_005 in range(2, var004):
        troop_slot_006 = troop_get_slot(trp.stack_selection_amounts,slot_no_005)
        random_x_002 -= troop_slot_006
        if random_x_002 < 0:
            var004 = 0
            var007 = slot_no_005 - 2
        #end
    #end
    remove_fit_party_member_from_stack_selection(var007)


def add_routed_party():
    party_slot_016_list1 = [
    2,
    3,
    ]
    party_num_companions_stacks_001 = party_get_num_companion_stacks(p.routed_enemies)
    var002 = 0
    var003 = 0
    for stack_no_004 in range(0, party_num_companions_stacks_001):
        var005 = party_num_companions_stacks_001 - stack_no_004
        if var005 >= var003:
            stack_no_006 = stack_no_004 - var003
            troop_id_007 = party_stack_get_troop_id(p.routed_enemies,stack_no_006)
            if troop_is_hero(troop_id_007):
                party_stack_size_008 = party_stack_get_size(p.routed_enemies,stack_no_006)
                party_remove_members(p.routed_enemies,troop_id_007,1)
                if party_stack_size_008 <= 1:
                    var003 += 1
                #end
            #end
        else:
            var002 += 1
        #end
    #end
    if var002 >= 1:
        set_spawn_radius(2)
        spawn_around_party(p.main_party,pt.routed_warriors)
        party_id_009 = reg0
        party_set_slot(party_id_009,30,-1)
        var010 = 0
        var011 = fac.neutral
        for faction_id_012 in range(15, 21):
            faction_slot_013 = faction_get_slot(faction_id_012,90)
            if faction_slot_013 > var010:
                var010 = faction_slot_013
                var011 = faction_id_012
            #end
        #end
        party_set_faction(party_id_009,var011)
        party_set_ai_behavior(party_id_009,1)
        var014 = 1000000
        for cur_party in __all_parties__:
            if party_is_active(cur_party):
                party_slot_016 = party_get_slot(cur_party,0)
                if party_slot_016 in party_slot_016_list1:
                    faction_id_012 = store_faction_of_party(cur_party)
                    if var011 == fac.neutral or faction_id_012 == var011:
                        pos1 = party_get_position(cur_party)
                        distance_parties_017 = store_distance_to_party_from_party(cur_party,p.main_party)
                        if distance_parties_017 < var014:
                            var014 = distance_parties_017
                            var018 = cur_party
                        #end
                    #end
                #end
            #end
        #end
        pos1 = party_get_position(p.main_party)
        pos2 = party_get_position(var018)
        var014 = 1000000
        for var019 in range(0, 10):
            map_get_random_position_around_position(pos3, 1,2)
            distance_parties_017 = get_distance_between_positions(2,3)
            if distance_parties_017 < var014:
                var014 = distance_parties_017
                copy_position(63,3)
            #end
        #end
        party_set_position(party_id_009,63)
        party_set_ai_object(party_id_009,var018)
        party_set_flags(party_id_009,65536,1)
        party_clear(party_id_009)
        party_num_companions_stacks_001 = party_get_num_companion_stacks(p.routed_enemies)
        for stack_no_004 in range(0, party_num_companions_stacks_001):
            troop_id_007 = party_stack_get_troop_id(p.routed_enemies,stack_no_004)
            if not troop_is_hero(troop_id_007):
                party_stack_size_008 = party_stack_get_size(p.routed_enemies,stack_no_004)
                party_add_members(party_id_009,troop_id_007,party_stack_size_008)
            #end
        #end
    #end


def cf_training_ground_sub_routine_1_for_melee_details(slot_no_001):
    if _temp_3 >= slot_no_001:
        slot_no_001 += 1
        troop_slot_002 = troop_get_slot(trp.stack_selection_ids,slot_no_001)
        s0 = str_store_troop_name(troop_slot_002)


def training_ground_sub_routine_2_for_melee_details(var001):
    var001 -= 1
    if var001 < 0:
        remove_random_fit_party_member_from_stack_selection()
    else:
        remove_fit_party_member_from_stack_selection(var001)
    #end
    var002 = reg0
    slot_no_003 = _temp_2 - 1
    troop_set_slot(trp.temp_array_a,slot_no_003,var002)
    if _temp == _temp_2:
        start_training_at_training_ground(-1,_temp)
    else:
        _temp_2 += 1
        jump_to_menu(mnu.training_ground_selection_details_melee_2)
    #end


def cf_training_ground_sub_routine_for_training_result(troop_id_001, var002, var003, var004):
    character_lvl_005 = store_character_level(troop_id_001)
    var006 = character_lvl_005 + 5
    var007 = var006 * 3
    val_min(var007,100)
    var008 = var007 - _g_training_ground_training_hardness
    val_max(var008,0)
    var008 = 100 - var008
    var008 *= var008
    var008 /= 10
    var009 = var004 * var008
    var009 /= 1000
    if troop_id_001 == trp.player:
        var009 *= 1
    else:
        if _g_mt_mode == 1:
            if troop_is_guarantee_ranged(troop_id_001) or troop_is_guarantee_horse(troop_id_001):
                var009 /= 4
            #end
        elif _g_mt_mode == 3:
            if not troop_is_guarantee_horse(troop_id_001):
                var009 = 0
            #end
        elif not troop_is_guarantee_ranged(troop_id_001):
            var009 = 0
        #end
    #end
    character_lvl_005 += 1
    var010 = 100 * character_lvl_005
    var010 *= var003
    var010 /= 20
    var010 *= var009
    var010 /= 1000
    var011 = var010 * 3
    var011 /= 2
    var012 = var010 / 2
    random_x_013 = store_random_in_range(var012,var011)
    if random_x_013 > 0:
        if troop_is_hero(troop_id_001):
            add_xp_to_troop(random_x_013,troop_id_001)
            amount_014 = random_x_013 / 50
            if amount_014 > 0:
                troop_raise_proficiency(troop_id_001,_g_training_ground_used_weapon_proficiency,amount_014)
            #end
        #end
    else:
        party_add_xp_to_stack(p.main_party,var002,random_x_013)
    #end
    reg0 = random_x_013


def print_troop_owned_centers_in_numbers_to_s0(var001):
    s0 = str_store_string("@nothing")
    var002 = 0
    var003 = 0
    var004 = 0
    for p_005 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_005,7,var001):
            if party_slot_eq(p_005,0,3):
                var002 += 1
            elif party_slot_eq(p_005,0,2):
                var003 += 1
            else:
                var004 += 1
            #end
        #end
    #end
    var006 = 0
    if var004 > 0:
        reg0 = var004
        reg1 = reg0 - 1
        s0 = str_store_string("@{reg0} village{reg1?s:}")
        var006 += 1
    #end
    if var003 > 0:
        reg0 = var003
        reg1 = reg0 - 1
        if var006 == 0:
            s0 = str_store_string("@{reg0} castle{reg1?s:}")
        else:
            s0 = str_store_string("@{reg0} castle{reg1?s:} and {s0}")
        #end
        var006 += 1
    #end
    if var002 > 0:
        reg0 = var002
        reg1 = reg0 - 1
        if var006 == 0:
            s0 = str_store_string("@{reg0} town{reg1?s:}")
        elif var006 == 1:
            s0 = str_store_string("@{reg0} town{reg1?s:} and {s0}")
        else:
            s0 = str_store_string("@{reg0} town{reg1?s:}, {s0}")
        #end
    #end
    reg0 = var004 + var003
    reg0 += var002


def get_random_melee_training_weapon():
    var001 = -1
    var002 = -1
    random_x_003 = store_random_in_range(0,3)
    if random_x_003 == 0:
        var001 = itm.practice_staff
    elif random_x_003 == 1:
        var001 = itm.practice_sword
        var002 = itm.practice_shield
    else:
        var001 = itm.heavy_practice_sword
    #end
    reg0 = var001
    reg1 = var002


def start_training_at_training_ground(var001, var002):
    _g_training_ground_training_count += 1
    set_jump_mission(mt.training_ground_training)
    var003 = -1
    var004 = -1
    var005 = -1
    _scene_num_total_gourds_destroyed = 0
    if var001 == 8:
        _g_training_ground_used_weapon_proficiency = 3
        var003 = itm.practice_bow
        if _g_mt_mode == 3:
            var004 = itm.practice_arrows_100_amount
        else:
            var004 = itm.practice_arrows_10_amount
        #end
    elif var001 == 9:
        _g_training_ground_used_weapon_proficiency = 4
        var003 = itm.practice_crossbow
        var004 = itm.practice_bolts_9_amount
    elif var001 == 10:
        _g_training_ground_used_weapon_proficiency = 5
        if _g_mt_mode == 3:
            var004 = itm.practice_throwing_daggers_100_amount
        else:
            var004 = itm.practice_throwing_daggers
        #end
    elif var001 == 2:
        _g_training_ground_used_weapon_proficiency = 0
        var003 = itm.practice_sword
    elif var001 == 4:
        _g_training_ground_used_weapon_proficiency = 2
        var003 = itm.practice_lance
    else:
        _g_training_ground_used_weapon_proficiency = 0
        get_random_melee_training_weapon()
        var003 = reg0
        var004 = reg1
    #end
    if _g_mt_mode == 3:
        var005 = itm.practice_horse
        _g_training_ground_training_scene = scn.training_ground_horse_track_1
        _g_training_ground_training_scene += _g_encountered_party
        _g_training_ground_training_scene -= p.training_ground_1
    else:
        _g_training_ground_training_scene = scn.training_ground_ranged_melee_1
        _g_training_ground_training_scene += _g_encountered_party
        _g_training_ground_training_scene -= p.training_ground_1
    #end
    modify_visitors_at_site(_g_training_ground_training_scene)
    reset_visitors()
    set_visitor(0,trp.player)
    var006 = -1
    for inventory_slot_no_007 in range(0, 4):
        troop_inv_slot_008 = troop_get_inventory_slot(trp.player,inventory_slot_no_007)
        if troop_inv_slot_008 >= 0:
            item_type_009 = item_get_type(troop_inv_slot_008)
            if item_type_009 == var001 and var006 == -1:
                var006 = troop_inv_slot_008
            #end
        #end
    #end
    mission_tpl_entry_clear_override_items(mt.training_ground_training,0)
    mission_tpl_entry_add_override_item(mt.training_ground_training,0,itm.practice_boots)
    if var003 >= 0:
        if var006 >= 0:
            mission_tpl_entry_add_override_item(mt.training_ground_training,0,var006)
        else:
            mission_tpl_entry_add_override_item(mt.training_ground_training,0,var003)
        #end
    #end
    if var004 >= 0:
        mission_tpl_entry_add_override_item(mt.training_ground_training,0,var004)
    #end
    if var005 >= 0:
        mission_tpl_entry_add_override_item(mt.training_ground_training,0,var005)
    #end
    entry_no_010 = 5
    troop_slot_011 = troop_get_slot(trp.stack_selection_amounts,1)
    var012 = 5 + troop_slot_011
    val_min(var012,13)
    for entry_no_010 in range(5, var012):
        remove_random_fit_party_member_from_stack_selection()
        set_visitor(entry_no_010,reg0)
        entry_no_010 += 1
    #end
    if _g_mt_mode == 1:
        var013 = 0
        for slot_no_014 in range(0, var002):
            troop_slot_015 = troop_get_slot(trp.temp_array_a,slot_no_014)
            entry_no_016 = slot_no_014 + 1
            set_visitor(entry_no_016,troop_slot_015)
            mission_tpl_entry_clear_override_items(mt.training_ground_training,entry_no_016)
            mission_tpl_entry_add_override_item(mt.training_ground_training,entry_no_016,itm.practice_boots)
            get_random_melee_training_weapon()
            mission_tpl_entry_add_override_item(mt.training_ground_training,entry_no_016,reg0)
            if reg1 >= 0:
                mission_tpl_entry_add_override_item(mt.training_ground_training,entry_no_016,reg1)
            #end
            character_lvl_017 = store_character_level(troop_slot_015)
            character_lvl_017 += 10
            character_lvl_017 *= character_lvl_017
            var013 += character_lvl_017
        #end
        _g_training_ground_training_num_enemies = var002
        _g_training_ground_training_hardness = var013
        var018 = _g_training_ground_training_num_enemies + 4
        _g_training_ground_training_hardness *= var018
        _g_training_ground_training_hardness /= 2400
        s0 = str_store_string("@Your opponents are ready for the fight.")
    elif _g_mt_mode == 3:
        if var001 == 8:
            _g_training_ground_training_hardness = 350
            _g_training_ground_training_num_gourds_to_destroy = 30
        elif var001 == 10:
            _g_training_ground_training_hardness = 400
            _g_training_ground_training_num_gourds_to_destroy = 30
        elif var001 == 2:
            _g_training_ground_training_hardness = 200
            _g_training_ground_training_num_gourds_to_destroy = 45
        elif var001 == 4:
            _g_training_ground_training_hardness = 280
            _g_training_ground_training_num_gourds_to_destroy = 35
        #end
        s0 = str_store_string("@Try to destroy as many targets as you can. You have two and a half minutes to clear the track.")
    elif _g_mt_mode == 2:
        _g_training_ground_ranged_distance = var002 * 100
        var019 = var002
        var019 *= var019
        if var001 == 8:
            var019 *= 3
            var019 /= 2
        elif var001 == 10:
            var019 *= 5
            var019 /= 2
            var019 *= var002
            var019 /= 2
        #end
        _g_training_ground_training_hardness = 100 * var019
        _g_training_ground_training_hardness /= 6000
        s0 = str_store_string("@Stay behind the line on the ground and shoot the targets. Try not to waste any shots.")
    #end
    jump_to_menu(mnu.training_ground_description)


def party_count_fit_regulars(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    reg0 = 0
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        if not troop_is_hero(troop_id_004):
            party_stack_size_005 = party_stack_get_size(party_id_001,stack_no_003)
            party_stack_num_wounded_006 = party_stack_get_num_wounded(party_id_001,stack_no_003)
            party_stack_size_005 -= party_stack_num_wounded_006
            reg0 += party_stack_size_005
        #end
    #end


def party_count_fit_for_battle(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    reg0 = 0
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        party_stack_size_005 = 0
        if troop_is_hero(troop_id_004):
            if not troop_is_wounded(troop_id_004):
                party_stack_size_005 = 1
            #end
        else:
            party_stack_size_005 = party_stack_get_size(party_id_001,stack_no_003)
            party_stack_num_wounded_006 = party_stack_get_num_wounded(party_id_001,stack_no_003)
            party_stack_size_005 -= party_stack_num_wounded_006
        #end
        reg0 += party_stack_size_005
    #end


def party_count_members_with_full_health(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    reg0 = 0
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        if troop_id_004 != trp.player:
            party_stack_size_005 = 0
            if troop_is_hero(troop_id_004):
                troop_health_006 = store_troop_health(troop_id_004)
                if troop_health_006 >= 80:
                    party_stack_size_005 = 1
                #end
            #end
        else:
            party_stack_size_005 = party_stack_get_size(party_id_001,stack_no_003)
            party_stack_num_wounded_007 = party_stack_get_num_wounded(party_id_001,stack_no_003)
            party_stack_size_005 -= party_stack_num_wounded_007
            val_max(party_stack_size_005,0)
        #end
        reg0 += party_stack_size_005
    #end


def get_stack_with_rank(party_id_001, var002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_001)
    reg0 = -1
    var004 = 0
    for stack_no_005 in range(0, party_num_companions_stacks_003):
        if reg0 == -1:
            troop_id_006 = party_stack_get_troop_id(party_id_001,stack_no_005)
            if not troop_is_hero(troop_id_006):
                party_stack_size_007 = party_stack_get_size(party_id_001,stack_no_005)
                party_stack_num_wounded_008 = party_stack_get_num_wounded(party_id_001,stack_no_005)
                party_stack_size_007 -= party_stack_num_wounded_008
                var004 += party_stack_size_007
                if var002 < var004:
                    reg0 = stack_no_005
                #end
            #end
        #end
    #end


def inflict_casualties_to_party(party_id_001, var003):
    party_clear(p.temp_casualties)
    party_count_fit_regulars(party_id_001)
    var002 = reg0
    for var004 in range(0, var003):
        if var002 > 0:
            random_x_005 = store_random_in_range(0,var002)
            reg1 = random_x_005
            get_stack_with_rank(party_id_001,random_x_005)
            stack_no_006 = reg0
            troop_id_007 = party_stack_get_troop_id(party_id_001,stack_no_006)
            character_lvl_008 = store_character_level(troop_id_007)
            character_lvl_008 += 5
            var009 = 10000
            var009 /= character_lvl_008
            if True:
                random_x_010 = store_random_in_range(0,10000)
                if random_x_010 < var009:
                    random_x_011 = store_random_in_range(0,2)
                    if troop_is_hero(troop_id_007):
                        troop_health_012 = store_troop_health(troop_id_007)
                        troop_health_012 -= 45
                        val_max(troop_health_012,1)
                        troop_set_health(troop_id_007,troop_health_012)
                    elif random_x_011 < 1:
                        party_add_members(p.temp_casualties,troop_id_007,1)
                        party_wound_members(p.temp_casualties,troop_id_007,1)
                        party_wound_members(party_id_001,troop_id_007,1)
                    else:
                        party_add_members(p.temp_casualties,troop_id_007,1)
                        party_remove_members(party_id_001,troop_id_007,1)
                    #end
                #end
            #end
            var002 -= 1
        #end
    #end


def move_members_with_ratio(party_id_001, var002):
    party_num_prisoners_stacks_003 = party_get_num_prisoner_stacks(party_id_001)
    for stack_no_004 in range(0, party_num_prisoners_stacks_003):
        party_prisoner_troop_id_005 = party_prisoner_stack_get_troop_id(party_id_001,stack_no_004)
        party_prisoner_stack_size_006 = party_prisoner_stack_get_size(party_id_001,stack_no_004)
        var007 = party_prisoner_stack_size_006 * _pin_number
        var007 /= 1000
        party_remove_prisoners(party_id_001,party_prisoner_troop_id_005,var007)
        var008 = reg0
        party_add_prisoners(var002,party_prisoner_troop_id_005,var008)
    #end
    party_num_prisoners_stacks_003 = party_get_num_companion_stacks(party_id_001)
    for stack_no_004 in range(0, party_num_prisoners_stacks_003):
        party_prisoner_troop_id_005 = party_stack_get_troop_id(party_id_001,stack_no_004)
        party_prisoner_stack_size_006 = party_stack_get_size(party_id_001,stack_no_004)
        var007 = party_prisoner_stack_size_006 * _pin_number
        var007 /= 1000
        party_remove_members(party_id_001,party_prisoner_troop_id_005,var007)
        var008 = reg0
        party_add_members(var002,party_prisoner_troop_id_005,var008)
    #end


def count_parties_of_faction_and_party_type(var001, var002):
    reg0 = 0
    for cur_party in __all_parties__:
        if party_is_active(cur_party):
            party_slot_004 = party_get_slot(cur_party,0)
            party_faction_005 = store_faction_of_party(cur_party)
            if party_slot_004 == var002 and party_faction_005 == var001:
                reg0 += 1
            #end
        #end
    #end


def faction_get_number_of_armies(var001):
    var002 = 0
    for trp_003 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_003,2,2):
            troop_faction_004 = store_faction_of_troop(trp_003)
            if troop_faction_004 == var001:
                troop_slot_005 = troop_get_slot(trp_003,10)
                if troop_slot_005 >= 0 and party_is_active(troop_slot_005):
                    party_count_fit_regulars(troop_slot_005)
                    var006 = reg0
                    party_get_ideal_size(troop_slot_005)
                    var007 = reg0
                    var007 *= 60
                    var007 /= 100
                    if var006 > var007:
                        var002 += 1
                    #end
                #end
            #end
        #end
    #end
    reg0 = var002


def faction_recalculate_strength(faction_id_001):
    faction_get_number_of_armies(faction_id_001)
    var002 = reg0
    var003 = 0
    var004 = 0
    for p_005 in range(p.town_1, p.salt_mine):
        party_faction_006 = store_faction_of_party(p_005)
        if party_faction_006 == faction_id_001:
            if party_slot_eq(p_005,0,2):
                var003 += 1
            elif party_slot_eq(p_005,0,3):
                var004 += 1
            #end
        #end
    #end
    faction_set_slot(faction_id_001,80,var002)
    faction_set_slot(faction_id_001,81,var003)
    faction_set_slot(faction_id_001,82,var004)


def cf_select_random_town_with_faction(var001):
    var002 = -1
    var003 = 0
    for p_004 in range(p.town_1, p.castle_1):
        party_faction_005 = store_faction_of_party(p_004)
        if party_faction_005 == var001:
            var003 += 1
        #end
    #end
    if var003 > 0:
        random_x_006 = store_random_in_range(0,var003)
        var003 = 0
        for p_004 in range(p.town_1, p.castle_1):
            if var002 == -1:
                party_faction_005 = store_faction_of_party(p_004)
                if party_faction_005 == var001:
                    var003 += 1
                    if var003 > random_x_006:
                        var002 = p_004
                    #end
                #end
            #end
        #end
    #end
    reg0 = var002


def cf_select_random_village_with_faction(var001):
    var002 = -1
    var003 = 0
    for p_004 in range(p.village_1, p.salt_mine):
        party_faction_005 = store_faction_of_party(p_004)
        if party_faction_005 == var001:
            var003 += 1
        #end
    #end
    if var003 > 0:
        random_x_006 = store_random_in_range(0,var003)
        var003 = 0
        for p_004 in range(p.village_1, p.salt_mine):
            if var002 == -1:
                party_faction_005 = store_faction_of_party(p_004)
                if party_faction_005 == var001:
                    var003 += 1
                    if var003 > random_x_006:
                        var002 = p_004
                    #end
                #end
            #end
        #end
    #end
    reg0 = var002


def cf_select_random_walled_center_with_faction(var001, var002):
    var003 = -1
    var004 = 0
    for p_005 in range(p.town_1, p.village_1):
        party_faction_006 = store_faction_of_party(p_005)
        if party_faction_006 == var001:
            var004 += 1
            if p_005 == var002:
                var004 += 99
            #end
        #end
    #end
    if var004 > 0:
        random_x_007 = store_random_in_range(0,var004)
        for p_005 in range(p.town_1, p.village_1):
            if var003 == -1:
                party_faction_006 = store_faction_of_party(p_005)
                if party_faction_006 == var001:
                    random_x_007 -= 1
                    if p_005 == var002:
                        random_x_007 -= 99
                    #end
                #end
            #end
        #end
        if random_x_007 < 0:
            var003 = p_005
        #end
    #end
    reg0 = var003


def cf_select_random_walled_center_with_faction_and_owner_priority_no_siege(faction_id_001, var002):
    var003 = -1
    var004 = 0
    lord_get_home_center(var002)
    var005 = reg0
    for p_006 in range(p.town_1, p.village_1):
        party_faction_007 = store_faction_of_party(p_006)
        if party_faction_007 == faction_id_001 and party_slot_eq(p_006,54,-1):
            var004 += 1
            if var005 == p_006:
                var004 += 1000
            #end
        #end
    #end
    if var004 <= 0:
        _g_there_is_no_avaliable_centers = 1
        for p_006 in range(p.town_1, p.village_1):
            if party_slot_eq(p_006,54,-1):
                var004 += 1
            #end
        #end
    else:
        _g_there_is_no_avaliable_centers = 0
    #end
    faction_slot_008 = faction_get_slot(faction_id_001,11)
    if _g_there_is_no_avaliable_centers == 0 or var002 != faction_slot_008:
        random_x_009 = store_random_in_range(0,var004)
        for p_006 in range(p.town_1, p.village_1):
            if var003 == -1:
                party_faction_007 = store_faction_of_party(p_006)
                if _g_there_is_no_avaliable_centers == 1 or party_faction_007 == faction_id_001 and party_slot_eq(p_006,54,-1):
                    random_x_009 -= 1
                    if var005 == p_006 and _g_there_is_no_avaliable_centers == 0:
                        random_x_009 -= 1000
                    #end
                #end
            #end
        #end
        if random_x_009 < 0:
            var003 = p_006
        #end
    #end
    reg0 = var003


def cf_select_random_walled_center_with_faction_and_less_strength_priority(var001, var002):
    var003 = -1
    var004 = 0
    for p_005 in range(p.town_1, p.village_1):
        party_faction_006 = store_faction_of_party(p_005)
        if party_faction_006 == var001 and party_slot_eq(p_005,54,-1):
            var004 += 1
            if p_005 == var002:
                var004 += 99
            #end
        #end
    #end
    if var004 > 0:
        random_x_007 = store_random_in_range(0,var004)
        for p_005 in range(p.town_1, p.village_1):
            if var003 == -1:
                party_faction_006 = store_faction_of_party(p_005)
                if party_faction_006 == var001 and party_slot_eq(p_005,54,-1):
                    random_x_007 -= 1
                    if p_005 == var002:
                        random_x_007 -= 99
                    #end
                #end
            #end
        #end
        if random_x_007 < 0:
            var003 = p_005
        #end
    #end
    reg0 = var003


def cf_select_random_town_at_peace_with_faction(var001):
    var002 = -1
    var003 = 0
    for p_004 in range(p.town_1, p.castle_1):
        party_faction_005 = store_faction_of_party(p_004)
        faction_relation_006 = store_relation(party_faction_005,var001)
        if faction_relation_006 >= 0:
            var003 += 1
        #end
    #end
    if var003 > 0:
        random_x_007 = store_random_in_range(0,var003)
        var003 = 0
        for p_004 in range(p.town_1, p.castle_1):
            if var002 == -1:
                party_faction_005 = store_faction_of_party(p_004)
                faction_relation_006 = store_relation(party_faction_005,var001)
                if faction_relation_006 >= 0:
                    var003 += 1
                    if var003 > random_x_007:
                        var002 = p_004
                    #end
                #end
            #end
        #end
    #end
    reg0 = var002


def cf_select_random_town_at_peace_with_faction_in_trade_route(party_id_001, var002):
    var003 = -1
    var004 = 0
    for slot_no_005 in range(190, 205):
        party_slot_006 = party_get_slot(party_id_001,slot_no_005)
        if party_slot_006 > 0:
            party_faction_007 = store_faction_of_party(party_slot_006)
            faction_relation_008 = store_relation(party_faction_007,var002)
            if faction_relation_008 >= 0:
                var004 += 1
            #end
        #end
    #end
    if var004 > 0:
        random_x_009 = store_random_in_range(0,var004)
        for slot_no_005 in range(190, 205):
            if var003 == -1:
                party_slot_006 = party_get_slot(party_id_001,slot_no_005)
                if party_slot_006 > 0:
                    party_faction_007 = store_faction_of_party(party_slot_006)
                    faction_relation_008 = store_relation(party_faction_007,var002)
                    if faction_relation_008 >= 0:
                        random_x_009 -= 1
                        if random_x_009 < 0:
                            var003 = party_slot_006
                        #end
                    #end
                #end
            #end
        #end
    #end
    reg0 = var003


def cf_select_most_profitable_town_at_peace_with_faction_in_trade_route(party_id_001, var002):
    itm_011_list1 = [
    itm.velvet,
    itm.spice,
    ]
    var003 = -1
    var004 = 0
    var005 = 250 - itm.spice
    for slot_no_006 in range(190, 205):
        party_slot_007 = party_get_slot(party_id_001,slot_no_006)
        if party_slot_007 > 0:
            party_faction_008 = store_faction_of_party(party_slot_007)
            faction_relation_009 = store_relation(party_faction_008,var002)
            if faction_relation_009 >= 0:
                var010 = 0
                for itm_011 in range(itm.spice, itm.siege_supply):
                    if itm_011 != itm.butter and itm_011 != itm.cattle_meat and itm_011 != itm.chicken and itm_011 != itm.pork:
                        slot_no_012 = itm_011 + var005
                        party_slot_013 = party_get_slot(party_id_001,slot_no_012)
                        party_slot_014 = party_get_slot(party_slot_007,slot_no_012)
                        if party_slot_014 > party_slot_013:
                            var015 = party_slot_014 - party_slot_013
                            if itm_011 in itm_011_list1:
                                var015 *= 2
                            #end
                        #end
                    #end
                #end
            #end
            var010 += var015
        #end
        if var010 > var004:
            var004 = var010
            var003 = party_slot_007
        #end
    #end
    if var003 > -1:
        reg0 = var003


def shuffle_troop_slots(troop_id_001, var002, var003):
    for slot_no_004 in range(var002, var003):
        random_x_005 = store_random_in_range(var002,var003)
        troop_slot_006 = troop_get_slot(troop_id_001,slot_no_004)
        troop_slot_007 = troop_get_slot(troop_id_001,random_x_005)
        troop_set_slot(troop_id_001,slot_no_004,troop_slot_007)
        troop_set_slot(troop_id_001,random_x_005,troop_slot_006)
    #end


def get_quest(troop_id_001):
    character_lvl_002 = store_character_level(trp.player)
    troop_faction_003 = store_faction_of_troop(troop_id_001)
    troop_slot_004 = troop_get_slot(troop_id_001,10)
    troop_slot_005 = troop_get_slot(troop_id_001,52)
    party_attached_006 = -1
    if troop_slot_004 > 0:
        party_attached_006 = party_get_attached_to(troop_slot_004)
    elif is_between(_g_encountered_party,p.town_1,p.salt_mine):
        party_attached_006 = _g_encountered_party
    #end
    if troop_slot_eq(troop_id_001,2,2):
        if _g_talk_troop_faction_relation >= 0:
            var007 = qst.deliver_message
            var008 = qst.follow_army
            var009 = qst.destroy_bandit_lair
            var010 = qst.blank_quest_2
        else:
            var007 = qst.lend_surgeon
            var008 = qst.follow_army
            var009 = 0
            var010 = 0
        #end
    elif is_between(troop_id_001,trp.village_1_elder,trp.merchants_end):
        var007 = qst.deliver_grain
        var008 = qst.eliminate_bandits_infesting_village
        var009 = qst.blank_quest_6
        var010 = qst.blank_quest_6
    elif is_between(troop_id_001,trp.town_1_mayor,trp.village_1_elder):
        var007 = qst.move_cattle_herd
        var008 = qst.deliver_grain
        var009 = qst.blank_quest_11
        var010 = qst.blank_quest_11
    else:
        var007 = qst.rescue_lord_by_replace
        var008 = qst.move_cattle_herd
        var009 = qst.blank_quest_16
        var010 = qst.blank_quest_16
    #end
    quest_id_011 = -1
    troop_id_012 = -1
    random_party_013 = -1
    party_faction_014 = -1
    troop_faction_015 = -1
    faction_slot_016 = -1
    var017 = -1
    var018 = -1
    var019 = -1
    random_x_020 = -1
    random_x_021 = -1
    var022 = -1
    var023 = 1
    var024 = 0
    character_lvl_025 = 0
    var026 = 0
    var027 = 0
    var028 = 0
    if True:
        get_dynamic_quest(_g_talk_troop)
        quest_id_011 = reg0
        var029 = reg1
        var030 = reg2
        var031 = reg3
        if quest_id_011 == qst.track_down_bandits:
            var018 = var030
            var027 = 60
            var024 = 1000
            character_lvl_025 = 1000
        elif quest_id_011 == qst.retaliate_for_border_incident:
            troop_id_012 = var029
            party_faction_014 = var031
            var027 = 30
            var024 = 1000
            character_lvl_025 = 1000
        elif quest_id_011 == qst.cause_provocation:
            party_faction_014 = var031
            var027 = 30
            var028 = 100
            var024 = 1000
            character_lvl_025 = 1000
        elif quest_id_011 == qst.destroy_bandit_lair:
            var018 = var030
            var027 = 60
            var024 = 3000
            character_lvl_025 = 1500
        elif quest_id_011 == qst.rescue_prisoner:
            troop_id_012 = var029
            random_party_013 = var030
            var027 = 30
            var028 = 5
            var024 = 1500
            character_lvl_025 = 3000
        #end
    #end
    if quest_id_011 == -1:
        for var032 in range(0, 20):
            if quest_id_011 == -1:
                troop_id_012 = -1
                random_party_013 = -1
                party_faction_014 = -1
                troop_faction_015 = -1
                faction_slot_016 = -1
                var017 = -1
                var018 = -1
                var019 = -1
                random_x_020 = -1
                random_x_021 = -1
                var022 = -1
                var023 = 1
                var024 = 0
                character_lvl_025 = 0
                var026 = 0
                var027 = 0
                var028 = 0
                var033 = var008 - var007
                var034 = var010 - var009
                var035 = var033 + var034
                random_x_036 = store_random_in_range(0,var035)
                if random_x_036 < var033:
                    random_x_036 = store_random_in_range(var007,var008)
                else:
                    random_x_036 = store_random_in_range(var009,var010)
                #end
            #end
            if not check_quest_active(random_x_036) and not quest_slot_ge(random_x_036,25,1):
                if random_x_036 == qst.deliver_grain:
                    if is_between(party_attached_006,p.village_1,p.salt_mine):
                        get_troop_item_amount(troop_id_001,itm.grain)
                        if reg0 == 0 and not party_slot_ge(party_attached_006,50,40):
                            random_party_013 = party_attached_006
                            random_x_020 = store_random_in_range(4,8)
                            var027 = 30
                            var028 = 20
                            quest_id_011 = random_x_036
                        #end
                    #end
                #end
            elif random_x_036 == qst.deliver_cattle:
                if is_between(party_attached_006,p.village_1,p.salt_mine):
                    party_slot_037 = party_get_slot(party_attached_006,205)
                    if party_slot_037 < 50:
                        random_party_013 = party_attached_006
                        random_x_020 = store_random_in_range(5,10)
                        var027 = 30
                        var028 = 20
                        quest_id_011 = random_x_036
                    #end
                #end
            elif random_x_036 == qst.train_peasants_against_bandits:
                if is_between(party_attached_006,p.village_1,p.salt_mine):
                    skill_lvl_038 = store_skill_level(skl.trainer,trp.player)
                    if skill_lvl_038 > 0:
                        random_x_020 = store_random_in_range(5,8)
                        random_party_013 = party_attached_006
                        var027 = 20
                        var028 = 40
                        quest_id_011 = random_x_036
                    #end
                #end
            elif random_x_036 == qst.escort_merchant_caravan and is_between(party_attached_006,p.town_1,p.salt_mine):
                random_party_013 = store_random_party_in_range(p.town_1,p.castle_1)
                distance_parties_039 = store_distance_to_party_from_party(party_attached_006,random_party_013)
                character_lvl_025 = distance_parties_039
                character_lvl_025 += 25
                character_lvl_025 *= 25
                character_lvl_025 /= 20
                random_x_020 = store_random_in_range(6,12)
                _escort_merchant_caravan_mode = 0
                quest_id_011 = random_x_036
            elif random_x_036 == qst.deliver_wine and is_between(party_attached_006,p.town_1,p.salt_mine):
                random_party_013 = store_random_party_in_range(p.town_1,p.castle_1)
                random_x_040 = store_random_in_range(0,2)
                if random_x_040 == 0:
                    var022 = itm.quest_wine
                else:
                    var022 = itm.quest_ale
                #end
                random_x_020 = store_random_in_range(6,12)
                distance_parties_039 = store_distance_to_party_from_party(party_attached_006,random_party_013)
                character_lvl_025 = distance_parties_039
                character_lvl_025 += 2
                var041 = 5
                var041 += random_x_020
                character_lvl_025 *= var041
                character_lvl_025 /= 100
                character_lvl_025 *= 10
                _qst_deliver_wine_debt = store_item_value(var022)
                _qst_deliver_wine_debt *= random_x_020
                _qst_deliver_wine_debt *= 6
                _qst_deliver_wine_debt /= 5
                var027 = 7
                var028 = 20
                quest_id_011 = random_x_036
            elif random_x_036 == qst.troublesome_bandits and is_between(party_attached_006,p.town_1,p.salt_mine):
                character_lvl_025 = store_character_level(trp.player)
                character_lvl_025 += 20
                character_lvl_025 *= 35
                character_lvl_025 /= 100
                character_lvl_025 *= 10
                var027 = 30
                var028 = 30
                quest_id_011 = random_x_036
            elif random_x_036 == qst.kidnapped_girl and is_between(party_attached_006,p.town_1,p.salt_mine):
                random_party_013 = store_random_in_range(p.village_1,p.salt_mine)
                random_x_020 = store_character_level()
                random_x_020 += 15
                distance_parties_039 = store_distance_to_party_from_party(party_attached_006,random_party_013)
                distance_parties_039 += 15
                distance_parties_039 *= 2
                random_x_020 *= distance_parties_039
                random_x_020 /= 100
                random_x_020 *= 10
                character_lvl_025 = random_x_020
                character_lvl_025 /= 40
                character_lvl_025 *= 10
                var027 = 15
                var028 = 30
                quest_id_011 = random_x_036
            elif random_x_036 == qst.move_cattle_herd and is_between(party_attached_006,p.town_1,p.salt_mine) and cf_select_random_town_at_peace_with_faction(troop_faction_003) and party_attached_006 != reg0:
                random_party_013 = reg0
                distance_parties_039 = store_distance_to_party_from_party(party_attached_006,random_party_013)
                character_lvl_025 = distance_parties_039
                character_lvl_025 += 25
                character_lvl_025 *= 50
                character_lvl_025 /= 20
                var027 = 30
                var028 = 20
                quest_id_011 = random_x_036
            elif random_x_036 == qst.persuade_lords_to_make_peace and is_between(party_attached_006,p.town_1,p.salt_mine):
                party_faction_042 = store_faction_of_party(party_attached_006)
                if cf_faction_get_random_enemy_faction(party_faction_042):
                    faction_id_043 = reg0
                    if cf_get_random_lord_except_king_with_faction(party_faction_042):
                        troop_id_044 = reg0
                        if troop_slot_eq(troop_id_044,52,2) or troop_slot_eq(troop_id_044,52,3) or troop_slot_eq(troop_id_044,52,1) or troop_slot_eq(troop_id_044,52,5) and cf_get_random_lord_except_king_with_faction(faction_id_043):
                            troop_id_012 = reg0
                            if troop_slot_eq(troop_id_012,52,2) or troop_slot_eq(troop_id_012,52,3) or troop_slot_eq(troop_id_012,52,1) or troop_slot_eq(troop_id_012,52,5):
                                faction_slot_016 = troop_id_044
                                party_faction_014 = faction_id_043
                                troop_faction_015 = party_faction_042
                                character_lvl_025 = 12000
                                var026 = 7000
                                var027 = 30
                                var028 = 100
                                quest_id_011 = random_x_036
                            elif random_x_036 == qst.deal_with_looters and is_between(character_lvl_002,0,15) and is_between(party_attached_006,p.town_1,p.salt_mine):
                                party_faction_042 = store_faction_of_party(party_attached_006)
                                num_destroyed_parties_by_player_045 = store_num_parties_destroyed_by_player(pt.looters)
                                party_template_set_slot(pt.looters,1,num_destroyed_parties_by_player_045)
                                quest_set_slot(random_x_036,11,0)
                                quest_set_slot(random_x_036,9,pt.looters)
                                character_lvl_025 = 500
                                var024 = 500
                                var027 = 20
                                var028 = 30
                                quest_id_011 = random_x_036
                            elif random_x_036 == qst.deal_with_night_bandits and is_between(character_lvl_002,0,15) and is_between(party_attached_006,p.town_1,p.salt_mine) and party_slot_ge(party_attached_006,155,1):
                                random_party_013 = party_attached_006
                                var027 = 4
                                var028 = 15
                                quest_id_011 = random_x_036
                            elif random_x_036 == qst.rescue_lord_by_replace and 1 == 0:
                                if _g_talk_troop_faction_relation >= 0 and is_between(character_lvl_002,5,25):
                                    var046 = -1
                                    if True:
                                        troop_slot_047 = troop_get_slot(troop_id_001,31)
                                        if troop_slot_047 > 0 and troop_slot_ge(troop_slot_047,8,0):
                                            var046 = troop_slot_047
                                        #end
                                    #end
                                #end
                            #end
                        #end
                    #end
                    if var046 == -1:
                        troop_slot_047 = troop_get_slot(troop_id_001,30)
                        if troop_slot_047 > 0 and troop_slot_ge(troop_slot_047,8,0):
                            var046 = troop_slot_047
                        #end
                    #end
                    if var046 == -1:
                        troop_slot_047 = troop_get_slot(troop_id_001,33)
                        if troop_slot_047 > 0 and troop_slot_ge(troop_slot_047,8,0):
                            var046 = troop_slot_047
                        #end
                    #end
                    if _cheat_mode == 1:
                        reg0 = var046
                        print(gstr.prisoner_relative_is_reg0)
                    #end
                    if var046 > -1:
                        search_troop_prisoner_of_party(var046)
                        var048 = reg0
                        if is_between(var048,p.town_1,p.village_1):
                            random_party_013 = var048
                            troop_id_012 = var046
                            var027 = 30
                            var028 = 73
                            quest_id_011 = random_x_036
                        #end
                    #end
                #end
            elif random_x_036 == qst.deliver_message_to_prisoner_lord and _player_has_homage == 0:
                if _g_talk_troop_faction_relation >= 0 and is_between(character_lvl_002,5,25):
                    troop_slot_047 = troop_get_slot(troop_id_001,31)
                    if troop_slot_047 == 0:
                        troop_slot_047 = troop_get_slot(troop_id_001,30)
                    #end
                    if troop_slot_047 > -1 and troop_slot_ge(troop_slot_047,8,0):
                        search_troop_prisoner_of_party(troop_slot_047)
                        var048 = reg0
                        if is_between(var048,p.town_1,p.castle_1):
                            random_party_013 = var048
                            troop_id_012 = troop_slot_047
                            var027 = 30
                            var028 = 30
                            quest_id_011 = random_x_036
                        #end
                    #end
                #end
            elif random_x_036 == qst.duel_for_lady:
                if _g_talk_troop_faction_relation >= 0 and character_lvl_002 >= 10 and cf_troop_get_random_enemy_troop_with_occupation(troop_id_001,2):
                    troop_slot_047 = reg0
                    if not troop_slot_eq(troop_id_001,30,troop_slot_047) and not troop_slot_eq(troop_id_001,31,troop_slot_047) and not troop_slot_ge(troop_slot_047,8,0) and troop_slot_ge(troop_slot_047,10,0) and not troop_slot_eq(troop_slot_047,52,6) and not troop_slot_eq(troop_slot_047,52,7) and not troop_slot_eq(troop_slot_047,52,1):
                        troop_id_012 = troop_slot_047
                        var027 = 30
                        var028 = 50
                        quest_id_011 = random_x_036
                    #end
                #end
            elif random_x_036 == qst.lend_surgeon:
                if _g_defending_against_siege == 0 and troop_slot_005 != 2 and troop_slot_005 != 5:
                    var049 = 0
                    var050 = -1
                    party_num_companions_stacks_051 = party_get_num_companion_stacks(p.main_party)
                    for stack_no_052 in range(1, party_num_companions_stacks_051):
                        troop_id_053 = party_stack_get_troop_id(p.main_party,stack_no_052)
                        if troop_is_hero(troop_id_053):
                            skill_lvl_054 = store_skill_level(10,troop_id_053)
                            if skill_lvl_054 > var049:
                                var049 = skill_lvl_054
                                var050 = troop_id_053
                            #end
                        #end
                    #end
                    character_lvl_055 = store_character_level(trp.player)
                    var056 = 5
                    character_lvl_055 /= 10
                    var056 += character_lvl_055
                    if var049 >= var056:
                        faction_slot_016 = var050
                        var023 = 1
                        var024 = 10
                        character_lvl_025 = 10
                        var028 = 50
                        quest_id_011 = random_x_036
                    #end
                #end
            elif random_x_036 == qst.meet_spy_in_enemy_town and _player_has_homage == 0:
                if _players_kingdom == troop_faction_003 and troop_slot_005 != 6 and troop_slot_005 != 1:
                    troop_get_player_relation(troop_id_001)
                    var057 = reg0
                    if var057 > 3 and cf_faction_get_random_enemy_faction(troop_faction_003):
                        var058 = reg0
                        faction_relation_059 = store_relation(var058,fac.player_supporters_faction)
                        if faction_relation_059 < 0 and cf_select_random_town_with_faction(var058):
                            var048 = reg0
                            if cf_center_get_free_walker(var048):
                                random_party_013 = var048
                                random_x_020 = store_random_in_range(gstr.secret_sign_1,gstr.countersign_1)
                                quest_id_011 = random_x_036
                                character_lvl_025 = 500
                                var027 = 30
                                var028 = 50
                                quest_set_slot(qst.meet_spy_in_enemy_town,22,500)
                            #end
                        #end
                    #end
                #end
            elif random_x_036 == qst.raid_caravan_to_start_war and 1 == 0:
                if _players_kingdom == troop_faction_003 and troop_slot_005 == 4 or troop_slot_005 == 2 or troop_slot_005 == 5 and character_lvl_002 > 10 and 1 == 0 and not faction_slot_eq(troop_faction_003,11,troop_id_001) and cf_faction_get_random_friendly_faction(troop_faction_003):
                    party_faction_014 = reg0
                    troop_faction_015 = store_faction_of_troop(troop_id_001)
                    var019 = pt.kingdom_caravan_party
                    random_x_020 = 2
                    quest_id_011 = random_x_036
                    var027 = 30
                    var028 = 100
                #end
            elif random_x_036 == qst.deliver_message and _player_has_homage == 0:
                if _g_talk_troop_faction_relation >= 0 and character_lvl_002 < 20 and not troop_slot_ge(trp.player,7,125) and cf_get_random_lord_in_a_center_with_faction(troop_faction_003):
                    troop_slot_047 = reg0
                    if troop_slot_047 != troop_id_001:
                        get_troop_attached_party(troop_slot_047)
                        var048 = reg0
                        if party_attached_006 != var048:
                            random_party_013 = var048
                            troop_id_012 = troop_slot_047
                            var024 = 30
                            character_lvl_025 = 40
                            var028 = 10
                            quest_id_011 = random_x_036
                            var027 = 30
                        #end
                    #end
                #end
            elif random_x_036 == qst.escort_lady:
                if _g_talk_troop_faction_relation >= 0 and character_lvl_002 >= 10 and troop_id_001 >= 0:
                    troop_id_044 = -1
                    for trp_060 in range(trp.knight_1_1_wife, trp.heroes_end):
                        if troop_slot_eq(trp_060,31,troop_id_001):
                            troop_id_044 = trp_060
                        #end
                    #end
                    if troop_id_044 >= 0:
                        troop_slot_061 = troop_get_slot(troop_id_044,31)
                        if troop_id_001 == troop_slot_061:
                            random_x_040 = store_random_in_range(0,2)
                            if random_x_040 == 0:
                                troop_slot_062 = troop_get_slot(troop_id_001,30)
                                if is_between(troop_slot_062,trp.knight_1_1_wife,trp.heroes_end):
                                    troop_slot_061 = troop_get_slot(troop_slot_062,30)
                                    if troop_id_001 == troop_slot_061:
                                        troop_id_044 = troop_slot_062
                                    #end
                                #end
                            #end
                        #end
                    #end
                    if troop_id_044 > 0:
                        troop_type_063 = troop_get_type(troop_id_044)
                        if troop_type_063 == 1 and party_attached_006 > 0 and troop_slot_eq(troop_id_044,12,party_attached_006) and cf_select_random_town_with_faction(troop_faction_003):
                            var048 = reg0
                            if var048 != party_attached_006 and hero_can_join():
                                faction_slot_016 = troop_id_044
                                random_party_013 = var048
                                var027 = 20
                                var028 = 30
                                quest_id_011 = random_x_036
                            #end
                        #end
                    #end
                #end
            elif random_x_036 == qst.deliver_message_to_enemy_lord:
                if _g_talk_troop_faction_relation >= 0 and is_between(character_lvl_002,5,25) and cf_get_random_lord_from_another_faction_in_a_center(troop_faction_003):
                    troop_slot_047 = reg0
                    get_troop_attached_party(troop_slot_047)
                    random_party_013 = reg0
                    troop_id_012 = troop_slot_047
                    var023 = 1
                    var024 = 200
                    character_lvl_025 = 0
                    quest_id_011 = random_x_036
                    var027 = 40
                #end
            elif random_x_036 == qst.deal_with_bandits_at_lords_village:
                if troop_slot_005 != 5 and troop_slot_005 != 2 and _g_talk_troop_faction_relation >= 0:
                    var064 = p.salt_mine
                    var048 = -1
                    for var065 in range(p.village_1, var064):
                        if party_slot_eq(var065,7,troop_id_001) and party_slot_eq(var065,39,1) and party_slot_eq(var065,35,0):
                            var048 = var065
                            var064 = 0
                        #end
                    #end
                    if var048 >= 0 and not check_quest_active(qst.eliminate_bandits_infesting_village):
                        random_party_013 = var048
                        quest_id_011 = random_x_036
                        var027 = 30
                    #end
                #end
            elif random_x_036 == qst.raise_troops:
                if troop_slot_005 != 1 and troop_faction_003 != fac.player_supporters_faction and _g_talk_troop_faction_relation >= 0:
                    character_lvl_055 = store_character_level(trp.player)
                    if character_lvl_055 > 5 and troop_slot_ge(trp.player,7,100):
                        random_x_020 = store_random_in_range(5,8)
                        party_free_companions_capacity_066 = party_get_free_companions_capacity(p.main_party)
                        if random_x_020 <= party_free_companions_capacity_066:
                            faction_slot_016 = faction_get_slot(troop_faction_003,41)
                            random_x_067 = store_random_in_range(20,40)
                            random_x_067 += character_lvl_055
                            random_x_067 /= 10
                            character_lvl_025 = random_x_020 * 10
                            troop_id_012 = faction_slot_016
                            for var032 in range(0, random_x_067):
                                troop_upgrade_troop_id_068 = troop_get_upgrade_troop(troop_id_012,0)
                                if troop_upgrade_troop_id_068 > 0:
                                    troop_id_012 = troop_upgrade_troop_id_068
                                    character_lvl_025 *= character_lvl_025
                                    character_lvl_025 /= character_lvl_025
                                #end
                            #end
                        #end
                    #end
                    var024 = character_lvl_025
                    var024 *= 3
                    var024 /= 10
                    quest_id_011 = random_x_036
                    var027 = 120
                    var028 = 15
                #end
            elif random_x_036 == qst.collect_taxes and _player_has_homage == 0:
                if troop_slot_005 != 6 and troop_slot_005 != 7 and _g_talk_troop_faction_relation >= 0 and cf_troop_get_random_leaded_town_or_village_except_center(troop_id_001,party_attached_006):
                    random_party_013 = reg0
                    var023 = 1
                    character_lvl_025 = 0
                    var024 = 100
                    quest_id_011 = random_x_036
                    var027 = 50
                    var028 = 20
                #end
            elif random_x_036 == qst.hunt_down_fugitive:
                if _g_talk_troop_faction_relation >= 0 and cf_select_random_village_with_faction(troop_faction_003):
                    random_party_013 = reg0
                    random_x_021 = store_random_in_range(0,1000000)
                    quest_id_011 = random_x_036
                    var027 = 30
                    var028 = 30
                #end
            elif random_x_036 == qst.kill_local_merchant and _player_has_homage == 0:
                if troop_slot_005 == 2 or troop_slot_005 == 4 or troop_slot_005 == 5 and not faction_slot_eq(troop_faction_003,11,troop_id_001) and _g_talk_troop_faction_relation >= 0 and character_lvl_002 > 5 and is_between(party_attached_006,p.town_1,p.castle_1):
                    var023 = 1
                    var024 = 300
                    character_lvl_025 = 1000
                    quest_id_011 = random_x_036
                    var027 = 10
                    var028 = 30
                #end
            elif random_x_036 == qst.bring_back_runaway_serfs:
                if troop_slot_005 != 6 and troop_slot_005 != 7 and _g_talk_troop_faction_relation >= 0 and character_lvl_002 >= 5 and party_attached_006 > 0 and _g_defending_against_siege == 0:
                    var069 = -1
                    for p_065 in range(p.village_1, p.salt_mine):
                        if party_slot_eq(p_065,7,troop_id_001):
                            distance_parties_039 = store_distance_to_party_from_party(p_065,party_attached_006)
                            if distance_parties_039 < 25:
                                var069 = p_065
                            #end
                        #end
                    #end
                    if var069 >= 0 and cf_select_random_town_with_faction(troop_faction_003):
                        var048 = reg0
                        if var048 != party_attached_006:
                            distance_parties_039 = store_distance_to_party_from_party(var048,party_attached_006)
                            if distance_parties_039 >= 20:
                                var019 = pt.runaway_serfs
                                var017 = var069
                                random_party_013 = var048
                                var023 = 1
                                var024 = 200
                                character_lvl_025 = 150
                                quest_id_011 = random_x_036
                                var027 = 30
                                var028 = 20
                                _qst_bring_back_runaway_serfs_num_parties_returned = 0
                                _qst_bring_back_runaway_serfs_num_parties_fleed = 0
                            #end
                        #end
                    #end
                #end
            elif random_x_036 == qst.follow_spy and _player_has_homage == 0:
                if _g_talk_troop_faction_relation >= 0 and troop_slot_005 != 6:
                    party_skill_lvl_070 = party_get_skill_level(p.main_party,skl.tracking)
                    if party_skill_lvl_070 >= 2 and character_lvl_002 >= 10 and _g_defending_against_siege == 0 and troop_slot_004 > 0 and party_attached_006 > 0 and party_slot_eq(_g_encountered_party,0,3):
                        pos2 = party_get_position(p.main_party)
                        var071 = 99999
                        var069 = -1
                        for var072 in range(0, 10):
                            if cf_get_random_enemy_center(troop_slot_004):
                                var073 = reg0
                                pos3 = party_get_position(var073)
                                map_get_random_position_around_position(pos4,3,6)
                                distance_074 = get_distance_between_positions(2,4)
                                if distance_074 < var071:
                                    var071 = distance_074
                                    var069 = var073
                                    copy_position(63,4)
                                #end
                            #end
                        #end
                    #end
                    if var069 > 0:
                        var017 = var069
                        var028 = 50
                        quest_id_011 = random_x_036
                        _qst_follow_spy_run_away = 0
                        _qst_follow_spy_meeting_state = 0
                        _qst_follow_spy_meeting_counter = 0
                        _qst_follow_spy_spy_back_in_town = 0
                        _qst_follow_spy_partner_back_in_town = 0
                        _qst_follow_spy_no_active_parties = 0
                    #end
                #end
            elif random_x_036 == qst.capture_enemy_hero:
                if _players_kingdom == troop_faction_003 and not faction_slot_eq(_players_kingdom,8,trp.player) and character_lvl_002 >= 15 and cf_faction_get_random_enemy_faction(troop_faction_003):
                    party_faction_014 = reg0
                    var027 = 30
                    var028 = 80
                    character_lvl_025 = 2000
                    quest_id_011 = random_x_036
                #end
            elif random_x_036 == qst.lend_companion:
                if _g_talk_troop_faction_relation >= 0:
                    var075 = 0
                    party_num_companions_stacks_051 = party_get_num_companion_stacks(p.main_party)
                    for stack_no_052 in range(0, party_num_companions_stacks_051):
                        troop_id_053 = party_stack_get_troop_id(p.main_party,stack_no_052)
                        if troop_is_hero(troop_id_053) and is_between(troop_id_053,trp.npc1,trp.kingdom_1_lord):
                            character_lvl_076 = store_character_level(troop_id_053)
                            if character_lvl_076 >= 15:
                                var077 = 0
                                for var078 in range(0, qst.quests_end):
                                    if check_quest_active(var078) and quest_slot_eq(var078,2,troop_id_053) or quest_slot_eq(var078,4,troop_id_053):
                                        var077 = 1
                                    #end
                                #end
                            #end
                        #end
                        if var077 == 0:
                            var075 += 1
                        #end
                    #end
                    if var075 > 0:
                        random_x_079 = store_random_in_range(0,var075)
                        var075 = 0
                        troop_slot_047 = -1
                        for stack_no_052 in range(0, party_num_companions_stacks_051):
                            if troop_slot_047 == -1:
                                troop_id_053 = party_stack_get_troop_id(p.main_party,stack_no_052)
                                if troop_is_hero(troop_id_053) and is_between(troop_id_053,trp.npc1,trp.kingdom_1_lord) and troop_id_053 != trp.player:
                                    character_lvl_076 = store_character_level(troop_id_053)
                                    if character_lvl_076 >= 15:
                                        var077 = 0
                                        for var078 in range(0, qst.quests_end):
                                            if check_quest_active(var078) and quest_slot_eq(var078,2,troop_id_053) or quest_slot_eq(var078,4,troop_id_053):
                                                var077 = 1
                                            #end
                                        #end
                                    #end
                                #end
                            #end
                        #end
                        if var077 == 0:
                            var075 += 1
                            if var075 > random_x_079:
                                troop_slot_047 = troop_id_053
                            #end
                        #end
                    #end
                    if is_between(troop_slot_047,trp.npc1,trp.kingdom_1_lord):
                        troop_id_012 = troop_slot_047
                        random_x_020 = store_current_day()
                        random_x_020 += 8
                        var023 = 1
                        var024 = 300
                        character_lvl_025 = 400
                        quest_id_011 = random_x_036
                        var028 = 30
                    #end
                #end
            elif random_x_036 == qst.collect_debt and 1 == 0:
                if _g_talk_troop_faction_relation >= 0 and cf_get_random_lord_in_a_center_with_faction(troop_faction_003):
                    troop_id_012 = reg0
                    if troop_id_012 != troop_id_001:
                        get_troop_attached_party(troop_id_012)
                        random_party_013 = reg0
                        if party_attached_006 != random_party_013:
                            var024 = 30
                            character_lvl_025 = 40
                            quest_id_011 = random_x_036
                            random_x_020 = store_random_in_range(6,9)
                            random_x_020 *= 500
                            var026 = random_x_020 / 5
                            var027 = 90
                            var028 = 20
                        #end
                    #end
                #end
            elif random_x_036 == qst.incriminate_loyal_commander and _player_has_homage == 0:
                if troop_slot_005 != 7 and troop_slot_005 != 6 and _players_kingdom == troop_faction_003 and character_lvl_002 >= 10 and faction_slot_eq(troop_faction_003,11,troop_id_001):
                    var080 = 1
                    var081 = 0
                    for var032 in range(0, var080):
                        if cf_faction_get_random_enemy_faction(troop_faction_003):
                            faction_id_043 = reg0
                            troop_slot_047 = faction_get_slot(faction_id_043,11)
                            var082 = 0
                            for trp_083 in range(trp.npc1, trp.knight_1_1_wife):
                                if troop_slot_eq(trp_083,2,2) and not troop_slot_ge(trp_083,8,0) and troop_slot_047 != trp_083:
                                    troop_faction_084 = store_faction_of_troop(trp_083)
                                    if faction_id_043 == troop_faction_084:
                                        var082 += 1
                                    #end
                                #end
                            #end
                        #end
                        if var082 > 0:
                            troop_id_044 = -1
                            random_x_085 = store_random_in_range(0,var082)
                            for trp_083 in range(trp.npc1, trp.knight_1_1_wife):
                                if troop_id_044 == -1 and troop_slot_eq(trp_083,2,2) and troop_slot_047 != trp_083:
                                    troop_faction_084 = store_faction_of_troop(trp_083)
                                    if faction_id_043 == troop_faction_084:
                                        random_x_085 -= 1
                                        if random_x_085 < 0:
                                            troop_id_044 = trp_083
                                        #end
                                    #end
                                #end
                            #end
                        #end
                        var048 = -1
                        get_troop_attached_party(troop_slot_047)
                        if is_between(reg0,p.town_1,p.castle_1) and party_slot_eq(reg0,7,troop_slot_047):
                            var048 = reg0
                            var080 = -1
                            var081 = 1
                        #end
                    #end
                    if var081 == 1:
                        _incriminate_quest_sacrificed_troop = 0
                        party_num_companions_stacks_051 = party_get_num_companion_stacks(p.main_party)
                        for stack_no_052 in range(1, party_num_companions_stacks_051):
                            if _incriminate_quest_sacrificed_troop == 0:
                                troop_id_053 = party_stack_get_troop_id(p.main_party,stack_no_052)
                                if not troop_is_hero(troop_id_053):
                                    character_lvl_086 = store_character_level(troop_id_053)
                                    if character_lvl_086 >= 25:
                                        _incriminate_quest_sacrificed_troop = troop_id_053
                                    #end
                                #end
                            #end
                        #end
                    #end
                    if _incriminate_quest_sacrificed_troop > 0:
                        troop_id_012 = troop_slot_047
                        faction_slot_016 = troop_id_044
                        random_party_013 = var048
                        party_faction_014 = faction_id_043
                        var023 = 1
                        var024 = 700
                        character_lvl_025 = 1000
                        quest_id_011 = random_x_036
                        var027 = 30
                        var028 = 180
                    #end
                #end
            elif random_x_036 == qst.capture_prisoners and _player_has_homage == 0:
                if _players_kingdom == troop_faction_003 and cf_faction_get_random_enemy_faction(troop_faction_003):
                    faction_id_043 = reg0
                    var087 = 45 + 1
                    random_x_088 = store_random_in_range(42,var087)
                    troop_slot_047 = faction_get_slot(faction_id_043,random_x_088)
                    if troop_slot_047 > 0:
                        random_x_020 = store_random_in_range(3,7)
                        troop_id_012 = troop_slot_047
                        party_faction_014 = faction_id_043
                        var023 = 1
                        character_lvl_025 = store_character_level(troop_slot_047)
                        character_lvl_025 += 5
                        character_lvl_025 *= character_lvl_025
                        character_lvl_025 /= 5
                        character_lvl_025 *= random_x_020
                        var024 = character_lvl_025
                        quest_id_011 = random_x_036
                        var027 = 90
                        var028 = 20
                    #end
                #end
            #end
        #end
    #end
    if quest_id_011 != -1:
        if party_is_active(random_party_013):
            party_faction_014 = store_faction_of_party(random_party_013)
        #end
        quest_set_slot(quest_id_011,2,troop_id_012)
        quest_set_slot(quest_id_011,1,random_party_013)
        quest_set_slot(quest_id_011,4,faction_slot_016)
        quest_set_slot(quest_id_011,3,party_faction_014)
        quest_set_slot(quest_id_011,15,troop_faction_015)
        quest_set_slot(quest_id_011,7,var017)
        quest_set_slot(quest_id_011,8,var018)
        quest_set_slot(quest_id_011,9,var019)
        quest_set_slot(quest_id_011,10,random_x_020)
        quest_set_slot(quest_id_011,20,var023)
        quest_set_slot(quest_id_011,21,var024)
        quest_set_slot(quest_id_011,22,character_lvl_025)
        quest_set_slot(quest_id_011,19,var026)
        quest_set_slot(quest_id_011,23,var027)
        quest_set_slot(quest_id_011,24,var028)
        quest_set_slot(quest_id_011,11,0)
        quest_set_slot(quest_id_011,6,troop_id_001)
        quest_set_slot(quest_id_011,12,party_attached_006)
        quest_set_slot(quest_id_011,13,random_x_021)
        quest_set_slot(quest_id_011,14,var022)
    #end
    reg0 = quest_id_011


def get_dynamic_quest(troop_id_001):
    var002 = -1
    var003 = -1
    var004 = -1
    var005 = -1
    if troop_id_001 == -1:
        pass
    elif not check_quest_active(qst.rescue_prisoner) and troop_slot_eq(troop_id_001,2,2) or troop_slot_eq(troop_id_001,2,6):
        var006 = -1
        for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
            troop_slot_008 = troop_get_slot(trp_007,8)
            if is_between(troop_slot_008,p.town_1,p.village_1):
                troop_faction_009 = store_faction_of_troop(troop_id_001)
                party_faction_010 = store_faction_of_party(troop_slot_008)
                faction_relation_011 = store_relation(troop_faction_009,party_faction_010)
                if faction_relation_011 < 0:
                    troop_get_family_relation_to_troop(troop_id_001,trp_007)
                    if reg0 >= 10:
                        var012 = 0
                        if cf_prisoner_offered_parole(trp_007):
                            var012 = 1
                        #end
                    #end
                #end
            #end
            if var012 == 0 and not party_slot_eq(troop_slot_008,7,trp.player):
                var006 = trp_007
                var013 = troop_slot_008
            #end
        #end
        if var006 > -1:
            var002 = qst.rescue_prisoner
            var003 = var006
            var004 = var013
        elif is_between(troop_id_001,trp.town_1_mayor,trp.village_1_elder):
            troop_faction_014 = store_faction_of_troop(troop_id_001)
            if not check_quest_active(qst.retaliate_for_border_incident) and quest_slot_eq(qst.retaliate_for_border_incident,25,0):
                var015 = 0
                for fac_016 in range(fac.kingdom_1, fac.kingdoms_end):
                    diplomacy_faction_get_diplomatic_status_with_faction(troop_faction_014,fac_016)
                    var017 = reg0
                    if var017 == -1:
                        var018 = reg1
                        if var018 >= 10:
                            for trp_019 in range(trp.npc1, trp.knight_1_1_wife):
                                troop_faction_020 = store_faction_of_troop(trp_019)
                                if troop_faction_020 == fac_016 and troop_slot_eq(trp_019,52,5):
                                    var015 = trp_019
                                    var021 = fac_016
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if is_between(var015,trp.npc1,trp.knight_1_1_wife):
            var002 = qst.retaliate_for_border_incident
            var003 = var015
            var005 = var021
        elif troop_slot_eq(troop_id_001,2,2) and not check_quest_active(qst.destroy_bandit_lair) and quest_slot_eq(qst.destroy_bandit_lair,25,0):
            var022 = -1
            for pt_023 in range(pt.steppe_bandits, pt.deserters):
                party_template_slot_024 = party_template_get_slot(pt_023,4)
                if party_template_slot_024 > p.spawn_points_end:
                    var025 = -1
                    var026 = 99999
                    for p_027 in range(p.town_1, p.castle_1):
                        distance_parties_028 = store_distance_to_party_from_party(party_template_slot_024,p_027)
                        if distance_parties_028 < var026:
                            var025 = p_027
                            var026 = distance_parties_028
                        #end
                    #end
                #end
            #end
            if party_slot_eq(var025,7,troop_id_001):
                var022 = party_template_slot_024
            #end
        #end
        if var022 > p.spawn_points_end:
            var002 = qst.destroy_bandit_lair
            var004 = var022
        elif is_between(troop_id_001,trp.town_1_mayor,trp.village_1_elder) and not check_quest_active(qst.track_down_bandits) and quest_slot_eq(qst.track_down_bandits,25,0):
            var029 = -1
            for p_030 in range(p.town_1, p.castle_1):
                if party_slot_eq(p_030,25,troop_id_001):
                    var029 = p_030
                #end
            #end
        #end
        if var029 > -1:
            merchant_road_info_to_s42(var029)
            var031 = reg0
            if party_is_active(var031) and var031 > 0:
                if _cheat_mode == 1:
                    print(gstr.traveller_attack_found)
                #end
            #end
        #end
        var002 = qst.track_down_bandits
        var004 = var031
    elif troop_slot_eq(troop_id_001,52,5):
        troop_faction_032 = store_faction_of_troop(troop_id_001)
        var033 = -1
        for trp_034 in range(trp.npc1, trp.knight_1_1_wife):
            if troop_slot_eq(trp_034,52,5):
                troop_faction_035 = store_faction_of_troop(trp_034)
                if troop_faction_035 == troop_faction_032:
                    var033 = trp_034
                #end
            #end
        #end
        if troop_id_001 == var033:
            var036 = -1
            var037 = -1
            for fac_038 in range(fac.player_supporters_faction, fac.kingdoms_end):
                if fac_038 != troop_faction_032 and faction_slot_eq(fac_038,21,0) and fac_038 != _players_kingdom:
                    faction_relation_039 = store_relation(fac_038,troop_faction_032)
                    slot_no_040 = troop_faction_032 + 130
                    slot_no_040 -= fac.player_supporters_faction
                    faction_slot_041 = faction_get_slot(fac_038,slot_no_040)
                    if faction_relation_039 >= 0 and faction_slot_041 <= 0:
                        random_x_042 = store_random_in_range(0,100)
                        if random_x_042 > var037:
                            var036 = fac_038
                            var037 = random_x_042
                        #end
                    #end
                #end
            #end
        #end
        if is_between(var036,fac.player_supporters_faction,fac.kingdoms_end):
            var002 = qst.cause_provocation
            var005 = var036
        #end
    #end
    reg0 = var002
    reg1 = var003
    reg2 = var004
    reg3 = var005


def get_political_quest(var001):
    quest_id_002 = -1
    var003 = -1
    var004 = -1
    var005 = 7
    if not check_quest_active(qst.denounce_lord):
        if _cheat_mode >= 1:
            reg4 = quest_get_slot(qst.denounce_lord,25)
            print("@{!}DEBUG -- Checking for denounce lord - eligible in {reg4} days")
        #end
        if not quest_slot_ge(qst.denounce_lord,25,1) and var001 != _g_player_minister and not troop_slot_eq(trp.player,30,var001) and not faction_slot_eq(_players_kingdom,11,trp.player) and not troop_slot_eq(_g_talk_troop,52,2) and not troop_slot_eq(_g_talk_troop,52,6):
            var006 = -1
            var007 = 1
            for trp_008 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_009 = store_faction_of_troop(trp_008)
                if troop_faction_009 == _players_kingdom and trp_008 != var001 and not faction_slot_eq(troop_faction_009,11,trp_008) and check_quest_active(qst.intrigue_against_lord) or not quest_slot_eq(qst.intrigue_against_lord,2,trp_008):
                    troop_get_relation_with_troop(trp_008,var001)
                    var010 = reg0
                    if var010 < var007:
                        s4 = str_store_troop_name(trp_008)
                        if _cheat_mode >= 1:
                            print("@{!}DEBUG -- Rival found in {s4}")
                        #end
                    #end
                #end
            #end
            if troop_slot_eq(_g_talk_troop,52,5):
                var011 = 15
            elif troop_slot_eq(_g_talk_troop,52,2):
                var011 = 10
            else:
                var011 = 5
            #end
            troop_get_relation_with_troop(trp_008,trp.player)
            var012 = reg0
            if var012 < var011:
                s4 = str_store_troop_name(trp_008)
                if _cheat_mode >= 1:
                    print("@{!}DEBUG -- {s4} is not close friend of player")
                #end
            #end
            var013 = 0
            for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_015 = store_faction_of_troop(trp_014)
                if troop_faction_015 == _players_kingdom:
                    troop_get_relation_with_troop(trp_008,trp_014)
                    if reg0 < 0:
                        var013 += 1
                    #end
                #end
            #end
            s4 = str_store_troop_name(trp_008)
            if _cheat_mode >= 1:
                reg3 = var013
                print("@{!}DEBUG -- {s4} has {reg3} rivals")
            #end
            if var013 >= 3 or _cheat_mode >= 1:
                var007 = var010
                var006 = trp_008
            #end
        #end
        if is_between(var006,trp.npc1,trp.knight_1_1_wife):
            quest_id_002 = qst.denounce_lord
            var003 = var006
        elif not check_quest_active(qst.intrigue_against_lord):
            if _cheat_mode == 1:
                reg4 = quest_get_slot(qst.intrigue_against_lord,25)
                print("@{!}DEBUG -- Checking for intrigue - eligible in {reg4} days")
            #end
        #end
        if not quest_slot_ge(qst.intrigue_against_lord,25,1) and var001 != _g_player_minister and not troop_slot_eq(trp.player,30,var001) and not faction_slot_eq(_players_kingdom,11,trp.player):
            if _cheat_mode >= 1:
                print("@{!}DEBUG -- Trying for intrigue against lord")
            #end
        #end
        var006 = -1
        var007 = 10
        for trp_008 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_009 = store_faction_of_troop(trp_008)
            if troop_faction_009 == _players_kingdom and trp_008 != var001 and not faction_slot_eq(troop_faction_009,11,trp_008) and check_quest_active(qst.denounce_lord) or not quest_slot_eq(qst.denounce_lord,2,trp_008):
                faction_slot_016 = faction_get_slot(_players_kingdom,11)
                troop_get_relation_with_troop(trp_008,faction_slot_016)
                var017 = reg0
                if var017 < var007:
                    s4 = str_store_troop_name(trp_008)
                    if _cheat_mode >= 1:
                        print("@{!}DEBUG -- {s4} has sufficiently low relation with liege")
                    #end
                #end
            #end
            troop_get_relation_with_troop(trp_008,var001)
            var010 = reg0
            if var010 < 0:
                s4 = str_store_troop_name(trp_008)
                if _cheat_mode >= 1:
                    print("@{!}DEBUG -- {s4} has sufficiently low relation with giver troop")
                #end
            #end
            troop_get_relation_with_troop(trp_008,trp.player)
            var012 = reg0
            if var012 < 0:
                s4 = str_store_troop_name(trp_008)
                if _cheat_mode >= 1:
                    print("@{!}DEBUG -- {s4} has sufficiently low relation with player")
                #end
            #end
            var007 = var017
            var006 = trp_008
        #end
        if is_between(var006,trp.npc1,trp.knight_1_1_wife):
            quest_id_002 = qst.intrigue_against_lord
            var003 = var006
        else:
            if _cheat_mode >= 1:
                reg4 = quest_get_slot(qst.resolve_dispute,25)
                print("@{!}DEBUG -- Checking for resolve dispute - eligible in {reg4} days")
            #end
        #end
        if not quest_slot_ge(qst.resolve_dispute,25,1) and troop_slot_eq(trp.player,30,_g_talk_troop) or _g_talk_troop == _g_player_minister:
            var006 = -1
            var018 = -1
            var019 = 20
            for trp_020 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_021 = store_faction_of_troop(trp_020)
                if troop_faction_021 == _players_kingdom and trp_020 != _g_talk_troop:
                    for trp_022 in range(trp.npc1, trp.knight_1_1_wife):
                        troop_faction_023 = store_faction_of_troop(trp_022)
                        if troop_faction_023 == _players_kingdom and trp_020 != trp_022 and trp_022 != _g_talk_troop:
                            troop_get_relation_with_troop(trp_020,trp_022)
                            var024 = reg0
                            if var024 < -5:
                                troop_get_relation_with_troop(trp_020,trp.player)
                                var025 = reg0
                                troop_get_relation_with_troop(trp_022,trp.player)
                                var026 = reg0
                                if var025 > 0 and var026 > 0:
                                    var027 = var025 * var026
                                    if var027 > var019:
                                        var019 = var027
                                        var006 = trp_020
                                        var018 = trp_022
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if is_between(var006,trp.npc1,trp.knight_1_1_wife):
            quest_id_002 = qst.resolve_dispute
            var003 = var006
            var004 = var018
        else:
            if _cheat_mode >= 1:
                reg4 = quest_get_slot(qst.offer_gift,25)
                print("@{!}DEBUG -- Checking for offer gift - eligible in {reg4} days")
            #end
        #end
        if not quest_slot_ge(qst.offer_gift,25,1):
            var028 = -1
            var007 = 5
            for trp_029 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_030 = store_faction_of_troop(trp_029)
                if troop_faction_030 == _players_kingdom and trp_029 != var001 and not faction_slot_eq(troop_faction_030,11,trp_029):
                    troop_get_family_relation_to_troop(var001,trp_029)
                    var031 = reg0
                    if var031 >= var007:
                        var032 = 0 - var031
                        troop_get_relation_with_troop(trp.player,trp_029)
                        var012 = reg0
                        if is_between(var012,var032,0):
                            var007 = var031
                            var028 = trp_029
                        #end
                    #end
                #end
            #end
        #end
        if is_between(var028,trp.npc1,trp.knight_1_1_wife):
            quest_id_002 = qst.offer_gift
            var003 = var028
        #end
    #end
    if quest_id_002 > -1:
        quest_set_slot(quest_id_002,2,var003)
        quest_set_slot(quest_id_002,2,var004)
        quest_set_slot(quest_id_002,6,var001)
        quest_set_slot(quest_id_002,24,var005)
    #end
    reg0 = quest_id_002
    reg1 = var003
    reg2 = var004


def npc_find_quest_for_player_to_s11(var001):
    var002 = -1
    for trp_003 in range(trp.npc1, trp.village_1_elder):
        if var002 == -1 and not troop_slot_eq(trp.player,30,trp_003) and trp_003 > _g_troop_list_no:
            _g_troop_list_no = trp_003
            if troop_slot_eq(trp_003,2,2) or is_between(trp_003,trp.town_1_mayor,trp.village_1_elder) and not troop_slot_ge(trp_003,8,p.town_1):
                if is_between(trp_003,trp.town_1_mayor,trp.village_1_elder):
                    party_faction_004 = -1
                    for p_005 in range(p.town_1, p.castle_1):
                        if party_slot_eq(p_005,25,trp_003):
                            party_faction_004 = store_faction_of_party(p_005)
                        #end
                    #end
                #end
            #end
        else:
            party_faction_004 = store_faction_of_troop(trp_003)
        #end
        if var001 == party_faction_004:
            get_dynamic_quest(trp_003)
            if reg0 > -1:
                var002 = trp_003
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(var002)
                    print(gstr.test_diagnostic_quest_found_for_s4)
                #end
            #end
        #end
    #end
    reg0 = var002


def cf_get_random_enemy_center_within_range(var001, var002):
    var003 = 0
    party_faction_004 = store_faction_of_party(var001)
    for p_005 in range(p.town_1, p.salt_mine):
        party_faction_006 = store_faction_of_party(p_005)
        faction_relation_007 = store_relation(party_faction_004,party_faction_006)
        if faction_relation_007 < 0:
            distance_parties_008 = store_distance_to_party_from_party(var001,p_005)
            if distance_parties_008 <= var002:
                var003 += 1
            #end
        #end
    #end
    if var003 > 0:
        random_x_009 = store_random_in_range(0,var003)
        var010 = p.salt_mine
        for p_005 in range(p.town_1, var010):
            party_faction_006 = store_faction_of_party(p_005)
            faction_relation_007 = store_relation(party_faction_004,party_faction_006)
            if faction_relation_007 < 0:
                distance_parties_008 = store_distance_to_party_from_party(var001,p_005)
                if distance_parties_008 <= var002:
                    random_x_009 -= 1
                    if random_x_009 < 0:
                        var011 = p_005
                        var010 = 0
                    #end
                #end
            #end
        #end
    #end
    reg0 = var011


def cf_faction_get_random_enemy_faction(var001):
    var002 = -1
    var003 = 0
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if faction_slot_eq(fac_004,21,0):
            faction_relation_005 = store_relation(var001,fac_004)
            if faction_relation_005 <= -1:
                var003 += 1
            #end
        #end
    #end
    random_x_006 = store_random_in_range(0,var003)
    var003 = 0
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if var002 == -1 and faction_slot_eq(fac_004,21,0):
            faction_relation_005 = store_relation(var001,fac_004)
            if faction_relation_005 <= -1:
                var003 += 1
                if var003 > random_x_006:
                    var002 = fac_004
                #end
            #end
        #end
    #end
    if var002 != -1:
        reg0 = var002


def cf_faction_get_random_friendly_faction(var001):
    var002 = -1
    var003 = 0
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if faction_slot_eq(fac_004,21,0) and fac_004 != var001:
            faction_relation_005 = store_relation(var001,fac_004)
            if faction_relation_005 >= 0:
                var003 += 1
            #end
        #end
    #end
    random_x_006 = store_random_in_range(0,var003)
    var003 = 0
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if var002 == -1 and faction_slot_eq(fac_004,21,0) and fac_004 != var001:
            faction_relation_005 = store_relation(var001,fac_004)
            if faction_relation_005 >= 0:
                var003 += 1
                if var003 > random_x_006:
                    var002 = fac_004
                #end
            #end
        #end
    #end
    if var002 != -1:
        reg0 = var002


def cf_troop_get_random_enemy_troop_with_occupation(var001, var002):
    var003 = -1
    var004 = 0
    for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_005,2,var002):
            troop_get_relation_with_troop(var001,trp_005)
            if reg0 < -10:
                var004 += 1
            #end
        #end
    #end
    if var004 > 0:
        random_x_006 = store_random_in_range(0,var004)
        var004 = 0
        for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
            if troop_slot_eq(trp_005,2,var002):
                troop_get_relation_with_troop(var001,trp_005)
                if reg0 < -10:
                    var004 += 1
                    if random_x_006 == var004:
                        var003 = trp_005
                    #end
                #end
            #end
        #end
    #end
    if var003 != -1:
        reg0 = var003


def cf_get_random_lord_in_a_center_with_faction(var001):
    var002 = -1
    var003 = 0
    for trp_004 in range(trp.npc1, trp.heroes_end):
        troop_faction_005 = store_faction_of_troop(trp_004)
        if var001 == troop_faction_005 and troop_slot_eq(trp_004,2,2) and not troop_slot_ge(trp_004,8,0):
            troop_slot_006 = troop_get_slot(trp_004,10)
            if troop_slot_006 >= 0:
                party_attached_007 = party_get_attached_to(troop_slot_006)
                if is_between(party_attached_007,p.town_1,p.salt_mine):
                    var003 += 1
                #end
            #end
        #end
    #end
    random_x_008 = store_random_in_range(0,var003)
    var003 = 0
    for trp_004 in range(trp.npc1, trp.heroes_end):
        if var002 == -1:
            troop_faction_005 = store_faction_of_troop(trp_004)
            if var001 == troop_faction_005 and troop_slot_eq(trp_004,2,2) and not troop_slot_ge(trp_004,8,0):
                troop_slot_006 = troop_get_slot(trp_004,10)
                if troop_slot_006 >= 0:
                    party_attached_007 = party_get_attached_to(troop_slot_006)
                    if is_between(party_attached_007,p.town_1,p.salt_mine):
                        var003 += 1
                        if random_x_008 < var003:
                            var002 = trp_004
                        #end
                    #end
                #end
            #end
        #end
    #end
    if var002 != -1:
        reg0 = var002


def cf_get_random_lord_except_king_with_faction(var001):
    var002 = -1
    var003 = 0
    for trp_004 in range(trp.npc1, trp.heroes_end):
        troop_faction_005 = store_faction_of_troop(trp_004)
        if var001 == troop_faction_005 and not faction_slot_eq(var001,11,trp_004) and troop_slot_eq(trp_004,2,2) and not troop_slot_ge(trp_004,8,0):
            troop_slot_006 = troop_get_slot(trp_004,10)
            if troop_slot_006 >= 0:
                var003 += 1
            #end
        #end
    #end
    random_x_007 = store_random_in_range(0,var003)
    var003 = 0
    for trp_004 in range(trp.npc1, trp.heroes_end):
        if var002 == -1:
            troop_faction_005 = store_faction_of_troop(trp_004)
            if var001 == troop_faction_005 and not faction_slot_eq(var001,11,trp_004) and troop_slot_eq(trp_004,2,2) and not troop_slot_ge(trp_004,8,0):
                troop_slot_006 = troop_get_slot(trp_004,10)
                if troop_slot_006 >= 0:
                    var003 += 1
                    if random_x_007 < var003:
                        var002 = trp_004
                    #end
                #end
            #end
        #end
    #end
    if var002 != -1:
        reg0 = var002


def cf_get_random_lord_from_another_faction_in_a_center(var001):
    var002 = -1
    var003 = 0
    for trp_004 in range(trp.npc1, trp.heroes_end):
        troop_faction_005 = store_faction_of_troop(trp_004)
        if troop_faction_005 != var001:
            faction_relation_006 = store_relation(troop_faction_005,fac.player_supporters_faction)
            faction_relation_007 = store_relation(troop_faction_005,var001)
            if faction_relation_007 < 0 and faction_relation_006 >= 0 and troop_slot_eq(trp_004,2,2) and not troop_slot_ge(trp_004,8,0):
                troop_slot_008 = troop_get_slot(trp_004,10)
                if troop_slot_008 >= 0:
                    party_attached_009 = party_get_attached_to(troop_slot_008)
                    if is_between(party_attached_009,p.town_1,p.salt_mine):
                        var003 += 1
                    #end
                #end
            #end
        #end
    #end
    random_x_010 = store_random_in_range(0,var003)
    var003 = 0
    for trp_004 in range(trp.npc1, trp.heroes_end):
        if var002 == -1:
            troop_faction_005 = store_faction_of_troop(trp_004)
            if troop_faction_005 != var001:
                faction_relation_006 = store_relation(troop_faction_005,fac.player_supporters_faction)
                faction_relation_007 = store_relation(troop_faction_005,var001)
                if faction_relation_007 < 0 and faction_relation_006 >= 0 and troop_slot_eq(trp_004,2,2) and not troop_slot_ge(trp_004,8,0):
                    troop_slot_008 = troop_get_slot(trp_004,10)
                    if troop_slot_008 >= 0:
                        party_attached_009 = party_get_attached_to(troop_slot_008)
                        if is_between(party_attached_009,p.town_1,p.salt_mine):
                            var003 += 1
                            if random_x_010 < var003:
                                var002 = trp_004
                            #end
                        #end
                    #end
                #end
            #end
        #end
    #end
    if var002 != -1:
        reg0 = var002


def get_closest_walled_center(var001):
    var002 = 9999999
    reg0 = -1
    for p_003 in range(p.town_1, p.village_1):
        distance_parties_004 = store_distance_to_party_from_party(var001,p_003)
        if distance_parties_004 < var002:
            var002 = distance_parties_004
            reg0 = p_003
        #end
    #end


def get_closest_center(var001):
    var002 = 9999999
    reg0 = -1
    for p_003 in range(p.town_1, p.salt_mine):
        distance_parties_004 = store_distance_to_party_from_party(var001,p_003)
        if distance_parties_004 < var002:
            var002 = distance_parties_004
            reg0 = p_003
        #end
    #end


def get_closest_center_of_faction(var001, var002):
    var003 = 99999
    var004 = -1
    for p_005 in range(p.town_1, p.salt_mine):
        party_faction_006 = store_faction_of_party(p_005)
        if party_faction_006 == var002:
            distance_parties_007 = store_distance_to_party_from_party(var001,p_005)
            if distance_parties_007 < var003:
                var003 = distance_parties_007
                var004 = p_005
            #end
        #end
    #end
    reg0 = var004


def get_closest_walled_center_of_faction(var001, var002):
    var003 = 99999
    var004 = -1
    for p_005 in range(p.town_1, p.village_1):
        party_faction_006 = store_faction_of_party(p_005)
        if party_faction_006 == var002:
            distance_parties_007 = store_distance_to_party_from_party(var001,p_005)
            if distance_parties_007 < var003:
                var003 = distance_parties_007
                var004 = p_005
            #end
        #end
    #end
    reg0 = var004


def let_nearby_parties_join_current_battle(var001, var002):
    character_lvl_003 = store_character_level(trp.player)
    for cur_party in __all_parties__:
        if party_is_active(cur_party):
            party_battle_opponent_005 = party_get_battle_opponent(cur_party)
            if party_battle_opponent_005 < 0:
                party_attached_006 = party_get_attached_to(cur_party)
                if party_attached_006 < 0:
                    party_ai_behavior_007 = get_party_ai_behavior(cur_party)
                    if party_ai_behavior_007 != 8:
                        troop_id_008 = party_stack_get_troop_id(cur_party,0)
                        if not is_between(troop_id_008,trp.looter,trp.black_khergit_horseman):
                            var009 = 5
                            if is_currently_night():
                                var009 = 3
                            #end
                        #end
                    #end
                #end
            #end
        else:
            var009 = 3
            if is_currently_night():
                var009 = 2
            #end
        #end
        if check_quest_active(qst.track_down_bandits) or not quest_slot_eq(qst.track_down_bandits,8,cur_party) and check_quest_active(qst.troublesome_bandits) or not quest_slot_eq(qst.troublesome_bandits,8,cur_party):
            distance_parties_010 = store_distance_to_party_from_party(cur_party,p.main_party)
            if distance_parties_010 < var009:
                party_faction_011 = store_faction_of_party(cur_party)
                party_faction_012 = store_faction_of_party(_g_enemy_party)
                if party_faction_011 == fac.player_supporters_faction:
                    faction_relation_013 = 100
                else:
                    faction_relation_013 = store_relation(party_faction_011,fac.player_supporters_faction)
                #end
            #end
        #end
        if party_faction_011 == party_faction_012:
            faction_relation_014 = 100
        else:
            faction_relation_014 = store_relation(party_faction_011,party_faction_012)
        #end
        var015 = 1
        if _g_enemy_party != _g_encountered_party:
            var015 = 2
        #end
        if var001 == 0 and faction_relation_013 < 0 and faction_relation_014 > 0:
            party_slot_016 = party_get_slot(cur_party,0) # Johandros added 0
            var017 = 0
            if True:
                troop_id_008 = party_stack_get_troop_id(cur_party,0)
                if is_between(troop_id_008,trp.looter,trp.black_khergit_horseman) and character_lvl_003 > 6:
                    var017 = 1
                #end
            #end
            if party_slot_016 == 13 or var017 == 1:
                party_ai_behavior_018 = get_party_ai_behavior(cur_party)
                if party_ai_behavior_018 != 5:
                    party_quick_attach_to_current_battle(cur_party,var015)
                    s1 = str_store_party_name(cur_party)
                    print(gstr.s1_joined_battle_enemy)
                else:
                    if party_slot_eq(cur_party,4,11) and party_slot_eq(cur_party,5,trp.player):
                        var019 = 1
                    else:
                        var019 = 0
                    #end
                #end
            #end
            if var002 == 0 or var019 == 1 and faction_relation_013 > 0 and faction_relation_014 < 0:
                var020 = 0
                if party_slot_eq(cur_party,4,11) and party_slot_eq(cur_party,5,p.main_party):
                    var020 = 1
                #end
            #end
            var021 = 1
            if var001 == 1 and var020 == 0:
                var021 = 0
                if party_faction_011 == _players_kingdom and faction_slot_eq(_players_kingdom,8,trp.player):
                    var021 = 1
                #end
            #end
            if var021 == 1:
                party_slot_016 = party_get_slot(cur_party,0) # Johandros added 0
                if party_slot_016 == 13:
                    troop_id_022 = party_stack_get_troop_id(cur_party,0)
                    troop_get_player_relation(troop_id_022)
                    var023 = reg0
                    var024 = 0
                    if faction_slot_eq(_players_kingdom,8,trp.player) and var020 == 1:
                        var024 = 1
                    #end
                #end
            #end
            if var023 >= 0 or var024 == 1:
                party_quick_attach_to_current_battle(cur_party,0)
                s1 = str_store_party_name(cur_party)
                print(gstr.s1_joined_battle_friend)
            #end
        #end
    #end


def party_wound_all_members_aux(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        if not troop_is_hero(troop_id_004):
            party_stack_size_005 = party_stack_get_size(party_id_001,stack_no_003)
            party_wound_members(party_id_001,troop_id_004,party_stack_size_005)
        else:
            troop_set_health(troop_id_004,0)
        #end
    #end
    party_num_attached_parties_006 = party_get_num_attached_parties(party_id_001)
    for var007 in range(0, party_num_attached_parties_006):
        party_attached_party_with_rank_008 = party_get_attached_party_with_rank(party_id_001,var007)
        party_wound_all_members_aux(party_attached_party_with_rank_008)
    #end


def party_wound_all_members(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        if not troop_is_hero(troop_id_004):
            party_stack_size_005 = party_stack_get_size(party_id_001,stack_no_003)
            party_wound_members(party_id_001,troop_id_004,party_stack_size_005)
        else:
            troop_set_health(troop_id_004,0)
        #end
    #end
    party_num_attached_parties_006 = party_get_num_attached_parties(party_id_001)
    for var007 in range(0, party_num_attached_parties_006):
        party_attached_party_with_rank_008 = party_get_attached_party_with_rank(party_id_001,var007)
        party_wound_all_members_aux(party_attached_party_with_rank_008)
    #end


def calculate_battle_advantage():
    party_count_fit_for_battle(p.collective_friends)
    var001 = reg0
    party_skill_lvl_002 = party_get_skill_level(p.main_party,15)
    party_skill_lvl_003 = party_get_skill_level(p.collective_friends,15)
    val_max(party_skill_lvl_002,party_skill_lvl_003)
    party_count_fit_for_battle(p.collective_enemy)
    var004 = reg0
    party_skill_lvl_005 = party_get_skill_level(p.collective_enemy,15)
    var001 += 1
    var004 += 1
    if var001 >= var004:
        var001 *= 100
        var006 = var001 / var004
        var007 = var006 - 100
    else:
        var004 *= 100
        var006 = var004 / var001
        var007 = 100 - var006
    #end
    var007 *= 2
    party_skill_lvl_002 *= 30
    party_skill_lvl_005 *= 30
    var007 += party_skill_lvl_002
    var007 -= party_skill_lvl_005
    var007 /= 100
    reg0 = var007
    print("@Battle Advantage = {reg0}.",4294967295)


def cf_check_enemies_nearby():
    agent_no_001 = get_player_agent_no()
    if agent_is_alive(agent_no_001):
        pos1 = agent_get_position(agent_no_001)
        var002 = 0
        set_fixed_point_multiplier(100)
        for cur_agent in __all_agents__:
            if cur_agent != agent_no_001 and agent_is_alive(cur_agent) and agent_is_human(cur_agent) and not agent_is_ally(cur_agent):
                pos2 = agent_get_position(cur_agent)
                distance_004 = get_distance_between_positions(1,2)
                if distance_004 <= 1500:
                    var002 = 1
                #end
            #end
        #end
    #end


def get_heroes_attached_to_center_aux(party_id_001, var002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_001)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(party_id_001,stack_no_004)
        if troop_is_hero(troop_id_005):
            party_add_members(var002,troop_id_005,1)
        #end
    #end
    party_num_attached_parties_006 = party_get_num_attached_parties(party_id_001)
    for var007 in range(0, party_num_attached_parties_006):
        party_attached_party_with_rank_008 = party_get_attached_party_with_rank(party_id_001,var007)
        get_heroes_attached_to_center_aux(party_attached_party_with_rank_008,var002)
    #end


def get_heroes_attached_to_center(party_id_001, var002):
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_001)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(party_id_001,stack_no_004)
        if troop_is_hero(troop_id_005):
            party_add_members(var002,troop_id_005,1)
        #end
    #end
    party_num_attached_parties_006 = party_get_num_attached_parties(party_id_001)
    for var007 in range(0, party_num_attached_parties_006):
        party_attached_party_with_rank_008 = party_get_attached_party_with_rank(party_id_001,var007)
        get_heroes_attached_to_center_aux(party_attached_party_with_rank_008,var002)
    #end


def get_heroes_attached_to_center_as_prisoner_aux(var001, var002):
    party_num_prisoners_stacks_003 = party_get_num_prisoner_stacks(var001)
    for var004 in range(0, party_num_prisoners_stacks_003):
        party_prisoner_troop_id_005 = party_prisoner_stack_get_troop_id(var001,var004)
        if troop_is_hero(party_prisoner_troop_id_005):
            party_add_members(var002,party_prisoner_troop_id_005,1)
        #end
    #end
    party_num_attached_parties_006 = party_get_num_attached_parties(var001)
    for var007 in range(0, party_num_attached_parties_006):
        party_attached_party_with_rank_008 = party_get_attached_party_with_rank(var001,var007)
        get_heroes_attached_to_center_as_prisoner_aux(party_attached_party_with_rank_008,var002)
    #end


def get_heroes_attached_to_center_as_prisoner(var001, var002):
    party_num_prisoners_stacks_003 = party_get_num_prisoner_stacks(var001)
    for var004 in range(0, party_num_prisoners_stacks_003):
        party_prisoner_troop_id_005 = party_prisoner_stack_get_troop_id(var001,var004)
        if troop_is_hero(party_prisoner_troop_id_005):
            party_add_members(var002,party_prisoner_troop_id_005,1)
        #end
    #end
    party_num_attached_parties_006 = party_get_num_attached_parties(var001)
    for var007 in range(0, party_num_attached_parties_006):
        party_attached_party_with_rank_008 = party_get_attached_party_with_rank(var001,var007)
        get_heroes_attached_to_center_as_prisoner_aux(party_attached_party_with_rank_008,var002)
    #end


def give_center_to_faction(var001, var002):
    if var002 == fac.player_supporters_faction:
        faction_slot_003 = faction_get_slot(fac.player_supporters_faction,11)
        if faction_slot_003 == trp.player:
            if is_between(var001,p.town_1,p.village_1):
                var004 = 1
            else:
                var004 = 0
            #end
        #end
        for p_005 in range(p.town_1, p.village_1):
            party_faction_006 = store_faction_of_party(p_005)
            if party_faction_006 == fac.player_supporters_faction:
                var004 += 1
            #end
        #end
        if var004 >= 10:
            unlock_achievement(55)
        #end
    #end
    if check_quest_active(qst.join_siege_with_army) and quest_slot_eq(qst.join_siege_with_army,1,var001):
        abort_quest(qst.join_siege_with_army,0)
        faction_slot_007 = faction_get_slot(_players_kingdom,8)
        s9 = str_store_troop_name_link(faction_slot_007)
        setup_quest_text(qst.follow_army)
        s2 = str_store_string("@{s9} wants you to resume following his army until further notice.")
        start_quest(qst.follow_army,faction_slot_007)
        _g_player_follow_army_warnings = 0
    #end
    give_center_to_faction_aux(var001,var002)
    update_village_market_towns()
    for fac_008 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_recalculate_strength(fac_008)
    #end
    _g_recalculate_ais = 1
    if var002 == fac.player_supporters_faction and faction_slot_eq(fac.player_supporters_faction,21,2):
        activate_player_faction(trp.player)
    #end


def give_center_to_faction_aux(party_id_001, var002):
    party_faction_003 = store_faction_of_party(party_id_001)
    party_set_faction(party_id_001,var002)
    if party_slot_eq(party_id_001,0,4):
        party_slot_004 = party_get_slot(party_id_001,122)
        if party_slot_004 > 0 and party_is_active(party_slot_004):
            party_set_faction(party_slot_004,var002)
        #end
    #end
    if var002 != party_faction_003:
        party_set_slot(party_id_001,62,party_faction_003)
        party_slot_005 = party_get_slot(party_id_001,7)
        party_set_slot(party_id_001,7,-1)
        party_set_banner_icon(party_id_001,0)
        update_faction_notes(party_faction_003)
    #end
    update_faction_notes(var002)
    update_center_notes(party_id_001)
    if party_slot_005 >= 0 and var002 != fac.player_supporters_faction:
        update_troop_notes(party_slot_005)
    #end
    for p_006 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_006,120,party_id_001):
            give_center_to_faction_aux(p_006,var002)
        #end
    #end


def change_troop_faction(troop_id_001, faction_id_002):
    faction_id_002_list1 = [
    fac.player_supporters_faction,
    _players_kingdom,
    ]
    if is_between(faction_id_002,fac.player_supporters_faction,fac.kingdoms_end) and not faction_slot_eq(faction_id_002,21,0):
        faction_set_slot(faction_id_002,21,0)
    #end
    troop_faction_003 = store_faction_of_troop(troop_id_001)
    if faction_slot_eq(troop_faction_003,8,troop_id_001):
        check_and_finish_active_army_quests_for_faction(troop_faction_003)
        if faction_slot_eq(troop_faction_003,64,0):
            faction_set_slot(troop_faction_003,64,1)
            cur_hours_004 = store_current_hours()
            val_max(cur_hours_004,0)
            faction_set_slot(troop_faction_003,65,cur_hours_004)
            for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_006 = store_faction_of_troop(trp_005)
                if troop_faction_006 == troop_faction_003:
                    troop_set_slot(trp_005,154,-1)
                #end
            #end
            if _players_kingdom == troop_faction_003:
                troop_set_slot(trp.player,154,-1)
            #end
        #end
        if True:
            troop_slot_007 = troop_get_slot(troop_id_001,10)
            if party_is_active(troop_slot_007):
                party_set_marshall(troop_slot_007,0)
            #end
        #end
        faction_set_slot(troop_faction_003,8,-1)
    #end
    troop_set_slot(troop_id_001,154,-1)
    for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_005,154,troop_id_001):
            troop_set_slot(trp_005,154,-1)
        #end
    #end
    if _cheat_mode >= 1:
        s4 = str_store_troop_name(troop_id_001)
        print("@{!}DEBUG - {s4} faction changed in normal faction change")
    #end
    troop_set_faction(troop_id_001,faction_id_002)
    troop_set_slot(troop_id_001,50,0)
    troop_set_slot(troop_id_001,53,0)
    troop_set_slot(troop_id_001,54,0)
    troop_set_slot(troop_id_001,47,0)
    troop_set_title_according_to_faction(troop_id_001,faction_id_002)
    if faction_id_002 in faction_id_002_list1:
        check_concilio_calradi_achievement()
    #end
    for p_008 in range(p.town_1, p.village_1):
        if party_slot_eq(p_008,7,troop_id_001):
            party_set_faction(p_008,faction_id_002)
            for p_009 in range(p.village_1, p.salt_mine):
                if party_slot_eq(p_009,120,p_008):
                    party_set_faction(p_009,faction_id_002)
                    party_slot_010 = party_get_slot(p_009,122)
                    if party_slot_010 > 0 and party_is_active(party_slot_010):
                        party_set_faction(party_slot_010,faction_id_002)
                    #end
                #end
            #end
            if True:
                party_slot_011 = party_get_slot(p_009,7)
                if party_slot_011 != troop_id_001:
                    party_set_slot(p_009,7,-1)
                #end
            #end
        #end
    #end
    for trp_012 in range(trp.knight_1_1_wife, trp.heroes_end):
        get_kingdom_lady_social_determinants(trp_012)
        var013 = reg0
        var014 = reg1
        if var013 == troop_id_001:
            if _cheat_mode >= 1:
                s4 = str_store_troop_name(trp_012)
                print("@{!}DEBUG - {s4} faction changed by guardian moving")
            #end
        #end
        troop_set_faction(trp_012,faction_id_002)
        if troop_slot_eq(trp_012,8,-1):
            troop_set_slot(trp_012,12,var014)
        #end
    #end
    for p_009 in range(p.village_1, p.salt_mine):
        if party_slot_eq(p_009,7,troop_id_001):
            party_faction_015 = store_faction_of_party(p_009)
            if party_faction_015 != faction_id_002:
                party_set_slot(p_009,7,-1)
            #end
        #end
    #end
    if True:
        troop_slot_016 = troop_get_slot(troop_id_001,10)
        if troop_slot_016 > 0:
            party_set_faction(troop_slot_016,faction_id_002)
            party_num_prisoners_stacks_017 = party_get_num_prisoner_stacks(troop_slot_016)
            for var018 in range(0, party_num_prisoners_stacks_017):
                party_prisoner_troop_id_019 = party_prisoner_stack_get_troop_id(troop_slot_016,var018)
                troop_faction_020 = store_faction_of_troop(party_prisoner_troop_id_019)
                if troop_is_hero(party_prisoner_troop_id_019) and troop_faction_020 == faction_id_002:
                    remove_troop_from_prison(party_prisoner_troop_id_019)
                    party_remove_prisoners(troop_slot_016,party_prisoner_troop_id_019,1)
                #end
            #end
        #end
    #end
    for var021 in range(0, qst.quests_end):
        if check_quest_active(var021) and quest_slot_eq(var021,6,troop_id_001):
            s4 = str_store_troop_name(troop_id_001)
            if _cheat_mode == 1:
                print(gstr.s4_changing_sides_aborts_quest)
            #end
        #end
        abort_quest(var021,0)
    #end
    for trp_022 in range(trp.npc1, trp.knight_1_1_wife):
        troop_slot_023 = troop_get_slot(trp_022,10)
        if party_is_active(troop_slot_023):
            party_attached_024 = party_get_attached_to(troop_slot_023)
            if is_between(party_attached_024,p.town_1,p.village_1):
                party_faction_025 = store_faction_of_party(troop_slot_023)
                party_faction_026 = store_faction_of_party(party_attached_024)
                if party_faction_025 != party_faction_026:
                    party_detach(troop_slot_023)
                #end
            #end
        #end
    #end
    faction_slot_027 = faction_get_slot(faction_id_002,11)
    if faction_slot_027 == trp.player and troop_id_001 != _g_talk_troop:
        troop_set_slot(troop_id_001,2,0)
    elif is_between(faction_slot_027,trp.npc1,trp.knight_1_1_wife) and is_between(troop_id_001,trp.npc1,trp.knight_1_1_wife):
        troop_change_relation_with_troop(faction_slot_027,troop_id_001,5)
        _total_indictment_changes += 5
    #end
    if troop_slot_ge(troop_id_001,30,0):
        pass
    elif is_between(troop_id_001,trp.npc1,trp.knight_1_1_wife):
        for slot_no_028 in range(35, 38):
            troop_slot_029 = troop_get_slot(troop_id_001,slot_no_028)
            courtship_event_lady_break_relation_with_suitor(troop_slot_029,troop_id_001)
        #end
        assign_troop_love_interests(troop_id_001)
    elif is_between(troop_id_001,trp.knight_1_1_wife,trp.heroes_end):
        for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
            for slot_no_028 in range(35, 38):
                if troop_slot_eq(trp_005,slot_no_028,troop_id_001):
                    courtship_event_lady_break_relation_with_suitor(troop_id_001,trp_005)
                #end
            #end
        #end
    #end
    troop_slot_030 = troop_get_slot(troop_id_001,10)
    for p_008 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_008,0,4):
            party_slot_031 = party_get_slot(p_008,34)
            if party_slot_031 == troop_slot_030:
                party_set_slot(p_008,34,-1)
                if party_slot_eq(p_008,35,1):
                    party_set_slot(p_008,35,0)
                    party_set_extra_text(p_008,gstr.empty_string)
                #end
            #end
        #end
    else:
        party_slot_032 = party_get_slot(p_008,54)
        if party_slot_032 == troop_slot_030:
            party_set_slot(p_008,54,-1)
            if party_slot_eq(p_008,35,5):
                party_set_slot(p_008,35,0)
                party_set_extra_text(p_008,gstr.empty_string)
            #end
        #end
    #end
    update_all_notes()
    update_village_market_towns()
    _g_recalculate_ais = 1


def troop_set_title_according_to_faction(troop_id_001, var002):
    if is_between(var002,fac.player_supporters_faction,fac.kingdoms_end):
        s0 = str_store_troop_name_plural(troop_id_001)
        troop_type_003 = troop_get_type(troop_id_001)
        var004 = var002 - fac.player_supporters_faction
        if troop_type_003 == 0:
            var004 += gstr.faction_title_male_player
        else:
            var004 += gstr.faction_title_female_player
        #end
        s1 = str_store_string(var004)
        troop_set_name(troop_id_001,1)
        troop_slot_005 = troop_get_slot(troop_id_001,10)
        if troop_slot_005 > 0:
            s5 = str_store_troop_name(troop_id_001)
            party_set_name(troop_slot_005,gstr.s5_s_party)
        #end
    #end


def give_center_to_lord(party_id_001, troop_id_002, var003):
    if _cheat_mode == 1 and troop_id_002 >= 0:
        s4 = str_store_party_name(party_id_001)
        s5 = str_store_troop_name(troop_id_002)
        print("@{!}DEBUG -- {s4} awarded to {s5}")
    #end
    if troop_id_002 == trp.player:
        unlock_achievement(50)
        var004 = 1
        for p_005 in range(p.town_1, p.salt_mine):
            if p_005 != party_id_001 and party_slot_eq(p_005,7,trp.player):
                var004 += 1
            #end
        #end
        if var004 >= 5:
            unlock_achievement(51)
        #end
    #end
    party_slot_006 = party_get_slot(party_id_001,7)
    if troop_id_002 == -1:
        troop_faction_007 = fac.player_supporters_faction
        party_set_banner_icon(party_id_001,0)
    elif troop_id_002 == trp.player:
        troop_faction_007 = _players_kingdom
    else:
        troop_faction_007 = store_faction_of_troop(troop_id_002)
    #end
    faction_slot_008 = faction_get_slot(troop_faction_007,11)
    if faction_slot_008 == trp.player:
        if True:
            troop_type_009 = troop_get_type(trp.player)
            if troop_type_009 == 1:
                unlock_achievement(77)
            #end
        #end
    #end
    if faction_slot_008 == party_slot_006:
        add_log_entry(22,faction_slot_008,party_id_001,troop_id_002,troop_faction_007)
        troop_set_slot(troop_id_002,47,0)
    #end
    if troop_id_002 == -1:
        party_set_faction(party_id_001,_players_kingdom)
    elif troop_id_002 == trp.player and _players_kingdom > 0:
        party_set_faction(party_id_001,_players_kingdom)
    elif troop_id_002 == trp.player and not is_between(_players_kingdom,fac.player_supporters_faction,fac.kingdoms_end):
        party_set_faction(party_id_001,fac.player_supporters_faction)
    else:
        party_set_faction(party_id_001,troop_faction_007)
    #end
    party_set_slot(party_id_001,7,troop_id_002)
    if party_slot_eq(party_id_001,0,4):
        party_slot_010 = party_get_slot(party_id_001,122)
        if party_slot_010 > 0 and party_is_active(party_slot_010):
            party_faction_011 = store_faction_of_party(party_id_001)
            party_set_faction(party_slot_010,party_faction_011)
        #end
    #end
    if party_slot_eq(party_id_001,0,3) or party_slot_eq(party_id_001,0,2) and troop_id_002 > -1:
        troop_slot_012 = troop_get_slot(troop_id_002,13)
        if troop_slot_012 > 0:
            troop_slot_012 -= spr.banner_a
            troop_slot_012 += 1297036692682702894
            party_set_banner_icon(party_id_001,troop_slot_012)
        #end
    #end
    if troop_id_002 > -1:
        update_troop_notes(troop_id_002)
    #end
    update_center_notes(party_id_001)
    if troop_faction_007 > 0:
        update_faction_notes(troop_faction_007)
    #end
    if party_slot_006 >= 0:
        update_troop_notes(party_slot_006)
        troop_faction_013 = store_faction_of_troop(party_slot_006)
        update_faction_notes(troop_faction_013)
    #end
    if var003 == 1 and party_slot_eq(party_id_001,0,3) or party_slot_eq(party_id_001,0,2):
        var014 = 3
        if party_slot_eq(party_id_001,0,3):
            var014 = 9
        #end
        for var015 in range(0, var014):
            if call_script(script.cf_reinforce_party,party_id_001):
                pass
            #end
        #end
        for var015 in range(0, 7):
            var016 = 150 * var014
            var017 = 200 * var014
            random_x_018 = store_random_in_range(var016,var017)
            party_upgrade_with_xp(party_id_001,random_x_018,0)
        #end
    #end
    faction_slot_008 = faction_get_slot(troop_faction_007,11)
    cur_hours_019 = store_current_hours()
    if cur_hours_019 > 0 and troop_id_002 > 0:
        troop_change_relation_with_troop(troop_id_002,faction_slot_008,10)
        _total_promotion_changes += 10
        for trp_020 in range(trp.npc1, trp.knight_1_1_wife):
            if troop_slot_eq(trp_020,2,2) and trp_020 != troop_id_002:
                troop_faction_021 = store_faction_of_troop(trp_020)
                if troop_faction_007 == troop_faction_021 and trp_020 != faction_slot_008:
                    troop_get_relation_with_troop(trp_020,troop_id_002)
                    var022 = reg0
                    var023 = var022 / 8
                    var023 -= 2
                    val_clamp(var023,-5,3)
                    if troop_slot_eq(trp_020,52,7) or troop_slot_eq(trp_020,52,6) and var022 >= 0:
                        val_max(var023,0)
                    elif troop_slot_eq(trp_020,52,3) or troop_slot_eq(trp_020,52,5) or troop_slot_eq(trp_020,52,2) and var023 < 0:
                        var023 *= 3
                        var023 /= 2
                    #end
                #end
            #end
            if var023 != 0:
                if troop_slot_eq(trp_020,154,troop_id_002):
                    var023 += 1
                    val_max(var023,1)
                #end
            #end
            troop_change_relation_with_troop(trp_020,faction_slot_008,var023)
            _total_promotion_changes += var023
            if var023 > -4 or troop_slot_eq(trp_020,47,1) or troop_slot_eq(trp_020,47,party_id_001):
                add_log_entry(26,trp_020,party_id_001,troop_id_002,troop_faction_007)
            #end
        #end
    #end
    if is_between(party_id_001,p.town_1,p.village_1):
        for p_024 in range(p.village_1, p.salt_mine):
            if party_slot_eq(p_024,120,party_id_001):
                party_faction_025 = store_faction_of_party(p_024)
                if party_faction_025 != troop_faction_007:
                    give_center_to_lord(p_024,troop_id_002,0)
                #end
            #end
        #end
    #end


def get_number_of_hero_centers(var001):
    var002 = 0
    for p_003 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_003,7,var001):
            var002 += 1
        #end
    #end
    reg0 = var002


def cf_get_random_enemy_center(var001, var002):
    var003 = 0
    party_faction_004 = store_faction_of_party(var001)
    for p_005 in range(p.town_1, p.salt_mine):
        party_faction_006 = store_faction_of_party(p_005)
        faction_relation_007 = store_relation(party_faction_004,party_faction_006)
        if faction_relation_007 < 0:
            distance_parties_008 = store_distance_to_party_from_party(var001,p_005)
            if distance_parties_008 <= var002:
                var003 += 1
            #end
        #end
    #end
    if var003 > 0:
        random_x_009 = store_random_in_range(0,var003)
        var010 = p.salt_mine
        for p_005 in range(p.town_1, var010):
            party_faction_006 = store_faction_of_party(p_005)
            faction_relation_007 = store_relation(party_faction_004,party_faction_006)
            if faction_relation_007 < 0:
                distance_parties_008 = store_distance_to_party_from_party(var001,p_005)
                if distance_parties_008 <= var002:
                    random_x_009 -= 1
                    if random_x_009 < 0:
                        var011 = p_005
                        var010 = 0
                    #end
                #end
            #end
        #end
    #end
    reg0 = var011


def find_travel_location(var001):
    party_faction_002 = store_faction_of_party(var001)
    var003 = 0
    for p_004 in range(p.town_1, p.salt_mine):
        if var001 != p_004:
            party_faction_005 = store_faction_of_party(p_004)
            if party_faction_002 == party_faction_005:
                distance_parties_006 = store_distance_to_party_from_party(var001,p_004)
                distance_parties_006 += 1
                var007 = 100000
                var007 /= distance_parties_006
                var003 += var007
            #end
        #end
    #end
    reg0 = -1
    if var003 == 0:
        pass
    else:
        random_x_008 = store_random_in_range(0,var003)
        var003 = 0
        var009 = 0
        for p_004 in range(p.town_1, p.salt_mine):
            if var009 == 0 and var001 != p_004:
                party_faction_005 = store_faction_of_party(p_004)
                if party_faction_002 == party_faction_005:
                    distance_parties_006 = store_distance_to_party_from_party(var001,p_004)
                    distance_parties_006 += 1
                    var007 = 100000
                    var007 /= distance_parties_006
                    var003 += var007
                    if random_x_008 < var003:
                        reg0 = p_004
                        var009 = 1
                    #end
                #end
            #end
        #end
    #end


def get_relation_between_parties(var001, var002):
    party_faction_003 = store_faction_of_party(var001)
    party_faction_004 = store_faction_of_party(var002)
    if party_faction_003 == party_faction_004:
        reg0 = 100
    else:
        faction_relation_005 = store_relation(party_faction_003,party_faction_004)
        reg0 = faction_relation_005
    #end


def calculate_weekly_party_wage(party_id_001):
    var002 = 0
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_001)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(party_id_001,stack_no_004)
        party_stack_size_006 = party_stack_get_size(party_id_001,stack_no_004)
        npc_get_troop_wage(troop_id_005,party_id_001)
        var007 = reg0
        var007 *= party_stack_size_006
        var002 += var007
    #end
    reg0 = var002


def calculate_player_faction_wage():
    var001 = 0
    var002 = 0
    for cur_party in __all_parties__:
        var004 = 0
        if party_slot_eq(cur_party,0,3) or party_slot_eq(cur_party,0,2) and party_slot_eq(cur_party,7,trp.player):
            var004 = 1
        #end
        if cur_party == p.main_party or var004 == 1:
            party_num_companions_stacks_005 = party_get_num_companion_stacks(cur_party)
            for stack_no_006 in range(0, party_num_companions_stacks_005):
                troop_id_007 = party_stack_get_troop_id(cur_party,stack_no_006)
                party_stack_size_008 = party_stack_get_size(cur_party,stack_no_006)
                game_get_troop_wage(troop_id_007,cur_party)
                var009 = reg0
                var009 *= party_stack_size_008
                if var004 == 1:
                    var002 += var009
                else:
                    var001 += var009
                #end
            #end
        #end
    #end
    var002 /= 2
    var010 = 14 - _g_cur_week_half_daily_wage_payments
    var001 *= var010
    var001 /= 14
    reg0 = var001 + var002


def calculate_hero_weekly_net_income_and_add_to_wealth(troop_id_001):
    troop_slot_002 = troop_get_slot(troop_id_001,10)
    troop_slot_003 = troop_get_slot(troop_id_001,11)
    var004 = 750
    character_lvl_005 = store_character_level(troop_id_001)
    var006 = character_lvl_005 * 10
    var004 += var006
    troop_faction_007 = store_faction_of_troop(troop_id_001)
    if faction_slot_eq(troop_faction_007,11,troop_id_001):
        var004 += 1000
    #end
    if faction_slot_eq(troop_faction_007,8,troop_id_001):
        var004 += 1000
    #end
    var008 = 0
    if troop_slot_002 > 0:
        calculate_weekly_party_wage(troop_slot_002)
        var008 = reg0
    #end
    var004 -= var008
    troop_slot_003 += var004
    if troop_slot_003 < 0:
        var009 = 0 - troop_slot_003
        var009 *= 100
        var009 /= var008
        var009 /= 5
        party_inflict_attrition(troop_slot_002,var009,1)
    #end
    val_max(troop_slot_003,0)
    troop_set_slot(troop_id_001,11,troop_slot_003)


def cf_reinforce_party(party_id_001):
    party_slot_003_list1 = [
    2,
    3,
    ]
    party_faction_002 = store_faction_of_party(party_id_001)
    party_slot_003 = party_get_slot(party_id_001,0)
    if party_slot_003 == 13:
        troop_id_004 = party_stack_get_troop_id(party_id_001,0) # Johandros added 0
        party_faction_002 = troop_get_slot(troop_id_004,14)
    #end
    if party_faction_002 == fac.player_supporters_faction:
        party_slot_005 = party_get_slot(party_id_001,7)
        if party_slot_005 > 0:
            party_faction_002 = troop_get_slot(party_slot_005,14)
        else:
            party_faction_002 = party_get_slot(party_id_001,61)
        #end
    #end
    faction_slot_006 = faction_get_slot(party_faction_002,77)
    faction_slot_007 = faction_get_slot(party_faction_002,78)
    faction_slot_008 = faction_get_slot(party_faction_002,79)
    var009 = 0
    random_x_010 = store_random_in_range(0,100)
    if party_slot_003 in party_slot_003_list1:
        if random_x_010 < 65:
            var009 = faction_slot_006
        else:
            var009 = faction_slot_007
        #end
    elif party_slot_003 == 13:
        if random_x_010 < 50:
            var009 = faction_slot_006
        elif random_x_010 < 75:
            var009 = faction_slot_007
        else:
            var009 = faction_slot_008
        #end
    else:
        pass
    #end
    if var009 > 0:
        party_add_template(party_id_001,var009)
    #end


def hire_men_to_kingdom_hero_party(troop_id_001):
    party_faction_008_list1 = [
    _players_kingdom,
    fac.player_supporters_faction,
    ]
    troop_slot_002 = troop_get_slot(troop_id_001,10)
    troop_slot_003 = troop_get_slot(troop_id_001,11)
    var004 = troop_slot_003
    var004 *= 3
    var004 /= 4
    party_get_ideal_size(troop_slot_002)
    var005 = reg0
    var006 = var005 * 3
    var006 /= 2
    party_num_companions_007 = party_get_num_companions(troop_slot_002)
    party_faction_008 = store_faction_of_party(troop_slot_002)
    if party_faction_008 in party_faction_008_list1:
        var009 = 450
    else:
        campaign_ai = game_get_reduce_campaign_ai()
        var009 = 450
        if campaign_ai == 0:
            var009 = 300
        elif campaign_ai == 1:
            var009 = 450
        elif campaign_ai == 2:
            var009 = 600
        #end
    #end
    var011 = 1
    for var012 in range(0, var011):
        if party_num_companions_007 < var005 and var004 > var009 and troop_slot_002 > 0 and cf_reinforce_party(troop_slot_002):
            troop_slot_003 -= var009
            troop_set_slot(troop_id_001,11,troop_slot_003)
        elif party_num_companions_007 > var006:
            troop_faction_013 = store_faction_of_troop(troop_id_001)
            party_num_companions_stacks_014 = party_get_num_companion_stacks(troop_slot_002)
            var015 = 0
            var016 = 0
            for stack_no_017 in range(0, party_num_companions_stacks_014):
                troop_id_018 = party_stack_get_troop_id(troop_slot_002,stack_no_017)
                if not troop_is_hero(troop_id_018):
                    party_stack_size_019 = party_stack_get_size(troop_slot_002,stack_no_017)
                    character_lvl_020 = store_character_level(troop_id_018)
                    troop_faction_021 = store_faction_of_troop(troop_id_018)
                    if troop_faction_013 == troop_faction_021:
                        character_lvl_020 *= 3
                    #end
                #end
                character_lvl_020 *= party_stack_size_019
                var015 += party_stack_size_019
                var016 += character_lvl_020
            #end
            if var015 > 0:
                var022 = var016 / var015
                for stack_no_017 in range(0, party_num_companions_stacks_014):
                    troop_id_018 = party_stack_get_troop_id(troop_slot_002,stack_no_017)
                    if not troop_is_hero(troop_id_018):
                        party_stack_size_019 = party_stack_get_size(troop_slot_002,stack_no_017)
                        character_lvl_020 = store_character_level(troop_id_018)
                        troop_faction_021 = store_faction_of_troop(troop_id_018)
                        if troop_faction_013 == troop_faction_021:
                            character_lvl_020 *= 3
                        #end
                    #end
                #end
                var023 = var022 - character_lvl_020
                var023 /= 3
                var024 = 10 + var023
                if var024 > 0:
                    get_percentage_with_randomized_round(party_stack_size_019,var024)
                    if reg0 > 0:
                        party_remove_members(troop_slot_002,troop_id_018,reg0)
                    #end
                #end
            #end
        #end
    #end


def get_percentage_with_randomized_round(var001, var002):
    var003 = var001 * var002
    var003 /= 100
    var004 = var003 * 100
    var004 /= var002
    var005 = var001 - var004
    if var005 > 0:
        var006 = var005 * var002
        random_x_007 = store_random_in_range(0,100)
        if random_x_007 < var006:
            var003 += 1
        #end
    #end
    reg0 = var003


def create_cattle_herd(var001, var002):
    party_id_003 = -1
    set_spawn_radius(1)
    spawn_around_party(var001,pt.cattle_herd)
    party_id_003 = reg0
    pos1 = party_get_position(var001)
    map_get_random_position_around_position_within_range(1,2)
    party_set_position(party_id_003,2)
    party_set_slot(party_id_003,0,17)
    party_set_slot(party_id_003,4,-1)
    party_set_ai_behavior(party_id_003,0)
    party_set_slot(party_id_003,30,-1)
    if var002 > 0:
        party_clear(party_id_003)
        party_add_members(party_id_003,trp.cattle,var002)
    #end
    reg0 = party_id_003


def buy_cattle_from_village(party_id_001, var002, var003):
    for var004 in range(0, var002):
        game_event_buy_item(itm.cattle_meat,0)
        game_event_buy_item(itm.cattle_meat,0)
    #end
    party_slot_005 = party_get_slot(party_id_001,205)
    party_slot_005 -= var002
    party_set_slot(party_id_001,205,party_slot_005)
    gold_006 = var003 * var002
    troop_remove_gold(trp.player,gold_006)
    var007 = 1
    for cur_party in __all_parties__:
        if var007 == 1 and party_slot_eq(cur_party,0,17):
            distance_parties_009 = store_distance_to_party_from_party(party_id_001,cur_party)
            if distance_parties_009 < 6:
                var010 = 1
                if check_quest_active(qst.move_cattle_herd) and quest_slot_eq(qst.move_cattle_herd,8,cur_party):
                    var010 = 0
                #end
            #end
        #end
        if var010 == 1:
            party_add_members(cur_party,trp.cattle,var002)
            var007 = 0
            reg0 = cur_party
        #end
    #end
    if var007 == 1:
        create_cattle_herd(party_id_001,var002)
    #end


def kill_cattle_from_herd(party_id_001, var002):
    troop_clear_inventory(trp.temp_troop)
    add_amount_003 = var002 * 2
    troop_add_items(trp.temp_troop,itm.cattle_meat,add_amount_003)
    troop_inv_capacity_004 = troop_get_inventory_capacity(trp.temp_troop)
    for inventory_slot_no_005 in range(0, troop_inv_capacity_004):
        troop_inv_slot_006 = troop_get_inventory_slot(trp.temp_troop,inventory_slot_no_005)
        if troop_inv_slot_006 == itm.cattle_meat:
            troop_set_inventory_slot_modifier(trp.temp_troop,inventory_slot_no_005,37)
        #end
    #end
    party_num_companions_007 = party_get_num_companions(party_id_001)
    if var002 >= party_num_companions_007:
        remove_party(party_id_001)
    else:
        party_remove_members(party_id_001,trp.cattle,var002)
    #end


def create_kingdom_hero_party(troop_id_001, var002):
    troop_faction_003_list1 = [
    fac.player_supporters_faction,
    _players_kingdom,
    ]
    troop_faction_003 = store_faction_of_troop(troop_id_001)
    _pout_party = -1
    if _g_there_is_no_avaliable_centers == 0:
        set_spawn_radius(0)
    else:
        set_spawn_radius(15)
    #end
    spawn_around_party(var002,pt.kingdom_hero_party)
    _pout_party = reg0
    party_set_faction(_pout_party,troop_faction_003)
    party_set_slot(_pout_party,0,13)
    party_set_ai_state(_pout_party,-1,-1)
    troop_set_slot(troop_id_001,10,_pout_party)
    party_add_leader(_pout_party,troop_id_001)
    s5 = str_store_troop_name(troop_id_001)
    party_set_name(_pout_party,gstr.s5_s_party)
    party_set_slot(_pout_party,30,-1)
    troop_slot_004 = troop_get_slot(troop_id_001,13)
    if troop_slot_004 > 0:
        troop_slot_004 -= spr.banner_a
        troop_slot_004 += 1297036692682702894
        party_set_banner_icon(_pout_party,troop_slot_004)
    #end
    if troop_slot_eq(troop_id_001,28,0):
        troop_set_slot(troop_id_001,28,1)
        var005 = 20
        if True:
            troop_faction_006 = store_faction_of_troop(troop_id_001)
            if faction_slot_eq(troop_faction_006,11,troop_id_001):
                var005 = 50
            #end
        #end
        for var007 in range(0, var005):
            hire_men_to_kingdom_hero_party(troop_id_001)
        #end
        var008 = 0
        campaign_ai = game_get_reduce_campaign_ai()
        if troop_faction_003 in troop_faction_003_list1:
            var008 = 0
        elif campaign_ai == 0:
            var008 = 2
        elif campaign_ai == 1:
            var008 = 1
        elif campaign_ai == 2:
            var008 = 0
        #end
        troop_slot_010 = troop_get_slot(troop_id_001,7)
        var011 = troop_slot_010 / 100
        var008 += var011
        for var007 in range(0, var008):
            upgrade_hero_party(_pout_party,4000)
        #end
    #end


def create_kingdom_party_if_below_limit(faction_id_001, var002):
    count_parties_of_faction_and_party_type(faction_id_001,var002)
    var003 = reg0
    var004 = 0
    faction_slot_005 = faction_get_slot(faction_id_001,82)
    if var002 == 11:
        if faction_slot_005 == 0:
            var004 = 0
        elif faction_slot_005 == 1:
            var004 = 1
        elif faction_slot_005 == 2:
            var004 = 3
        else:
            var004 = 5
        #end
    #end
    reg0 = -1
    if var003 < var004 and call_script(script.cf_create_kingdom_party,faction_id_001,var002):
        pass
    #end


def cf_create_kingdom_party(faction_id_001, var002):
    s7 = str_store_faction_name(faction_id_001)
    var003 = gstr.no_string
    faction_slot_004 = faction_get_slot(faction_id_001,78)
    if var002 == 11:
        var005 = pt.kingdom_caravan_party
    #end
    party_id_006 = -1
    if True:
        if var002 == 11 and cf_select_random_town_with_faction(faction_id_001,-1):
            set_spawn_radius(0)
        elif cf_select_random_walled_center_with_faction(faction_id_001,-1):
            set_spawn_radius(1)
        #end
        party_id_007 = reg0
        if is_between(party_id_007,p.town_1,p.salt_mine):
            spawn_around_party(party_id_007,var005)
            party_id_006 = reg0
            party_set_faction(party_id_006,faction_id_001)
            if var002 == 11:
                party_set_slot(party_id_006,123,party_id_007)
                party_set_slot(party_id_006,126,party_id_007)
            #end
        #end
        party_set_slot(party_id_006,0,var002)
        party_set_slot(party_id_006,4,-1)
        if var003 != gstr.no_string:
            party_set_name(party_id_006,var003)
        #end
        if var002 == 11:
            if faction_id_001 == fac.player_supporters_faction:
                party_slot_008 = party_get_slot(party_id_007,61)
                faction_slot_004 = faction_get_slot(party_slot_008,78)
            #end
            party_add_template(party_id_006,faction_slot_004)
            party_add_template(party_id_006,faction_slot_004)
            party_set_ai_behavior(party_id_006,1)
            party_set_ai_object(party_id_006,party_id_007)
            party_set_flags(party_id_006,65536,1)
            var009 = 250 - itm.spice
            for itm_010 in range(itm.spice, itm.siege_supply):
                slot_no_011 = itm_010 + var009
                party_set_slot(party_id_006,slot_no_011,1000)
            #end
        #end
    #end
    if party_id_006 >= 0:
        reg0 = party_id_006


def get_troop_attached_party(troop_id_001):
    troop_slot_002 = troop_get_slot(troop_id_001,10)
    party_attached_003 = -1
    if troop_slot_002 >= 0:
        party_attached_003 = party_get_attached_to(troop_slot_002)
    #end
    reg0 = party_attached_003


def center_get_food_consumption(var001):
    var002 = 0
    if party_slot_eq(var001,0,3):
        var002 = 500
    elif party_slot_eq(var001,0,2):
        var002 = 50
    #end
    reg0 = var002


def center_get_food_store_limit(var001):
    var002 = 0
    if party_slot_eq(var001,0,3):
        var002 = 50000
    elif party_slot_eq(var001,0,2):
        var002 = 1500
    #end
    reg0 = var002


def refresh_village_merchant_inventory(party_id_001):
    party_slot_002 = party_get_slot(party_id_001,25)
    reset_item_probabilities(0)
    party_slot_003 = party_get_slot(party_id_001,120)
    var004 = 0
    for itm_005 in range(itm.spice, itm.siege_supply):
        center_get_production(party_id_001,itm_005)
        item_probability_006 = reg0
        center_get_production(party_slot_003,itm_005)
        reg0 /= 5
        item_probability_006 += reg0
        val_max(item_probability_006,5)
        var004 += item_probability_006
    #end
    if True:
        party_slot_007 = party_get_slot(party_id_001,50)
        party_slot_007 /= 15
        merch_amount_008 = party_slot_007 + 1
    #end
    for itm_005 in range(itm.spice, itm.siege_supply):
        center_get_production(party_id_001,itm_005)
        item_probability_006 = reg0
        center_get_production(party_slot_003,itm_005)
        reg0 /= 5
        item_probability_006 += reg0
        val_max(item_probability_006,5)
        item_probability_006 *= merch_amount_008
        item_probability_006 *= 100
        item_probability_006 /= var004
        set_item_probability_in_merchandise(itm_005,item_probability_006)
    #end
    troop_clear_inventory(party_slot_002)
    troop_add_merchandise(party_slot_002,11,merch_amount_008)
    troop_ensure_inventory_space(party_slot_002,80)
    troop_gold_009 = store_troop_gold(party_slot_002)
    if troop_gold_009 > 3500:
        var010 = troop_gold_009 / 3000
        gold_011 = var010 * 3000
        troop_remove_gold(party_slot_002,gold_011)
        change_center_prosperity(party_id_001,var010)
    #end


def refresh_village_defenders(party_id_001):
    var002 = 50
    if True:
        party_num_companions_003 = party_get_num_companions(party_id_001)
        if party_num_companions_003 < var002:
            party_add_template(party_id_001,pt.village_defenders)
        #end
    #end


def village_set_state(party_id_001, var002):
    if var002 == 0:
        party_set_extra_text(party_id_001,gstr.empty_string)
        party_set_slot(party_id_001,34,-1)
    elif var002 == 1:
        party_set_extra_text(party_id_001,"@[[[Being Raided]]]")
    elif var002 == 2:
        party_set_extra_text(party_id_001,"@[[[Looted]]]")
        party_set_slot(party_id_001,34,-1)
        change_center_prosperity(party_id_001,-60)
        _newglob_total_prosperity_from_villageloot += -60
        if 5 == 0:
            party_slot_003 = party_get_slot(party_id_001,7)
            if is_between(party_slot_003,trp.npc1,trp.knight_1_1_wife):
                troop_faction_004 = store_faction_of_troop(party_slot_003)
                faction_slot_005 = faction_get_slot(troop_faction_004,11)
                troop_change_relation_with_troop(party_slot_003,faction_slot_005,-1)
                _total_battle_ally_changes += -1
            #end
        #end
    elif var002 == 5:
        party_set_extra_text(party_id_001,"@[[[Under Siege]]]")
        for cur_party in __all_parties__:
            if cur_party > p.spawn_points_end and party_slot_eq(cur_party,0,11) and party_slot_eq(cur_party,5,party_id_001):
                party_slot_007 = party_get_slot(cur_party,126)
                party_faction_008 = store_faction_of_party(cur_party)
                if cf_select_most_profitable_town_at_peace_with_faction_in_trade_route(party_slot_007,party_faction_008):
                    var009 = reg0
                    if is_between(var009,p.town_1,p.salt_mine):
                        party_set_ai_behavior(cur_party,1)
                        party_set_ai_object(cur_party,var009)
                        party_set_flags(cur_party,65536,0)
                        party_set_slot(cur_party,4,13)
                        party_set_slot(cur_party,5,var009)
                    #end
                #end
            #end
        #end
    #end
    party_set_slot(party_id_001,35,var002)


def process_village_raids():
    for p_001 in range(p.village_1, p.salt_mine):
        if is_between(p_001,p.village_16,p.village_23) or is_between(p_001,p.village_49,p.village_51) or p_001 == p.village_75 or is_between(p_001,p.village_85,p.village_87):
            var002 = 1297036692682702872
            var003 = 1297036692682702873
            var004 = 1297036692682702874
        elif is_between(p_001,p.village_91,p.salt_mine):
            var002 = 1297036692682702865
            var003 = 1297036692682702870
            var004 = 1297036692682702871
        else:
            var002 = 1297036692682702863
            var003 = 1297036692682702866
            var004 = 1297036692682702867
        #end
        party_slot_005 = party_get_slot(p_001,36)
        if party_slot_eq(p_001,35,0):
            party_slot_005 -= 5
            val_max(party_slot_005,0)
            party_set_slot(p_001,36,party_slot_005)
            if party_slot_005 < 50:
                if True:
                    party_icon_006 = party_get_icon(p_001)
                    if party_icon_006 != var002:
                        party_set_icon(p_001,var002)
                    #end
                #end
                if party_slot_ge(p_001,38,1):
                    party_set_slot(p_001,38,0)
                    party_clear_particle_systems(p_001)
                #end
            #end
        elif party_slot_eq(p_001,35,1):
            var007 = 1
            party_slot_008 = party_get_slot(p_001,34)
            if party_slot_008 >= 0 and party_is_active(party_slot_008) and party_slot_008 == p.main_party or _g_player_is_captive == 0:
                distance_parties_009 = store_distance_to_party_from_party(p_001,party_slot_008)
                if distance_parties_009 < 4:
                    var007 = 0
                #end
            #end
            if var007 == 1:
                village_set_state(p_001,0)
                party_set_slot(p_001,38,0)
                party_clear_particle_systems(p_001)
            else:
                var010 = 11
                party_slot_011 = party_get_slot(p_001,34)
                if True:
                    party_skill_lvl_012 = party_get_skill_level(party_slot_011,skl.looting)
                    var010 += party_skill_lvl_012
                #end
                if party_slot_eq(p_001,132,1):
                    var010 *= 2
                    var010 /= 3
                #end
                party_slot_005 += var010
                party_set_slot(p_001,36,party_slot_005)
                if party_slot_005 >= 50 and party_slot_eq(p_001,38,0):
                    party_add_particle_system(p_001,psys.map_village_fire)
                    party_add_particle_system(p_001,psys.map_village_fire_smoke)
                    party_set_icon(p_001,var003)
                    party_set_slot(p_001,38,1)
                #end
                if party_slot_005 > 100:
                    s1 = str_store_party_name_link(p_001)
                    troop_id_013 = party_stack_get_troop_id(party_slot_011,0)
                    if troop_id_013 >= 0:
                        s2 = str_store_party_name(party_slot_011)
                        display_log_message("@The village of {s1} has been looted by {s2}.")
                        if True:
                            party_slot_014 = party_get_slot(p_001,7)
                            if is_between(party_slot_014,trp.npc1,trp.knight_1_1_wife):
                                troop_change_relation_with_troop(troop_id_013,party_slot_014,-1)
                                _total_battle_enemy_changes += -1
                            #end
                        #end
                    #end
                    troop_slot_015 = troop_get_slot(troop_id_013,11)
                    party_slot_016 = party_get_slot(p_001,0) # Johandros added 0
                    var017 = party_slot_016 * 60
                    troop_slot_015 += var017
                    troop_set_slot(troop_id_013,11,troop_slot_015)
                    if is_between(party_slot_014,trp.npc1,trp.knight_1_1_wife):
                        troop_slot_018 = troop_get_slot(party_slot_014,11)
                        troop_slot_018 -= var017
                        val_max(troop_slot_018,0)
                        troop_set_slot(party_slot_014,11,troop_slot_018)
                    #end
                    village_set_state(p_001,2)
                    party_set_slot(p_001,47,0)
                    party_set_slot(p_001,48,0)
                    party_set_slot(p_001,36,0)
                    party_set_slot(p_001,37,0)
                    if True:
                        party_faction_019 = store_faction_of_party(p_001)
                        if party_slot_eq(p_001,7,trp.player) or party_faction_019 == fac.player_supporters_faction:
                            add_notification_menu(mnu.notification_village_raided,p_001,troop_id_013)
                        #end
                    #end
                    add_log_entry(1,troop_id_013,p_001,-1,-1)
                    party_faction_020 = store_faction_of_party(party_slot_011)
                    faction_inflict_war_damage_on_faction(party_faction_020,party_faction_019,5)
                #end
            #end
        elif party_slot_eq(p_001,35,2):
            party_slot_021 = party_get_slot(p_001,37)
            party_slot_021 += 1
            party_set_slot(p_001,37,party_slot_021)
            if party_slot_021 >= 10 and party_slot_eq(p_001,38,1):
                party_clear_particle_systems(p_001)
                party_add_particle_system(p_001,psys.map_village_looted_smoke)
                party_set_slot(p_001,38,2)
            #end
            if party_slot_021 > 50 and party_slot_eq(p_001,38,2):
                party_clear_particle_systems(p_001)
                party_set_slot(p_001,38,3)
                party_set_icon(p_001,var004)
            #end
            if party_slot_021 > 100:
                village_set_state(p_001,0)
                party_set_slot(p_001,37,0)
                party_clear_particle_systems(p_001)
                party_set_slot(p_001,38,0)
                party_set_icon(p_001,var002)
            #end
        #end
    #end


def process_sieges():
    for p_001 in range(p.town_1, p.village_1):
        party_slot_002 = party_get_slot(p_001,65)
        party_slot_002 -= 20
        val_max(party_slot_002,0)
        party_set_slot(p_001,65,party_slot_002)
        party_slot_003 = party_get_slot(p_001,53)
        center_get_food_store_limit(p_001)
        var004 = reg0
        if True:
            party_slot_005 = party_get_slot(p_001,54)
            if party_slot_005 >= 0:
                if True:
                    if is_between(p_001,p.castle_1,p.village_1):
                        random_x_006 = store_random_in_range(0,3)
                        if random_x_006 == 0:
                            var007 = -1
                        else:
                            var007 = 0
                        #end
                    #end
                else:
                    var007 = -4
                #end
                change_center_prosperity(p_001,var007)
                _newglob_total_prosperity_from_townloot += var007
            #end
            party_faction_008 = store_faction_of_party(p_001)
            var009 = 0
            if True:
                if not party_is_active(party_slot_005):
                    var009 = 1
                else:
                    distance_parties_010 = store_distance_to_party_from_party(p_001,party_slot_005)
                    if distance_parties_010 > 5:
                        var009 = 1
                    else:
                        party_faction_011 = store_faction_of_party(party_slot_005)
                        faction_relation_012 = store_relation(party_faction_011,party_faction_008)
                        if faction_relation_012 >= 0:
                            var009 = 1
                        #end
                    #end
                #end
                if var009 == 1:
                    for trp_013 in range(trp.npc1, trp.knight_1_1_wife):
                        if troop_slot_eq(trp_013,2,2):
                            troop_slot_014 = troop_get_slot(trp_013,10)
                            if troop_slot_014 >= 0 and party_is_active(troop_slot_014):
                                party_faction_015 = store_faction_of_party(troop_slot_014)
                                faction_relation_012 = store_relation(party_faction_015,party_faction_008)
                                if faction_relation_012 < 0:
                                    distance_parties_016 = store_distance_to_party_from_party(p_001,troop_slot_014)
                                    if distance_parties_016 < 4:
                                        party_slot_005 = troop_slot_014
                                        party_set_slot(p_001,54,troop_slot_014)
                                        var009 = 0
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if var009 == 1:
                lift_siege(p_001,1)
            else:
                center_get_food_consumption(p_001)
                var017 = reg0
                party_slot_003 -= var017
                if party_slot_003 <= 0:
                    random_x_018 = store_random_in_range(0,100)
                    if random_x_018 < 10:
                        party_wound_all_members(p_001)
                    #end
                #end
            #end
        else:
            party_slot_003 += 30
        #end
        val_min(party_slot_003,var004)
        val_max(party_slot_003,0)
        party_set_slot(p_001,53,party_slot_003)
    #end


def lift_siege(party_id_001, var002):
    party_set_slot(party_id_001,54,-1)
    village_set_state(party_id_001,0)
    if party_id_001 == _g_player_besiege_town:
        _g_siege_method = 0
    #end
    if var002 == 1:
        s3 = str_store_party_name_link(party_id_001)
        print("@{s3} is no longer under siege.")
    #end


def process_alarms():
    var001 = _g_alarm_modula
    _g_alarm_modula += 1
    if _g_alarm_modula == 3:
        _g_alarm_modula = 0
    #end
    for p_002 in range(p.town_1, p.salt_mine):
        var003 = store_mod(p_002,3)
        if var003 == var001:
            party_set_slot(p_002,55,-1)
            party_set_slot(p_002,66,0)
            party_set_slot(p_002,67,0)
            var004 = 3
            if is_currently_night():
                var004 = 2
            #end
        #end
        if party_slot_eq(p_002,132,1):
            var004 *= 2
        elif not is_between(p_002,p.village_1,p.salt_mine):
            var004 += 1
            var004 *= 2
        #end
        party_faction_005 = store_faction_of_party(p_002)
        for cur_party in __all_parties__:
            if party_slot_eq(cur_party,0,13) or cur_party == p.main_party:
                party_faction_007 = store_faction_of_party(cur_party)
                if cur_party == p.main_party:
                    party_faction_007 = _players_kingdom
                #end
            #end
            if party_faction_007 == party_faction_005:
                distance_parties_008 = store_distance_to_party_from_party(cur_party,p_002)
                if distance_parties_008 <= var004:
                    party_slot_009 = party_get_slot(cur_party,56)
                    party_slot_010 = party_get_slot(p_002,66)
                    party_slot_010 += party_slot_009
                    party_set_slot(p_002,66,party_slot_010)
                elif party_faction_007 != party_faction_005:
                    distance_parties_008 = store_distance_to_party_from_party(cur_party,p_002)
                    if distance_parties_008 < 10:
                        cur_hours_011 = store_current_hours()
                        slot_no_012 = party_faction_007 - fac.player_supporters_faction
                        slot_no_012 += 350
                        party_set_slot(p_002,slot_no_012,cur_hours_011)
                    #end
                #end
                faction_relation_013 = store_relation(party_faction_005,party_faction_007)
                if faction_relation_013 < 0:
                    if distance_parties_008 <= var004:
                        party_slot_009 = party_get_slot(cur_party,56)
                        party_slot_014 = party_get_slot(p_002,67)
                        party_slot_014 += party_slot_009
                        party_set_slot(p_002,67,party_slot_014)
                        party_set_slot(p_002,55,cur_party)
                    #end
                #end
            #end
        #end
    #end
    for p_002 in range(p.town_1, p.salt_mine):
        var003 = store_mod(p_002,3)
        if var003 == var001:
            if is_between(p_002,p.town_1,p.village_1) and party_slot_ge(p_002,55,0):
                party_slot_010 = party_get_slot(p_002,66)
                party_slot_014 = party_get_slot(p_002,67)
                party_battle_opponent_015 = party_get_battle_opponent(p_002)
                if _cheat_mode >= 1 and party_battle_opponent_015 >= 0:
                    s7 = str_store_party_name(p_002)
                    s6 = str_store_party_name(party_battle_opponent_015)
                    print("@{!}DEBUG : There are already enemies ({s6}) inside {s7}.")
                #end
            #end
            if party_battle_opponent_015 < 0:
                if _cheat_mode == 1:
                    s4 = str_store_party_name(p_002)
                    reg3 = party_slot_010
                    reg4 = party_slot_014
                    print("@{!}DEBUG -- Calculating sortie for {s4} strength of {reg3} vs {reg4} enemies")
                #end
            #end
            var016 = party_slot_014 * 14
            var016 /= 10
            if party_slot_010 > var016:
                var017 = 0
                for cur_party in __all_parties__:
                    party_attached_019 = party_get_attached_to(cur_party)
                    if party_attached_019 == p_002 and party_slot_eq(cur_party,0,13):
                        party_slot_009 = party_get_slot(cur_party,56)
                        if party_slot_009 >= 100:
                            party_detach(cur_party)
                            party_set_ai_state(cur_party,4,p_002)
                            if _cheat_mode == 1:
                                s4 = str_store_party_name(cur_party)
                                print(gstr.s4_sorties)
                            #end
                        #end
                    #end
                #end
                if var017 == 0:
                    var017 = cur_party
                #end
            #end
            if party_is_in_town(p.main_party,p_002) and _g_player_is_captive == 0 and var017 > 0:
                add_notification_menu(mnu.notification_sortie_possible,p_002,cur_party)
            #end
        #end
        party_faction_005 = store_faction_of_party(p_002)
        if _cheat_mode == 1 or party_slot_eq(p_002,7,trp.player) or party_faction_005 == _players_kingdom:
            party_slot_020 = party_get_slot(p_002,55)
            if party_slot_020 >= 0:
                distance_parties_021 = store_distance_to_party_from_party(p.main_party,p_002)
                var022 = 0
                if party_slot_eq(p_002,7,trp.player) or party_faction_005 == fac.player_supporters_faction and party_slot_eq(p_002,134,1):
                    var022 = 1
                #end
            #end
        #end
        if _cheat_mode == 1 or distance_parties_021 >= 30 or var022 == 1:
            s1 = str_store_party_name_link(p_002)
            party_slot_023 = party_get_slot(p_002,67)
            if party_slot_023 < 500:
                print("@Small bands of enemies spotted near {s1}.")
            elif party_slot_023 < 1000:
                print("@Enemy patrols spotted near {s1}.")
            elif party_slot_023 < 2000:
                print("@Medium-sized group of enemies spotted near {s1}.")
            elif party_slot_023 < 4000:
                print("@Significant group of enemies spotted near {s1}.")
            elif party_slot_023 < 8000:
                print("@Army of enemies spotted near {s1}.")
            elif party_slot_023 < 16000:
                print("@Large army of enemies spotted near {s1}.")
            else:
                print("@Great host of enemies spotted near {s1}.")
            #end
        #end
    #end


def allow_vassals_to_join_indoor_battle():
    for trp_001 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_001,2,2) and not troop_slot_ge(trp_001,8,0):
            troop_slot_002 = troop_get_slot(trp_001,10)
            if troop_slot_002 > 0 and party_is_active(troop_slot_002):
                party_attached_003 = party_get_attached_to(troop_slot_002)
                if party_attached_003 < 0:
                    troop_faction_004 = store_faction_of_troop(trp_001)
                    if party_slot_eq(troop_slot_002,4,11):
                        party_slot_005 = party_get_slot(troop_slot_002,5)
                        if party_slot_005 > 0 and party_is_active(party_slot_005):
                            party_battle_opponent_006 = -1
                            if party_slot_eq(party_slot_005,4,7):
                                party_slot_007 = party_get_slot(party_slot_005,5)
                                party_battle_opponent_008 = party_get_battle_opponent(party_slot_007)
                                if party_is_active(party_battle_opponent_008):
                                    party_battle_opponent_006 = party_slot_007
                                    party_slot_007 = party_battle_opponent_008
                                elif party_slot_eq(party_slot_005,4,10):
                                    party_slot_007 = party_get_slot(party_slot_005,5)
                                    if party_slot_007 >= 0 and not is_between(party_slot_007,p.town_1,p.salt_mine) and party_is_active(party_slot_007):
                                        party_battle_opponent_006 = party_get_battle_opponent(party_slot_007)
                                    else:
                                        party_battle_opponent_006 = -1
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if is_between(party_battle_opponent_006,p.town_1,p.village_1):
                party_attached_009 = party_get_attached_to(party_slot_005)
                if party_attached_009 == party_battle_opponent_006:
                    party_faction_010 = store_faction_of_party(party_battle_opponent_006)
                    if party_faction_010 == troop_faction_004 and party_is_active(party_slot_007):
                        party_set_ai_state(troop_slot_002,10,party_slot_007)
                        if _cheat_mode == 1:
                            s7 = str_store_party_name(troop_slot_002)
                            s6 = str_store_party_name(party_slot_007)
                            print("@{!}DEBUG : {s7} is helping his commander by fighting with {s6}.")
                        #end
                    #end
                #end
            #end
        elif party_slot_eq(troop_slot_002,4,11):
            party_slot_005 = party_get_slot(troop_slot_002,5)
            if party_slot_005 > 0 and party_is_active(party_slot_005):
                party_battle_opponent_006 = party_get_battle_opponent(party_slot_005)
                if is_between(party_battle_opponent_006,p.town_1,p.village_1):
                    party_attached_009 = party_get_attached_to(troop_slot_002)
                    if party_attached_009 != party_battle_opponent_006 and party_is_active(party_battle_opponent_006):
                        party_set_ai_state(troop_slot_002,10,party_battle_opponent_006)
                    #end
                #end
            #end
        #end
    #end


def party_set_ai_state(party_id_001, var002, var003):
    var002_list1 = [
    12,
    11,
    ]
    party_slot_004 = party_get_slot(party_id_001,4)
    party_slot_005 = party_get_slot(party_id_001,5)
    party_attached_006 = party_get_attached_to(party_id_001)
    var007 = 0
    if is_between(party_attached_006,p.town_1,p.salt_mine):
        var007 = party_attached_006
    #end
    troop_id_008 = -1
    if party_is_active(party_id_001):
        troop_id_008 = party_stack_get_troop_id(party_id_001,0)
        party_faction_009 = store_faction_of_party(party_id_001)
    #end
    if troop_id_008 < 0:
        pass
    else:
        if is_between(var007,p.town_1,p.village_1) and party_slot_eq(var007,54,-1):
            troop_does_business_in_center(troop_id_008,var007)
        elif party_slot_eq(party_id_001,4,16):
            party_slot_010 = party_get_slot(party_id_001,5)
            if is_between(party_slot_010,p.village_1,p.salt_mine) and not party_slot_eq(party_slot_010,35,1) and not party_slot_eq(party_slot_010,35,2):
                distance_parties_011 = store_distance_to_party_from_party(party_id_001,party_slot_010)
                if distance_parties_011 < 3:
                    troop_does_business_in_center(troop_id_008,party_slot_010)
                #end
            #end
        #end
        party_set_slot(party_id_001,63,0)
        if party_slot_004 == var002 and party_slot_005 == var003:
            pass
        else:
            var012 = 100
            party_aggressiveness_013 = 8
            party_courage_014 = 8
            if var002 in var002_list1:
                party_set_ai_behavior(party_id_001,10)
                party_set_ai_object(party_id_001,var003)
                party_set_flags(party_id_001,65536,0)
                if var007 > 0:
                    party_detach(party_id_001)
                #end
                if var002 == 12:
                    party_aggressiveness_013 = 9
                    party_courage_014 = 9
                    var012 = 80
                else:
                    party_aggressiveness_013 = 6
                    party_courage_014 = 9
                    var012 = 10
                #end
            elif var002 == 1:
                pos1 = party_get_position(var003)
                map_get_random_position_around_position(pos2,1,2)
                party_set_ai_behavior(party_id_001,6)
                party_set_ai_target_position(party_id_001,2)
                party_set_ai_object(party_id_001,var003)
                party_set_flags(party_id_001,65536,0)
                party_set_slot(party_id_001,63,1)
                party_set_slot(party_id_001,8,0)
                if var007 > 0 and var007 != var003:
                    party_detach(party_id_001)
                #end
                party_aggressiveness_013 = 1
                party_courage_014 = 9
                var012 = 20
            elif var002 == 7:
                party_set_ai_behavior(party_id_001,1)
                party_set_ai_object(party_id_001,var003)
                party_set_flags(party_id_001,65536,0)
                if var007 > 0 and var007 != var003:
                    party_detach(party_id_001)
                #end
                party_aggressiveness_013 = 7
                party_courage_014 = 9
                var012 = 100
            elif var002 == 4:
                pos1 = party_get_position(var003)
                map_get_random_position_around_position(pos2,1,1)
                party_set_ai_behavior(party_id_001,6)
                party_set_ai_target_position(party_id_001,2)
                party_set_ai_object(party_id_001,var003)
                if faction_slot_eq(party_faction_009,4,5):
                    party_set_ai_patrol_radius(party_id_001,1)
                else:
                    party_set_ai_patrol_radius(party_id_001,5)
                #end
                party_set_flags(party_id_001,65536,0)
                party_set_slot(party_id_001,63,1)
                party_set_slot(party_id_001,8,0)
                if var007 > 0:
                    party_detach(party_id_001)
                #end
                if troop_id_008 >= 0 and faction_slot_eq(party_faction_009,8,troop_id_008) and faction_slot_eq(party_faction_009,4,5):
                    pos3 = party_get_position(party_id_001)
                    distance_015 = get_distance_between_positions(1,3)
                    if distance_015 >= 800:
                        var012 = 10
                        party_aggressiveness_013 = 1
                        party_courage_014 = 8
                    else:
                        var012 = 100
                        party_aggressiveness_013 = 8
                        party_courage_014 = 8
                    #end
                else:
                    party_aggressiveness_013 = 8
                    party_courage_014 = 8
                    var012 = 100
                #end
            elif var002 == 16:
                pos1 = party_get_position(var003)
                map_get_random_position_around_position(pos2,1,2)
                party_set_ai_behavior(party_id_001,6)
                party_set_ai_target_position(party_id_001,2)
                party_set_ai_object(party_id_001,var003)
                party_set_flags(party_id_001,65536,0)
                party_set_slot(party_id_001,8,0)
                if var007 > 0 and var007 != var003:
                    party_detach(party_id_001)
                #end
                party_aggressiveness_013 = 8
                party_courage_014 = 8
                var012 = 100
            elif var002 == 5:
                pos1 = party_get_position(var003)
                map_get_random_position_around_position(pos2,1,1)
                party_set_ai_behavior(party_id_001,2)
                party_set_ai_patrol_radius(party_id_001,10)
                party_set_ai_target_position(party_id_001,2)
                party_set_ai_object(party_id_001,var003)
                party_set_flags(party_id_001,65536,0)
                party_set_slot(party_id_001,63,1)
                party_set_slot(party_id_001,8,0)
                if var007 > 0 and var007 != var003:
                    party_detach(party_id_001)
                #end
                if troop_id_008 >= 0 and faction_slot_eq(party_faction_009,8,troop_id_008):
                    party_aggressiveness_013 = 1
                    party_courage_014 = 8
                    var012 = 20
                else:
                    party_aggressiveness_013 = 7
                    party_courage_014 = 8
                    var012 = 100
                #end
            elif var002 == 10:
                party_set_ai_behavior(party_id_001,4)
                party_set_ai_object(party_id_001,var003)
                party_set_flags(party_id_001,65536,0)
                if var007 > 0:
                    party_detach(party_id_001)
                #end
                if troop_id_008 >= 0 and faction_slot_eq(party_faction_009,8,troop_id_008) and faction_slot_eq(party_faction_009,4,5):
                    var012 = 10
                    party_aggressiveness_013 = 1
                    party_courage_014 = 8
                else:
                    party_aggressiveness_013 = 8
                    party_courage_014 = 8
                    var012 = 100
                #end
            elif var002 == 14:
                party_set_ai_behavior(party_id_001,1)
                party_set_ai_object(party_id_001,var003)
                party_set_flags(party_id_001,65536,1)
                party_set_slot(party_id_001,30,-1)
                if var007 > 0 and var007 != var003:
                    party_detach(party_id_001)
                #end
                party_aggressiveness_013 = 3
                party_courage_014 = 4
                var012 = 100
            elif var002 == -1:
                party_set_ai_behavior(party_id_001,0)
                party_set_flags(party_id_001,65536,0)
            #end
            if troop_slot_eq(troop_id_008,52,1):
                party_aggressiveness_013 += 2
                party_courage_014 += 2
            elif troop_slot_eq(troop_id_008,52,5):
                party_aggressiveness_013 -= 1
                party_courage_014 -= 1
            #end
            party_set_slot(party_id_001,4,var002)
            party_set_slot(party_id_001,5,var003)
            party_set_aggressiveness(party_id_001,party_aggressiveness_013)
            party_set_courage(party_id_001,party_courage_014)
            party_set_ai_initiative(party_id_001,var012)
        #end
    #end
    if troop_id_008 >= 0:
        party_set_helpfulness(party_id_001,101)
        if troop_slot_eq(troop_id_008,52,1):
            party_set_helpfulness(party_id_001,200)
        elif troop_slot_eq(troop_id_008,52,7):
            party_set_helpfulness(party_id_001,150)
        elif party_slot_eq(party_id_001,4,11):
            party_set_helpfulness(party_id_001,110)
        elif troop_slot_eq(troop_id_008,52,2):
            party_set_helpfulness(party_id_001,90)
        elif troop_slot_eq(troop_id_008,52,3):
            party_set_helpfulness(party_id_001,80)
        elif troop_slot_eq(troop_id_008,52,5):
            party_set_helpfulness(party_id_001,50)
        #end
    #end


def cf_party_under_player_suggestion(party_id_001):
    if party_slot_eq(party_id_001,244,trp.kingdom_heroes_including_player_begin):
        party_slot_002 = party_get_slot(party_id_001,4)
        if party_slot_eq(party_id_001,245,party_slot_002):
            party_slot_003 = party_get_slot(party_id_001,5)
            if party_slot_eq(party_id_001,246,party_slot_003):
                cur_hours_004 = store_current_hours()
                party_slot_005 = party_get_slot(party_id_001,247)
                cur_hours_004 -= party_slot_005


def troop_does_business_in_center(troop_id_001, party_id_002):
    _cheat_mode_list1 = [
    3,
    1,
    ]
    troop_slot_003 = troop_get_slot(troop_id_001,10)
    cur_hours_004 = store_current_hours()
    if is_between(party_id_002,p.town_1,p.village_1):
        party_set_slot(troop_slot_003,71,cur_hours_004)
        if True:
            lord_get_home_center(troop_id_001)
            if party_id_002 == reg0:
                party_set_slot(troop_slot_003,69,cur_hours_004)
            #end
        #end
    #end
    if party_slot_eq(party_id_002,7,troop_id_001):
        party_slot_005 = party_get_slot(party_id_002,47)
        party_slot_006 = party_get_slot(party_id_002,48)
        troop_slot_007 = troop_get_slot(troop_id_001,11)
        troop_slot_007 += party_slot_005
        troop_slot_007 += party_slot_006
        troop_set_slot(troop_id_001,11,troop_slot_007)
        party_set_slot(party_id_002,47,0)
        party_set_slot(party_id_002,48,0)
        if _cheat_mode in _cheat_mode_list1:
            reg1 = troop_slot_007
            s4 = str_store_party_name(party_id_002)
            add_troop_note_from_sreg(troop_id_001,1,gstr.current_wealth_reg1_taxes_last_collected_from_s4,0)
        #end
    #end
    if is_between(party_id_002,p.village_1,p.salt_mine):
        party_slot_008 = party_get_slot(party_id_002,90)
        party_slot_009 = party_get_slot(party_id_002,91)
        party_set_slot(party_id_002,91,-1)
        party_add_members(troop_slot_003,party_slot_008,party_slot_009)
    #end
    if True:
        party_slot_010 = party_get_slot(troop_slot_003,70)
        var011 = cur_hours_004 - party_slot_010
        if var011 > 72 and troop_slot_eq(troop_id_001,30,-1):
            for slot_no_012 in range(35, 38):
                troop_slot_013 = troop_get_slot(troop_id_001,slot_no_012)
                if troop_slot_013 > 0:
                    troop_slot_014 = troop_get_slot(troop_slot_013,12)
                    if party_id_002 == troop_slot_014:
                        courtship_event_troop_court_lady(troop_id_001,troop_slot_013)
                        party_set_slot(troop_slot_003,70,cur_hours_004)
                    #end
                #end
            #end
        #end
    #end


def process_kingdom_parties_ai():
    for trp_001 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_001,2,2) and not troop_slot_ge(trp_001,8,0):
            troop_slot_002 = troop_get_slot(trp_001,10)
            if troop_slot_002 > 0:
                process_hero_ai(trp_001)
            #end
        #end
    #end


def process_hero_ai(troop_id_001):
    troop_slot_002 = troop_get_slot(troop_id_001,10)
    if party_is_active(troop_slot_002):
        party_faction_003 = store_faction_of_party(troop_slot_002)
        party_slot_004 = party_get_slot(troop_slot_002,4)
        party_slot_005 = party_get_slot(troop_slot_002,5)
        if party_slot_004 == 1:
            if party_slot_eq(party_slot_005,54,-1):
                distance_parties_006 = store_distance_to_party_from_party(troop_slot_002,party_slot_005)
                if distance_parties_006 < 3:
                    if party_slot_eq(troop_slot_002,4,11):
                        party_slot_007 = party_get_slot(troop_slot_002,5)
                        party_set_slot(party_slot_005,54,party_slot_007)
                    else:
                        party_set_slot(party_slot_005,54,troop_slot_002)
                    #end
                #end
                cur_hours_008 = store_current_hours()
                party_set_slot(party_slot_005,64,cur_hours_008)
                s1 = str_store_party_name_link(party_slot_005)
                s2 = str_store_troop_name_link(troop_id_001)
                s3 = str_store_faction_name_link(party_faction_003)
                display_log_message("@{s1} has been besieged by {s2} of {s3}.")
                if True:
                    party_faction_009 = store_faction_of_party(party_slot_005)
                    if party_slot_eq(party_slot_005,7,trp.player) or party_faction_009 == fac.player_supporters_faction:
                        add_notification_menu(mnu.notification_center_under_siege,party_slot_005,troop_id_001)
                    #end
                #end
                village_set_state(party_slot_005,5)
                _g_recalculate_ais = 1
            #end
        elif party_slot_004 == 5 and party_slot_eq(troop_slot_002,8,0):
            var010 = 0
            for p_011 in range(p.village_1, p.salt_mine):
                if var010 == 0:
                    party_faction_012 = store_faction_of_party(p_011)
                    if party_slot_eq(p_011,7,trp.player):
                        faction_relation_013 = store_relation(fac.player_supporters_faction,party_faction_003)
                    else:
                        faction_relation_013 = store_relation(party_faction_012,party_faction_003)
                    #end
                #end
                if faction_relation_013 < 0:
                    distance_parties_014 = store_distance_to_party_from_party(p_011,troop_slot_002)
                    if distance_parties_014 < 15 and party_slot_eq(p_011,35,0):
                        var010 = p_011
                    #end
                #end
            #end
            if var010 == 0 and is_between(party_slot_005,p.village_1,p.salt_mine):
                var010 = party_slot_005
            #end
            if var010 > 0:
                party_set_ai_state(troop_slot_002,5,var010)
                if faction_slot_eq(party_faction_003,8,troop_id_001) and faction_slot_eq(party_faction_003,4,3):
                    faction_set_slot(party_faction_003,5,var010)
                #end
                pos1 = party_get_position(var010)
                map_get_random_position_around_position(pos2,1,1)
                party_set_ai_behavior(troop_slot_002,6)
                party_set_ai_target_position(troop_slot_002,2)
                party_set_ai_object(troop_slot_002,var010)
                party_set_slot(troop_slot_002,8,1)
            #end
        elif party_slot_004 == 5:
            if True:
                distance_parties_006 = store_distance_to_party_from_party(troop_slot_002,party_slot_005)
                if distance_parties_006 < 2:
                    if party_slot_eq(party_slot_005,35,0):
                        village_set_state(party_slot_005,1)
                        party_set_slot(party_slot_005,34,troop_slot_002)
                        if True:
                            party_faction_015 = store_faction_of_party(party_slot_005)
                            if party_slot_eq(party_slot_005,7,trp.player) or party_faction_015 == fac.player_supporters_faction:
                                distance_parties_014 = store_distance_to_party_from_party(p.main_party,party_slot_005)
                                if distance_parties_014 >= 30 or party_slot_eq(party_slot_005,134,1):
                                    add_notification_menu(mnu.notification_village_raid_started,party_slot_005,troop_id_001)
                                #end
                            #end
                        #end
                    #end
                elif party_slot_eq(party_slot_005,35,1):
                    pass
                else:
                    party_set_slot(troop_slot_002,8,0)
                #end
            #end
        elif party_slot_004 == 14:
            if True:
                party_battle_opponent_016 = party_get_battle_opponent(troop_slot_002)
                if party_battle_opponent_016 >= 0:
                    party_set_ai_state(troop_slot_002,-1,-1)
                    party_set_flags(troop_slot_002,65536,0)
                    party_set_slot(troop_slot_002,30,-1)
                #end
            #end
        elif party_slot_004 == 4:
            if party_slot_eq(troop_slot_002,8,0):
                distance_parties_006 = store_distance_to_party_from_party(troop_slot_002,party_slot_005)
                if distance_parties_006 < 6:
                    party_set_slot(troop_slot_002,8,1)
                    party_set_aggressiveness(troop_slot_002,8)
                    party_set_courage(troop_slot_002,8)
                    party_set_ai_initiative(troop_slot_002,100)
                    party_set_ai_behavior(troop_slot_002,3)
                    party_set_ai_object(troop_slot_002,party_slot_005)
                #end
            #end
        elif party_slot_004 == 7:
            pass
        #end
    #end


def begin_assault_on_center(var001):
    for trp_002 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_002,2,2) and not troop_slot_ge(trp_002,8,0):
            troop_slot_003 = troop_get_slot(trp_002,10)
            if troop_slot_003 > 0 and party_is_active(troop_slot_003):
                var004 = 0
                if party_slot_eq(troop_slot_003,4,1) and party_slot_eq(troop_slot_003,5,var001) and party_slot_eq(troop_slot_003,8,0):
                    var004 = 1
                elif party_slot_eq(troop_slot_003,4,11):
                    party_slot_005 = party_get_slot(troop_slot_003,5)
                    if party_slot_005 > 0 and party_is_active(party_slot_005) and party_slot_eq(party_slot_005,4,1) and party_slot_eq(party_slot_005,5,var001):
                        party_set_ai_state(troop_slot_003,1,var001)
                        var004 = 1
                    #end
                #end
            #end
        #end
        if var004 == 1:
            party_set_ai_behavior(troop_slot_003,4)
            party_set_ai_object(troop_slot_003,var001)
            party_set_flags(troop_slot_003,65536,1)
            party_set_slot(troop_slot_003,8,1)
        #end
    #end


def select_faction_marshall():
    pass


def get_center_faction_relation_including_player(var001, var002):
    party_faction_003 = store_faction_of_party(var001)
    faction_relation_004 = store_relation(party_faction_003,var002)
    if party_slot_eq(var001,7,trp.player):
        faction_relation_004 = store_relation(fac.player_supporters_faction,var002)
    #end
    reg0 = faction_relation_004


def update_report_to_army_quest_note(faction_id_001, var002, var003):
    var002_list2 = [
    3,
    2,
    ]
    var002_list1 = [
    1,
    2,
    5,
    ]
    if _number_of_report_to_army_quest_notes <= 13:
        faction_slot_004 = faction_get_slot(faction_id_001,8)
        if faction_id_001 == _players_kingdom and var002 != var003 and check_quest_active(qst.report_to_army) and faction_slot_004 >= 0:
            s11 = str_store_troop_name_link(faction_slot_004)
            cur_hours_005 = store_current_hours()
            game_get_date_text(0,cur_hours_005)
            if var002 in var002_list1:
                faction_slot_006 = faction_get_slot(faction_id_001,5)
                if faction_slot_006 >= 0:
                    s21 = str_store_party_name_link(faction_slot_006)
                #end
            #end
            if var002 == 1:
                if _g_gathering_reason >= 0:
                    s21 = str_store_party_name_link(_g_gathering_reason)
                    s14 = str_store_string(gstr.we_should_prepare_to_defend_s21_but_we_should_gather_our_forces_until_we_are_strong_enough_to_engage_them)
                else:
                    s14 = str_store_string(gstr.it_is_time_to_go_on_the_offensive_and_we_must_first_assemble_the_army)
                #end
                s14 = str_store_string("@[[[{s1}]]] {s11}: {s14}")
                add_quest_note_from_sreg(qst.report_to_army,_number_of_report_to_army_quest_notes,14,0)
                _number_of_report_to_army_quest_notes += 1
            elif var002 == 5:
                if is_between(faction_slot_006,p.town_1,p.village_1):
                    s14 = str_store_string(gstr.we_should_ride_to_break_the_siege_of_s21)
                    s14 = str_store_string("@[[[{s1}]]] {s11}: {s14}")
                    add_quest_note_from_sreg(qst.report_to_army,_number_of_report_to_army_quest_notes,14,0)
                    _number_of_report_to_army_quest_notes += 1
                elif is_between(faction_slot_006,p.village_1,p.salt_mine):
                    s14 = str_store_string(gstr.we_should_ride_to_defeat_the_enemy_gathered_near_s21)
                    s14 = str_store_string("@[[[{s1}]]] {s11}: {s14}")
                    add_quest_note_from_sreg(qst.report_to_army,_number_of_report_to_army_quest_notes,14,0)
                    _number_of_report_to_army_quest_notes += 1
                #end
            elif var002 in var002_list2:
                if is_between(faction_slot_006,p.town_1,p.village_1):
                    s14 = str_store_string(gstr.we_believe_the_fortress_will_be_worth_the_effort_to_take_it)
                    s14 = str_store_string("@{s14} [[[{s21}]]]")
                    s14 = str_store_string("@[[[{s1}]]] {s11}: {s14}")
                    add_quest_note_from_sreg(qst.report_to_army,_number_of_report_to_army_quest_notes,14,0)
                    _number_of_report_to_army_quest_notes += 1
                elif is_between(faction_slot_006,p.village_1,p.salt_mine):
                    s14 = str_store_string(gstr.we_shall_leave_a_fiery_trail_through_the_heart_of_the_enemys_lands_targeting_the_wealthy_settlements_if_we_can)
                    s14 = str_store_string("@{s14} [[[{s21}]]]")
                    s14 = str_store_string("@[[[{s1}]]] {s11}: {s14}")
                    add_quest_note_from_sreg(qst.report_to_army,_number_of_report_to_army_quest_notes,14,0)
                    _number_of_report_to_army_quest_notes += 1
                #end
            #end
        #end
    #end


def decide_faction_ai(faction_id_001):
    var045_list1 = [
    6,
    0,
    ]
    faction_slot_002 = faction_get_slot(faction_id_001,4)
    faction_slot_003 = faction_get_slot(faction_id_001,5)
    faction_slot_004 = faction_get_slot(faction_id_001,8)
    if faction_slot_eq(faction_id_001,21,0) and faction_id_001 != fac.player_supporters_faction and faction_slot_004 >= trp.player:
        troop_faction_005 = store_faction_of_troop(faction_slot_004)
        if faction_slot_004 == trp.player:
            troop_faction_005 = _players_kingdom
        #end
        var006 = 0
        if faction_slot_004 == trp.player and _g_player_is_captive == 1:
            var006 = 1
        #end
        if troop_faction_005 == faction_id_001 or troop_slot_ge(faction_slot_004,150,80) or var006 == 1 or troop_slot_ge(faction_slot_004,8,0):
            var007 = 0
            if faction_slot_004 == trp.player:
                var008 = 0
                if _g_player_days_as_marshal > 1:
                    for trp_009 in range(trp.npc1, trp.knight_1_1_wife):
                        if troop_slot_eq(trp_009,2,2):
                            troop_faction_010 = store_faction_of_troop(trp_009)
                            if troop_faction_010 == faction_id_001:
                                npc_decision_checklist_troop_follow_or_not(trp_009)
                                if reg0 == 1:
                                    var008 += 1
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if var008 < 4:
                var007 = 1
            #end
        #end
        if faction_slot_002 == 0 or faction_slot_002 == 6 or troop_faction_005 == faction_id_001 or var007 == 1 or var006 == 1 or troop_slot_ge(faction_slot_004,8,0) and faction_slot_eq(faction_id_001,64,0) or var006 == 1 or troop_slot_ge(faction_slot_004,8,0):
            faction_set_slot(faction_id_001,64,1)
            cur_hours_011 = store_current_hours()
            val_max(cur_hours_011,0)
            faction_set_slot(faction_id_001,65,cur_hours_011)
            faction_slot_012 = faction_get_slot(faction_id_001,8)
            if faction_slot_012 >= 0:
                troop_slot_013 = troop_get_slot(faction_slot_012,10)
                if party_is_active(troop_slot_013):
                    party_set_marshall(troop_slot_013,0)
                #end
            #end
        #end
        if _players_kingdom == faction_id_001 and faction_slot_eq(_players_kingdom,8,trp.player):
            add_notification_menu(mnu.notification_relieved_as_marshal,0,0)
        elif faction_slot_012 != trp.player:
            change_troop_renown(faction_slot_012,15)
        #end
        faction_set_slot(faction_id_001,8,-1)
        faction_slot_004 = -1
        for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_015 = store_faction_of_troop(trp_014)
            if troop_faction_015 == faction_id_001:
                troop_set_slot(trp_014,154,-1)
            #end
        #end
        if _players_kingdom == faction_id_001:
            troop_set_slot(trp.player,154,-1)
        #end
    elif faction_slot_004 == -1 and not faction_slot_ge(faction_id_001,64,1) and faction_slot_eq(faction_id_001,21,0) and faction_id_001 != fac.player_supporters_faction:
        faction_set_slot(faction_id_001,64,1)
        cur_hours_011 = store_current_hours()
        val_max(cur_hours_011,0)
        faction_set_slot(faction_id_001,65,cur_hours_011)
        for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_015 = store_faction_of_troop(trp_014)
            if troop_faction_015 == faction_id_001:
                troop_set_slot(trp_014,154,-1)
            #end
        #end
        if _players_kingdom == faction_id_001:
            troop_set_slot(trp.player,154,-1)
        #end
    elif faction_slot_004 == trp.player and _players_kingdom != faction_id_001:
        faction_set_slot(faction_id_001,64,1)
        cur_hours_011 = store_current_hours()
        val_max(cur_hours_011,0)
        faction_set_slot(faction_id_001,65,cur_hours_011)
        faction_slot_012 = faction_get_slot(faction_id_001,8)
        if faction_slot_012 >= 0:
            troop_slot_013 = troop_get_slot(faction_slot_012,10)
            if party_is_active(troop_slot_013):
                party_set_marshall(troop_slot_013,0)
            #end
        #end
        faction_set_slot(faction_id_001,8,-1)
        faction_slot_004 = -1
        for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_015 = store_faction_of_troop(trp_014)
            if troop_faction_015 == faction_id_001:
                troop_set_slot(trp_014,154,-1)
            #end
        #end
        if _players_kingdom == faction_id_001:
            troop_set_slot(trp.player,154,-1)
        #end
    #end
    if True:
        faction_slot_016 = faction_get_slot(faction_id_001,64)
        if is_between(faction_slot_016,p.town_1,p.salt_mine):
            party_faction_017 = store_faction_of_party(faction_slot_016)
            if party_faction_017 != faction_id_001:
                if _cheat_mode == 1:
                    s4 = str_store_faction_name(faction_id_001)
                    s5 = str_store_party_name(party_faction_017)
                    print("@{!}DEBUG -- {s4} drops {s5} as issue as it has changed hands")
                #end
            #end
        #end
        faction_set_slot(faction_id_001,64,0)
        for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_015 = store_faction_of_troop(trp_014)
            if troop_faction_015 == faction_id_001:
                troop_set_slot(trp_014,154,-1)
            #end
        #end
        if _players_kingdom == faction_id_001:
            troop_set_slot(trp.player,154,-1)
        #end
    #end
    if faction_slot_ge(faction_id_001,64,1) and faction_id_001 != fac.player_supporters_faction and faction_slot_ge(faction_id_001,64,p.town_1) or faction_slot_eq(faction_id_001,4,0) or faction_slot_eq(faction_id_001,4,6):
        faction_slot_018 = faction_get_slot(faction_id_001,11)
        var019 = 0
        var020 = 0
        troop_id_021 = -1
        troop_set_slot(trp.player,46,0)
        for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
            troop_set_slot(trp_014,46,0)
        #end
        for trp_022 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_023 = store_faction_of_troop(trp_022)
            if troop_faction_023 == faction_id_001:
                var019 += 1
                troop_slot_024 = troop_get_slot(trp_022,154)
                if troop_slot_024 > -1:
                    var020 += 1
                    troop_slot_025 = troop_get_slot(troop_slot_024,46)
                    troop_slot_025 += 1
                    troop_set_slot(troop_slot_024,46,troop_slot_025)
                    if troop_id_021 > -1:
                        troop_slot_026 = troop_get_slot(troop_id_021,46)
                        if troop_slot_025 > troop_slot_026:
                            troop_id_021 = troop_slot_024
                        elif troop_id_021 == -1:
                            troop_id_021 = troop_slot_024
                        #end
                    #end
                #end
            #end
        #end
        var027 = var019 / 5
        var027 *= 4
        cur_hours_028 = store_current_hours()
        faction_slot_029 = faction_get_slot(faction_id_001,65)
        cur_hours_028 -= faction_slot_029
        if var020 > var027 or cur_hours_028 >= 120:
            if _cheat_mode == 1:
                reg4 = var020
                reg5 = var027
                reg7 = cur_hours_028
                s4 = str_store_faction_name(faction_id_001)
                print("@{!}DEBUG -- Issue resolution for {s4}: {reg4} votes for a quorum of {reg5} - {reg7} hours on agenda")
            #end
        #end
        if _cheat_mode == 1:
            print("@{!}DEBUG -- Faction resolves political issue")
        #end
        troop_id_030 = -1
        if True:
            troop_get_relation_with_troop(faction_slot_018,troop_id_021)
            if reg0 >= 10 or troop_slot_eq(faction_slot_018,154,troop_id_021) or troop_slot_eq(faction_slot_018,154,-1):
                troop_id_030 = troop_id_021
            elif faction_slot_018 > -1:
                troop_slot_031 = troop_get_slot(faction_slot_018,154)
                if troop_slot_031 >= -1:
                    troop_id_030 = troop_slot_031
                #end
            #end
        #end
        if troop_id_030 == -1:
            pass
        elif troop_id_030 == trp.player and _players_kingdom == faction_id_001:
            add_notification_menu(mnu.notification_player_faction_political_issue_resolved_for_player,0,0)
        elif troop_id_030 == trp.player and _players_kingdom != faction_id_001:
            if _cheat_mode == 1:
                s4 = str_store_faction_name(faction_id_001)
                s5 = str_store_party_name(troop_id_030)
                print("@{!}DEBUG -- {s4} drops {s5} as winner - for having changed sides")
            #end
            for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_015 = store_faction_of_troop(trp_014)
                if troop_faction_015 == faction_id_001:
                    troop_set_slot(trp_014,154,-1)
                #end
            #end
            if _players_kingdom == faction_id_001:
                troop_set_slot(trp.player,154,-1)
            #end
        else:
            troop_faction_032 = store_faction_of_troop(troop_id_030)
            if troop_faction_032 != faction_id_001:
                if _cheat_mode == 1:
                    s4 = str_store_faction_name(faction_id_001)
                    s5 = str_store_party_name(troop_id_030)
                    print("@{!}DEBUG -- {s4} drops {s5} as winner - for having changed sides")
                #end
                for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
                    troop_faction_015 = store_faction_of_troop(trp_014)
                    if troop_faction_015 == faction_id_001:
                        troop_set_slot(trp_014,154,-1)
                    #end
                #end
                if _players_kingdom == faction_id_001:
                    troop_set_slot(trp.player,154,-1)
                #end
            else:
                faction_slot_033 = faction_get_slot(faction_id_001,64)
                if faction_slot_033 == 1 and is_between(troop_id_030,trp.npc1,trp.knight_1_1_wife) and is_between(troop_id_030,trp.npc1,trp.knight_1_1_wife) or _players_kingdom == faction_id_001:
                    faction_slot_004 = troop_id_030
                elif is_between(faction_slot_033,p.town_1,p.salt_mine):
                    give_center_to_lord(faction_slot_033,troop_id_030,0)
                    if faction_slot_033 == _g_castle_requested_by_player and party_slot_ge(faction_slot_033,7,trp.npc1):
                        party_faction_034 = store_faction_of_party(faction_slot_033)
                        if party_faction_034 == _players_kingdom:
                            _g_center_to_give_to_player = faction_slot_033
                            if True:
                                troop_slot_035 = troop_get_slot(trp.player,30)
                                if is_between(troop_slot_035,trp.npc1,trp.knight_1_1_wife) and _g_castle_requested_for_troop == troop_slot_035 and troop_id_030 != troop_slot_035:
                                    jump_to_menu(mnu.requested_castle_granted_to_another_female)
                                else:
                                    jump_to_menu(mnu.requested_castle_granted_to_another)
                                #end
                            #end
                        #end
                    #end
                #end
                if faction_id_001 == _players_kingdom:
                    add_notification_menu(mnu.notification_player_faction_political_issue_resolved,faction_slot_033,troop_id_030)
                #end
                faction_set_slot(faction_id_001,64,0)
                for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
                    troop_faction_015 = store_faction_of_troop(trp_014)
                    if troop_faction_015 == faction_id_001:
                        troop_set_slot(trp_014,154,-1)
                    #end
                #end
                if _players_kingdom == faction_id_001:
                    troop_set_slot(trp.player,154,-1)
                #end
            #end
        #end
    #end
    if True:
        faction_slot_036 = faction_get_slot(faction_id_001,64)
        if faction_slot_036 <= 0:
            var037 = 0
            var038 = 0
            var039 = 0
            troop_set_slot(trp.player,46,0)
            for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
                troop_set_slot(trp_014,46,0)
            #end
        #end
        for p_040 in range(p.town_1, p.salt_mine):
            party_faction_041 = store_faction_of_party(p_040)
            if party_faction_041 == faction_id_001:
                party_slot_042 = party_get_slot(p_040,7)
                if party_slot_042 < 0:
                    var038 += 1
                    if var039 == 0:
                        var039 = p_040
                    #end
                #end
            else:
                troop_set_slot(party_slot_042,46,1)
            #end
        #end
        var043 = var037 + var038
        if var043 >= 2:
            faction_set_slot(faction_id_001,64,var039)
            cur_hours_011 = store_current_hours()
            faction_set_slot(faction_id_001,65,cur_hours_011)
            for trp_014 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_015 = store_faction_of_troop(trp_014)
                if troop_faction_015 == faction_id_001:
                    troop_set_slot(trp_014,154,-1)
                #end
            #end
        #end
        if _players_kingdom == faction_id_001:
            troop_set_slot(trp.player,154,-1)
        #end
    #end
    if not faction_slot_eq(faction_id_001,8,faction_slot_004) and _players_kingdom == faction_id_001:
        s1 = str_store_troop_name_link(faction_slot_004)
        s2 = str_store_faction_name_link(faction_id_001)
        print("@{s1} is the new marshal of {s2}.")
        check_and_finish_active_army_quests_for_faction(faction_id_001)
    #end
    if not faction_slot_eq(faction_id_001,8,faction_slot_004) and faction_slot_004 > -1:
        appoint_faction_marshall(faction_id_001,faction_slot_004)
    #end
    if faction_id_001 == _players_kingdom and faction_slot_004 == trp.player:
        faction_slot_044 = trp.player
    elif is_between(faction_slot_004,trp.npc1,trp.knight_1_1_wife):
        faction_slot_044 = faction_slot_004
    else:
        faction_slot_044 = faction_get_slot(faction_id_001,11)
    #end
    npc_decision_checklist_faction_ai_alt(faction_slot_044)
    var045 = reg0
    party_id_046 = reg1
    if var045 != faction_slot_002 and var045 == 1:
        faction_slot_004 = faction_get_slot(faction_id_001,8)
        if faction_slot_004 >= 0:
            troop_slot_047 = troop_get_slot(faction_slot_004,10)
            party_set_slot(troop_slot_047,5,-1)
            _g_gathering_new_started = 1
            npc_decision_checklist_party_ai(faction_slot_004)
            party_set_ai_state(troop_slot_047,reg0,reg1)
            _g_gathering_new_started = 0
        elif var045 == faction_slot_002 and var045 == 1:
            faction_slot_004 = faction_get_slot(faction_id_001,8)
            if faction_slot_004 >= 0:
                troop_slot_047 = troop_get_slot(faction_slot_004,10)
                party_slot_048 = party_get_slot(troop_slot_047,5)
                if party_slot_048 >= 0 and troop_slot_047 >= 0 and party_is_active(troop_slot_047) and party_is_active(party_slot_048):
                    distance_parties_049 = store_distance_to_party_from_party(troop_slot_047,party_slot_048)
                    if distance_parties_049 <= 5:
                        party_set_slot(troop_slot_047,5,-1)
                    #end
                #end
            #end
        #end
    #end
    faction_set_slot(faction_id_001,4,var045)
    faction_set_slot(faction_id_001,5,party_id_046)
    update_report_to_army_quest_note(faction_id_001,var045,faction_slot_002)
    if var045 == 6:
        cur_hours_011 = store_current_hours()
        faction_set_slot(faction_id_001,94,cur_hours_011)
        if _g_player_eligible_feast_center_no == party_id_046:
            _g_player_eligible_feast_center_no = -1
        #end
        if is_between(party_id_046,p.town_1,p.castle_1):
            party_set_slot(party_id_046,156,2)
        #end
    #end
    if var045 != faction_slot_002:
        if _cheat_mode >= 1:
            s5 = str_store_faction_name(faction_id_001)
            print(gstr.s5_decides_s14)
        #end
        cur_hours_011 = store_current_hours()
        faction_set_slot(faction_id_001,97,cur_hours_011)
        if faction_slot_002 == 6:
            faction_conclude_feast(faction_id_001,faction_slot_003)
        #end
        if var045 == 6:
            faction_slot_050 = faction_get_slot(faction_id_001,5)
            party_slot_051 = party_get_slot(faction_slot_050,7)
            if check_quest_active(qst.wed_betrothed) and quest_slot_eq(qst.wed_betrothed,6,party_slot_051) and not quest_slot_ge(qst.wed_betrothed,23,362):
                add_notification_menu(mnu.notification_player_wedding_day,party_slot_051,faction_slot_050)
            elif check_quest_active(qst.wed_betrothed_female):
                quest_slot_052 = quest_get_slot(qst.wed_betrothed,6)
                troop_faction_053 = store_faction_of_troop(quest_slot_052)
                if troop_faction_053 == faction_id_001 and not quest_slot_ge(qst.wed_betrothed,23,362):
                    add_notification_menu(mnu.notification_player_kingdom_holds_feast,party_slot_051,faction_slot_050)
                elif _players_kingdom == faction_id_001 and troop_slot_ge(trp.player,7,150):
                    party_slot_051 = party_get_slot(faction_slot_050,7)
                    add_notification_menu(mnu.notification_player_kingdom_holds_feast,party_slot_051,faction_slot_050)
                #end
            #end
        #end
        if faction_slot_002 == 1 and is_between(var045,2,6):
            if _cheat_mode == 1:
                s5 = str_store_faction_name(faction_id_001)
                print(gstr.s5_begins_offensive)
            #end
            if True:
                var054 = 0
                var055 = -1
                var056 = 30
                troop_slot_057 = troop_get_slot(faction_slot_004,10)
                if party_is_active(troop_slot_057):
                    for trp_058 in range(trp.npc1, trp.knight_1_1_wife):
                        troop_faction_059 = store_faction_of_troop(trp_058)
                        if troop_faction_059 == faction_id_001:
                            troop_slot_060 = troop_get_slot(trp_058,10)
                            if party_is_active(troop_slot_060) and party_slot_eq(troop_slot_060,4,11) and party_slot_eq(troop_slot_060,5,troop_slot_057):
                                var054 += 1
                                if _cheat_mode >= 1:
                                    s4 = str_store_party_name(troop_slot_060)
                                    print("@{!}DEBUG -- {s4} participates in offensive")
                                #end
                            #end
                        #end
                    #end
                    party_size_wo_prisoners_061 = store_party_size_wo_prisoners(troop_slot_060)
                    party_size_wo_prisoners_061 -= 50
                    val_abs(party_size_wo_prisoners_061)
                    if party_size_wo_prisoners_061 < var056:
                        var055 = troop_slot_060
                        var056 = party_size_wo_prisoners_061
                    #end
                #end
                if var054 > 2 and party_is_active(var055) and party_is_active(troop_slot_057):
                    party_set_ai_state(var055,12,troop_slot_057)
                    if _cheat_mode >= 1:
                        s4 = str_store_party_name(var055)
                        print("@{!}DEBUG -- {s4} chosen as screen")
                    #end
                #end
            #end
        else:
            cur_hours_011 = store_current_hours()
            if faction_slot_002 == 1 or faction_slot_002 == 2 or faction_slot_002 == 3 or faction_slot_002 == 4 and var045 == 0 or var045 == 6:
                check_and_finish_active_army_quests_for_faction(faction_id_001)
                faction_set_slot(faction_id_001,95,cur_hours_011)
            #end
        #end
    #end
    if _players_kingdom == faction_id_001 and not faction_slot_eq(faction_id_001,4,2) and check_quest_active(qst.join_siege_with_army):
        abort_quest(qst.join_siege_with_army,0)
    #end
    if var045 in var045_list1:
        cur_hours_062 = store_current_hours()
        faction_slot_063 = faction_get_slot(faction_id_001,97)
        cur_hours_062 -= faction_slot_063
        if cur_hours_062 >= 18:
            cur_hours_011 = store_current_hours()
            faction_set_slot(faction_id_001,96,cur_hours_011)
        #end
    #end


def check_and_finish_active_army_quests_for_faction(faction_id_001):
    if _players_kingdom == faction_id_001:
        if check_quest_active(qst.report_to_army):
            cancel_quest(qst.report_to_army)
        #end
        var002 = 0
        for qst_003 in range(qst.deliver_cattle_to_army, qst.rescue_lord_by_replace):
            if check_quest_active(qst_003):
                cancel_quest(qst_003)
                troop_slot_004 = troop_get_slot(qst_003,6)
                var002 = 1
            #end
        #end
        if check_quest_active(qst.follow_army):
            var002 = 1
            troop_slot_004 = troop_get_slot(qst.follow_army,6)
            end_quest(qst.follow_army)
        #end
        if var002 == 1:
            faction_slot_005 = faction_get_slot(faction_id_001,95)
            cur_hours_006 = store_current_hours()
            var007 = cur_hours_006 - faction_slot_005
            var008 = var007 * 5
            var008 /= 50
            var008 *= 50
            var008 += 50
            add_xp_as_reward(var008)
            troop_change_relation_with_troop(trp.player,troop_slot_004,2)
        #end
    #end


def troop_get_player_relation(troop_id_001):
    troop_slot_002_list1 = [
    6,
    7,
    ]
    troop_slot_002_list1 = [
    6,
    7,
    ]
    troop_slot_002 = troop_get_slot(troop_id_001,52)
    troop_slot_003 = troop_get_slot(troop_id_001,22)
    var004 = 0
    if troop_slot_002 == 2:
        troop_slot_003 += -3
    #end
    if _player_honor >= 0:
        if troop_slot_002 in troop_slot_002_list1:
            var004 = _player_honor / 3
        #end
    #end
    if _player_honor < 0:
        if troop_slot_002 in troop_slot_002_list1:
            var004 = _player_honor / 3
        elif troop_slot_002 == 1:
            var004 = _player_honor / 5
        #end
    #end
    troop_slot_003 += var004
    val_clamp(troop_slot_003,-100,101)
    reg0 = troop_slot_003


def change_troop_renown(troop_id_001, var002):
    troop_slot_003 = troop_get_slot(troop_id_001,7)
    if var002 > 0:
        reg4 = var002
        var004 = troop_slot_003 / 200
        var002 -= var004
        val_max(var002,0)
        if troop_id_001 == trp.player:
            reg5 = var002
            if _cheat_mode == 1:
                print(gstr.renown_change_of_reg4_reduced_to_reg5_because_of_high_existing_renown)
            #end
        #end
    #end
    var005 = troop_slot_003 + var002
    val_max(var005,0)
    troop_set_slot(troop_id_001,7,var005)
    if troop_id_001 == trp.player:
        if var005 >= 50:
            if True:
                troop_type_006 = troop_get_type(trp.player)
                if troop_type_006 == 1:
                    unlock_achievement(79)
                #end
            #end
        #end
        s1 = str_store_troop_name(troop_id_001)
        reg12 = var002
        val_abs(reg12)
        if var002 > 0:
            print("@You gained {reg12} renown.")
        elif var002 < 0:
            print("@You lose {reg12} renown.")
        #end
    #end
    update_troop_notes(troop_id_001)


def change_player_relation_with_troop(troop_id_001, var002):
    if troop_id_001 != trp.player and not is_between(troop_id_001,trp.farmer,trp.town_walker_1) and troop_id_001 != -1 and var002 != 0:
        troop_get_player_relation(troop_id_001)
        var003 = reg0
        troop_slot_004 = troop_get_slot(troop_id_001,22)
        troop_slot_004 += var002
        val_clamp(troop_slot_004,-100,101)
        if True:
            troop_set_slot(troop_id_001,22,troop_slot_004)
            if troop_slot_004 <= -50:
                unlock_achievement(29)
            #end
            s1 = str_store_troop_name_link(troop_id_001)
            troop_get_player_relation(troop_id_001)
            var005 = reg0
            if var003 != var005:
                reg1 = var003
                reg2 = var005
                if var002 > 0:
                    print(gstr.troop_relation_increased)
                elif var002 < 0:
                    print(gstr.troop_relation_detoriated)
                #end
            #end
            if troop_id_001 == _g_talk_troop:
                _g_talk_troop_relation = var005
                setup_talk_info()
            #end
            update_troop_notes(troop_id_001)
        #end
    #end


def change_player_relation_with_center(party_id_001, var002):
    party_slot_003 = party_get_slot(party_id_001,26)
    reg1 = party_slot_003
    party_slot_003 += var002
    val_clamp(party_slot_003,-100,100)
    reg2 = party_slot_003
    party_set_slot(party_id_001,26,party_slot_003)
    if party_slot_003 <= -50:
        unlock_achievement(29)
    #end
    s1 = str_store_party_name_link(party_id_001)
    if var002 > 0:
        print("@Your relation with {s1} has improved.")
    elif var002 < 0:
        print("@Your relation with {s1} has deteriorated.")
    #end
    if party_slot_eq(party_id_001,0,4):
        update_volunteer_troops_in_village(party_id_001)
    #end
    if is_between(_g_talk_troop,trp.village_1_elder,trp.merchants_end) or is_between(_g_talk_troop,trp.town_1_mayor,trp.village_1_elder):
        _g_talk_troop_relation = party_slot_003
        setup_talk_info()
    #end


def change_player_relation_with_faction(faction_id_001, var002):
    faction_relation_003 = store_relation(faction_id_001,fac.player_supporters_faction)
    reg1 = faction_relation_003
    faction_relation_003 += var002
    reg2 = faction_relation_003
    set_relation(faction_id_001,fac.player_faction,faction_relation_003)
    set_relation(faction_id_001,fac.player_supporters_faction,faction_relation_003)
    if faction_relation_003 <= -50:
        unlock_achievement(29)
    #end
    s1 = str_store_faction_name_link(faction_id_001)
    if var002 > 0:
        print(gstr.faction_relation_increased)
    elif var002 < 0:
        print(gstr.faction_relation_detoriated)
    #end
    update_all_notes()


def set_player_relation_with_faction(var001, var002):
    faction_relation_003 = store_relation(var001,fac.player_supporters_faction)
    var004 = var002 - faction_relation_003
    change_player_relation_with_faction(var001,var004)


def change_player_relation_with_faction_ex(faction_id_001, var002):
    faction_relation_003 = store_relation(faction_id_001,fac.player_supporters_faction)
    reg1 = faction_relation_003
    faction_relation_003 += var002
    reg2 = faction_relation_003
    set_relation(faction_id_001,fac.player_faction,faction_relation_003)
    set_relation(faction_id_001,fac.player_supporters_faction,faction_relation_003)
    s1 = str_store_faction_name_link(faction_id_001)
    if var002 > 0:
        print(gstr.faction_relation_increased)
    elif var002 < 0:
        print(gstr.faction_relation_detoriated)
    #end
    for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if faction_slot_eq(fac_004,21,0) and faction_id_001 != fac_004:
            faction_relation_005 = store_relation(faction_id_001,fac_004)
            faction_relation_003 = store_relation(fac_004,fac.player_supporters_faction)
            var006 = var002 * faction_relation_005
            var006 /= 100
            faction_relation_003 += var006
            set_relation(fac_004,fac.player_faction,faction_relation_003)
            set_relation(fac_004,fac.player_supporters_faction,faction_relation_003)
        #end
    #end
    if faction_slot_eq(fac.player_supporters_faction,21,0):
        for fac_007 in range(fac.player_supporters_faction, fac.kingdoms_end):
            if faction_slot_eq(fac_007,21,0):
                update_faction_notes(fac_007)
            #end
        #end
    #end


def cf_get_random_active_faction_except_player_faction_and_faction(var001):
    var002 = 0
    for fac_003 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if fac_003 != fac.player_supporters_faction and fac_003 != var001 and faction_slot_eq(fac_003,21,0):
            var002 += 1
        #end
    #end
    if var002 > 0:
        var004 = -1
        random_x_005 = store_random_in_range(0,var002)
        for fac_003 in range(fac.player_supporters_faction, fac.kingdoms_end):
            if random_x_005 >= 0 and fac_003 != fac.player_supporters_faction and fac_003 != var001 and faction_slot_eq(fac_003,21,0):
                random_x_005 -= 1
                if random_x_005 < 0:
                    var004 = fac_003
                #end
            #end
        #end
    #end
    reg0 = var004


def make_kingdom_hostile_to_player(var001, var002):
    if var002 < 0:
        faction_relation_003 = store_relation(var001,fac.player_supporters_faction)
        val_min(faction_relation_003,0)
        faction_relation_003 += var002
        set_player_relation_with_faction(var001,faction_relation_003)
    #end


def change_player_honor(var001):
    _player_honor += var001
    if var001 > 0:
        print("@You gain honour.")
    elif var001 < 0:
        print("@You lose honour.")
    #end


def change_player_party_morale(var001):
    party_morale_002 = party_get_morale(p.main_party)
    val_clamp(party_morale_002,0,100)
    var003 = party_morale_002 + var001
    val_clamp(var003,0,100)
    party_set_morale(p.main_party,var003)
    if var003 < party_morale_002:
        reg1 = party_morale_002 - var003
        print(gstr.party_lost_morale)
    elif var003 > party_morale_002:
        reg1 = var003 - party_morale_002
        print(gstr.party_gained_morale)
    #end


def cf_player_has_item_without_modifier(var001, var002):
    if player_has_item(var001):
        var003 = 0
        troop_inv_capacity_004 = troop_get_inventory_capacity(trp.player)
        for inventory_slot_no_005 in range(0, troop_inv_capacity_004):
            troop_inv_slot_006 = troop_get_inventory_slot(trp.player,inventory_slot_no_005)
            if troop_inv_slot_006 == var001:
                troop_inv_slot_modifier_007 = troop_get_inventory_slot_modifier(trp.player,inventory_slot_no_005)
                if troop_inv_slot_modifier_007 != var002:
                    var003 = 1
                    troop_inv_capacity_004 = 0
                #end
            #end
        #end
    #end


def get_player_party_morale_values():
    party_num_companions_stacks_001 = party_get_num_companion_stacks(p.main_party)
    var002 = 0
    for stack_no_003 in range(1, party_num_companions_stacks_001):
        troop_id_004 = party_stack_get_troop_id(p.main_party,stack_no_003)
        if troop_is_hero(troop_id_004):
            var002 += 1
        else:
            party_stack_size_005 = party_stack_get_size(p.main_party,stack_no_003)
            var002 += party_stack_size_005
        #end
    #end
    _g_player_party_morale_modifier_party_size = var002
    skill_lvl_006 = store_skill_level(skl.leadership,trp.player)
    if _players_kingdom == fac.player_supporters_faction:
        faction_slot_007 = faction_get_slot(_players_kingdom,11)
        if faction_slot_007 == trp.player:
            _g_player_party_morale_modifier_leadership = skill_lvl_006 * 15
        else:
            _g_player_party_morale_modifier_leadership = skill_lvl_006 * 12
        #end
    #end
    var008 = _g_player_party_morale_modifier_leadership
    var008 -= _g_player_party_morale_modifier_party_size
    var008 += 50
    _g_player_party_morale_modifier_food = 0
    for itm_009 in range(itm.smoked_fish, itm.siege_supply):
        if cf_player_has_item_without_modifier(itm_009,41):
            item_slot_010 = item_get_slot(itm_009,1)
            item_slot_010 *= 3
            item_slot_010 /= 2
            _g_player_party_morale_modifier_food += item_slot_010
        #end
    #end
    var008 += _g_player_party_morale_modifier_food
    if _g_player_party_morale_modifier_food == 0:
        _g_player_party_morale_modifier_no_food = 30
        var008 -= _g_player_party_morale_modifier_no_food
    else:
        _g_player_party_morale_modifier_no_food = 0
    #end
    _g_player_party_morale_modifier_debt = 0
    if _g_player_debt_to_party_members > 0:
        calculate_player_faction_wage()
        var011 = reg0
        _g_player_party_morale_modifier_debt = _g_player_debt_to_party_members * 10
        val_max(var011,1)
        _g_player_party_morale_modifier_debt /= var011
        val_clamp(_g_player_party_morale_modifier_debt,1,31)
        var008 -= _g_player_party_morale_modifier_debt
    #end
    val_clamp(var008,0,100)
    reg0 = var008


def diplomacy_start_war_between_kingdoms(faction_id_001, faction_id_002, var003):
    npc_decision_checklist_peace_or_war(faction_id_001,faction_id_002,-1)
    var004 = reg1
    if faction_id_001 == fac.player_supporters_faction:
        var005 = 90
    elif var004 == gstr.s12s15_declared_war_to_control_calradia:
        var005 = 90
    elif var004 == gstr.s12s15_considers_s16_to_be_dangerous_and_untrustworthy_and_shehe_wants_to_bring_s16_down:
        var005 = 91
    elif var004 == gstr.s12s15_is_anxious_to_reclaim_old_lands_such_as_s18_now_held_by_s16:
        var005 = 92
    elif var004 == gstr.s12s15_faces_too_much_internal_discontent_to_feel_comfortable_ignoring_recent_provocations_by_s16s_subjects:
        var005 = 94
    elif var004 == gstr.s12s15_is_alarmed_by_the_growing_power_of_s16:
        var005 = 93
    #end
    add_log_entry(var005,faction_id_001,0,0,faction_id_002)
    diplomacy_faction_get_diplomatic_status_with_faction(faction_id_001,faction_id_002)
    var006 = reg0
    if var003 == 1 and var006 == -1:
        faction_follows_controversial_policy(faction_id_001,83)
    elif var003 == 1 and var006 == 0:
        faction_follows_controversial_policy(faction_id_001,80)
    elif var006 == 1:
        faction_follows_controversial_policy(faction_id_001,84)
    #end
    faction_relation_007 = store_relation(faction_id_001,faction_id_002)
    val_min(faction_relation_007,-10)
    faction_relation_007 += -30
    set_relation(faction_id_001,faction_id_002,faction_relation_007)
    if _players_kingdom == faction_id_001:
        faction_relation_007 = store_relation(fac.player_supporters_faction,faction_id_002)
        val_min(faction_relation_007,-30)
        set_player_relation_with_faction(faction_id_002,faction_relation_007)
    elif _players_kingdom == faction_id_002:
        faction_relation_007 = store_relation(fac.player_supporters_faction,faction_id_001)
        val_min(faction_relation_007,-30)
        set_player_relation_with_faction(faction_id_001,faction_relation_007)
    #end
    if var003 == 1:
        s1 = str_store_faction_name_link(faction_id_001)
        s2 = str_store_faction_name_link(faction_id_002)
        display_log_message("@{s1} has declared war against {s2}.")
        cur_hours_008 = store_current_hours()
        faction_set_slot(faction_id_001,98,cur_hours_008)
        faction_set_slot(faction_id_002,98,cur_hours_008)
        slot_no_009 = faction_id_002 + 120
        slot_no_010 = faction_id_002 + 130
        slot_no_009 -= fac.player_supporters_faction
        slot_no_010 -= fac.player_supporters_faction
        faction_set_slot(faction_id_001,slot_no_009,0)
        faction_set_slot(faction_id_001,slot_no_010,0)
        slot_no_009 = faction_id_001 + 120
        slot_no_010 = faction_id_001 + 130
        slot_no_009 -= fac.player_supporters_faction
        slot_no_010 -= fac.player_supporters_faction
        faction_set_slot(faction_id_002,slot_no_009,0)
        faction_set_slot(faction_id_002,slot_no_010,0)
        add_notification_menu(mnu.notification_war_declared,faction_id_001,faction_id_002)
        update_faction_notes(faction_id_001)
        update_faction_notes(faction_id_002)
        _g_recalculate_ais = 1
    #end
    if check_quest_active(qst.cause_provocation) and not check_quest_succeeded(qst.cause_provocation) and _players_kingdom == faction_id_001 or _players_kingdom == faction_id_002:
        abort_quest(qst.cause_provocation,0)
    #end


def diplomacy_party_attacks_neutral(party_id_001, party_id_002):
    party_faction_003 = store_faction_of_party(party_id_001)
    party_faction_004 = store_faction_of_party(party_id_002)
    troop_id_005 = party_stack_get_troop_id(party_id_001,0)
    if party_id_001 == p.main_party and party_faction_003 != fac.player_supporters_faction:
        party_faction_003 = _players_kingdom
    elif party_id_001 == p.main_party and party_faction_003 == fac.player_supporters_faction:
        pass
    #end
    if party_id_001 == p.main_party:
        faction_relation_006 = store_relation(party_faction_003,party_faction_004)
        if faction_relation_006 >= 0:
            change_player_honor(-2)
        #end
    #end
    if check_quest_active(qst.cause_provocation) and quest_slot_eq(qst.cause_provocation,3,party_faction_004):
        quest_slot_007 = quest_get_slot(qst.cause_provocation,6)
        party_faction_003 = store_faction_of_troop(quest_slot_007)
        succeed_quest(qst.cause_provocation)
    #end
    diplomacy_faction_get_diplomatic_status_with_faction(party_faction_003,party_faction_004)
    var008 = reg0
    if party_faction_003 == fac.player_supporters_faction and not faction_slot_eq(fac.player_supporters_faction,21,0):
        pass
    elif var008 == -2:
        pass
    elif party_faction_003 == fac.player_supporters_faction and faction_slot_eq(party_faction_003,11,trp.player):
        faction_follows_controversial_policy(fac.player_supporters_faction,80)
    elif var008 == 1:
        troop_id_009 = party_stack_get_troop_id(party_id_002,0)
        if not is_between(troop_id_009,trp.npc1,trp.knight_1_1_wife):
            party_faction_010 = store_faction_of_party(party_id_002)
            troop_id_009 = faction_get_slot(party_faction_010,11)
        #end
        add_log_entry(77,troop_id_005,-1,troop_id_009,party_faction_003)
    else:
        add_log_entry(76,troop_id_005,-1,troop_id_009,party_faction_003)
    #end
    if is_between(party_id_002,p.village_1,p.salt_mine):
        add_log_entry(1,troop_id_005,party_id_002,-1,party_faction_004)
    else:
        party_template_id_011 = party_get_template_id(party_id_002)
        if party_template_id_011 != pt.kingdom_hero_party:
            if _cheat_mode >= 1:
                s5 = str_store_faction_name(party_faction_004)
                print("@{!}DEbug - {s5} caravan attacked")
            #end
        #end
        add_log_entry(3,troop_id_005,-1,-1,party_faction_004)
    #end
    slot_no_012 = party_faction_003 + 130
    slot_no_012 -= fac.player_supporters_faction
    faction_set_slot(party_faction_004,slot_no_012,0)
    slot_no_013 = party_faction_003 + 130
    slot_no_013 -= fac.player_supporters_faction
    if var008 != -2 and faction_slot_eq(party_faction_004,slot_no_013,0):
        faction_set_slot(party_faction_004,slot_no_013,30)
    #end


def party_calculate_and_set_nearby_friend_enemy_follower_strengths(party_id_001):
    var002 = 0
    var003 = 0
    var004 = 0
    party_faction_005 = store_faction_of_party(party_id_001)
    var006 = trp.knight_1_1_wife
    var006 += 1
    for var007 in range(trp.npc1, var006):
        if var007 == trp.knight_1_1_wife:
            troop_id_008 = trp.player
        else:
            troop_id_008 = var007
        #end
        if troop_slot_eq(troop_id_008,2,2):
            troop_slot_009 = troop_get_slot(troop_id_008,10)
            if troop_slot_009 >= 0 and party_is_active(troop_slot_009):
                troop_faction_010 = store_faction_of_troop(troop_id_008)
                faction_relation_011 = store_relation(troop_faction_010,party_faction_005)
                if faction_relation_011 == 0 or troop_faction_010 == party_faction_005 and party_id_001 != troop_slot_009:
                    party_slot_012 = party_get_slot(troop_slot_009,56)
                    if not is_between(party_id_001,p.town_1,p.salt_mine) and party_slot_eq(troop_slot_009,4,11):
                        party_slot_013 = party_get_slot(troop_slot_009,5)
                        if party_slot_013 == party_id_001:
                            var002 += party_slot_012
                        else:
                            distance_parties_014 = store_distance_to_party_from_party(troop_slot_009,party_id_001)
                            if distance_parties_014 < 20:
                                if distance_parties_014 < 5:
                                    var015 = party_slot_012
                                elif distance_parties_014 < 10:
                                    var015 = party_slot_012 / 2
                                elif distance_parties_014 < 15:
                                    var015 = party_slot_012 / 4
                                else:
                                    var015 = party_slot_012 / 8
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if troop_faction_010 == party_faction_005 or faction_relation_011 > 0:
                var003 += var015
            elif faction_relation_011 < 0:
                var004 += var015
            #end
        #end
    #end
    party_set_slot(party_id_001,59,var002)
    party_set_slot(party_id_001,57,var003)
    party_set_slot(party_id_001,58,var004)


def init_ai_calculation():
    for trp_001 in range(trp.npc1, trp.heroes_end):
        if troop_slot_eq(trp_001,2,2):
            troop_slot_002 = troop_get_slot(trp_001,10)
            if party_is_active(troop_slot_002):
                party_calculate_strength(troop_slot_002,0)
            #end
        #end
    #end
    party_calculate_strength(p.main_party,0)
    for p_003 in range(p.town_1, p.village_1):
        party_calculate_strength(p_003,0)
    #end
    for p_003 in range(p.town_1, p.village_1):
        party_calculate_and_set_nearby_friend_enemy_follower_strengths(p_003)
    #end
    for trp_001 in range(trp.npc1, trp.heroes_end):
        troop_slot_004 = troop_get_slot(trp_001,10)
        if troop_slot_004 > 0 and party_is_active(troop_slot_004):
            party_calculate_and_set_nearby_friend_enemy_follower_strengths(troop_slot_004)
        #end
    #end
    party_calculate_and_set_nearby_friend_enemy_follower_strengths(p.main_party)


def recalculate_ais():
    init_ai_calculation()
    for fac_001 in range(fac.player_supporters_faction, fac.kingdoms_end):
        reg8 = fac_001
        if faction_slot_eq(fac_001,21,0):
            decide_faction_ai(fac_001)
        #end
    #end
    for trp_002 in range(trp.npc1, trp.knight_1_1_wife):
        fac_001 = store_faction_of_troop(trp_002)
        if troop_slot_eq(trp_002,2,2):
            calculate_troop_ai(trp_002)
        #end
    #end


def calculate_troop_ai(troop_id_001):
    if troop_slot_eq(troop_id_001,2,2) and not troop_slot_ge(troop_id_001,8,0):
        troop_slot_002 = troop_get_slot(troop_id_001,10)
        if troop_slot_002 > 0 and party_is_active(troop_slot_002):
            npc_decision_checklist_party_ai(troop_id_001)
            party_set_ai_state(troop_slot_002,reg0,reg1)
        #end
    #end


def diplomacy_start_peace_between_kingdoms(faction_id_001, faction_id_002, var003):
    party_faction_009_list1 = [
    faction_id_002,
    faction_id_001,
    ]
    party_faction_008_list1 = [
    faction_id_002,
    faction_id_001,
    ]
    party_faction_006_list1 = [
    faction_id_002,
    faction_id_001,
    ]
    faction_relation_004 = store_relation(faction_id_001,faction_id_002)
    val_max(faction_relation_004,0)
    set_relation(faction_id_001,faction_id_002,faction_relation_004)
    exchange_prisoners_between_factions(faction_id_001,faction_id_002)
    if _players_kingdom == faction_id_001:
        faction_relation_004 = store_relation(fac.player_supporters_faction,faction_id_002)
        val_max(faction_relation_004,0)
        set_player_relation_with_faction(faction_id_002,faction_relation_004)
        event_kingdom_make_peace_with_kingdom(faction_id_002,fac.player_supporters_faction)
    elif _players_kingdom == faction_id_002:
        faction_relation_004 = store_relation(fac.player_supporters_faction,faction_id_001)
        val_max(faction_relation_004,0)
        set_player_relation_with_faction(faction_id_001,faction_relation_004)
        event_kingdom_make_peace_with_kingdom(faction_id_001,fac.player_supporters_faction)
    #end
    for p_005 in range(p.town_1, p.salt_mine):
        party_faction_006 = store_faction_of_party(p_005)
        if party_faction_006 in party_faction_006_list1:
            party_slot_007 = party_get_slot(p_005,54)
            if party_slot_007 >= 0 and party_is_active(party_slot_007):
                party_faction_008 = store_faction_of_party(party_slot_007)
                if party_faction_008 in party_faction_008_list1:
                    lift_siege(p_005,0)
                #end
            #end
        #end
    #end
    if _players_kingdom == faction_id_001 or _players_kingdom == faction_id_002 and _g_player_besiege_town >= 0 and party_is_active(_g_player_besiege_town):
        party_faction_009 = store_faction_of_party(_g_player_besiege_town)
        if party_faction_009 in party_faction_009_list1:
            lift_siege(_g_player_besiege_town,0)
            _g_player_besiege_town = -1
        #end
    #end
    if var003 == 1:
        s1 = str_store_faction_name_link(faction_id_001)
        s2 = str_store_faction_name_link(faction_id_002)
        display_log_message("@{s1} and {s2} have made peace with each other.")
        add_notification_menu(mnu.notification_peace_declared,faction_id_001,faction_id_002)
        event_kingdom_make_peace_with_kingdom(faction_id_001,faction_id_002)
        event_kingdom_make_peace_with_kingdom(faction_id_002,faction_id_001)
        _g_recalculate_ais = 1
    #end
    if True:
        slot_no_010 = faction_id_001 + 120
        slot_no_010 -= fac.player_supporters_faction
        faction_set_slot(faction_id_002,slot_no_010,40)
        slot_no_010 = faction_id_002 + 120
        slot_no_010 -= fac.player_supporters_faction
        faction_set_slot(faction_id_001,slot_no_010,40)
        slot_no_011 = faction_id_002 + 140
        slot_no_011 -= fac.player_supporters_faction
        faction_set_slot(faction_id_001,slot_no_011,0)
        slot_no_012 = faction_id_001 + 140
        slot_no_012 -= fac.player_supporters_faction
        faction_set_slot(faction_id_002,slot_no_012,0)
    #end


def event_kingdom_make_peace_with_kingdom(var001, var002):
    if check_quest_active(qst.capture_prisoners):
        if _players_kingdom == var001 and quest_slot_eq(qst.capture_prisoners,3,var002):
            cancel_quest(qst.capture_prisoners)
        elif _players_kingdom == var002 and quest_slot_eq(qst.capture_prisoners,3,var001):
            cancel_quest(qst.capture_prisoners)
        #end
    #end
    if check_quest_active(qst.capture_enemy_hero):
        if _players_kingdom == var001 and quest_slot_eq(qst.capture_enemy_hero,3,var002):
            cancel_quest(qst.capture_enemy_hero)
        elif _players_kingdom == var002 and quest_slot_eq(qst.capture_enemy_hero,3,var001):
            cancel_quest(qst.capture_enemy_hero)
        #end
    #end
    if check_quest_active(qst.persuade_lords_to_make_peace):
        quest_slot_003 = quest_get_slot(qst.persuade_lords_to_make_peace,2)
        quest_slot_004 = quest_get_slot(qst.persuade_lords_to_make_peace,4)
        if quest_slot_003 < 0:
            quest_slot_003 *= -1
        #end
        if quest_slot_004 < 0:
            quest_slot_004 *= -1
        #end
        troop_faction_005 = store_faction_of_troop(quest_slot_003)
        troop_faction_006 = store_faction_of_troop(quest_slot_004)
        if troop_faction_005 == var001 or troop_faction_006 == var001 and troop_faction_005 == var002 or troop_faction_006 == var002:
            cancel_quest(qst.persuade_lords_to_make_peace)
        #end
    #end
    if faction_slot_eq(var002,11,trp.player) or faction_slot_eq(var001,11,trp.player):
        change_player_right_to_rule(3)
    #end


def randomly_start_war_peace_new(var001):
    var002 = 0
    if is_between(_players_kingdom,fac.kingdom_1,fac.kingdoms_end):
        var002 = 1
    #end
    for fac_003 in range(fac.kingdom_1, fac.kingdoms_end):
        if faction_slot_eq(fac_003,21,0):
            for fac_004 in range(fac.player_supporters_faction, fac.kingdoms_end):
                if fac_003 != fac_004 and faction_slot_eq(fac_004,21,0):
                    npc_decision_checklist_peace_or_war(fac_003,fac_004,-1)
                    var005 = reg0
                    faction_relation_006 = store_relation(fac_003,fac_004)
                    if faction_relation_006 < 0:
                        if fac_003 == _players_kingdom:
                            var002 = 0
                        #end
                        if var005 >= 1:
                            if fac_004 == fac.player_supporters_faction:
                                var007 = var005 * 2
                                random_x_008 = store_random_in_range(0,20)
                                if random_x_008 < var007:
                                    add_notification_menu(mnu.question_peace_offer,fac_003,0)
                                #end
                            #end
                        else:
                            npc_decision_checklist_peace_or_war(fac_004,fac_003,-1)
                            var009 = reg0
                            if var009 >= 1:
                                var007 = var005 * var009
                                random_x_008 = store_random_in_range(0,20)
                                if random_x_008 < var007:
                                    if _g_include_diplo_explanation == 0:
                                        _g_include_diplo_explanation = fac_003
                                        s57 = str_store_string(gstr.s14)
                                    #end
                                #end
                            #end
                            diplomacy_start_peace_between_kingdoms(fac_003,fac_004,var001)
                        #end
                    elif faction_relation_006 >= 0:
                        npc_decision_checklist_peace_or_war(fac_003,fac_004,-1)
                        if reg0 <= 0:
                            var010 = reg0
                            diplomacy_faction_get_diplomatic_status_with_faction(fac_003,fac_004)
                            if reg0 <= 0:
                                var010 += reg0
                                var010 -= 1
                                var010 += var001
                                var011 = var010 * var010
                                random_x_008 = store_random_in_range(0,50)
                                if random_x_008 < var011:
                                    if _g_include_diplo_explanation == 0:
                                        _g_include_diplo_explanation = fac_003
                                        s57 = str_store_string(gstr.s14)
                                    #end
                                #end
                            #end
                        #end
                        diplomacy_start_war_between_kingdoms(fac_003,fac_004,var001)
                        if var001 == 0:
                            random_x_012 = store_random_in_range(10,120)
                            slot_no_013 = fac_003 + 140
                            slot_no_013 -= fac.player_supporters_faction
                            faction_set_slot(fac_004,slot_no_013,random_x_012)
                            slot_no_013 = fac_004 + 140
                            slot_no_013 -= fac.player_supporters_faction
                            faction_set_slot(fac_003,slot_no_013,random_x_012)
                        #end
                    #end
                #end
            #end
        #end
    #end
    if var002 == 1:
        _players_kingdom_days_at_peace += 1
        if _cheat_mode == 1:
            reg3 = _players_kingdom_days_at_peace
            print("@{!}DEBUG -- Player's kingdom has had {reg3} days of peace")
        #end
    else:
        _players_kingdom_days_at_peace = 0
    #end


def exchange_prisoners_between_factions(var001, var002):
    troop_faction_012_list1 = [
    var004,
    var003,
    var002,
    var001,
    ]
    party_faction_007_list1 = [
    var004,
    var003,
    var002,
    var001,
    ]
    _players_kingdom_list1 = [
    var002,
    var001,
    ]
    var003 = -1
    var004 = -1
    var005 = 0
    if _players_kingdom in _players_kingdom_list1:
        var003 = fac.player_faction
        var004 = fac.player_supporters_faction
        var005 = 1
    #end
    for cur_party in __all_parties__:
        party_faction_007 = store_faction_of_party(cur_party)
        if party_faction_007 in party_faction_007_list1:
            party_num_prisoners_stacks_008 = party_get_num_prisoner_stacks(cur_party)
            for var009 in range(0, party_num_prisoners_stacks_008):
                party_prisoner_troop_id_010 = party_prisoner_stack_get_troop_id(cur_party,var009)
                var011 = 0
                if is_between(party_prisoner_troop_id_010,trp.npc1,trp.kingdom_1_lord) and var005 == 1:
                    var011 = 1
                elif not is_between(party_prisoner_troop_id_010,trp.npc1,trp.kingdom_1_lord):
                    troop_faction_012 = store_faction_of_troop(party_prisoner_troop_id_010)
                    if troop_faction_012 in troop_faction_012_list1:
                        var011 = 1
                    #end
                #end
            #end
            if var011 == 1:
                if troop_is_hero(party_prisoner_troop_id_010):
                    remove_troop_from_prison(party_prisoner_troop_id_010)
                #end
            #end
            party_prisoner_stack_size_013 = party_prisoner_stack_get_size(cur_party,var009)
            party_remove_prisoners(cur_party,party_prisoner_troop_id_010,party_prisoner_stack_size_013)
        #end
    #end


def add_notification_menu(var001, var002, var003):
    if _g_infinite_camping == 0:
        var004 = 1
        for slot_no_005 in range(0, var004):
            if troop_slot_ge(trp.notification_menu_types,slot_no_005,1):
                var004 += 1
            else:
                troop_set_slot(trp.notification_menu_types,slot_no_005,var001)
                troop_set_slot(trp.notification_menu_var1,slot_no_005,var002)
                troop_set_slot(trp.notification_menu_var2,slot_no_005,var003)
            #end
        #end
    #end


def finish_quest(quest_id_001, var002):
    quest_slot_003 = quest_get_slot(quest_id_001,6)
    quest_slot_004 = quest_get_slot(quest_id_001,20)
    quest_slot_005 = quest_get_slot(quest_id_001,21)
    quest_slot_006 = quest_get_slot(quest_id_001,22)
    if var002 < 100:
        quest_slot_005 *= var002
        quest_slot_005 /= 100
        quest_slot_006 *= var002
        quest_slot_006 /= 100
        var007 = var002
        var007 -= 75
        quest_slot_004 *= var007
        quest_slot_004 /= 100
    else:
        quest_slot_004 *= 4
        quest_slot_004 += 1
        change_player_relation_with_troop(quest_slot_003,quest_slot_004)
    #end
    add_xp_as_reward(quest_slot_005)
    troop_add_gold(trp.player,quest_slot_006)
    end_quest(quest_id_001)


def get_information_about_troops_position(troop_id_001, reg3):
    reg4 = troop_get_type(troop_id_001)
    s2 = str_store_troop_name(troop_id_001)
    var002 = 0
    troop_slot_003 = troop_get_slot(troop_id_001,12)
    if troop_slot_003 > 0 and is_between(troop_slot_003,p.town_1,p.salt_mine):
        s3 = str_store_party_name_link(troop_slot_003)
        s1 = str_store_string("@{s2} {reg3?was:is currently} at {s3}.")
        var002 = 1
    else:
        troop_slot_004 = troop_get_slot(troop_id_001,10)
        if troop_slot_004 > 0:
            get_troop_attached_party(troop_id_001)
            troop_slot_003 = reg0
            if is_between(troop_slot_003,p.town_1,p.salt_mine):
                s3 = str_store_party_name_link(troop_slot_003)
                s1 = str_store_string("@{s2} {reg3?was:is currently} at {s3}.")
                var002 = 1
            else:
                party_ai_behavior_005 = get_party_ai_behavior(troop_slot_004)
                if party_ai_behavior_005 == 1:
                    party_ai_object_006 = get_party_ai_object(troop_slot_004)
                    if is_between(party_ai_object_006,p.town_1,p.salt_mine):
                        get_closest_center(troop_slot_004)
                        s4 = str_store_party_name_link(reg0)
                        s3 = str_store_party_name_link(party_ai_object_006)
                        s1 = str_store_string("@{s2} {reg3?was:is} travelling to {s3} and {reg4?she:he} {reg3?was:should be} close to {s4}{reg3?: at the moment}.")
                        var002 = 1
                    else:
                        get_closest_center(troop_slot_004)
                        s3 = str_store_party_name_link(reg0)
                        s1 = str_store_string("@{s2} {reg3?was:is} in the field and {reg4?she:he} {reg3?was:should be} close to {s3}{reg3?: at the moment}.")
                        var002 = 1
                    #end
                #end
            #end
        elif troop_slot_ge(troop_id_001,8,0):
            for troop_slot_003 in range(p.town_1, p.village_1):
                party_count_prisoners_of_type(party_prisoners_of_type_007,troop_slot_003,troop_id_001)
                if party_prisoners_of_type_007 > 0:
                    var002 = 1
                    s3 = str_store_party_name_link(troop_slot_003)
                    s1 = str_store_string("@{s2} {reg3?was:is} being held captive at {s3}.")
                #end
            #end
            if var002 == 0:
                s1 = str_store_string("@{s2} {reg3?was:has been} taken captive by {reg4?her:his} enemies.")
                var002 = 1
            #end
        #end
    #end
    if var002 == 0:
        s1 = str_store_string("@{reg3?{s2}'s location was unknown:I don't know where {s2} is}.")
    #end
    reg0 = var002


def recruit_troop_as_companion(troop_id_001):
    troop_set_slot(troop_id_001,2,5)
    troop_set_slot(troop_id_001,12,-1)
    troop_set_auto_equip(troop_id_001,0)
    party_add_members(p.main_party,troop_id_001,1)
    s6 = str_store_troop_name(troop_id_001)
    print("@{s6} has joined your party.")
    troop_set_note_available(troop_id_001,1)
    if is_between(troop_id_001,trp.npc1,trp.kingdom_1_lord):
        var002 = troop_id_001 - trp.npc1
        set_achievement_stat(45,var002,1)
        var003 = 0
        for var004 in range(0, 16):
            var005 = get_achievement_stat(45,var004)
            if var005 == 1:
                var003 += 1
            #end
        #end
        if var003 >= 6:
            unlock_achievement(45)
        #end
    #end


def setup_random_scene():
    party_cur_terrain_001 = party_get_current_terrain(p.main_party)
    var002 = scn.random_scene
    if party_cur_terrain_001 == 2:
        var002 = scn.random_scene_steppe
    elif party_cur_terrain_001 == 3:
        var002 = scn.random_scene_plain
    elif party_cur_terrain_001 == 4:
        var002 = scn.random_scene_snow
    elif party_cur_terrain_001 == 5:
        var002 = scn.random_scene_desert
    elif party_cur_terrain_001 == 10:
        var002 = scn.random_scene_steppe_forest
    elif party_cur_terrain_001 == 11:
        var002 = scn.random_scene_plain_forest
    elif party_cur_terrain_001 == 12:
        var002 = scn.random_scene_snow_forest
    elif party_cur_terrain_001 == 13:
        var002 = scn.random_scene_desert_forest
    elif party_cur_terrain_001 == 0:
        var002 = scn.water
    elif party_cur_terrain_001 == 7:
        var002 = scn.random_scene_plain
    #end
    jump_to_scene(var002)


def enter_dungeon(party_id_001, var002):
    set_jump_mission(var002)
    mission_tpl_entry_set_override_flags(var002,0,256)
    if _sneaked_into_town == 1:
        mission_tpl_entry_set_override_flags(var002,0,447)
        mission_tpl_entry_clear_override_items(var002,0)
        mission_tpl_entry_add_override_item(var002,0,itm.pilgrim_hood)
        mission_tpl_entry_add_override_item(var002,0,itm.pilgrim_disguise)
        mission_tpl_entry_add_override_item(var002,0,itm.practice_staff)
        mission_tpl_entry_add_override_item(var002,0,itm.throwing_daggers)
    #end
    party_slot_003 = party_get_slot(party_id_001,12)
    modify_visitors_at_site(party_slot_003)
    reset_visitors()
    entry_no_004 = 16
    get_heroes_attached_to_center_as_prisoner(party_id_001,p.temp_party)
    party_num_companions_stacks_005 = party_get_num_companion_stacks(p.temp_party)
    for stack_no_006 in range(0, party_num_companions_stacks_005):
        troop_id_007 = party_stack_get_troop_id(p.temp_party,stack_no_006)
        var008 = 0
        if party_slot_eq(party_id_001,7,trp.player):
            pass
        elif cf_prisoner_offered_parole(troop_id_007):
            var008 = 1
        else:
            var008 = 0
        #end
        if var008 == 0 and entry_no_004 < 32:
            set_visitor(entry_no_004,troop_id_007)
            entry_no_004 += 1
        #end
    #end
    set_jump_entry(0)
    jump_to_scene(party_slot_003)
    scene_set_slot(party_slot_003,0,1)
    change_screen_mission()


def enter_court(party_id_001):
    _talk_context = 1
    set_jump_mission(mt.visit_town_castle)
    mission_tpl_entry_clear_override_items(mt.visit_town_castle,0)
    party_slot_002 = party_get_slot(party_id_001,11)
    modify_visitors_at_site(party_slot_002)
    reset_visitors()
    party_faction_003 = store_faction_of_party(party_id_001)
    faction_slot_004 = faction_get_slot(party_faction_003,49)
    if faction_slot_004 <= 0:
        faction_slot_004 = trp.swadian_sergeant
    #end
    set_visitor(6,faction_slot_004)
    set_visitor(7,faction_slot_004)
    entry_no_005 = 16
    if True:
        troop_slot_006 = troop_get_slot(trp.player,30)
        if troop_slot_006 > 0 and troop_slot_eq(troop_slot_006,12,party_id_001):
            set_visitor(entry_no_005,troop_slot_006)
            entry_no_005 += 1
        else:
            troop_slot_007 = troop_get_slot(trp.player,34)
            if troop_slot_007 > 0 and troop_slot_eq(troop_slot_007,12,party_id_001):
                set_visitor(entry_no_005,troop_slot_007)
                entry_no_005 += 1
            #end
        #end
    #end
    if _g_player_court == party_id_001 and _g_player_minister > 0 and not troop_slot_eq(trp.player,30,_g_player_minister):
        set_visitor(entry_no_005,_g_player_minister)
        entry_no_005 += 1
    #end
    if _g_player_court == party_id_001 and faction_slot_eq(party_faction_003,11,trp.player):
        for trp_008 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_009 = store_faction_of_troop(trp_008)
            if troop_faction_009 == fac.player_supporters_faction and troop_slot_eq(trp_008,2,0) and not troop_slot_ge(trp_008,8,0) and trp_008 != _g_player_minister:
                set_visitor(entry_no_005,trp_008)
                entry_no_005 += 1
            #end
        #end
    #end
    get_heroes_attached_to_center(party_id_001,p.temp_party)
    party_num_companions_stacks_010 = party_get_num_companion_stacks(p.temp_party)
    for stack_no_011 in range(0, party_num_companions_stacks_010):
        troop_id_012 = party_stack_get_troop_id(p.temp_party,stack_no_011)
        if entry_no_005 < 32:
            set_visitor(entry_no_005,troop_id_012)
            entry_no_005 += 1
        #end
    #end
    for trp_013 in range(trp.knight_1_1_wife, trp.heroes_end):
        troop_faction_015 = store_faction_of_troop(trp_013)
        if trp_013 != trp.knight_1_1_wife and troop_slot_eq(trp_013,12,party_id_001):
            var014 = 0
            if troop_slot_eq(trp.player,30,trp_013) or troop_slot_eq(trp.player,34,trp_013) or troop_slot_eq(trp_013,30,trp.player) or troop_slot_eq(trp_013,34,trp.player):
                var014 = 0
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(trp_013)
                    print(gstr.s4_is_present_at_the_center_and_in_place_of_honor)
                #end
            #end
        elif troop_faction_015 != party_faction_003:
            var014 = 1
            if _cheat_mode == 1:
                s4 = str_store_troop_name(trp_013)
                print(gstr.s4_is_present_at_the_center_as_a_refugee)
            #end
        elif troop_slot_ge(trp_013,30,1):
            if faction_slot_eq(party_faction_003,4,6) and faction_slot_eq(party_faction_003,5,party_id_001):
                var014 = 0
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(trp_013)
                    print(gstr.s4_is_present_at_the_center_and_not_attending_the_feast)
                #end
            else:
                var014 = 1
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(trp_013)
                    print(gstr.s4_is_present_at_the_center_and_is_married)
                #end
            #end
        elif faction_slot_eq(party_faction_003,4,6) and faction_slot_eq(party_faction_003,5,party_id_001):
            var014 = 1
            if _cheat_mode == 1:
                s4 = str_store_troop_name(trp_013)
                print("@{!}DEBUG -- {s4} is present at the center and is attending the feast")
            #end
        elif troop_slot_ge(trp_013,5,2):
            var014 = 0
            if _cheat_mode == 1:
                s4 = str_store_troop_name(trp_013)
                print("@{!}DEBUG -- {s4} is present at the center and is awaiting the player in private")
            #end
        else:
            get_kingdom_lady_social_determinants(trp_013)
            npc_decision_checklist_male_guardian_assess_suitor(reg0,trp.player)
            if reg0 > 0:
                var014 = 1
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(trp_013)
                    print("@{!}DEBUG -- {s4} is present at the center and is allowed to meet the player")
                #end
            else:
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(trp_013)
                    print("@{!}DEBUG -- {s4}is present at the center and is not allowed to meet the player")
                #end
            #end
        #end
        if var014 == 1 and entry_no_005 < 32:
            set_visitor(entry_no_005,trp_013)
            entry_no_005 += 1
        #end
    #end
    set_jump_entry(0)
    jump_to_scene(party_slot_002)
    scene_set_slot(party_slot_002,0,1)
    change_screen_mission()


def setup_meet_lady(troop_id_001, party_id_002):
    troop_set_slot(troop_id_001,38,trp.player)
    set_jump_mission(mt.visit_town_castle)
    party_slot_003 = party_get_slot(party_id_002,11)
    modify_visitors_at_site(party_slot_003)
    reset_visitors()
    troop_set_age(trp.nurse_for_lady,100)
    set_visitor(7,trp.nurse_for_lady)
    entry_no_004 = 16
    set_visitor(entry_no_004,troop_id_001)
    _talk_context = 16
    jump_to_scene(party_slot_003)
    scene_set_slot(party_slot_003,0,1)
    change_screen_mission()


def find_high_ground_around_pos1(var001, var002):
    var002 *= 100
    s10 = get_scene_boundaries(11)
    team_leader_003 = team_get_leader(var001)
    pos1 = agent_get_position(team_leader_003)
    set_fixed_point_multiplier(100)
    pos_x_004 = position_get_x(1)
    pos_y_005 = position_get_y(1)
    var006 = pos_x_004 - var002
    var007 = pos_y_005 - var002
    var008 = pos_x_004 + var002
    var009 = pos_y_005 + var002
    pos_x_010 = position_get_x(10)
    pos_x_011 = position_get_x(11)
    pos_y_012 = position_get_y(10)
    pos_y_013 = position_get_y(11)
    pos_x_010 += 2000
    pos_x_011 -= 2000
    pos_y_012 += 2000
    pos_y_013 -= 2000
    val_max(var006,pos_x_010)
    val_max(var007,pos_y_012)
    val_min(var008,pos_x_011)
    val_min(var009,pos_y_013)
    var014 = var006 / 100
    var015 = var007 / 100
    var016 = var008 / 100
    var017 = var009 / 100
    var018 = -10000
    copy_position(52,1)
    init_position(15)
    for var019 in range(var014, var016):
        var020 = var019 * 100
        for var021 in range(var015, var017):
            var022 = var021 * 100
            position_set_x(15,var020)
            position_set_y(15,var022)
            position_set_z(15,10000)
            position_set_z_to_ground_level(15)
            pos_z_023 = position_get_z(15)
            if pos_z_023 > var018:
                copy_position(52,15)
                var018 = pos_z_023
            #end
        #end
    #end


def select_battle_tactic():
    _ai_x_team_1_battle_tactic = 0
    agent_no_001 = get_player_agent_no()
    agent_team_no_002 = agent_get_team(agent_no_001)
    if num_active_teams_le(2):
        if agent_team_no_002 == 0:
            _ai_team_1 = 1
        else:
            _ai_team_1 = 0
        #end
        _ai_team_2 = -1
    else:
        if agent_team_no_002 == 0:
            _ai_team_1 = 1
        else:
            _ai_team_1 = 0
        #end
        _ai_team_2 = agent_team_no_002 + 2
    #end
    select_battle_tactic_aux(_ai_team_1,0)
    _ai_x_team_1_battle_tactic = reg0
    if _ai_team_2 >= 0:
        var003 = 0
        if _ai_x_team_1_battle_tactic == 1:
            var003 = 1
        #end
        select_battle_tactic_aux(_ai_team_2,var003)
        _ai_x_team_2_battle_tactic = reg0
    #end


def select_battle_tactic_aux(var001, var002):
    var003 = 0
    agent_no_004 = get_player_agent_no()
    agent_team_no_005 = agent_get_team(agent_no_004)
    if _cant_leave_encounter == 1 and teams_are_enemies(var001,agent_team_no_005):
        var002 = 1
    #end
    team_get_class_percentages(var001,0)
    var006 = reg1
    var007 = reg2
    team_get_class_percentages(var001,1)
    random_x_008 = store_random_in_range(0,100)
    if True:
        var009 = 0
        if teams_are_enemies(var001,agent_team_no_005) and party_slot_eq(_g_enemy_party,0,13):
            var009 = 1
        elif not teams_are_enemies(var001,agent_team_no_005) and _g_ally_party > 0 and party_slot_eq(_g_ally_party,0,13):
            var009 = 1
        #end
        if var009 == 1:
            party_faction_010 = store_faction_of_party(_g_enemy_party)
            if party_faction_010 != fac.kingdom_3:
                if var002 == 0 and var006 > 50 and var007 < 35:
                    var003 = 1
                elif random_x_008 < 80:
                    var003 = 2
                #end
            #end
        #end
    #end
    reg0 = var003


def battle_tactic_init():
    battle_tactic_init_aux(_ai_team_1,_ai_x_team_1_battle_tactic)
    if _ai_team_2 >= 0:
        battle_tactic_init_aux(_ai_team_2,_ai_x_team_2_battle_tactic)
    #end
    for cur_agent in __all_agents__:
        agent_set_slot(cur_agent,15,0)
    #end


def battle_tactic_init_aux(var001, var002):
    team_leader_003 = team_get_leader(var001)
    if var002 == 1:
        pos1 = agent_get_position(team_leader_003)
        find_high_ground_around_pos1(var001,30)
        copy_position(1,52)
        find_high_ground_around_pos1(var001,30)
        copy_position(1,52)
        find_high_ground_around_pos1(var001,30)
        team_give_order(var001,9,0)
        team_set_order_position(var001,9,52)
        team_give_order(var001,1,5)
        team_give_order(var001,1,5)
    elif var002 == 2:
        team_leader_003 = team_get_leader(var001)
        if team_leader_003 >= 0:
            agent_set_speed_limit(team_leader_003,8)
            pos60 = agent_get_position(team_leader_003)
            team_give_order(var001,9,0)
            team_set_order_position(var001,9,60)
        #end
    #end


def calculate_team_powers(var001):
    if True:
        var002 = 0
        if agent_is_ally(var001):
            var002 = 1
        #end
    #end
    var003 = 0
    var004 = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and agent_is_alive(cur_agent):
            if True:
                var006 = 0
                if agent_is_ally(cur_agent):
                    var006 = 1
                #end
            #end
        #end
        if True:
            agent_horse_007 = agent_get_horse(cur_agent)
            if agent_horse_007 != -1:
                var008 = 2
            else:
                var008 = 1
            #end
        #end
        if var002 == var006:
            var003 += var008
        else:
            var004 += var008
        #end
    #end
    reg0 = var003
    reg1 = var004


def apply_effect_of_other_people_on_courage_scores():
    agent_no_001 = get_player_agent_no()
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and cur_agent != agent_no_001:
            pos0 = agent_get_position(cur_agent)
            if agent_is_ally(cur_agent):
                var003 = 1
            else:
                var003 = 0
            #end
        #end
        for cur_agent in __all_agents__:
            if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and False:
                if agent_is_ally(cur_agent):
                    var005 = 1
                else:
                    var005 = 0
                #end
            #end
            if var003 == var005:
                agent_slot_006 = agent_get_slot(cur_agent,15)
                troop_id_008 = agent_get_troop_id(cur_agent)
                if cur_agent == agent_no_001:
                    var007 = 6
                elif troop_is_hero(troop_id_008):
                    if agent_slot_006 != 1:
                        agent_hit_points_009 = store_agent_hit_points(cur_agent)
                        if agent_hit_points_009 == 100:
                            var007 = 6
                        elif agent_hit_points_009 >= 75:
                            var007 = 5
                        elif agent_hit_points_009 >= 60:
                            var007 = 4
                        elif agent_hit_points_009 >= 45:
                            var007 = 3
                        elif agent_hit_points_009 >= 30:
                            var007 = 2
                        elif agent_hit_points_009 >= 15:
                            var007 = 1
                        #end
                    #end
                else:
                    var007 = 4
                #end
            else:
                if agent_slot_006 != 1:
                    agent_hit_points_009 = store_agent_hit_points(cur_agent)
                    if agent_hit_points_009 == 100:
                        var007 = 4
                    elif agent_hit_points_009 >= 75:
                        var007 = 3
                    elif agent_hit_points_009 >= 50:
                        var007 = 2
                    elif agent_hit_points_009 >= 25:
                        var007 = 1
                    #end
                    if agent_is_ally(cur_agent):
                        var007 -= 1
                    #end
                else:
                    var007 = 2
                #end
            #end
            if agent_slot_006 != 1:
                var007 *= 1
                if True:
                    agent_slot_006 = agent_get_slot(cur_agent,15)
                    if agent_slot_006 == 0:
                        var007 *= 0
                    #end
                #end
            else:
                if True:
                    agent_slot_006 = agent_get_slot(cur_agent,15)
                    if agent_slot_006 == 0:
                        var007 *= -2
                    else:
                        var007 *= -1
                    #end
                #end
            #end
            if var007 != 0:
                pos1 = agent_get_position(cur_agent)
                distance_010 = get_distance_between_positions(0,1)
                if var007 >= 0:
                    if distance_010 < 2000:
                        agent_slot_011 = agent_get_slot(cur_agent,16)
                        var007 *= 50
                        agent_slot_011 += var007
                        agent_set_slot(cur_agent,16,agent_slot_011)
                    elif distance_010 < 4000:
                        agent_slot_011 = agent_get_slot(cur_agent,16)
                        var007 *= 40
                        agent_slot_011 += var007
                        agent_set_slot(cur_agent,16,agent_slot_011)
                    elif distance_010 < 7000:
                        agent_slot_011 = agent_get_slot(cur_agent,16)
                        var007 *= 30
                        agent_slot_011 += var007
                        agent_set_slot(cur_agent,16,agent_slot_011)
                    elif distance_010 < 11000:
                        agent_slot_011 = agent_get_slot(cur_agent,16)
                        var007 *= 20
                        agent_slot_011 += var007
                        agent_set_slot(cur_agent,16,agent_slot_011)
                    elif distance_010 < 16000:
                        agent_slot_011 = agent_get_slot(cur_agent,16)
                        var007 *= 10
                        agent_slot_011 += var007
                        agent_set_slot(cur_agent,16,agent_slot_011)
                    #end
                #end
            else:
                if distance_010 < 200:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 15
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                elif distance_010 < 400:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 13
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                elif distance_010 < 600:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 11
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                elif distance_010 < 800:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 9
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                elif distance_010 < 1200:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 7
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                elif distance_010 < 2400:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 5
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                elif distance_010 < 4800:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 3
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                elif distance_010 < 9600:
                    agent_slot_011 = agent_get_slot(cur_agent,16)
                    var007 *= 1
                    agent_slot_011 += var007
                    agent_set_slot(cur_agent,16,agent_slot_011)
                #end
            #end
        #end
    #end


def apply_death_effect_on_courage_scores(agent_id_001, var002):
    if agent_is_human(agent_id_001):
        if agent_is_ally(agent_id_001):
            var003 = 1
        else:
            var003 = 0
        #end
        pos0 = agent_get_position(agent_id_001)
        var004 = 0
        for cur_agent in __all_agents__:
            if agent_is_human(cur_agent) and agent_is_alive(cur_agent):
                pos1 = agent_get_position(cur_agent)
                distance_006 = get_distance_between_positions(0,1)
                if distance_006 <= 1300:
                    if agent_is_ally(cur_agent):
                        var007 = 1
                    else:
                        var007 = 0
                    #end
                #end
            #end
            if var003 == var007:
                var004 += 1
            #end
        #end
        for cur_agent in __all_agents__:
            if agent_is_human(cur_agent) and agent_is_alive(cur_agent):
                if agent_is_ally(cur_agent):
                    var007 = 1
                else:
                    var007 = 0
                #end
            #end
            if var003 != var007:
                var008 = 10
            else:
                var008 = -15
                var008 += var004
                if var008 > -5:
                    var008 = -5
                #end
                agent_slot_009 = agent_get_slot(agent_id_001,15)
                if agent_slot_009 == 1:
                    var008 /= 3
                #end
            #end
            pos1 = agent_get_position(cur_agent)
            distance_006 = get_distance_between_positions(0,1)
            if var002 == cur_agent:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 20
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            #end
            if distance_006 < 100:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 150
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 200:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 120
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 300:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 100
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 400:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 90
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 600:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 80
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 800:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 70
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 1000:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 60
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 1500:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 50
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 2500:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 40
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 4000:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 30
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 6500:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 20
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            elif distance_006 < 10000:
                agent_slot_010 = agent_get_slot(cur_agent,16)
                var008 *= 10
                agent_slot_010 += var008
                agent_set_slot(cur_agent,16,agent_slot_010)
            #end
        #end
    #end


def decide_run_away_or_not(agent_id_001, var002):
    var003 = 0
    agent_team_no_004 = agent_get_team(agent_id_001)
    agent_division_005 = agent_get_division(agent_id_001)
    if agent_division_005 < 9:
        team_movement_order_006 = team_get_movement_order(agent_team_no_004,agent_division_005)
        if team_movement_order_006 == 14:
            var003 = 1
        #end
    #end
    agent_slot_007 = agent_get_slot(agent_id_001,15)
    if agent_slot_007 == 0:
        if var003 == 1:
            agent_start_running_away(agent_id_001)
            agent_set_slot(agent_id_001,15,1)
        elif var002 >= 45:
            agent_slot_008 = agent_get_slot(agent_id_001,16)
            agent_hit_points_009 = store_agent_hit_points(agent_id_001)
            agent_hit_points_009 *= 4
            if agent_is_ally(agent_id_001):
                agent_hit_points_009 -= 100
            #end
            agent_hit_points_009 *= 10
            var010 = 3500 - agent_hit_points_009
            if agent_slot_008 < var010:
                troop_id_011 = agent_get_troop_id(agent_id_001)
                if not troop_is_hero(troop_id_011):
                    agent_start_running_away(agent_id_001)
                    agent_set_slot(agent_id_001,15,1)
                #end
            #end
        #end
    elif var003 != 1:
        agent_slot_008 = agent_get_slot(agent_id_001,16)
        agent_hit_points_009 = store_agent_hit_points(agent_id_001)
        agent_hit_points_009 *= 4
        if agent_is_ally(agent_id_001):
            agent_hit_points_009 -= 100
        #end
        agent_hit_points_009 *= 10
        var012 = 3700 - agent_hit_points_009
        if agent_slot_008 >= var012:
            agent_stop_running_away(agent_id_001)
            agent_set_slot(agent_id_001,15,0)
        #end
    #end


def battle_tactic_apply():
    battle_tactic_apply_aux(_ai_team_1,_ai_x_team_1_battle_tactic)
    _ai_x_team_1_battle_tactic = reg0
    if _ai_team_2 >= 0:
        battle_tactic_apply_aux(_ai_team_2,_ai_x_team_2_battle_tactic)
        _ai_x_team_2_battle_tactic = reg0
    #end


def battle_tactic_apply_aux(var001, var002):
    m_timer_a_003 = store_mission_timer_a()
    if var002 == 1:
        copy_position(1,52)
        get_closest3_distance_of_enemies_at_pos1(var001,1)
        var004 = reg0
        var005 = reg1
        if var005 >= 1000 or var004 < 4000:
            var002 = 0
            team_give_order(var001,9,2)
        #end
    elif var002 == 2:
        team_leader_006 = team_get_leader(var001)
        if team_leader_006 >= 0 and agent_is_alive(team_leader_006):
            agent_set_speed_limit(team_leader_006,9)
            team_get_average_position_of_enemies(var001)
            copy_position(60,0)
            pos61 = agent_get_position(team_leader_006)
            position_transform_position_to_local(62,61,60)
            position_normalize_origin(var007,62)
            convert_from_fixed_point(var007)
            reg17 = var007
            pos_x_008 = position_get_x(62)
            pos_y_009 = position_get_y(62)
            pos_x_008 *= 23
            pos_y_009 *= 23
            position_set_x(62,pos_x_008)
            position_set_y(62,pos_y_009)
            position_transform_position_to_parent(63,61,62)
            position_set_z_to_ground_level(63)
            team_give_order(var001,9,0)
            team_set_order_position(var001,9,63)
            pos1 = agent_get_position(team_leader_006)
            if var007 < 50 and m_timer_a_003 >= 30:
                var002 = 0
                team_give_order(var001,9,2)
                agent_set_speed_limit(team_leader_006,60)
            #end
        else:
            var002 = 0
            team_give_order(var001,9,2)
        #end
    #end
    if var002 != 0 and m_timer_a_003 >= 300:
        var002 = 0
        team_give_order(var001,9,2)
        team_leader_006 = team_get_leader(var001)
        agent_set_speed_limit(team_leader_006,60)
    #end
    reg0 = var002


def team_get_class_percentages(var005, var006):
    var001 = 0
    var002 = 0
    var003 = 0
    var004 = 0
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
            agent_team_no_008 = agent_get_team(cur_agent)
            var009 = 0
            if var006 == 1 and teams_are_enemies(agent_team_no_008,var005):
                var009 = 1
            elif agent_team_no_008 == var005:
                var009 = 1
            #end
        #end
        if var009 == 1:
            var004 += 1
            agent_class_010 = agent_get_class(cur_agent)
            if agent_class_010 == 0:
                var001 += 1
            elif agent_class_010 == 1:
                var002 += 1
            elif agent_class_010 == 2:
                var003 += 1
            #end
        #end
    #end
    if var004 == 0:
        var004 = 1
    #end
    var011 = var001 * 100
    var011 /= var004
    var012 = var002 * 100
    var012 /= var004
    var013 = var003 * 100
    var013 /= var004
    reg0 = var011
    reg1 = var012
    reg2 = var013


def get_closest3_distance_of_enemies_at_pos1(var004):
    var001 = 100000
    var002 = 100000
    var003 = 100000
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
            agent_team_no_006 = agent_get_team(cur_agent)
            if teams_are_enemies(agent_team_no_006,var004):
                pos2 = agent_get_position(cur_agent)
                distance_007 = get_distance_between_positions(2,1)
                if distance_007 < var001:
                    var003 = var002
                    var002 = var001
                    var001 = distance_007
                elif distance_007 < var002:
                    var003 = var002
                    var002 = distance_007
                elif distance_007 < var003:
                    var003 = distance_007
                #end
            #end
        #end
    #end
    var008 = 0
    var009 = 0
    if var001 < 100000:
        var008 += var001
        var009 += 1
    #end
    if var002 < 100000:
        var008 += var002
        var009 += 1
    #end
    if var003 < 100000:
        var008 += var003
        var009 += 1
    #end
    var010 = 100000
    if var009 > 0:
        var010 = var008 / var009
    #end
    reg0 = var010
    reg1 = var001
    reg2 = var002
    reg3 = var003


def team_get_average_position_of_enemies(var001):
    init_position(0)
    var002 = 0
    var003 = 0
    var004 = 0
    var005 = 0
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
            agent_team_no_007 = agent_get_team(cur_agent)
            if teams_are_enemies(var001,agent_team_no_007):
                pos62 = agent_get_position(cur_agent)
                pos_x_008 = position_get_x(62)
                pos_y_009 = position_get_y(62)
                pos_z_010 = position_get_z(62)
                var003 += pos_x_008
                var004 += pos_y_009
                var005 += pos_z_010
                var002 += 1
            #end
        #end
    #end
    if var002 <= 0:
        var002 = 1
    #end
    var011 = var003 / var002
    var012 = var004 / var002
    var013 = var005 / var002
    position_set_x(0,var011)
    position_set_y(0,var012)
    position_set_z(0,var013)
    reg0 = var002


def search_troop_prisoner_of_party(var001):
    var002 = -1
    for cur_party in __all_parties__:
        if var002 == -1 and cur_party == p.main_party or cur_party >= p.town_1:
            party_count_prisoners_of_type(party_prisoners_of_type_004,cur_party,var001)
            if party_prisoners_of_type_004 > 0:
                var002 = cur_party
            #end
        #end
    #end
    reg0 = var002


def change_debt_to_troop(troop_id_001, var002):
    troop_slot_003 = troop_get_slot(troop_id_001,21)
    reg1 = troop_slot_003
    troop_slot_003 += var002
    reg2 = troop_slot_003
    troop_set_slot(troop_id_001,21,troop_slot_003)
    s1 = str_store_troop_name_link(troop_id_001)
    print("@You now owe {reg2} denars to {s1}.")


def abort_quest(quest_id_001, var002):
    quest_id_001_list1 = [
    qst.deliver_message_to_enemy_lord,
    qst.deliver_message,
    ]
    var003 = -1
    var004 = -2
    if quest_id_001 in quest_id_001_list1:
        var003 = -2
        var004 = -3
    elif quest_id_001 == qst.kidnapped_girl:
        party_remove_members(p.main_party,trp.kidnapped_girl,1)
        quest_slot_005 = quest_get_slot(qst.kidnapped_girl,8)
        if party_is_active(quest_slot_005):
            remove_party(quest_slot_005)
        #end
    elif quest_id_001 == qst.escort_lady:
        quest_slot_006 = quest_get_slot(qst.escort_lady,4)
        party_remove_members(p.main_party,quest_slot_006,1)
        var003 = -2
        var004 = -3
    elif quest_id_001 == qst.raise_troops:
        quest_slot_007 = quest_get_slot(quest_id_001,6)
        change_debt_to_troop(quest_slot_007,100)
        var003 = -4
        var004 = -5
    elif quest_id_001 == qst.deal_with_looters:
        for cur_party in __all_parties__:
            party_template_id_009 = party_get_template_id(cur_party)
            if party_template_id_009 == pt.looters:
                party_set_flags(cur_party,262144,0)
            #end
        #end
        var003 = -4
        var004 = -5
    elif quest_id_001 == qst.deal_with_bandits_at_lords_village:
        quest_slot_007 = quest_get_slot(quest_id_001,6)
        change_debt_to_troop(quest_slot_007,200)
        var003 = -5
        var004 = -6
    elif quest_id_001 == qst.collect_taxes:
        quest_slot_010 = quest_get_slot(quest_id_001,22)
        quest_set_slot(quest_id_001,22,0)
        quest_slot_007 = quest_get_slot(quest_id_001,6)
        change_debt_to_troop(quest_slot_007,quest_slot_010)
        var003 = -4
        var004 = -6
    elif quest_id_001 == qst.hunt_down_fugitive:
        var003 = -3
        var004 = -4
    elif quest_id_001 == qst.kill_local_merchant:
        pass
    elif quest_id_001 == qst.bring_back_runaway_serfs:
        var003 = -1
        var004 = -1
    elif quest_id_001 == qst.collect_debt:
        if quest_slot_eq(qst.collect_debt,11,1):
            quest_slot_011 = quest_get_slot(qst.collect_debt,10)
            quest_slot_012 = quest_get_slot(qst.collect_debt,6)
            change_debt_to_troop(quest_slot_012,quest_slot_011)
            var003 = -3
            var004 = -6
        else:
            var003 = -3
            var004 = -4
        #end
    elif quest_id_001 == qst.deal_with_bandits_at_lords_village:
        var003 = -6
        var004 = -6
    elif quest_id_001 == qst.cause_provocation:
        var003 = -10
        var004 = -13
    elif quest_id_001 == qst.persuade_lords_to_make_peace:
        var003 = -10
        var004 = -13
    elif quest_id_001 == qst.deal_with_night_bandits:
        var003 = -1
        var004 = -1
    elif quest_id_001 == qst.follow_spy:
        var003 = -2
        var004 = -3
        if party_is_active(_qst_follow_spy_spy_party):
            remove_party(_qst_follow_spy_spy_party)
        #end
        if party_is_active(_qst_follow_spy_spy_partners_party):
            remove_party(_qst_follow_spy_spy_partners_party)
        #end
    elif quest_id_001 == qst.capture_enemy_hero:
        var003 = -3
        var004 = -4
    elif quest_id_001 == qst.lend_companion:
        quest_slot_013 = quest_get_slot(qst.lend_companion,2)
        troop_set_slot(quest_slot_013,151,8)
        troop_set_slot(quest_slot_013,150,0)
    elif quest_id_001 == qst.lend_surgeon:
        quest_slot_013 = quest_get_slot(qst.lend_surgeon,2)
        troop_set_slot(quest_slot_013,151,8)
        troop_set_slot(quest_slot_013,150,0)
    elif quest_id_001 == qst.incriminate_loyal_commander:
        var003 = -5
        var004 = -6
    elif quest_id_001 == qst.lend_surgeon:
        pass
    elif quest_id_001 == qst.rescue_lord_by_replace:
        var003 = -1
        var004 = -1
    elif quest_id_001 == qst.deliver_message_to_prisoner_lord:
        var003 = 0
        var004 = -1
    elif quest_id_001 == qst.duel_for_lady:
        var003 = -1
        var004 = -1
    elif quest_id_001 == qst.follow_army:
        var003 = 0
        var004 = 0
    elif quest_id_001 == qst.deliver_cattle_to_army:
        var003 = 0
        var004 = 0
    elif quest_id_001 == qst.join_siege_with_army:
        var003 = -1
        var004 = -2
    elif quest_id_001 == qst.scout_waypoints:
        var003 = 0
        var004 = 0
    elif quest_id_001 == qst.deliver_grain:
        var003 = -6
        var004 = -7
    elif quest_id_001 == qst.deliver_cattle:
        var003 = -3
        var004 = -4
    elif quest_id_001 == qst.train_peasants_against_bandits:
        var003 = -4
        var004 = -5
    elif quest_id_001 == qst.deliver_wine:
        var003 = -1
        var004 = -3
        _debt_to_merchants_guild += _qst_deliver_wine_debt
    elif quest_id_001 == qst.move_cattle_herd:
        var003 = -1
        var004 = -3
    elif quest_id_001 == qst.escort_merchant_caravan:
        var003 = -1
        var004 = -3
    elif quest_id_001 == qst.troublesome_bandits:
        var003 = -1
        var004 = -2
    elif quest_id_001 == qst.join_faction:
        var003 = -3
        var004 = -3
        if True:
            get_number_of_hero_centers(trp.player)
            if reg0 > 0:
                change_player_relation_with_faction(_g_invite_faction,-10)
            #end
        #end
        if quest_slot_eq(qst.join_faction,26,1):
            diplomacy_start_war_between_kingdoms(fac.player_supporters_faction,_g_invite_faction,0)
            change_player_honor(-5)
            quest_set_slot(qst.join_faction,26,0)
        #end
        _g_invite_faction = 0
        _g_invite_faction_lord = 0
        _g_invite_offered_center = 0
    elif quest_id_001 == qst.eliminate_bandits_infesting_village:
        var003 = -3
        var004 = -3
    elif quest_id_001 >= qst.resolve_dispute:
        var014 = -2
        var003 = 0
        var004 = 0
    elif quest_id_001 >= qst.consult_with_minister:
        var014 = -2
        var003 = 0
        var004 = 0
    #end
    if var002 > 0 and quest_id_001 < qst.resolve_dispute:
        quest_slot_012 = quest_get_slot(quest_id_001,6)
        var015 = var003
        if var002 == 2:
            var015 = var004
        #end
        if is_between(quest_slot_012,trp.village_1_elder,trp.merchants_end) or is_between(quest_slot_012,trp.town_1_mayor,trp.village_1_elder):
            quest_slot_016 = quest_get_slot(quest_id_001,12)
            change_player_relation_with_center(quest_slot_016,var015)
        else:
            change_player_relation_with_troop(quest_slot_012,var015)
        #end
    #end
    fail_quest(quest_id_001)
    if var002 > 0 and quest_id_001 != qst.consult_with_minister and quest_id_001 != qst.resolve_dispute and quest_id_001 != qst.visit_lady and quest_id_001 != qst.formal_marriage_proposal and quest_id_001 != qst.duel_courtship_rival and quest_id_001 != qst.follow_army and quest_id_001 != qst.denounce_lord and quest_id_001 != qst.intrigue_against_lord and quest_id_001 != qst.offer_gift and quest_id_001 != qst.organize_feast:
        objectionable_action(4,gstr.fail_quest)
    #end
    if quest_id_001 == qst.resolve_dispute and faction_slot_eq(_players_kingdom,11,trp.player):
        change_player_right_to_rule(var014)
        for trp_017 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_018 = store_faction_of_troop(trp_017)
            if troop_faction_018 == fac.player_supporters_faction:
                troop_change_relation_with_troop(trp_017,trp.player,var014)
            #end
        #end
    #end
    if quest_id_001 == qst.organize_feast:
        add_notification_menu(mnu.notification_feast_quest_expired,0,0)
    #end
    end_quest(quest_id_001)


def cf_is_quest_troop(var001):
    var002 = 0
    for quest_id_003 in range(0, qst.quests_end):
        if check_quest_active(quest_id_003):
            quest_slot_004 = quest_get_slot(quest_id_003,2)
            quest_slot_005 = quest_get_slot(quest_id_003,4)
            quest_slot_006 = quest_get_slot(quest_id_003,6)
            if quest_slot_004 == var001 or quest_slot_005 == var001 or quest_slot_006 == var001:
                var002 = 1
            #end
        #end
    #end


def check_friendly_kills():
    agent_own_troop_kill_count_001 = get_player_agent_own_troop_kill_count()
    if _g_player_current_own_troop_kills != agent_own_troop_kill_count_001:
        agent_own_troop_kill_count_001 -= _g_player_current_own_troop_kills
        _g_player_current_own_troop_kills += agent_own_troop_kill_count_001
        agent_own_troop_kill_count_001 *= -1
        change_player_party_morale(agent_own_troop_kill_count_001)
    #end


def simulate_retreat(var001, var002, var003):
    music_set_situation_with_culture(32768)
    set_show_messages(0)
    var004 = 0
    var005 = 0
    var006 = 1
    if True:
        for cur_agent in __all_agents__:
            if agent_is_human(cur_agent) and agent_is_alive(cur_agent):
                agent_set_slot(cur_agent,3,1)
                troop_id_008 = agent_get_troop_id(cur_agent)
                character_lvl_009 = store_character_level(troop_id_008)
                character_lvl_009 += 5
                if troop_is_hero(troop_id_008):
                    character_lvl_009 += 5
                #end
            #end
            if agent_is_ally(cur_agent):
                var004 += character_lvl_009
            else:
                var005 += character_lvl_009
            #end
        #end
        if _pin_player_fallen == 0 and var005 < var004 and var003 == 1:
            var006 = 0
        #end
    #end
    if var006 == 1:
        _g_last_mission_player_damage = 0
        party_clear(p.temp_party)
        party_clear(p.temp_party_2)
        simulate_battle_with_agents_aux(0,var001)
        simulate_battle_with_agents_aux(1,var002)
        var010 = 0
        if _g_last_mission_player_damage > 0:
            var010 = 1
            reg1 = _g_last_mission_player_damage
            s12 = str_store_string(gstr.casualty_display_hp)
        else:
            str_clear(12)
        #end
        print_casualties_to_s0(p.temp_party,1)
        if True:
            party_num_companions_stacks_011 = party_get_num_companion_stacks(p.temp_party)
            if party_num_companions_stacks_011 > 0:
                var010 = 1
            #end
        #end
        s10 = str_store_string_reg(0)
        print_casualties_to_s0(p.temp_party_2,1)
        if True:
            party_num_companions_stacks_011 = party_get_num_companion_stacks(p.temp_party_2)
            if party_num_companions_stacks_011 > 0:
                var010 = 1
            #end
        #end
        s11 = str_store_string_reg(0)
        if var010 == 1:
            dialog_box(gstr.casualty_display,5)
        #end
    #end
    set_show_messages(1)
    var012 = 0
    var013 = 0
    var014 = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent):
            if agent_is_ally(cur_agent):
                var014 += 1
                if not agent_is_alive(cur_agent):
                    var012 += 1
                #end
            #end
        elif not agent_is_alive(cur_agent):
            var013 += 1
        #end
    #end
    var015 = var012 + var013
    if var015 > 0:
        var016 = var012 * 100
        var016 /= var015
        var016 *= var012
        var016 /= var014
        var016 *= -30
        var016 /= 100
        change_player_party_morale(var016)
    #end


def simulate_battle_with_agents_aux(var001, var002):
    agent_no_003 = get_player_agent_no()
    for cur_agent in __all_agents__:
        if agent_no_003 != cur_agent and agent_is_human(cur_agent) and agent_slot_eq(cur_agent,3,1):
            if agent_is_ally(cur_agent):
                var005 = 0
            else:
                var005 = 1
            #end
        #end
        if var005 == var001:
            pos2 = agent_get_position(cur_agent)
            var006 = -1
            var007 = 100000
            for cur_agent in __all_agents__:
                if agent_is_human(cur_agent) and agent_is_alive(cur_agent):
                    if agent_is_ally(cur_agent):
                        var009 = 0
                    else:
                        var009 = 1
                    #end
                #end
            #end
            if cur_agent == agent_no_003 or _pin_player_fallen == 0 and var001 != var009:
                pos3 = agent_get_position(cur_agent)
                distance_010 = get_distance_between_positions(2,3)
                if distance_010 < var007:
                    var007 = distance_010
                    var006 = cur_agent
                #end
            #end
        #end
        if var006 >= 0:
            agent_class_011 = agent_get_class(cur_agent)
            var012 = 1
            var013 = 0
            if agent_class_011 == 1:
                var013 = 2
            elif agent_class_011 == 2:
                var012 = 2
            #end
        #end
        agent_class_011 = agent_get_class(var006)
        var014 = 1
        if agent_class_011 == 2:
            var014 = 2
        #end
        var015 = 18000
        var007 += 3000
        var015 /= var007
        var015 *= 2
        var015 *= var012
        var015 /= var014
        var015 += var013
        var016 = var002
        troop_id_017 = agent_get_troop_id(var006)
        troop_id_018 = agent_get_troop_id(cur_agent)
        character_lvl_019 = store_character_level(troop_id_017)
        character_lvl_020 = store_character_level(troop_id_018)
        var021 = character_lvl_020 - character_lvl_019
        var021 /= 5
        var016 += var021
        if var006 == agent_no_003:
            var016 /= 2
            agent_hit_points_022 = store_agent_hit_points(agent_no_003,1)
        #end
        for var023 in range(0, var015):
            random_x_024 = store_random_in_range(0,100)
            if random_x_024 < var016:
                agent_deliver_damage_to_agent(cur_agent,var006)
            #end
        #end
        if var006 == agent_no_003:
            agent_hit_points_025 = store_agent_hit_points(agent_no_003,1)
            var026 = agent_hit_points_022 - agent_hit_points_025
            _g_last_mission_player_damage += var026
        #end
        if not agent_is_alive(var006):
            if var001 == 1:
                party_add_members(p.temp_party,troop_id_017,1)
                if agent_is_wounded(var006):
                    party_wound_members(p.temp_party,troop_id_017,1)
                #end
            #end
        else:
            party_add_members(p.temp_party_2,troop_id_017,1)
            if agent_is_wounded(var006):
                party_wound_members(p.temp_party_2,troop_id_017,1)
            #end
        #end
    #end


def map_get_random_position_around_position_within_range(var001, var002):
    var001 *= 100
    var003 = 1
    for var004 in range(0, 20):
        if var003 == 1:
            map_get_random_position_around_position(pos2,1,var002)
            distance_005 = get_distance_between_positions(2,1)
            if distance_005 >= var001:
                var003 = 0
            #end
        #end
    #end


def get_number_of_unclaimed_centers_by_player():
    var001 = 0
    reg1 = -1
    for p_002 in range(p.town_1, p.salt_mine):
        party_faction_003 = store_faction_of_party(p_002)
        if party_faction_003 == fac.player_supporters_faction and party_slot_eq(p_002,9,0):
            party_num_companions_stacks_004 = party_get_num_companion_stacks(p_002)
            if party_num_companions_stacks_004 >= 1:
                reg1 = p_002
                var001 += 1
            #end
        #end
    #end
    reg0 = var001


def cf_troop_check_troop_is_enemy(var001, var002):
    troop_get_relation_with_troop(var001,var002)


def troop_get_leaded_center_with_index(var001, var002):
    var003 = -1
    var004 = 0
    for p_005 in range(p.town_1, p.salt_mine):
        if var003 == -1 and party_slot_eq(p_005,7,var001):
            var004 += 1
            if var004 > var002:
                var003 = p_005
            #end
        #end
    #end
    reg0 = var003


def cf_troop_get_random_leaded_walled_center_with_less_strength_priority(var001, var002):
    var003 = 0
    for p_004 in range(p.town_1, p.village_1):
        if party_slot_eq(p_004,7,var001) and party_slot_eq(p_004,54,-1):
            var003 += 1
            if p_004 == var002:
                var003 += 99
            #end
        #end
    #end
    if var003 > 0:
        random_x_005 = store_random_in_range(0,var003)
        var006 = -1
        for p_004 in range(p.town_1, p.village_1):
            if var006 == -1 and party_slot_eq(p_004,7,var001) and party_slot_eq(p_004,54,-1):
                random_x_005 -= 1
                if p_004 == var002:
                    random_x_005 -= 99
                #end
            #end
        #end
        if random_x_005 < 0:
            var006 = p_004
        #end
    #end
    reg0 = var006


def cf_troop_get_random_leaded_town_or_village_except_center(var001, var002):
    var003 = 0
    for p_004 in range(p.town_1, p.salt_mine):
        if not party_slot_eq(p_004,0,2) and party_slot_eq(p_004,7,var001) and p_004 != var002:
            var003 += 1
        #end
    #end
    if var003 > 0:
        random_x_005 = store_random_in_range(0,var003)
        var006 = p.salt_mine
        for p_004 in range(p.town_1, var006):
            if not party_slot_eq(p_004,0,2) and party_slot_eq(p_004,7,var001) and p_004 != var002:
                random_x_005 -= 1
                if random_x_005 < 0:
                    var007 = p_004
                    var006 = 0
                #end
            #end
        #end
    #end
    reg0 = var007


def troop_write_owned_centers_to_s2(troop_id_001):
    get_number_of_hero_centers(troop_id_001)
    var002 = reg0
    s5 = str_store_troop_name(troop_id_001)
    if var002 > 1:
        for var003 in range(1, var002):
            troop_get_leaded_center_with_index(troop_id_001,var003)
            s50 = str_store_party_name_link(reg0)
            if var003 == 1:
                troop_get_leaded_center_with_index(troop_id_001,0)
                s51 = str_store_party_name_link(reg0)
                s51 = str_store_string(gstr.s50_and_s51)
            else:
                s51 = str_store_string(gstr.s50_comma_s51)
            #end
        #end
        s2 = str_store_string(gstr.s5_is_the_ruler_of_s51)
    elif var002 == 1:
        troop_get_leaded_center_with_index(troop_id_001,0)
        s51 = str_store_party_name_link(reg0)
        s2 = str_store_string(gstr.s5_is_the_ruler_of_s51)
    else:
        troop_faction_004 = store_faction_of_troop(troop_id_001)
        s6 = str_store_faction_name_link(troop_faction_004)
        s2 = str_store_string(gstr.s5_is_a_nobleman_of_s6)
    #end


def troop_write_family_relations_to_s1():
    str_clear(1)


def troop_get_family_relation_to_troop(troop_id_001, troop_id_002):
    troop_type_003 = troop_get_type(troop_id_001)
    var004 = 0
    troop_slot_005 = troop_get_slot(troop_id_001,30)
    troop_slot_006 = troop_get_slot(troop_id_002,30)
    if troop_slot_005 > -1:
        troop_slot_007 = troop_get_slot(troop_slot_005,31)
    else:
        troop_slot_007 = -1
    #end
    if troop_slot_006 > -1:
        troop_slot_008 = troop_get_slot(troop_slot_006,31)
    else:
        troop_slot_008 = -1
    #end
    if troop_slot_006 > -1:
        troop_slot_009 = troop_get_slot(troop_slot_006,32)
    else:
        troop_slot_009 = -1
    #end
    troop_slot_010 = troop_get_slot(troop_id_001,31)
    troop_slot_011 = troop_get_slot(troop_id_002,31)
    troop_slot_012 = troop_get_slot(troop_id_001,32)
    troop_slot_013 = troop_get_slot(troop_id_002,32)
    if is_between(troop_slot_010,trp.npc1,trp.heroes_end):
        troop_slot_014 = troop_get_slot(troop_slot_010,31)
    else:
        troop_slot_014 = -1
    #end
    if is_between(troop_slot_011,trp.npc1,trp.heroes_end):
        troop_slot_015 = troop_get_slot(troop_slot_011,31)
    else:
        troop_slot_015 = -1
    #end
    troop_slot_016 = troop_get_slot(troop_id_001,33)
    troop_slot_017 = troop_get_slot(troop_id_002,33)
    s11 = str_store_string(gstr.no_relation)
    if troop_id_001 == troop_id_002:
        pass
    elif troop_slot_005 == troop_id_002:
        var004 = 20
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.wife)
        else:
            s11 = str_store_string(gstr.husband)
        #end
    elif troop_slot_011 == troop_id_001:
        var004 = 15
        s11 = str_store_string(gstr.father)
    elif troop_slot_013 == troop_id_001:
        var004 = 15
        s11 = str_store_string(gstr.mother)
    elif troop_slot_010 == troop_id_002 or troop_slot_012 == troop_id_002:
        var004 = 15
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.daughter)
        else:
            s11 = str_store_string(gstr.son)
        #end
    elif troop_slot_010 > -1 and troop_slot_010 == troop_slot_011:
        var004 = 10
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.sister)
        else:
            s11 = str_store_string(gstr.brother)
        #end
    elif troop_slot_017 == troop_id_001:
        var004 = 10
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.sister)
        else:
            s11 = str_store_string(gstr.brother)
        #end
    elif troop_slot_016 == troop_id_002:
        var004 = 10
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.sister)
        else:
            s11 = str_store_string(gstr.brother)
        #end
    elif troop_slot_014 > -1 and troop_slot_014 == troop_slot_011:
        var004 = 4
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.niece)
        else:
            s11 = str_store_string(gstr.nephew)
        #end
    elif troop_slot_015 > -1 and troop_slot_015 == troop_slot_010:
        var004 = 4
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.aunt)
        else:
            s11 = str_store_string(gstr.uncle)
        #end
    elif troop_slot_014 > 0 and troop_slot_015 == troop_slot_014:
        var004 = 2
        s11 = str_store_string(gstr.cousin)
    elif troop_slot_007 == troop_id_002:
        var004 = 5
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.daughterinlaw)
        else:
            s11 = str_store_string(gstr.soninlaw)
        #end
    elif troop_slot_008 == troop_id_001:
        var004 = 5
        s11 = str_store_string(gstr.fatherinlaw)
    elif troop_slot_009 == troop_id_001 and troop_slot_009 != trp.player:
        var004 = 5
        s11 = str_store_string(gstr.motherinlaw)
    elif troop_slot_007 > -1 and troop_slot_007 == troop_slot_011:
        var004 = 5
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.sisterinlaw)
        else:
            s11 = str_store_string(gstr.brotherinlaw)
        #end
    elif troop_slot_008 > -1 and troop_slot_008 == troop_slot_010:
        var004 = 5
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.sisterinlaw)
        else:
            s11 = str_store_string(gstr.brotherinlaw)
        #end
    elif troop_slot_006 > -1 and troop_slot_eq(troop_slot_006,33,troop_id_001):
        var004 = 5
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.sisterinlaw)
        else:
            s11 = str_store_string(gstr.brotherinlaw)
        #end
    elif troop_slot_005 > -1 and troop_slot_eq(troop_slot_005,33,troop_id_002):
        var004 = 5
        if troop_type_003 == 1:
            s11 = str_store_string(gstr.sisterinlaw)
        else:
            s11 = str_store_string(gstr.brotherinlaw)
        #end
    #end
    reg4 = troop_type_003
    reg0 = var004


def collect_friendly_parties():
    party_collect_attachments_to_party(p.main_party,p.collective_friends)
    if _g_ally_party > 0:
        party_collect_attachments_to_party(_g_ally_party,p.temp_party)
        _g_move_heroes = 1
        party_add_party(p.collective_friends,p.temp_party)
    #end


def encounter_calculate_fit():
    party_count_fit_for_battle(p.main_party)
    collect_friendly_parties()
    party_count_fit_for_battle(p.collective_friends)
    _g_friend_fit_for_battle = reg0
    party_clear(p.collective_ally)
    if _g_ally_party > 0 and party_is_active(_g_ally_party):
        party_collect_attachments_to_party(_g_ally_party,p.collective_ally)
    #end
    party_clear(p.collective_enemy)
    if party_is_active(_g_enemy_party):
        party_collect_attachments_to_party(_g_enemy_party,p.collective_enemy)
    #end
    party_count_fit_for_battle(p.collective_enemy)
    _g_enemy_fit_for_battle = reg0
    reg11 = _g_enemy_fit_for_battle
    reg10 = _g_friend_fit_for_battle


def encounter_init_variables():
    _capture_screen_shown = 0
    _loot_screen_shown = 0
    _thanked_by_ally_leader = 0
    _g_battle_result = 0
    _cant_leave_encounter = 0
    _cant_talk_to_enemy = 0
    _last_defeated_hero = 0
    _last_freed_hero = 0
    encounter_calculate_fit()
    party_copy(p.main_party_backup,p.main_party)
    party_calculate_strength(p.main_party,0)
    _g_starting_strength_main_party = reg0
    party_copy(p.encountered_party_backup,p.collective_enemy)
    party_calculate_strength(p.collective_enemy,0)
    _g_starting_strength_enemy_party = reg0
    _g_strength_contribution_of_player = 100
    party_copy(p.collective_friends_backup,p.collective_friends)
    party_calculate_strength(p.collective_friends,0)
    _g_starting_strength_friends = reg0
    _g_strength_contribution_of_player = _g_starting_strength_main_party * 100
    if _g_starting_strength_friends > 0:
        _g_strength_contribution_of_player /= _g_starting_strength_friends
    else:
        _g_strength_contribution_of_player = 100
    #end
    party_clear(p.routed_enemies)
    _num_routed_us = 0
    _num_routed_allies = 0
    _num_routed_enemies = 0
    party_num_companions_stacks_001 = party_get_num_companion_stacks(p.main_party)
    for stack_no_002 in range(0, party_num_companions_stacks_001):
        troop_id_003 = party_stack_get_troop_id(p.main_party,stack_no_002)
        if True:
            troop_set_slot(troop_id_003,146,0)
        #end
    #end
    party_num_companions_stacks_001 = party_get_num_companion_stacks(p.collective_friends)
    for stack_no_002 in range(0, party_num_companions_stacks_001):
        troop_id_003 = party_stack_get_troop_id(p.collective_friends,stack_no_002)
        if True:
            troop_set_slot(troop_id_003,147,0)
        #end
    #end
    party_num_companions_stacks_001 = party_get_num_companion_stacks(p.collective_enemy)
    for stack_no_002 in range(0, party_num_companions_stacks_001):
        troop_id_003 = party_stack_get_troop_id(p.collective_enemy,stack_no_002)
        if True:
            troop_set_slot(troop_id_003,148,0)
        #end
    #end
    for faction_id_004 in range(15, 21):
        faction_set_slot(faction_id_004,90,0)
    #end
    _routed_party_added = 0
    party_clear(p.total_enemy_casualties)


def calculate_renown_value():
    party_calculate_strength(p.main_party,0)
    var001 = reg0
    party_calculate_strength(p.collective_enemy,0)
    var002 = reg0
    party_calculate_strength(p.collective_friends,0)
    var003 = reg0
    var003 += 1
    var004 = var002 * 100
    var004 /= var003
    var005 = var002
    var005 *= var004
    var005 /= 100
    var005 *= var001
    var005 /= var003
    _battle_renown_value = var005 / 5
    val_min(_battle_renown_value,2500)
    convert_to_fixed_point(_battle_renown_value)
    _battle_renown_value = store_sqrt(_battle_renown_value)
    convert_from_fixed_point(_battle_renown_value)
    reg8 = _battle_renown_value
    print("@Renown value for this battle is {reg8}.",4294967295)


def cf_get_first_agent_with_troop_id(var001):
    var002 = -1
    for cur_agent in __all_agents__:
        if var002 == -1:
            troop_id_004 = agent_get_troop_id(cur_agent)
            if troop_id_004 == var001:
                var002 = cur_agent
            #end
        #end
    #end
    reg0 = var002


def cf_team_get_average_position_of_agents_with_type_to_pos1(var001, var002):
    var002_list1 = [
    agent_division_009,
    9,
    ]
    var003 = 0
    var004 = 0
    var005 = 0
    var006 = 0
    set_fixed_point_multiplier(100)
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
            agent_team_no_008 = agent_get_team(cur_agent)
            if agent_team_no_008 == var001:
                agent_division_009 = agent_get_division(cur_agent)
                if var002 in var002_list1:
                    pos1 = agent_get_position(cur_agent)
                    pos_x_010 = position_get_x(1)
                    var003 += pos_x_010
                    pos_y_011 = position_get_y(1)
                    var004 += pos_y_011
                    pos_z_012 = position_get_z(1)
                    var005 += pos_z_012
                    var006 += 1
                #end
            #end
        #end
    #end
    if var006 > 1:
        var003 /= var006
        var004 /= var006
        var005 /= var006
        init_position(1)
        position_move_x(1,var003)
        position_move_y(1,var004)
        position_move_z(1,var005)


def cf_turn_windmill_fans(var001):
    scp_instance_002 = scene_prop_get_instance(spr.windmill_fan_turning,var001)
    if scp_instance_002 >= 0:
        pos1 = prop_instance_get_position(scp_instance_002)
        position_rotate_y(1,10)
        prop_instance_animate_to_position(scp_instance_002,1,100)
        var001 += 1


def print_party_members(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    reg10 = party_num_companions_stacks_002
    for stack_no_003 in range(0, party_num_companions_stacks_002):
        troop_id_004 = party_stack_get_troop_id(party_id_001,stack_no_003)
        if troop_is_hero(troop_id_004):
            if stack_no_003 == 0:
                s51 = str_store_troop_name(troop_id_004)
            #end
        #end
        s52 = str_store_troop_name(troop_id_004)
        if stack_no_003 == 1:
            s51 = str_store_string(gstr.s52_and_s51)
        elif stack_no_003 > 1:
            s51 = str_store_string(gstr.s52_comma_s51)
        #end
    #end
    if party_num_companions_stacks_002 == 0:
        s51 = str_store_string(gstr.noone)
    #end


def round_value(var001):
    if var001 < 100 and var001 != 0:
        var001 += 5
        var001 /= 10
        var001 *= 10
        if var001 == 0:
            var001 = 5
        #end
    elif var001 < 300:
        var001 += 25
        var001 /= 50
        var001 *= 50
    else:
        var001 += 50
        var001 /= 100
        var001 *= 100
    #end
    reg0 = var001


def change_banners_and_chest():
    party_slot_001 = party_get_slot(_g_encountered_party,7)
    if party_slot_001 >= 0:
        troop_slot_002 = troop_get_slot(party_slot_001,13)
        if troop_slot_002 > 0:
            replace_scene_props(spr.banner_a,troop_slot_002)
        else:
            replace_scene_props(spr.banner_a,spr.empty)
        #end
    #end
    if party_slot_001 != trp.player:
        replace_scene_props(spr.player_chest,spr.locked_player_chest)
    #end


def remove_siege_objects():
    replace_scene_props(spr.battlement_a_destroyed,spr.battlement_a)
    replace_scene_props(spr.snowy_castle_battlement_a_destroyed,spr.snowy_castle_battlement_a)
    replace_scene_props(spr.castle_e_battlement_a_destroyed,spr.castle_e_battlement_a)
    replace_scene_props(spr.castle_battlement_a_destroyed,spr.castle_battlement_a)
    replace_scene_props(spr.castle_battlement_b_destroyed,spr.castle_battlement_b)
    replace_scene_props(spr.earth_wall_a2,spr.earth_wall_a)
    replace_scene_props(spr.earth_wall_b2,spr.earth_wall_b)
    replace_scene_props(spr.belfry_platform_b,spr.empty)
    replace_scene_props(spr.belfry_platform_a,spr.empty)
    replace_scene_props(spr.belfry_a,spr.empty)
    replace_scene_props(spr.belfry_wheel,spr.empty)
    replace_scene_props(spr.siege_ladder_move_6m,spr.empty)
    replace_scene_props(spr.siege_ladder_move_8m,spr.empty)
    replace_scene_props(spr.siege_ladder_move_10m,spr.empty)
    replace_scene_props(spr.siege_ladder_move_12m,spr.empty)
    replace_scene_props(spr.siege_ladder_move_14m,spr.empty)
    replace_scene_props(spr.siege_ladder_12m,spr.empty)
    replace_scene_props(spr.siege_ladder_14m,spr.empty)
    replace_scene_props(spr.mangonel,spr.empty)
    replace_scene_props(spr.trebuchet_old,spr.empty)
    replace_scene_props(spr.trebuchet_new,spr.empty)
    replace_scene_props(spr.stone_ball,spr.empty)
    replace_scene_props(spr.Village_fire_big,spr.empty)


def describe_relation_to_s63(var001):
    var002 = var001 + 100
    var002 += 5
    var003 = var002 / 10
    val_clamp(var003,0,20)
    var004 = gstr.relation_mnus_100
    var004 += var003
    s63 = str_store_string(var004)


def describe_center_relation_to_s3(var001):
    var002 = var001 + 100
    var002 += 5
    var003 = var002 / 10
    val_clamp(var003,0,20)
    var004 = gstr.center_relation_mnus_100
    var004 += var003
    s3 = str_store_string(var004)


def center_ambiance_sounds():
    var001 = -1
    var002 = -1
    var003 = -1
    var004 = -1
    var005 = -1
    if party_slot_eq(_g_encountered_party,0,4):
        if not is_currently_night():
            var003 = snd.distant_dog_bark
            var003 = snd.distant_chicken
        else:
            var001 = snd.distant_dog_bark
            var002 = snd.distant_owl
        #end
    elif party_slot_eq(_g_encountered_party,0,3):
        if not is_currently_night():
            var001 = snd.distant_carpenter
            var002 = snd.distant_blacksmith
            var003 = snd.distant_dog_bark
        else:
            var001 = snd.distant_dog_bark
        #end
    #end
    if True:
        random_x_006 = store_random_in_range(0,7)
        if random_x_006 == 1 and var001 >= 0:
            play_sound(var001)
        elif random_x_006 == 2 and var002 >= 0:
            play_sound(var002)
        elif random_x_006 == 3 and var003 >= 0:
            play_sound(var003)
        elif random_x_006 == 4 and var004 >= 0:
            play_sound(var004)
        elif random_x_006 == 5 and var005 >= 0:
            play_sound(var005)
        #end
    #end


def center_set_walker_to_type(party_id_001, var002, var003):
    slot_no_004 = 180 + var002
    party_set_slot(party_id_001,slot_no_004,var003)
    party_slot_005 = party_get_slot(party_id_001,61)
    faction_slot_006 = faction_get_slot(party_slot_005,10)
    random_x_007 = store_random_in_range(0,2)
    if party_slot_eq(party_id_001,0,4):
        random_x_007 += 55
    else:
        random_x_007 += 53
    #end
    if var003 == 3:
        slot_no_008 = random_x_007
        random_x_007 += 4
    #end
    faction_slot_009 = faction_get_slot(faction_slot_006,random_x_007)
    if var003 == 3:
        faction_slot_010 = faction_get_slot(faction_slot_006,slot_no_008)
        for itm_011 in range(itm.horse_meat, itm.wooden_stick):
            item_kind_count_012 = store_item_kind_count(itm_011,faction_slot_010)
            if item_kind_count_012 >= 1:
                item_kind_count_012 = store_item_kind_count(itm_011,faction_slot_009)
                if item_kind_count_012 < 1:
                    troop_add_items(faction_slot_009,itm_011,1)
                #end
            #end
        #end
        random_x_013 = store_random_in_range(12,15)
        var014 = 0
        for itm_011 in range(itm.horse_meat, itm.wooden_stick):
            item_kind_count_012 = store_item_kind_count(itm_011,faction_slot_009)
            if item_kind_count_012 >= 1:
                item_type_015 = item_get_type(itm_011)
                if item_type_015 == random_x_013:
                    var014 += 1
                    troop_remove_items(faction_slot_009,itm_011,item_kind_count_012)
                #end
            #end
        #end
        random_x_016 = store_random_in_range(0,var014)
        var014 = -1
        for itm_011 in range(itm.horse_meat, itm.wooden_stick):
            item_kind_count_012 = store_item_kind_count(itm_011,faction_slot_010)
            if item_kind_count_012 >= 1:
                item_type_015 = item_get_type(itm_011)
                if item_type_015 == random_x_013:
                    var014 += 1
                    if var014 == random_x_016:
                        troop_add_items(faction_slot_009,itm_011,1)
                        var017 = itm_011
                    #end
                #end
            #end
        #end
        _spy_item_worn = var017
        _spy_quest_troop = faction_slot_009
        troop_equip_items(faction_slot_009)
    #end
    slot_no_018 = 160 + var002
    party_set_slot(party_id_001,slot_no_018,faction_slot_009)
    random_x_019 = store_random_in_range(0,1000000)
    slot_no_020 = 170 + var002
    party_set_slot(party_id_001,slot_no_020,random_x_019)


def cf_center_get_free_walker(var001):
    var002 = 0
    for var003 in range(0, 8):
        var004 = 180 + var003
        if party_slot_eq(var001,var004,0):
            var002 += 1
        #end
    #end
    if var002 > 0:
        reg0 = -1
        random_x_005 = store_random_in_range(0,var002)
        for var003 in range(0, 8):
            var004 = 180 + var003
            if party_slot_eq(var001,var004,0):
                var002 -= 1
                if var002 == random_x_005:
                    reg0 = var003
                #end
            #end
        #end
    #end


def center_remove_walker_type_from_walkers(var001, var002):
    for var003 in range(0, 8):
        var004 = 180 + var003
        if party_slot_eq(var001,var004,var002):
            center_set_walker_to_type(var001,var003,0)
        #end
    #end


def init_town_walkers():
    if _town_nighttime == 0:
        for var001 in range(0, 8):
            slot_no_002 = 160 + var001
            party_slot_003 = party_get_slot(_current_town,slot_no_002)
            if party_slot_003 > 0:
                entry_no_004 = 32 + var001
                set_visitor(entry_no_004,party_slot_003)
            #end
        #end
    #end


def cf_enter_center_location_bandit_check():
    if _town_nighttime != 0 and party_slot_ge(_current_town,155,1) and _g_defending_against_siege == 0 and _sneaked_into_town == 0:
        if party_slot_eq(_current_town,0,4):
            party_slot_001 = party_get_slot(_current_town,10)
        else:
            party_slot_001 = party_get_slot(_current_town,10)
        #end
    #end
    modify_visitors_at_site(party_slot_001)
    reset_visitors()
    party_slot_002 = party_get_slot(_current_town,155)
    character_lvl_003 = store_character_level(trp.player)
    set_jump_mission(mt.bandits_at_night)
    if party_slot_eq(_current_town,0,4):
        number_of_troops_004 = 2
        var005 = character_lvl_003 / 10
        number_of_troops_004 += var005
        for var006 in range(0, 3):
            if character_lvl_003 > 10:
                random_x_007 = store_random_in_range(0,100)
                if random_x_007 < character_lvl_003:
                    number_of_troops_004 += 1
                #end
            #end
        #end
        set_visitors(4,party_slot_002,number_of_troops_004)
        _num_center_bandits = number_of_troops_004
        set_jump_entry(2)
    else:
        number_of_troops_004 = 1
        _num_center_bandits = 0
        if character_lvl_003 > 15:
            random_x_007 = store_random_in_range(0,100)
            if random_x_007 < character_lvl_003:
                number_of_troops_004 = 2
            #end
        #end
        _num_center_bandits += number_of_troops_004
        set_visitors(11,party_slot_002,number_of_troops_004)
        number_of_troops_004 = 1
        if character_lvl_003 > 20:
            random_x_007 = store_random_in_range(0,100)
            if random_x_007 < character_lvl_003:
                number_of_troops_004 = 2
            #end
        #end
        set_visitors(27,party_slot_002,number_of_troops_004)
        _num_center_bandits += number_of_troops_004
        if character_lvl_003 > 9:
            number_of_troops_004 = 1
            if character_lvl_003 > 25:
                random_x_007 = store_random_in_range(0,100)
                if random_x_007 < character_lvl_003:
                    number_of_troops_004 = 2
                #end
            #end
            set_visitors(28,party_slot_002,number_of_troops_004)
            _num_center_bandits += number_of_troops_004
        #end
        _town_entered = 1
        _all_doors_locked = 1
    #end
    print("@You have run into a trap!",4294910498)
    print("@You are attacked by a group of bandits!",4294910498)
    jump_to_scene(party_slot_001)
    change_screen_mission()


def init_town_agent(var001):
    troop_id_002 = agent_get_troop_id(var001)
    set_fixed_point_multiplier(100)
    var003 = -1
    if is_between(troop_id_002,trp.town_1_armorer,trp.town_1_weaponsmith) or is_between(troop_id_002,trp.town_1_weaponsmith,trp.town_1_tavernkeeper):
        if True:
            troop_type_004 = troop_get_type(troop_id_002)
            if troop_type_004 == 0:
                agent_set_animation(var001,anim.stand_townguard)
            else:
                agent_set_animation(var001,anim.stand_townguard)
            #end
        #end
    elif is_between(troop_id_002,trp.knight_1_1_wife,trp.heroes_end):
        var003 = anim.stand_lady
    elif is_between(troop_id_002,trp.npc1,trp.knight_1_1_wife):
        var003 = anim.stand_lord
    elif is_between(troop_id_002,trp.farmer,trp.town_walker_1):
        var003 = anim.stand_townguard
    #end
    if var003 >= 0:
        agent_set_stand_animation(var001,var003)
        agent_set_animation(var001,var003)
        random_x_005 = store_random_in_range(0,100)
        agent_set_animation_progress(var001,random_x_005)
    #end


def init_town_walker_agents():
    var001 = 0
    for cur_agent in __all_agents__:
        troop_id_003 = agent_get_troop_id(cur_agent)
        if is_between(troop_id_003,trp.town_walker_1,trp.tournament_master):
            var001 += 1
            pos1 = agent_get_position(cur_agent)
            for var004 in range(9, 40):
                pos2 = entry_point_get_position(var004)
                distance_005 = get_distance_between_positions(1,2)
                if distance_005 < 200:
                    agent_set_slot(cur_agent,0,var004)
                #end
            #end
        #end
        set_town_walker_destination(cur_agent)
    #end


def agent_get_town_walker_details(var001):
    agent_entry_no_002 = agent_get_entry_no(var001)
    var003 = agent_entry_no_002 - 32
    slot_no_004 = 180 + var003
    party_slot_005 = party_get_slot(_current_town,slot_no_004)
    slot_no_006 = 170 + var003
    party_slot_007 = party_get_slot(_current_town,slot_no_006)
    reg0 = party_slot_005
    reg1 = party_slot_007
    reg2 = var003


def town_walker_occupation_string_to_s14(var001):
    var002 = 0
    s14 = str_store_string(gstr.i_take_what_work_i_can_sirmadame_i_carry_water_or_help_the_merchants_with_their_loads_or_help_build_things_if_theres_things_to_be_built)
    agent_get_town_walker_details(var001)
    var003 = reg0
    var004 = reg1
    var005 = -1
    var006 = 0
    for itm_007 in range(itm.spice, itm.siege_supply):
        center_get_production(_g_encountered_party,itm_007)
        var006 += reg0
    #end
    val_max(var006,1)
    var008 = store_mod(var004,var006)
    if _cheat_mode == 1:
        reg4 = var004
        reg5 = var006
        reg7 = var008
        print(gstr.dna_reg4_total_production_reg5_modula_reg7)
    #end
    for itm_007 in range(itm.spice, itm.siege_supply):
        if var008 > -1:
            center_get_production(_g_encountered_party,itm_007)
            var008 -= reg0
            if var008 < 0:
                if _cheat_mode == 1:
                    s9 = str_store_item_name(itm_007)
                    print(gstr.agent_produces_s9)
                #end
            #end
        #end
        var005 = itm_007
    #end
    if var003 == 1 and is_between(_g_encountered_party,p.town_1,p.castle_1):
        s14 = str_store_string(gstr.im_not_doing_anything_sirmadame_theres_no_work_to_be_had_around_here_these_days)
    elif var003 == 1:
        s14 = str_store_string(gstr.im_not_doing_anything_sirmadame_i_have_no_land_of_my_own_and_theres_no_work_to_be_had_around_here_these_days)
    elif var003 == 2:
        s14 = str_store_string(gstr.why_im_still_living_off_of_your_kindness_and_goodness_sirmadame_hopefully_there_will_be_work_shortly)
    elif var005 == itm.grain and is_between(_g_encountered_party,p.town_1,p.castle_1):
        s14 = str_store_string(gstr.i_work_in_the_fields_just_outside_the_walls_where_they_grow_grain_we_dont_quite_grow_enough_to_meet_our_needs_though_and_have_to_import_grain_from_the_surrounding_countryside)
        var002 = 1
    elif var005 == itm.grain:
        s14 = str_store_string(gstr.i_work_mostly_in_the_fields_growing_grain_in_the_town_they_grind_it_to_make_bread_or_ale_and_we_can_also_boil_it_as_a_porridge)
        var002 = 1
    elif var005 == itm.ale:
        s14 = str_store_string(gstr.i_work_in_the_breweries_making_ale_the_poor_folk_drink_a_lot_of_it_as_its_cheaper_than_wine_we_make_it_with_grain_brought_in_from_the_countryside)
        var002 = 1
    elif var005 == itm.bread:
        s14 = str_store_string(gstr.i_work_in_a_mill_grinding_flour_to_make_bread_bread_is_cheap_keeps_well_and_fills_the_stomach)
        var002 = 1
    elif var005 == itm.dried_meat:
        s14 = str_store_string(gstr.i_tend_cattle_we_dry_and_salt_meat_to_preserve_it_and_make_cheese_from_the_milk)
        var002 = 1
    elif var005 == itm.cheese:
        s14 = str_store_string(gstr.i_tend_cattle_we_dry_and_salt_meat_to_preserve_it_and_make_cheese_from_the_milk_so_it_doesnt_spoil)
        var002 = 1
    elif var005 == itm.butter:
        s14 = str_store_string(gstr.i_tend_cattle_we_dry_and_salt_meat_to_preserve_it_and_make_cheese_from_the_milk_so_it_doesnt_spoil)
        var002 = 1
    elif var005 == itm.wool:
        s14 = str_store_string(gstr.i_tend_sheep_we_send_the_wool_to_the_cities_to_be_woven_into_cloth_and_make_mutton_sausage_when_we_cull_the_herds)
        var002 = 1
    elif var005 == itm.sausages:
        s14 = str_store_string(gstr.i_tend_sheep_we_send_the_wool_to_the_cities_to_be_woven_into_cloth_and_make_mutton_sausage_when_we_cull_the_herds)
        var002 = 1
    elif var005 == itm.wool_cloth:
        s14 = str_store_string(gstr.i_work_at_a_loom_spinning_cloth_from_wool_wool_is_some_of_the_cheapest_cloth_you_can_buy_but_it_will_still_keep_you_warm)
        var002 = 1
    elif var005 == itm.smoked_fish:
        s14 = str_store_string(gstr.i_crew_a_fishing_boat_we_salt_and_smoke_the_flesh_to_sell_it_far_inland)
        var002 = 1
    elif var005 == itm.salt:
        s14 = str_store_string(gstr.i_sift_salt_from_a_nearby_flat_they_need_salt_everywhere_to_preserve_meat_and_fish)
        var002 = 1
    elif var005 == itm.iron:
        s14 = str_store_string(gstr.i_mine_iron_from_a_vein_in_a_nearby_cliffside_they_use_it_to_make_tools_arms_and_other_goods)
        var002 = 1
    elif var005 == itm.pottery:
        s14 = str_store_string(gstr.i_make_pottery_which_people_use_to_store_grain_and_carry_water)
        var002 = 1
    elif var005 == itm.tools:
        s14 = str_store_string(gstr.trade_explanation_tools)
        var002 = 1
    elif var005 == itm.oil:
        s14 = str_store_string(gstr.trade_explanation_oil)
        var002 = 1
    elif var005 == itm.linen:
        s14 = str_store_string(gstr.trade_explanation_linen)
        var002 = 1
    elif var005 == itm.velvet:
        s14 = str_store_string(gstr.trade_explanation_velvet)
        var002 = 1
    elif var005 == itm.spice:
        s14 = str_store_string(gstr.trade_explanation_spice)
        var002 = 1
    elif var005 == itm.apples:
        s14 = str_store_string(gstr.trade_explanation_apples)
        var002 = 1
    #end
    if var002 == 1:
        var009 = -1
        skill_lvl_010 = store_skill_level(skl.trade,trp.player)
        if is_between(_g_encountered_party,p.village_1,p.salt_mine):
            party_slot_011 = party_get_slot(_g_encountered_party,121)
        else:
            party_slot_011 = _g_encountered_party
        #end
        var012 = 250 - itm.spice
        slot_no_013 = var005 + var012
        party_slot_014 = party_get_slot(party_slot_011,slot_no_013)
        party_slot_014 += 400
        var015 = skill_lvl_010 * 35
        if is_between(_g_encountered_party,p.village_1,p.salt_mine):
            party_slot_014 += 200
        #end
        party_slot_014 -= var015
        for slot_no_016 in range(190, 205):
            party_slot_017 = party_get_slot(party_slot_011,slot_no_016)
            party_slot_018 = party_get_slot(party_slot_017,slot_no_013)
            if _cheat_mode == 1:
                reg4 = party_slot_018
                reg5 = party_slot_014
                s10 = str_store_party_name(party_slot_017)
                print(gstr.s10_has_reg4_needs_reg5)
            #end
            if party_slot_018 > party_slot_014:
                var009 = party_slot_017
                party_slot_014 = party_slot_018
            #end
        #end
        if is_between(var009,p.town_1,p.salt_mine):
            s15 = str_store_party_name(var009)
            s14 = str_store_string(gstr.s14_i_hear_that_you_can_find_a_good_price_for_it_in_s15)
        #end
    #end


def tick_town_walkers():
    for cur_agent in __all_agents__:
        troop_id_002 = agent_get_troop_id(cur_agent)
        if is_between(troop_id_002,trp.town_walker_1,trp.tournament_master):
            agent_slot_003 = agent_get_slot(cur_agent,0)
            pos1 = entry_point_get_position(agent_slot_003)
            if agent_slot_003 < 32:
                init_position(2)
                position_set_y(2,250)
                position_transform_position_to_parent(1,1,2)
            #end
        #end
        pos2 = agent_get_position(cur_agent)
        distance_004 = get_distance_between_positions(1,2)
        if distance_004 < 400:
            random_x_005 = 0
            if agent_slot_003 < 32:
                random_x_005 = store_random_in_range(0,100)
            #end
        #end
        if random_x_005 < 20:
            set_town_walker_destination(cur_agent)
        #end
    #end


def set_town_walker_destination(agent_id_001):
    reg0 = 9
    reg1 = 10
    reg2 = 12
    reg3 = 32
    reg4 = 33
    reg5 = 34
    reg6 = 35
    reg7 = 36
    reg8 = 37
    reg9 = 38
    reg10 = 39
    for cur_agent in __all_agents__:
        troop_id_003 = agent_get_troop_id(cur_agent)
        if is_between(troop_id_003,trp.town_walker_1,trp.tournament_master):
            agent_slot_004 = agent_get_slot(cur_agent,0)
            if agent_slot_004 == 9:
                reg0 = 0
            elif agent_slot_004 == 10:
                reg1 = 0
            elif agent_slot_004 == 12:
                reg2 = 0
            elif agent_slot_004 == 32:
                reg3 = 0
            elif agent_slot_004 == 33:
                reg4 = 0
            elif agent_slot_004 == 34:
                reg5 = 0
            elif agent_slot_004 == 35:
                reg6 = 0
            elif agent_slot_004 == 36:
                reg7 = 0
            elif agent_slot_004 == 37:
                reg8 = 0
            elif agent_slot_004 == 38:
                reg9 = 0
            elif agent_slot_004 == 39:
                reg10 = 0
            #end
        #end
    #end
    var005 = 100
    agent_slot_004 = 0
    for var006 in range(0, var005):
        shuffle_range(0,11)
        if reg0 > 0:
            agent_slot_004 = reg0
            var005 = 0
        #end
    #end
    if agent_slot_004 > 0:
        agent_set_slot(agent_id_001,0,agent_slot_004)
        pos1 = entry_point_get_position(agent_slot_004)
        if agent_slot_004 < 32:
            init_position(2)
            position_set_y(2,250)
            position_transform_position_to_parent(1,1,2)
        #end
        agent_set_scripted_destination(agent_id_001,1,0)
        agent_set_speed_limit(agent_id_001,5)
    #end


def town_init_doors(var001):
    if True:
        var002 = 0
        if var001 == 1:
            var002 = 1
        elif var001 == 0 and _town_nighttime == 0:
            var002 = 1
        #end
        if var002 == 1:
            var003 = 1
            for var004 in range(0, var003):
                scp_instance_005 = scene_prop_get_instance(spr.towngate_door_left,var004)
                if scp_instance_005 >= 0:
                    var003 += 1
                    pos1 = prop_instance_get_position(scp_instance_005)
                    position_rotate_z(1,-100)
                    prop_instance_animate_to_position(scp_instance_005,1,1)
                #end
            #end
        #end
        var003 = 1
        for var004 in range(0, var003):
            scp_instance_005 = scene_prop_get_instance(spr.towngate_rectangle_door_left,var004)
            if scp_instance_005 >= 0:
                var003 += 1
                pos1 = prop_instance_get_position(scp_instance_005)
                position_rotate_z(1,-80)
                prop_instance_animate_to_position(scp_instance_005,1,1)
            #end
        #end
        var003 = 1
        for var004 in range(0, var003):
            scp_instance_005 = scene_prop_get_instance(spr.towngate_door_right,var004)
            if scp_instance_005 >= 0:
                var003 += 1
                pos1 = prop_instance_get_position(scp_instance_005)
                position_rotate_z(1,100)
                prop_instance_animate_to_position(scp_instance_005,1,1)
            #end
        #end
        var003 = 1
        for var004 in range(0, var003):
            scp_instance_005 = scene_prop_get_instance(spr.towngate_rectangle_door_right,var004)
            if scp_instance_005 >= 0:
                var003 += 1
                pos1 = prop_instance_get_position(scp_instance_005)
                position_rotate_z(1,80)
                prop_instance_animate_to_position(scp_instance_005,1,1)
            #end
        #end
    #end


def siege_init_ai_and_belfry():
    _cur_belfry_pos = 50
    slot_no_001 = 10
    cur_scene_002 = store_current_scene()
    for var003 in range(0, 3):
        scp_instance_004 = scene_prop_get_instance(spr.belfry_a,var003)
        if scp_instance_004 >= 0:
            scene_set_slot(cur_scene_002,slot_no_001,scp_instance_004)
            slot_no_001 += 1
        #end
    #end
    for var003 in range(0, 3):
        scp_instance_004 = scene_prop_get_instance(spr.belfry_platform_a,var003)
        if scp_instance_004 >= 0:
            scene_set_slot(cur_scene_002,slot_no_001,scp_instance_004)
            slot_no_001 += 1
        #end
    #end
    for var003 in range(0, 3):
        scp_instance_004 = scene_prop_get_instance(spr.belfry_platform_b,var003)
        if scp_instance_004 >= 0:
            scene_set_slot(cur_scene_002,slot_no_001,scp_instance_004)
            slot_no_001 += 1
        #end
    #end
    _belfry_rotating_objects_begin = slot_no_001
    for var003 in range(0, 5):
        scp_instance_004 = scene_prop_get_instance(spr.belfry_wheel,var003)
        if scp_instance_004 >= 0:
            scene_set_slot(cur_scene_002,slot_no_001,scp_instance_004)
            slot_no_001 += 1
        #end
    #end
    _last_belfry_object_pos = slot_no_001
    if True:
        scp_instance_005 = scene_prop_get_instance(spr.belfry_platform_a,0)
    #end
    pos1 = entry_point_get_position(55)
    pos3 = entry_point_get_position(50)
    for slot_no_006 in range(10, _last_belfry_object_pos):
        var007 = 64
        var007 += slot_no_006
        var007 -= 10
        scene_slot_008 = scene_get_slot(cur_scene_002,slot_no_006)
        pos2 = prop_instance_get_position(scene_slot_008)
        if scene_slot_008 == scp_instance_005:
            position_rotate_x(2,90)
        #end
        position_transform_position_to_local(var007,1,2)
        position_transform_position_to_parent(4,3,var007)
        prop_instance_animate_to_position(scene_slot_008,4,1)
    #end
    _belfry_positioned = 0
    _belfry_num_slots_positioned = 0
    _belfry_num_men_pushing = 0
    set_show_messages(0)
    team_give_order(_attacker_team,9,11)
    team_give_order(_attacker_team_2,9,11)
    set_show_messages(1)


def cf_siege_move_belfry():
    if _last_belfry_object_pos != 10:
        pos1 = entry_point_get_position(50)
        pos4 = entry_point_get_position(55)
        distance_001 = get_distance_between_positions(4,1)
        cur_scene_002 = store_current_scene()
        scene_slot_003 = scene_get_slot(cur_scene_002,10)
        pos2 = prop_instance_get_position(scene_slot_003)
        pos1 = entry_point_get_position(_cur_belfry_pos)
        position_transform_position_to_parent(3,1,64)
        position_transform_position_to_parent(5,4,64)
        distance_004 = get_distance_between_positions(2,3)
        distance_005 = get_distance_between_positions(2,5)
        if distance_004 <= 10:
            _cur_belfry_pos += 1
            pos1 = entry_point_get_position(_cur_belfry_pos)
            position_transform_position_to_parent(3,1,64)
            distance_004 = get_distance_between_positions(2,3)
        #end
    #end
    if _cur_belfry_pos != 50:
        var006 = 20
        var007 = distance_001 / 60
        var008 = distance_001 - distance_005
        if var008 < var007:
            var006 = var008 * -60
            var006 /= var007
            var006 += 80
        elif distance_005 < var007:
            var006 = distance_005 * -60
            var006 /= var007
            var006 += 80
        #end
    #end
    var009 = distance_004 * var006
    if _belfry_num_men_pushing == 0:
        var009 = 1000000
    else:
        var009 /= _belfry_num_men_pushing
    #end
    if _cur_belfry_pos <= 55:
        init_position(3)
        position_rotate_x(3,var008)
        scene_slot_010 = scene_get_slot(cur_scene_002,10)
        pos4 = prop_instance_get_position(scene_slot_010)
        pos1 = entry_point_get_position(_cur_belfry_pos)
        for slot_no_011 in range(10, _last_belfry_object_pos):
            scene_slot_012 = scene_get_slot(cur_scene_002,slot_no_011)
            if slot_no_011 >= _belfry_rotating_objects_begin:
                pos5 = prop_instance_get_starting_position(scene_slot_010)
                pos6 = prop_instance_get_starting_position(scene_slot_012)
                position_transform_position_to_local(7,5,6)
                position_transform_position_to_parent(5,4,7)
                position_transform_position_to_parent(6,5,3)
                prop_instance_set_position(scene_slot_012,6)
            else:
                var013 = 64
                var013 += slot_no_011
                var013 -= 10
                position_transform_position_to_parent(2,1,var013)
                prop_instance_animate_to_position(scene_slot_012,2,var009)
            #end
        #end
    #end
    if _cur_belfry_pos > 55:
        _belfry_positioned = 1


def cf_siege_rotate_belfry_platform():
    if _belfry_positioned == 1:
        scp_instance_001 = scene_prop_get_instance(spr.belfry_platform_a,0)
        pos1 = prop_instance_get_position(scp_instance_001)
        position_rotate_x(1,-90)
        prop_instance_animate_to_position(scp_instance_001,1,400)
        _belfry_positioned = 2


def cf_siege_assign_men_to_belfry():
    agent_class_017_list1 = [
    2,
    0,
    ]
    if _last_belfry_object_pos != 10:
        var001 = 0
        if _belfry_positioned < 3:
            agent_no_002 = get_player_agent_no()
            cur_scene_003 = store_current_scene()
            scene_slot_004 = scene_get_slot(cur_scene_003,10)
            pos2 = prop_instance_get_position(scene_slot_004)
            var005 = 0
            var006 = 0
            var007 = 0
            var008 = 0
            var009 = 0
            var010 = 0
            _belfry_num_slots_positioned = 0
            _belfry_num_men_pushing = 0
            for cur_agent in __all_agents__:
                if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
                    if True:
                        agent_slot_012 = agent_get_slot(cur_agent,1)
                        if agent_slot_012 != 0:
                            agent_slot_013 = agent_get_slot(cur_agent,2)
                            if agent_slot_012 == -600:
                                if agent_slot_013 == 0:
                                    var005 = 1
                                elif agent_slot_013 == -200:
                                    var006 = 1
                                else:
                                    var007 = 1
                                #end
                            #end
                        #end
                    #end
                else:
                    if agent_slot_013 == 0:
                        var008 = 1
                    elif agent_slot_013 == -200:
                        var009 = 1
                    else:
                        var010 = 1
                    #end
                #end
                _belfry_num_slots_positioned += 1
                init_position(1)
                position_move_x(1,agent_slot_012)
                position_move_y(1,agent_slot_013)
                init_position(3)
                position_move_x(3,agent_slot_012)
                position_move_y(3,-1000)
                position_transform_position_to_parent(4,2,1)
                position_transform_position_to_parent(5,2,3)
                pos6 = agent_get_position(cur_agent)
                distance_014 = get_distance_between_positions(6,4)
                distance_015 = get_distance_between_positions(6,5)
                if distance_014 >= distance_015 or distance_015 < 600:
                    agent_set_scripted_destination(cur_agent,4,1)
                else:
                    agent_set_scripted_destination(cur_agent,5,1)
                #end
                if distance_014 <= 300:
                    _belfry_num_men_pushing += 1
                #end
            #end
        #end
        if _belfry_num_slots_positioned < 6:
            for cur_agent in __all_agents__:
                if agent_is_alive(cur_agent):
                    agent_team_no_016 = agent_get_team(cur_agent)
                    if _attacker_team == agent_team_no_016 or _attacker_team_2 == agent_team_no_016 and agent_no_002 != cur_agent:
                        agent_class_017 = agent_get_class(cur_agent)
                        if agent_class_017 in agent_class_017_list1:
                            agent_slot_012 = agent_get_slot(cur_agent,1)
                            if agent_slot_012 == 0:
                                agent_slot_013 = 0
                                if var005 == 0:
                                    agent_slot_012 = -600
                                    agent_slot_013 = 0
                                    var005 += 1
                                elif var006 == 0:
                                    agent_slot_012 = -600
                                    agent_slot_013 = -200
                                    var006 += 1
                                elif var007 == 0:
                                    agent_slot_012 = -600
                                    agent_slot_013 = -400
                                    var007 += 1
                                elif var008 == 0:
                                    agent_slot_012 = 600
                                    agent_slot_013 = 0
                                    var008 += 1
                                elif var009 == 0:
                                    agent_slot_012 = 600
                                    agent_slot_013 = -200
                                    var009 += 1
                                elif var010 == 0:
                                    agent_slot_012 = 600
                                    agent_slot_013 = -400
                                    var010 += 1
                                #end
                            #end
                        #end
                    #end
                #end
                _belfry_num_slots_positioned += 1
                agent_set_slot(cur_agent,1,agent_slot_012)
                agent_set_slot(cur_agent,2,agent_slot_013)
            #end
        #end
        if True:
            m_timer_a_018 = store_mission_timer_a()
            if m_timer_a_018 > 20 and _belfry_num_slots_positioned < 6:
                for cur_agent in __all_agents__:
                    if agent_is_alive(cur_agent):
                        agent_team_no_016 = agent_get_team(cur_agent)
                        if _attacker_team == agent_team_no_016 or _attacker_team_2 == agent_team_no_016 and agent_no_002 != cur_agent:
                            agent_slot_012 = agent_get_slot(cur_agent,1)
                            if agent_slot_012 == 0:
                                agent_slot_013 = 0
                                if var005 == 0:
                                    agent_slot_012 = -600
                                    agent_slot_013 = 0
                                    var005 += 1
                                elif var006 == 0:
                                    agent_slot_012 = -600
                                    agent_slot_013 = -200
                                    var006 += 1
                                elif var007 == 0:
                                    agent_slot_012 = -600
                                    agent_slot_013 = -400
                                    var007 += 1
                                elif var008 == 0:
                                    agent_slot_012 = 600
                                    agent_slot_013 = 0
                                    var008 += 1
                                elif var009 == 0:
                                    agent_slot_012 = 600
                                    agent_slot_013 = -200
                                    var009 += 1
                                elif var010 == 0:
                                    agent_slot_012 = 600
                                    agent_slot_013 = -400
                                    var010 += 1
                                #end
                            #end
                        #end
                    #end
                #end
                _belfry_num_slots_positioned += 1
                agent_set_slot(cur_agent,1,agent_slot_012)
                agent_set_slot(cur_agent,2,agent_slot_013)
            #end
        #end
    else:
        var001 = 1
        for cur_agent in __all_agents__:
            agent_clear_scripted_mode(cur_agent)
        #end
        set_show_messages(0)
        team_give_order(_attacker_team,9,2)
        set_show_messages(1)
    #end


def siege_move_archers_to_archer_positions():
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_slot_eq(cur_agent,5,0) and agent_is_defender(cur_agent):
            agent_class_002 = agent_get_class(cur_agent)
            troop_id_003 = agent_get_troop_id(cur_agent)
            if agent_class_002 == 1:
                if agent_slot_eq(cur_agent,11,0):
                    random_x_004 = store_random_in_range(40,44)
                    agent_set_slot(cur_agent,11,random_x_004)
                #end
            #end
        #end
        if True:
            pos0 = agent_get_position(cur_agent)
            pos1 = entry_point_get_position(random_x_004)
            distance_005 = get_distance_between_positions(0,1)
            if distance_005 < 300:
                agent_clear_scripted_mode(cur_agent)
                agent_set_slot(cur_agent,4,0)
                agent_set_slot(cur_agent,5,1)
                s1 = str_store_troop_name(troop_id_003)
                reg0 = cur_agent
            else:
                agent_simple_behavior_006 = agent_get_simple_behavior(cur_agent)
                agent_combat_state_007 = agent_get_combat_state(cur_agent)
                if agent_simple_behavior_006 == 5 or agent_simple_behavior_006 == 1 and agent_combat_state_007 == 7:
                    if agent_slot_eq(cur_agent,4,0):
                        agent_set_scripted_destination(cur_agent,1,0)
                        agent_set_slot(cur_agent,4,1)
                        s1 = str_store_troop_name(troop_id_003)
                        reg0 = cur_agent
                    #end
                #end
            #end
        else:
            if agent_slot_eq(cur_agent,4,1):
                agent_clear_scripted_mode(cur_agent)
                agent_set_slot(cur_agent,4,0)
                s1 = str_store_troop_name(troop_id_003)
                reg0 = cur_agent
            #end
        #end
    #end


def store_movement_order_name_to_s1(var001, var002):
    team_movement_order_003 = team_get_movement_order(var001,var002)
    if team_movement_order_003 == 0:
        s1 = str_store_string("@Holding")
    elif team_movement_order_003 == 1:
        s1 = str_store_string("@Following")
    elif team_movement_order_003 == 2:
        s1 = str_store_string("@Charging")
    elif team_movement_order_003 == 5:
        s1 = str_store_string("@Advancing")
    elif team_movement_order_003 == 6:
        s1 = str_store_string("@Falling Back")
    elif team_movement_order_003 == 7:
        s1 = str_store_string("@Standing Closer")
    elif team_movement_order_003 == 8:
        s1 = str_store_string("@Spreading Out")
    elif team_movement_order_003 == 11:
        s1 = str_store_string("@Standing")
    else:
        s1 = str_store_string("@N/A")
    #end


def store_riding_order_name_to_s1(var001, var002):
    team_riding_order_003 = team_get_riding_order(var001,var002)
    if team_riding_order_003 == 0:
        s1 = str_store_string("@Free")
    elif team_riding_order_003 == 1:
        s1 = str_store_string("@Mount")
    elif team_riding_order_003 == 2:
        s1 = str_store_string("@Dismount")
    else:
        s1 = str_store_string("@N/A")
    #end


def store_weapon_usage_order_name_to_s1(var001, var002):
    team_weapon_usage_order_003 = team_get_weapon_usage_order(var001,var002)
    team_hold_fire_order_004 = team_get_hold_fire_order(var001,var002)
    if team_weapon_usage_order_003 == 0 and team_hold_fire_order_004 == 0:
        s1 = str_store_string("@Any Weapon")
    elif team_weapon_usage_order_003 == 1 and team_hold_fire_order_004 == 0:
        s1 = str_store_string("@Blunt Weapons")
    elif team_weapon_usage_order_003 == 0 and team_hold_fire_order_004 == 1:
        s1 = str_store_string(gstr.hold_fire)
    elif team_weapon_usage_order_003 == 1 and team_hold_fire_order_004 == 1:
        s1 = str_store_string(gstr.blunt_hold_fire)
    else:
        s1 = str_store_string("@N/A")
    #end


def team_give_order_from_order_panel(var001, var002):
    agent_team_no_003 = agent_get_team(var001)
    set_show_messages(0)
    if _g_formation_group0_selected == 1:
        team_give_order(agent_team_no_003,0,var002)
    #end
    if _g_formation_group1_selected == 1:
        team_give_order(agent_team_no_003,1,var002)
    #end
    if _g_formation_group2_selected == 1:
        team_give_order(agent_team_no_003,2,var002)
    #end
    if _g_formation_group3_selected == 1:
        team_give_order(agent_team_no_003,3,var002)
    #end
    if _g_formation_group4_selected == 1:
        team_give_order(agent_team_no_003,4,var002)
    #end
    if _g_formation_group5_selected == 1:
        team_give_order(agent_team_no_003,5,var002)
    #end
    if _g_formation_group6_selected == 1:
        team_give_order(agent_team_no_003,6,var002)
    #end
    if _g_formation_group7_selected == 1:
        team_give_order(agent_team_no_003,7,var002)
    #end
    if _g_formation_group8_selected == 1:
        team_give_order(agent_team_no_003,8,var002)
    #end
    if var002 == 0:
        pos1 = agent_get_position(var001)
        if _g_formation_group0_selected == 1:
            team_set_order_position(agent_team_no_003,0,1)
        #end
        if _g_formation_group1_selected == 1:
            team_set_order_position(agent_team_no_003,1,1)
        #end
        if _g_formation_group2_selected == 1:
            team_set_order_position(agent_team_no_003,2,1)
        #end
        if _g_formation_group3_selected == 1:
            team_set_order_position(agent_team_no_003,3,1)
        #end
        if _g_formation_group4_selected == 1:
            team_set_order_position(agent_team_no_003,4,1)
        #end
        if _g_formation_group5_selected == 1:
            team_set_order_position(agent_team_no_003,5,1)
        #end
        if _g_formation_group6_selected == 1:
            team_set_order_position(agent_team_no_003,6,1)
        #end
        if _g_formation_group7_selected == 1:
            team_set_order_position(agent_team_no_003,7,1)
        #end
        if _g_formation_group8_selected == 1:
            team_set_order_position(agent_team_no_003,8,1)
        #end
    #end
    set_show_messages(1)


def update_order_panel(var001):
    set_fixed_point_multiplier(1000)
    if _group0_has_troops == 1:
        store_movement_order_name_to_s1(var001,0)
        overlay_set_text(_g_presentation_but0_movement,1)
        store_riding_order_name_to_s1(var001,0)
        overlay_set_text(_g_presentation_but0_riding,1)
        store_weapon_usage_order_name_to_s1(var001,0)
        overlay_set_text(_g_presentation_but0_weapon_usage,1)
    #end
    if _group1_has_troops == 1:
        store_movement_order_name_to_s1(var001,1)
        overlay_set_text(_g_presentation_but1_movement,1)
        store_riding_order_name_to_s1(var001,1)
        overlay_set_text(_g_presentation_but1_riding,1)
        store_weapon_usage_order_name_to_s1(var001,1)
        overlay_set_text(_g_presentation_but1_weapon_usage,1)
    #end
    if _group2_has_troops == 1:
        store_movement_order_name_to_s1(var001,2)
        overlay_set_text(_g_presentation_but2_movement,1)
        store_riding_order_name_to_s1(var001,2)
        overlay_set_text(_g_presentation_but2_riding,1)
        store_weapon_usage_order_name_to_s1(var001,2)
        overlay_set_text(_g_presentation_but2_weapon_usage,1)
    #end
    if _group3_has_troops == 1:
        store_movement_order_name_to_s1(var001,3)
        overlay_set_text(_g_presentation_but3_movement,1)
        store_riding_order_name_to_s1(var001,3)
        overlay_set_text(_g_presentation_but3_riding,1)
        store_weapon_usage_order_name_to_s1(var001,3)
        overlay_set_text(_g_presentation_but3_weapon_usage,1)
    #end
    if _group4_has_troops == 1:
        store_movement_order_name_to_s1(var001,4)
        overlay_set_text(_g_presentation_but4_movement,1)
        store_riding_order_name_to_s1(var001,4)
        overlay_set_text(_g_presentation_but4_riding,1)
        store_weapon_usage_order_name_to_s1(var001,4)
        overlay_set_text(_g_presentation_but4_weapon_usage,1)
    #end
    if _group5_has_troops == 1:
        store_movement_order_name_to_s1(var001,5)
        overlay_set_text(_g_presentation_but5_movement,1)
        store_riding_order_name_to_s1(var001,5)
        overlay_set_text(_g_presentation_but5_riding,1)
        store_weapon_usage_order_name_to_s1(var001,5)
        overlay_set_text(_g_presentation_but5_weapon_usage,1)
    #end
    if _group6_has_troops == 1:
        store_movement_order_name_to_s1(var001,6)
        overlay_set_text(_g_presentation_but6_movement,1)
        store_riding_order_name_to_s1(var001,6)
        overlay_set_text(_g_presentation_but6_riding,1)
        store_weapon_usage_order_name_to_s1(var001,6)
        overlay_set_text(_g_presentation_but6_weapon_usage,1)
    #end
    if _group7_has_troops == 1:
        store_movement_order_name_to_s1(var001,7)
        overlay_set_text(_g_presentation_but7_movement,1)
        store_riding_order_name_to_s1(var001,7)
        overlay_set_text(_g_presentation_but7_riding,1)
        store_weapon_usage_order_name_to_s1(var001,7)
        overlay_set_text(_g_presentation_but7_weapon_usage,1)
    #end
    if _group8_has_troops == 1:
        store_movement_order_name_to_s1(var001,8)
        overlay_set_text(_g_presentation_but8_movement,1)
        store_riding_order_name_to_s1(var001,8)
        overlay_set_text(_g_presentation_but8_riding,1)
        store_weapon_usage_order_name_to_s1(var001,8)
        overlay_set_text(_g_presentation_but8_weapon_usage,1)
    #end
    var002 = 660
    if True:
        position_set_y(1,var002)
        if _group0_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but0_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but0_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but0_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group1_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but1_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but1_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but1_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group2_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but2_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but2_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but2_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group3_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but3_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but3_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but3_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group4_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but4_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but4_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but4_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group5_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but5_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but5_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but5_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group6_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but6_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but6_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but6_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group7_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but7_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but7_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but7_weapon_usage,1)
            var002 += -40
        #end
    #end
    if True:
        position_set_y(1,var002)
        if _group8_has_troops == 1:
            position_set_x(1,270)
            overlay_set_position(_g_presentation_but8_movement,1)
            position_set_x(1,410)
            overlay_set_position(_g_presentation_but8_riding,1)
            position_set_x(1,550)
            overlay_set_position(_g_presentation_but8_weapon_usage,1)
            var002 += -40
        #end
    #end


def update_agent_position_on_map(agent_id_001):
    agent_slot_002 = agent_get_slot(agent_id_001,10)
    agent_no_003 = get_player_agent_no()
    if agent_slot_002 <= 0:
        set_fixed_point_multiplier(1000)
        if agent_id_001 == agent_no_003:
            create_mesh_overlay(reg1,mesh.player_dot)
            position_set_x(1,500)
            position_set_y(1,500)
            overlay_set_size(reg1,1)
        else:
            create_mesh_overlay(reg1,mesh.white_dot)
            position_set_x(1,200)
            position_set_y(1,200)
            overlay_set_size(reg1,1)
        #end
        overlay_set_alpha(reg1,136)
        agent_set_slot(agent_id_001,10,reg1)
        agent_slot_002 = reg1
    #end
    if agent_id_001 != agent_no_003:
        party_id_004 = agent_get_party_id(agent_id_001)
        if party_id_004 == p.main_party:
            agent_division_005 = agent_get_division(agent_id_001)
            if agent_division_005 == 0:
                overlay_set_color(agent_slot_002,9261600)
            elif agent_division_005 == 1:
                overlay_set_color(agent_slot_002,3458788)
            elif agent_division_005 == 2:
                overlay_set_color(agent_slot_002,5674521)
            elif agent_division_005 == 3:
                overlay_set_color(agent_slot_002,16770304)
            elif agent_division_005 == 4:
                overlay_set_color(agent_slot_002,10027161)
            elif agent_division_005 == 5:
                overlay_set_color(agent_slot_002,10092160)
            elif agent_division_005 == 6:
                overlay_set_color(agent_slot_002,10350590)
            elif agent_division_005 == 7:
                overlay_set_color(agent_slot_002,16698269)
            elif agent_division_005 == 8:
                overlay_set_color(agent_slot_002,11639964)
            #end
        elif agent_is_ally(agent_id_001):
            overlay_set_color(agent_slot_002,5592575)
        else:
            overlay_set_color(agent_slot_002,16711680)
        #end
    #end
    if agent_id_001 == agent_no_003:
        pos1 = agent_get_look_position(agent_id_001)
        rotation_around_z_006 = position_get_rotation_around_z(1)
        init_position(10)
        position_rotate_z(10,rotation_around_z_006)
        overlay_set_mesh_rotation(agent_slot_002,10)
        convert_3d_pos_to_map_pos()
    else:
        pos1 = agent_get_position(agent_id_001)
        convert_3d_pos_to_map_pos()
    #end
    overlay_set_position(agent_slot_002,0)


def convert_3d_pos_to_map_pos():
    set_fixed_point_multiplier(1000)
    position_transform_position_to_local(3,2,1)
    pos_x_001 = position_get_x(3)
    pos_y_002 = position_get_y(3)
    pos_x_001 /= _g_battle_map_scale
    pos_y_002 /= _g_battle_map_scale
    set_fixed_point_multiplier(1000)
    var003 = 980 - _g_battle_map_width
    var004 = 730 - _g_battle_map_height
    pos_x_001 += var003
    pos_y_002 += var004
    position_set_x(0,pos_x_001)
    position_set_y(0,pos_y_002)


def update_order_flags_on_map():
    set_fixed_point_multiplier(1000)
    agent_no_001 = get_player_agent_no()
    agent_team_no_002 = agent_get_team(agent_no_001)
    s2 = get_scene_boundaries(3)
    team_movement_order_003 = team_get_movement_order(agent_team_no_002,0)
    if team_movement_order_003 == 0:
        pos1 = team_get_order_position(agent_team_no_002,0)
        convert_3d_pos_to_map_pos()
        overlay_set_alpha(_g_battle_map_infantry_order_flag,255)
        overlay_set_position(_g_battle_map_infantry_order_flag,0)
    else:
        overlay_set_alpha(_g_battle_map_infantry_order_flag,0)
    #end
    team_movement_order_003 = team_get_movement_order(agent_team_no_002,1)
    if team_movement_order_003 == 0:
        pos1 = team_get_order_position(agent_team_no_002,1)
        convert_3d_pos_to_map_pos()
        overlay_set_alpha(_g_battle_map_archers_order_flag,255)
        overlay_set_position(_g_battle_map_archers_order_flag,0)
    else:
        overlay_set_alpha(_g_battle_map_archers_order_flag,0)
    #end
    team_movement_order_003 = team_get_movement_order(agent_team_no_002,2)
    if team_movement_order_003 == 0:
        pos1 = team_get_order_position(agent_team_no_002,2)
        convert_3d_pos_to_map_pos()
        overlay_set_alpha(_g_battle_map_cavalry_order_flag,255)
        overlay_set_position(_g_battle_map_cavalry_order_flag,0)
    else:
        overlay_set_alpha(_g_battle_map_cavalry_order_flag,0)
    #end


def update_order_panel_checked_classes():
    agent_no_001 = get_player_agent_no()
    agent_team_no_002 = agent_get_team(agent_no_001)
    if _group0_has_troops == 1 and class_is_listening_order(agent_team_no_002,0):
        overlay_set_val(_g_presentation_obj_battle_check0,1)
        _g_formation_group0_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but0,250,68)
    elif _group0_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check0,0)
        _g_formation_group0_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but0,250,0)
    #end
    if _group1_has_troops == 1 and class_is_listening_order(agent_team_no_002,1):
        overlay_set_val(_g_presentation_obj_battle_check1,1)
        _g_formation_group1_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but1,250,68)
    elif _group1_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check1,0)
        _g_formation_group1_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but1,250,0)
    #end
    if _group2_has_troops == 1 and class_is_listening_order(agent_team_no_002,2):
        overlay_set_val(_g_presentation_obj_battle_check2,1)
        _g_formation_group2_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but2,250,68)
    elif _group2_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check2,0)
        _g_formation_group2_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but2,250,0)
    #end
    if _group3_has_troops == 1 and class_is_listening_order(agent_team_no_002,3):
        overlay_set_val(_g_presentation_obj_battle_check3,1)
        _g_formation_group3_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but3,250,68)
    elif _group3_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check3,0)
        _g_formation_group3_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but3,250,0)
    #end
    if _group4_has_troops == 1 and class_is_listening_order(agent_team_no_002,4):
        overlay_set_val(_g_presentation_obj_battle_check4,1)
        _g_formation_group4_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but4,250,68)
    elif _group4_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check4,0)
        _g_formation_group4_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but4,250,0)
    #end
    if _group5_has_troops == 1 and class_is_listening_order(agent_team_no_002,5):
        overlay_set_val(_g_presentation_obj_battle_check5,1)
        _g_formation_group5_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but5,250,68)
    elif _group5_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check5,0)
        _g_formation_group5_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but5,250,0)
    #end
    if _group6_has_troops == 1 and class_is_listening_order(agent_team_no_002,6):
        overlay_set_val(_g_presentation_obj_battle_check6,1)
        _g_formation_group6_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but6,250,68)
    elif _group6_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check6,0)
        _g_formation_group6_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but6,250,0)
    #end
    if _group7_has_troops == 1 and class_is_listening_order(agent_team_no_002,7):
        overlay_set_val(_g_presentation_obj_battle_check7,1)
        _g_formation_group7_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but7,250,68)
    elif _group7_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check7,0)
        _g_formation_group7_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but7,250,0)
    #end
    if _group8_has_troops == 1 and class_is_listening_order(agent_team_no_002,8):
        overlay_set_val(_g_presentation_obj_battle_check8,1)
        _g_formation_group8_selected = 1
        overlay_animate_to_alpha(_g_presentation_obj_battle_but8,250,68)
    elif _group8_has_troops == 1:
        overlay_set_val(_g_presentation_obj_battle_check8,0)
        _g_formation_group8_selected = 0
        overlay_animate_to_alpha(_g_presentation_obj_battle_but8,250,0)
    #end


def update_order_panel_statistics_and_map():
    set_fixed_point_multiplier(1000)
    var001 = 0
    var002 = 0
    var003 = 0
    var004 = 0
    var005 = 0
    var006 = 0
    var007 = 0
    var008 = 0
    var009 = 0
    var010 = 0
    var011 = 0
    var012 = 0
    var013 = 0
    var014 = 0
    var015 = 0
    var016 = 0
    var017 = 0
    var018 = 0
    var019 = 0
    var020 = 0
    var021 = 0
    s2 = get_scene_boundaries(3)
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent):
            agent_division_023 = agent_get_division(cur_agent)
            party_id_024 = agent_get_party_id(cur_agent)
            agent_slot_025 = agent_get_slot(cur_agent,10)
            if party_id_024 == p.main_party:
                if agent_is_alive(cur_agent):
                    update_agent_position_on_map(cur_agent)
                    if agent_division_023 == 0:
                        var001 += 1
                        if _group0_has_troops == 1:
                            pass
                        elif agent_division_023 == 1:
                            var002 += 1
                            if _group1_has_troops == 1:
                                pass
                            elif agent_division_023 == 2:
                                var003 += 1
                                if _group2_has_troops == 1:
                                    pass
                                elif agent_division_023 == 3:
                                    var004 += 1
                                    if _group3_has_troops == 1:
                                        pass
                                    elif agent_division_023 == 4:
                                        var005 += 1
                                        if _group4_has_troops == 1:
                                            pass
                                        elif agent_division_023 == 5:
                                            var006 += 1
                                            if _group5_has_troops == 1:
                                                pass
                                            elif agent_division_023 == 6:
                                                var007 += 1
                                                if _group6_has_troops == 1:
                                                    pass
                                                elif agent_division_023 == 7:
                                                    var008 += 1
                                                    if _group7_has_troops == 1:
                                                        pass
                                                    elif agent_division_023 == 8:
                                                        var009 += 1
                                                        if _group8_has_troops == 1:
                                                            pass
                                                        #end
                                                    #end
                                                #end
                                            #end
                                        #end
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
                var010 += 1
            else:
                overlay_set_alpha(agent_slot_025,0)
                if agent_is_wounded(cur_agent):
                    var011 += 1
                elif agent_is_routed(cur_agent):
                    var012 += 1
                else:
                    var013 += 1
                #end
            #end
        elif agent_is_ally(cur_agent):
            if agent_is_alive(cur_agent):
                update_agent_position_on_map(cur_agent)
                var014 += 1
            else:
                overlay_set_alpha(agent_slot_025,0)
                if agent_is_wounded(cur_agent):
                    var015 += 1
                elif agent_is_routed(cur_agent):
                    var016 += 1
                else:
                    var017 += 1
                #end
            #end
        else:
            if agent_is_alive(cur_agent):
                update_agent_position_on_map(cur_agent)
                var018 += 1
            else:
                overlay_set_alpha(agent_slot_025,0)
                if agent_is_wounded(cur_agent):
                    var019 += 1
                elif agent_is_routed(cur_agent):
                    var020 += 1
                else:
                    var021 += 1
                #end
            #end
        #end
    #end
    reg1 = var001
    reg2 = var002
    reg3 = var003
    reg4 = var004
    reg5 = var005
    reg6 = var006
    reg7 = var007
    reg8 = var008
    reg9 = var009
    reg10 = var010
    reg11 = var011
    reg12 = var012
    reg13 = var013
    reg14 = var014
    reg15 = var015
    reg16 = var016
    reg17 = var017
    reg18 = var018
    reg19 = var019
    reg20 = var020
    reg21 = var021
    if _group0_has_troops == 1:
        s1 = str_store_class_name(0)
        overlay_set_text(_g_presentation_obj_battle_name0,gstr.s1_reg1)
    #end
    if _group1_has_troops == 1:
        s1 = str_store_class_name(1)
        overlay_set_text(_g_presentation_obj_battle_name1,gstr.s1_reg2)
    #end
    if _group2_has_troops == 1:
        s1 = str_store_class_name(2)
        overlay_set_text(_g_presentation_obj_battle_name2,gstr.s1_reg3)
    #end
    if _group3_has_troops == 1:
        s1 = str_store_class_name(3)
        overlay_set_text(_g_presentation_obj_battle_name3,gstr.s1_reg4)
    #end
    if _group4_has_troops == 1:
        s1 = str_store_class_name(4)
        overlay_set_text(_g_presentation_obj_battle_name4,gstr.s1_reg5)
    #end
    if _group5_has_troops == 1:
        s1 = str_store_class_name(5)
        overlay_set_text(_g_presentation_obj_battle_name5,gstr.s1_reg6)
    #end
    if _group6_has_troops == 1:
        s1 = str_store_class_name(6)
        overlay_set_text(_g_presentation_obj_battle_name6,gstr.s1_reg7)
    #end
    if _group7_has_troops == 1:
        s1 = str_store_class_name(7)
        overlay_set_text(_g_presentation_obj_battle_name7,gstr.s1_reg8)
    #end
    if _group8_has_troops == 1:
        s1 = str_store_class_name(8)
        overlay_set_text(_g_presentation_obj_battle_name8,gstr.s1_reg9)
    #end
    overlay_set_text(_g_battle_us_ready,"@{!}{reg10}")
    overlay_set_text(_g_battle_us_wounded,"@{!}{reg11}")
    overlay_set_text(_g_battle_us_routed,"@{!}{reg12}")
    overlay_set_text(_g_battle_us_dead,gstr.reg13)
    overlay_set_text(_g_battle_allies_ready,gstr.reg14)
    overlay_set_text(_g_battle_allies_wounded,gstr.reg15)
    overlay_set_text(_g_battle_allies_routed,gstr.reg16)
    overlay_set_text(_g_battle_allies_dead,gstr.reg17)
    overlay_set_text(_g_battle_enemies_ready,gstr.reg18)
    overlay_set_text(_g_battle_enemies_wounded,gstr.reg19)
    overlay_set_text(_g_battle_enemies_routed,gstr.reg20)
    overlay_set_text(_g_battle_enemies_dead,gstr.reg21)
    var026 = 675
    var027 = 280
    var026 += 70
    var027 += 60
    position_set_x(1,var026)
    position_set_y(1,var027)
    overlay_set_position(_g_battle_us_ready,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_us_wounded,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_us_routed,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_us_dead,1)
    var026 += -210
    var027 += -30
    position_set_x(1,var026)
    position_set_y(1,var027)
    overlay_set_position(_g_battle_allies_ready,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_allies_wounded,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_allies_routed,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_allies_dead,1)
    var026 += -210
    var027 += -30
    position_set_x(1,var026)
    position_set_y(1,var027)
    overlay_set_position(_g_battle_enemies_ready,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_enemies_wounded,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_enemies_routed,1)
    var026 += 70
    position_set_x(1,var026)
    overlay_set_position(_g_battle_enemies_dead,1)
    update_order_flags_on_map()


def set_town_picture():
    party_cur_terrain_001_list2 = [
    12,
    4,
    ]
    party_cur_terrain_001_list1 = [
    13,
    5,
    10,
    2,
    ]
    party_cur_terrain_001_list2 = [
    12,
    4,
    ]
    party_cur_terrain_001_list1 = [
    13,
    5,
    10,
    2,
    ]
    if True:
        party_cur_terrain_001 = party_get_current_terrain(_current_town)
        if party_slot_eq(_current_town,0,3):
            if party_cur_terrain_001 in party_cur_terrain_001_list1:
                set_background_mesh(mesh.pic_towndes)
            elif party_cur_terrain_001 in party_cur_terrain_001_list2:
                set_background_mesh(mesh.pic_townsnow)
            else:
                set_background_mesh(mesh.pic_town1)
            #end
        #end
    else:
        if party_cur_terrain_001 in party_cur_terrain_001_list1:
            set_background_mesh(mesh.pic_castledes)
        elif party_cur_terrain_001 in party_cur_terrain_001_list2:
            set_background_mesh(mesh.pic_castlesnow)
        else:
            set_background_mesh(mesh.pic_castle1)
        #end
    #end


def consume_food(var001):
    troop_inv_capacity_002 = troop_get_inventory_capacity(trp.player)
    for inventory_slot_no_003 in range(0, troop_inv_capacity_002):
        troop_inv_slot_004 = troop_get_inventory_slot(trp.player,inventory_slot_no_003)
        if is_between(troop_inv_slot_004,itm.smoked_fish,itm.siege_supply):
            troop_inv_slot_modifier_005 = troop_get_inventory_slot_modifier(trp.player,inventory_slot_no_003)
            if troop_inv_slot_modifier_005 != 41 and item_slot_eq(troop_inv_slot_004,0,0):
                item_set_slot(troop_inv_slot_004,0,1)
                var001 -= 1
                if var001 < 0:
                    troop_inv_capacity_002 = 0
                    troop_inv_slot_item_amount_006 = troop_inventory_slot_get_item_amount(trp.player,inventory_slot_no_003)
                    troop_inv_slot_item_amount_006 -= 1
                    troop_inventory_slot_set_item_amount(trp.player,inventory_slot_no_003,troop_inv_slot_item_amount_006)
                #end
            #end
        #end
    #end


def calculate_troop_score_for_center(troop_id_001, var002):
    var003 = 1
    for p_004 in range(p.town_1, p.salt_mine):
        var005 = 0
        if troop_id_001 == trp.player and party_slot_eq(p_004,7,-2):
            var005 = 1
        #end
        if party_slot_eq(p_004,7,troop_id_001) or var005 == 1:
            if party_slot_eq(p_004,0,3):
                var003 += 4
            elif party_slot_eq(p_004,0,2):
                var003 += 2
            else:
                var003 += 1
            #end
        #end
    #end
    troop_slot_006 = troop_get_slot(troop_id_001,7)
    var007 = 500 + troop_slot_006
    var007 /= var003
    random_x_008 = store_random_in_range(50,100)
    var007 *= random_x_008
    if party_slot_eq(var002,28,troop_id_001):
        var007 *= 3
        var007 /= 2
    #end
    if troop_id_001 == trp.player:
        faction_slot_009 = faction_get_slot(_players_kingdom,0)
        troop_get_player_relation(faction_slot_009)
        var010 = reg0
        var010 *= 2
        var007 += var010
    #end
    reg0 = var007


def assign_lords_to_empty_centers():
    party_slot_004_list1 = [
    -3,
    -1,
    ]
    party_slot_004_list1 = [
    -3,
    -1,
    ]
    if _cheat_mode == 1:
        print(gstr.assigning_lords_to_empty_centers)
        s65 = str_store_string(gstr.assign_lords_to_empty_centers_just_happened)
        add_notification_menu(mnu.debug_alert_from_s65,0,0)
    #end
    for fac_001 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_set_slot(fac_001,12,0)
    #end
    for troop_id_002 in range(0, trp.knight_1_1_wife):
        troop_set_slot(troop_id_002,46,0)
    #end
    for p_003 in range(p.town_1, p.salt_mine):
        party_slot_004 = party_get_slot(p_003,7)
        if party_slot_004 in party_slot_004_list1:
            party_faction_005 = store_faction_of_party(p_003)
            if _cheat_mode == 1:
                s4 = str_store_party_name(p_003)
                s5 = str_store_faction_name(party_faction_005)
                print(gstr.s4_of_the_s5_is_unassigned)
            #end
            faction_slot_006 = faction_get_slot(party_faction_005,12)
            faction_slot_006 += 1
            faction_set_slot(party_faction_005,12,faction_slot_006)
        elif party_slot_004 == -2:
            if _cheat_mode == 1:
                s4 = str_store_party_name(p_003)
                s5 = str_store_faction_name(party_faction_005)
                print(gstr.s4_of_the_s5_is_reserved_for_player)
            #end
        elif party_slot_004 >= 0:
            troop_set_slot(party_slot_004,46,1)
        #end
    #end
    for troop_id_002 in range(0, trp.knight_1_1_wife):
        if troop_slot_eq(troop_id_002,2,2) and troop_id_002 > trp.player or _player_has_homage == 1 and troop_slot_eq(troop_id_002,46,0):
            troop_faction_007 = store_faction_of_troop(troop_id_002)
            if is_between(troop_faction_007,fac.kingdom_1,fac.kingdoms_end):
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(troop_id_002)
                    s5 = str_store_faction_name(troop_faction_007)
                    print(gstr.s4_of_the_s5_has_no_fiefs)
                #end
            #end
        #end
        faction_slot_006 = faction_get_slot(troop_faction_007,12)
        faction_slot_006 += 1
        faction_set_slot(troop_faction_007,12,faction_slot_006)
    #end
    if _cheat_mode == 1:
        for fac_001 in range(fac.player_supporters_faction, fac.kingdoms_end):
            reg4 = faction_get_slot(fac_001,12)
            s4 = str_store_faction_name(fac_001)
            print(gstr.s4_unassigned_centers_plus_landless_lords_equal_reg4)
        #end
    #end
    for p_003 in range(p.town_1, p.salt_mine):
        party_slot_004 = party_get_slot(p_003,7)
        if party_slot_004 in party_slot_004_list1:
            party_faction_005 = store_faction_of_party(p_003)
            if is_between(party_faction_005,fac.player_supporters_faction,fac.kingdoms_end) and not faction_slot_eq(party_faction_005,11,trp.player):
                if _cheat_mode == 1:
                    s5 = str_store_party_name(p_003)
                    if not faction_slot_ge(party_faction_005,12,2):
                        s4 = str_store_faction_name(party_faction_005)
                        print(gstr.s4_holds_s5_in_reserve)
                    #end
                #end
            #end
        #end
        if faction_slot_ge(party_faction_005,12,2):
            troop_id_008 = -1
            var009 = -1
            if party_slot_004 == -1:
                if _players_kingdom == party_faction_005 and _player_has_homage == 1:
                    troop_id_008 = -2
                    calculate_troop_score_for_center(trp.player,p_003)
                    var009 = reg0
                #end
            #end
        #end
        for trp_010 in range(trp.npc1, trp.knight_1_1_wife):
            if troop_slot_eq(trp_010,2,2):
                troop_faction_011 = store_faction_of_troop(trp_010)
                if troop_faction_011 == party_faction_005:
                    calculate_troop_score_for_center(trp_010,p_003)
                    var012 = reg0
                    if troop_slot_eq(trp_010,46,0) and is_between(p_003,p.village_1,p.salt_mine):
                        var012 *= 10
                    #end
                #end
            #end
            if var012 > var009:
                var009 = var012
                troop_id_008 = trp_010
            #end
        #end
        if troop_id_008 >= 0 or troop_id_008 == -2:
            faction_slot_013 = faction_get_slot(party_faction_005,12)
            faction_slot_013 -= 1
            if troop_id_008 == -2 and troop_slot_eq(trp.player,46,0):
                troop_set_slot(trp.player,46,1)
                faction_slot_013 -= 1
            elif troop_slot_eq(troop_id_008,46,0):
                troop_set_slot(troop_id_008,46,1)
                faction_slot_013 -= 1
            #end
            faction_set_slot(party_faction_005,12,faction_slot_013)
        #end
        if troop_id_008 >= 0:
            give_center_to_lord(p_003,troop_id_008,1)
        elif troop_id_008 == -2:
            party_set_slot(p_003,7,-2)
            if party_slot_eq(p_003,0,2):
                for p_014 in range(p.village_1, p.salt_mine):
                    if party_slot_eq(p_014,120,p_003) and party_slot_eq(p_014,7,-1):
                        party_set_slot(p_014,7,-2)
                    #end
                #end
            #end
        #end
    #end


def create_village_farmer_party(party_id_001):
    party_slot_002 = party_get_slot(party_id_001,121)
    party_faction_003 = store_faction_of_party(party_slot_002)
    if is_between(party_slot_002,p.town_1,p.castle_1):
        set_spawn_radius(0)
        spawn_around_party(party_id_001,pt.village_farmers)
        party_id_004 = reg0
        party_set_faction(party_id_004,party_faction_003)
        party_set_slot(party_id_004,123,party_id_001)
        party_set_slot(party_id_004,126,party_id_001)
        party_set_slot(party_id_004,0,15)
        party_set_slot(party_id_004,4,13)
        party_set_slot(party_id_004,5,party_slot_002)
        party_set_ai_behavior(party_id_004,1)
        party_set_ai_object(party_id_004,party_slot_002)
        party_set_flags(party_id_004,65536,0)
        var005 = 250 - itm.spice
        for itm_006 in range(itm.spice, itm.siege_supply):
            slot_no_007 = itm_006 + var005
            party_slot_008 = party_get_slot(party_id_001,slot_no_007)
            party_set_slot(party_id_004,slot_no_007,party_slot_008)
        #end
        reg0 = party_id_004
    #end


def do_party_center_trade(party_id_001, party_id_002, var003):
    if _cheat_mode == 3:
        s1 = str_store_party_name(party_id_002)
        print("@{!}DEBUG : {s1} is trading with villagers")
    #end
    party_slot_004 = party_get_slot(party_id_001,126)
    party_set_slot(party_id_001,126,party_id_002)
    var005 = 0
    var006 = 250 - itm.spice
    for itm_007 in range(itm.spice, itm.siege_supply):
        slot_no_008 = itm_007 + var006
        party_slot_009 = party_get_slot(party_id_001,slot_no_008)
        party_slot_010 = party_get_slot(party_id_002,slot_no_008)
        var011 = party_slot_009 - party_slot_010
        var012 = var011
        val_abs(var012)
        var005 += var012
        var012 *= var003
        var012 /= 100
        if var011 < 0:
            var012 *= -1
        #end
        var013 = party_slot_010
        party_set_slot(party_id_001,slot_no_008,party_slot_010)
        party_slot_010 += var012
        party_set_slot(party_id_002,slot_no_008,party_slot_010)
        if _cheat_mode == 3:
            s3 = str_store_party_name(party_slot_004)
            s4 = str_store_party_name(party_id_002)
            s5 = str_store_item_name(itm_007)
            reg4 = var013
            reg5 = party_slot_010
            display_log_message("@{!}DEBUG -- Trade of {s5} from {s3} to {s4} brings price from {reg4} to {reg5}")
        #end
    #end
    reg0 = var005


def player_join_faction(var001):
    _players_kingdom = var001
    faction_set_slot(fac.player_supporters_faction,4,0)
    _players_oath_renounced_against_kingdom = 0
    _players_oath_renounced_given_center = 0
    _players_oath_renounced_begin_time = 0
    for fac_002 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if faction_slot_eq(fac_002,21,0) and fac_002 != fac.player_supporters_faction:
            if fac_002 != var001:
                faction_relation_003 = store_relation(fac_002,var001)
            else:
                faction_relation_003 = store_relation(fac.player_supporters_faction,fac_002)
                val_max(faction_relation_003,12)
            #end
        #end
        set_player_relation_with_faction(fac_002,faction_relation_003)
    #end
    for p_004 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_004,7,trp.player):
            give_center_to_faction_while_maintaining_lord(p_004,var001)
        else:
            party_faction_005 = store_faction_of_party(p_004)
            if party_faction_005 == fac.player_supporters_faction:
                give_center_to_faction_while_maintaining_lord(p_004,var001)
            #end
        #end
    #end
    for qst_006 in range(qst.deliver_message, qst.follow_army):
        if check_quest_active(qst_006):
            quest_slot_007 = quest_get_slot(qst_006,6)
            troop_faction_008 = store_faction_of_troop(quest_slot_007)
            faction_relation_009 = store_relation(fac.player_supporters_faction,troop_faction_008)
            if faction_relation_009 < 0:
                abort_quest(qst_006,0)
            #end
        #end
    #end
    for qst_006 in range(qst.destroy_bandit_lair, qst.blank_quest_2):
        if check_quest_active(qst_006):
            quest_slot_007 = quest_get_slot(qst_006,6)
            troop_faction_008 = store_faction_of_troop(quest_slot_007)
            faction_relation_009 = store_relation(fac.player_supporters_faction,troop_faction_008)
            if faction_relation_009 < 0:
                abort_quest(qst_006,0)
            #end
        #end
    #end
    if var001 != fac.player_supporters_faction:
        faction_set_slot(fac.player_supporters_faction,21,2)
        faction_set_slot(fac.player_supporters_faction,11,trp.player)
    #end
    if True:
        troop_slot_010 = troop_get_slot(trp.player,30)
        if is_between(troop_slot_010,trp.knight_1_1_wife,trp.heroes_end):
            if _cheat_mode >= 1:
                s4 = str_store_troop_name(troop_slot_010)
                print("@{!}DEBUG - {s4} faction changed by marriage - case 1")
            #end
        #end
        troop_set_faction(troop_slot_010,_players_kingdom)
    #end
    for p_011 in range(p.town_1, p.salt_mine):
        party_faction_012 = store_faction_of_party(var001)
        if party_faction_012 != _players_kingdom and party_slot_eq(p_011,7,-2):
            pass
        #end
    #end
    troop_set_slot(trp.player,154,-1)
    for cur_party in __all_parties__:
        party_faction_014 = store_faction_of_party(cur_party)
        if party_faction_014 == var001:
            party_num_prisoners_stacks_015 = party_get_num_prisoner_stacks(cur_party)
            for var016 in range(0, party_num_prisoners_stacks_015):
                party_prisoner_troop_id_017 = party_prisoner_stack_get_troop_id(cur_party,var016)
                troop_faction_018 = store_faction_of_troop(party_prisoner_troop_id_017)
                if troop_faction_018 == fac.player_supporters_faction or troop_faction_018 == var001 or is_between(party_prisoner_troop_id_017,trp.npc1,trp.kingdom_1_lord):
                    if troop_is_hero(party_prisoner_troop_id_017):
                        remove_troop_from_prison(party_prisoner_troop_id_017)
                    #end
                #end
            #end
            party_prisoner_stack_size_019 = party_prisoner_stack_get_size(cur_party,var016)
            party_remove_prisoners(cur_party,party_prisoner_troop_id_017,party_prisoner_stack_size_019)
            if is_between(party_prisoner_troop_id_017,trp.npc1,trp.kingdom_1_lord):
                if is_between(cur_party,p.town_1,p.castle_1):
                    troop_set_slot(party_prisoner_troop_id_017,12,cur_party)
                else:
                    random_x_020 = store_random_in_range(p.town_1,p.castle_1)
                    troop_set_slot(party_prisoner_troop_id_017,12,random_x_020)
                #end
            #end
        #end
    #end
    update_all_notes()
    _g_recalculate_ais = 1


def player_leave_faction(var001):
    check_and_finish_active_army_quests_for_faction(_players_kingdom)
    faction_id_002 = _players_kingdom
    var003 = _player_has_homage
    _players_kingdom = 0
    _player_has_homage = 0
    if var001 != 0:
        for p_004 in range(p.town_1, p.salt_mine):
            if party_slot_eq(p_004,7,trp.player):
                give_center_to_faction(p_004,faction_id_002)
                party_set_slot(p_004,7,-1)
            #end
        #end
    else:
        for p_004 in range(p.town_1, p.salt_mine):
            if party_slot_eq(p_004,7,trp.player):
                give_center_to_faction(p_004,fac.player_supporters_faction)
                party_set_slot(p_004,7,trp.player)
                troop_slot_005 = troop_get_slot(trp.player,13)
                if troop_slot_005 > 0:
                    troop_slot_005 -= spr.banner_a
                    troop_slot_005 += 1297036692682702894
                    party_set_banner_icon(p_004,troop_slot_005)
                #end
            #end
        #end
        for p_004 in range(p.village_1, p.salt_mine):
            party_slot_006 = party_get_slot(p_004,120)
            if party_slot_eq(p_004,7,trp.player) and not party_slot_eq(party_slot_006,7,trp.player):
                give_center_to_faction(p_004,faction_id_002)
            #end
        #end
        if is_between(faction_id_002,fac.player_supporters_faction,fac.kingdoms_end) and faction_id_002 != fac.player_supporters_faction:
            faction_relation_007 = store_relation(fac.player_supporters_faction,faction_id_002)
            var008 = -40 - faction_relation_007
            change_player_relation_with_faction(faction_id_002,var008)
        #end
    #end
    if var003 == 1:
        faction_slot_009 = faction_get_slot(faction_id_002,11)
        change_player_relation_with_troop(faction_slot_009,-20)
    #end
    if True:
        troop_slot_010 = troop_get_slot(trp.player,30)
        if is_between(troop_slot_010,trp.knight_1_1_wife,trp.heroes_end):
            if _cheat_mode >= 1:
                s4 = str_store_troop_name(troop_slot_010)
                print("@{!}DEBUG - {s4} faction changed by marriage - case 3")
            #end
        #end
        troop_set_faction(troop_slot_010,fac.player_supporters_faction)
    #end
    for fac_011 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if fac_011 != fac.player_supporters_faction:
            faction_relation_012 = store_relation(faction_id_002,fac_011)
            faction_relation_013 = store_relation(fac.player_faction,fac_011)
            if faction_id_002 == fac_011:
                val_min(faction_relation_013,0)
            elif faction_relation_012 < 0:
                val_max(faction_relation_013,0)
            #end
        #end
        set_relation(fac.player_faction,fac_011,faction_relation_013)
        set_relation(fac.player_supporters_faction,fac_011,faction_relation_013)
    #end
    update_all_notes()
    _g_recalculate_ais = 1


def deactivate_player_faction():
    faction_set_slot(fac.player_supporters_faction,21,2)
    faction_set_slot(fac.player_supporters_faction,11,trp.player)
    _players_kingdom = 0
    _players_oath_renounced_against_kingdom = 0
    _players_oath_renounced_given_center = 0
    _players_oath_renounced_begin_time = 0
    update_all_notes()
    if is_between(_g_player_minister,trp.npc1,trp.kingdom_1_lord):
        _npc_to_rejoin_party = _g_player_minister
    #end
    _g_player_minister = -1
    add_notification_menu(mnu.notification_player_faction_deactive,0,0)


def activate_player_faction(var001):
    if faction_slot_eq(fac.player_supporters_faction,21,2) and not is_between(var001,trp.kingdom_1_pretender,trp.knight_1_1_wife):
        add_notification_menu(mnu.notification_player_faction_active,0,0)
    #end
    faction_set_slot(fac.player_supporters_faction,21,0)
    faction_set_slot(fac.player_supporters_faction,11,var001)
    faction_id_002 = _players_kingdom
    if is_between(faction_id_002,fac.kingdom_1,fac.kingdoms_end):
        player_leave_faction(0)
    #end
    if is_between(var001,trp.npc1,trp.knight_1_1_wife):
        troop_faction_003 = store_faction_of_troop()
        if is_between(troop_faction_003,fac.kingdom_1,fac.kingdoms_end):
            faction_slot_004 = faction_get_slot(troop_faction_003,22)
            s1 = str_store_string(faction_slot_004)
            faction_set_name(fac.player_supporters_faction,"@{s1} Rebels")
        else:
            s2 = str_store_troop_name(var001)
            s1 = str_store_string(gstr.s2s_rebellion)
        #end
    #end
    faction_set_color(fac.player_supporters_faction,16711680)
    _players_kingdom = fac.player_supporters_faction
    _g_player_banner_granted = 1
    if is_between(faction_id_002,fac.kingdom_1,fac.kingdoms_end):
        faction_slot_005 = faction_get_slot(faction_id_002,11)
        add_log_entry(23,trp.player,-1,faction_slot_005,_players_kingdom)
        _players_oath_renounced_against_kingdom = faction_id_002
        _players_oath_renounced_given_center = 0
        _players_oath_renounced_begin_time = store_current_hours()
        for p_006 in range(p.town_1, p.village_1):
            party_faction_007 = store_faction_of_party(p_006)
            party_set_slot(p_006,159,party_faction_007)
        #end
        party_set_slot(_g_center_to_give_to_player,159,_players_oath_renounced_against_kingdom)
        faction_relation_008 = store_relation(faction_id_002,fac.player_supporters_faction)
        if faction_relation_008 >= 0:
            diplomacy_start_war_between_kingdoms(faction_id_002,fac.player_supporters_faction,1)
        #end
    #end
    if True:
        troop_slot_009 = troop_get_slot(trp.player,30)
        if is_between(troop_slot_009,trp.knight_1_1_wife,trp.heroes_end):
            if _cheat_mode >= 1:
                s4 = str_store_troop_name(troop_slot_009)
                print("@{!}DEBUG - {s4} faction changed by marriage - case 2")
            #end
        #end
        troop_set_faction(troop_slot_009,fac.player_supporters_faction)
    #end
    update_all_notes()
    _g_recalculate_ais = 1


def agent_reassign_team(var001):
    agent_no_002 = get_player_agent_no()
    if agent_no_002 >= 0 and agent_is_human(var001) and agent_is_ally(var001):
        party_id_003 = agent_get_party_id(var001)
        if party_id_003 != p.main_party:
            var004 = 1
            party_faction_005 = store_faction_of_party(party_id_003)
            if party_faction_005 == _players_kingdom and is_between(_players_kingdom,fac.player_supporters_faction,fac.kingdoms_end) and faction_slot_eq(_players_kingdom,8,trp.player):
                var004 = 0
            else:
                troop_id_006 = party_stack_get_troop_id(party_id_003,0)
                if not is_between(troop_id_006,trp.npc1,trp.knight_1_1_wife):
                    var004 = 0
                #end
            #end
        #end
        if var004 == 1:
            agent_team_no_007 = agent_get_team(agent_no_002)
            agent_team_no_007 += 2
            agent_set_team(var001,agent_team_no_007)
        #end
    #end


def start_quest(quest_id_001, var002):
    quest_set_slot(quest_id_001,6,var002)
    if var002 == -1:
        s63 = str_store_string(gstr.political_suggestion)
    elif is_between(var002,trp.npc1,trp.knight_1_1_wife):
        s62 = str_store_troop_name_link(var002)
        s63 = str_store_string("@Given by: {s62}")
    else:
        s62 = str_store_troop_name(var002)
        s63 = str_store_string("@Given by: {s62}")
    #end
    cur_hours_003 = store_current_hours()
    s60 = str_store_date(cur_hours_003)
    s60 = str_store_string("@Given on: {s60}")
    add_quest_note_from_sreg(quest_id_001,0,60,0)
    add_quest_note_from_sreg(quest_id_001,1,63,0)
    add_quest_note_from_sreg(quest_id_001,2,2,0)
    if quest_slot_ge(quest_id_001,23,1):
        reg0 = quest_get_slot(quest_id_001,23)
        #add_quest_note_from_sreg(quest_id_001,7,"@You have {reg0} days to finish this quest.",0) # Johandros - TODO: fix quick string
    #end
    if quest_slot_ge(quest_id_001,24,1):
        quest_slot_004 = quest_get_slot(quest_id_001,24)
        quest_set_slot(quest_id_001,25,quest_slot_004)
    #end
    start_quest(quest_id_001,var002)
    if quest_id_001 == qst.report_to_army:
        _number_of_report_to_army_quest_notes = 8
        faction_slot_005 = faction_get_slot(_players_kingdom,4)
        update_report_to_army_quest_note(_players_kingdom,faction_slot_005,-1)
    #end
    print(gstr.quest_log_updated)


def conclude_quest(quest_id_001):
    conclude_quest(quest_id_001)
    quest_slot_002 = quest_get_slot(quest_id_001,6)
    s59 = str_store_troop_name(quest_slot_002)
    #add_quest_note_from_sreg(quest_id_001,7,"@This quest has been concluded. Talk to {s59} to finish it.",0) # Johandros - TODO: fix quick string


def succeed_quest(quest_id_001):
    succeed_quest(quest_id_001)
    quest_slot_002 = quest_get_slot(quest_id_001,6)
    s59 = str_store_troop_name(quest_slot_002)
    #add_quest_note_from_sreg(quest_id_001,7,"@This quest has been successfully completed. Talk to {s59} to claim your reward.",0) # Johandros - TODO: fix quick string


def fail_quest(quest_id_001):
    fail_quest(quest_id_001)
    quest_slot_002 = quest_get_slot(quest_id_001,6)
    s59 = str_store_troop_name(quest_slot_002)
    #add_quest_note_from_sreg(quest_id_001,7,"@This quest has failed. Talk to {s59} to explain the situation.",0) # Johandros - TODO: fix quick string


def report_quest_troop_positions(var001, var002, var003):
    get_information_about_troops_position(var002,1)
    s5 = str_store_string("@At the time quest was given:^{s1}")
    add_quest_note_from_sreg(var001,var003,5,1)
    update_troop_location_notes(var002,1)


def end_quest(quest_id_001):
    str_clear(1)
    add_quest_note_from_sreg(quest_id_001,0,1,0)
    add_quest_note_from_sreg(quest_id_001,1,1,0)
    add_quest_note_from_sreg(quest_id_001,2,1,0)
    add_quest_note_from_sreg(quest_id_001,3,1,0)
    add_quest_note_from_sreg(quest_id_001,4,1,0)
    add_quest_note_from_sreg(quest_id_001,5,1,0)
    add_quest_note_from_sreg(quest_id_001,6,1,0)
    add_quest_note_from_sreg(quest_id_001,7,1,0)
    if not check_quest_failed(quest_id_001):
        _g_total_quests_completed += 1
    #end
    if quest_id_001 == qst.consult_with_minister:
        _g_minister_notification_quest = 0
    #end
    complete_quest(quest_id_001)
    if is_between(quest_id_001,qst.move_cattle_herd,qst.deliver_grain):
        _merchant_quest_last_offerer = -1
        _merchant_offered_quest = -1
    #end


def cancel_quest(quest_id_001):
    str_clear(1)
    add_quest_note_from_sreg(quest_id_001,0,1,0)
    add_quest_note_from_sreg(quest_id_001,1,1,0)
    add_quest_note_from_sreg(quest_id_001,2,1,0)
    add_quest_note_from_sreg(quest_id_001,3,1,0)
    add_quest_note_from_sreg(quest_id_001,4,1,0)
    add_quest_note_from_sreg(quest_id_001,5,1,0)
    add_quest_note_from_sreg(quest_id_001,6,1,0)
    add_quest_note_from_sreg(quest_id_001,7,1,0)
    cancel_quest(quest_id_001)
    if is_between(quest_id_001,qst.move_cattle_herd,qst.deliver_grain):
        _merchant_quest_last_offerer = -1
        _merchant_offered_quest = -1
    #end


def update_village_market_towns():
    for p_001 in range(p.village_1, p.salt_mine):
        party_faction_002 = store_faction_of_party(p_001)
        var003 = 999999
        var004 = -1
        for p_005 in range(p.town_1, p.castle_1):
            party_faction_006 = store_faction_of_party(p_005)
            if party_faction_006 == party_faction_002:
                distance_parties_007 = store_distance_to_party_from_party(p_001,p_005)
                if distance_parties_007 < var003:
                    var003 = distance_parties_007
                    var004 = p_005
                #end
            #end
        #end
        if var004 > -1:
            party_set_slot(p_001,121,var004)
        else:
            var003 = 999999
            var004 = -1
            for p_005 in range(p.town_1, p.castle_1):
                party_faction_006 = store_faction_of_party(p_005)
                faction_relation_008 = store_relation(party_faction_006,party_faction_002)
                if faction_relation_008 >= 0:
                    distance_parties_007 = store_distance_to_party_from_party(p_001,p_005)
                    if distance_parties_007 < var003:
                        var003 = distance_parties_007
                        var004 = p_005
                    #end
                #end
            #end
            if var004 > -1:
                party_set_slot(p_001,121,var004)
            #end
        #end
    #end


def update_mercenary_units_of_towns():
    for p_001 in range(p.town_1, p.castle_1):
        random_x_002 = store_random_in_range(trp.watchman,trp.mercenaries_end)
        party_set_slot(p_001,90,random_x_002)
        random_x_003 = store_random_in_range(3,8)
        party_set_slot(p_001,91,random_x_003)
    #end


def update_volunteer_troops_in_village(party_id_001):
    party_slot_002 = party_get_slot(party_id_001,26)
    party_slot_003 = party_get_slot(party_id_001,19)
    faction_slot_004 = faction_get_slot(party_slot_003,41)
    var005 = 1
    var006 = party_slot_002 / 10
    for var007 in range(0, var006):
        random_x_008 = store_random_in_range(0,100)
        if random_x_008 < 10:
            random_x_008 = store_random_in_range(0,2)
            troop_upgrade_troop_id_009 = troop_get_upgrade_troop(faction_slot_004,random_x_008)
            if troop_upgrade_troop_id_009 <= 0:
                troop_upgrade_troop_id_009 = troop_get_upgrade_troop(faction_slot_004,0)
            #end
        #end
        if troop_upgrade_troop_id_009 > 0:
            var005 += 1
            faction_slot_004 = troop_upgrade_troop_id_009
        #end
    #end
    var010 = 8
    if party_slot_002 >= 4:
        var010 = party_slot_002
        var010 /= 2
        var010 += 6
    elif party_slot_002 < 0:
        var010 = 0
    #end
    var010 *= 3
    var011 = 2 + var005
    var010 /= var011
    random_x_012 = store_random_in_range(0,var010)
    party_set_slot(party_id_001,92,faction_slot_004)
    party_set_slot(party_id_001,93,random_x_012)


def update_npc_volunteer_troops_in_village(party_id_001):
    party_slot_002 = party_get_slot(party_id_001,19)
    faction_slot_003 = faction_get_slot(party_slot_002,41)
    var004 = 1
    for var005 in range(0, 5):
        random_x_006 = store_random_in_range(0,100)
        if random_x_006 < 10:
            random_x_006 = store_random_in_range(0,2)
            troop_upgrade_troop_id_007 = troop_get_upgrade_troop(faction_slot_003,random_x_006)
            if troop_upgrade_troop_id_007 <= 0:
                troop_upgrade_troop_id_007 = troop_get_upgrade_troop(faction_slot_003,0)
            #end
        #end
        if troop_upgrade_troop_id_007 > 0:
            var004 += 1
            faction_slot_003 = troop_upgrade_troop_id_007
        #end
    #end
    var008 = 12
    var009 = 2 + var004
    var008 /= var009
    random_x_010 = store_random_in_range(0,var008)
    party_set_slot(party_id_001,90,faction_slot_003)
    party_set_slot(party_id_001,91,random_x_010)


def update_companion_candidates_in_taverns():
    if _cheat_mode == 1:
        print(gstr.shuffling_companion_locations)
    #end
    for trp_001 in range(trp.npc1, trp.kingdom_1_lord):
        troop_set_slot(trp_001,12,-1)
        if troop_slot_eq(trp_001,150,0) and troop_slot_eq(trp_001,2,0) and not troop_slot_ge(trp_001,8,0):
            random_x_002 = store_random_in_range(p.town_1,p.castle_1)
            if not troop_slot_eq(trp_001,60,random_x_002) and not troop_slot_eq(trp_001,59,random_x_002):
                troop_set_slot(trp_001,12,random_x_002)
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(trp_001)
                    s5 = str_store_party_name(random_x_002)
                    print("@{!}{s4} is in {s5}")
                #end
            #end
        #end
    #end


def update_ransom_brokers():
    for p_001 in range(p.town_1, p.castle_1):
        party_set_slot(p_001,95,0)
    #end
    for trp_002 in range(trp.ransom_broker_1, trp.tavern_traveler_1):
        p_001 = store_random_in_range(p.town_1,p.castle_1)
        party_set_slot(p_001,95,trp_002)
    #end
    party_set_slot(p.town_2,95,trp.ramun_the_slave_trader)


def update_tavern_travellers():
    for p_001 in range(p.town_1, p.castle_1):
        party_set_slot(p_001,96,0)
    #end
    for trp_002 in range(trp.tavern_traveler_1, trp.tavern_bookseller_1):
        p_001 = store_random_in_range(p.town_1,p.castle_1)
        party_set_slot(p_001,96,trp_002)
        var003 = 15
        for var004 in range(0, var003):
            random_x_005 = store_random_in_range(fac.player_supporters_faction,fac.kingdoms_end)
            if faction_slot_eq(random_x_005,21,0) and random_x_005 != _players_kingdom and random_x_005 != fac.player_supporters_faction:
                party_set_slot(p_001,97,random_x_005)
                var003 = 0
            #end
        #end
    #end
    troop_set_slot(trp.belligerent_drunk,12,p.town_1)


def update_villages_infested_by_bandits():
    for p_001 in range(p.village_1, p.salt_mine):
        if check_quest_active(qst.eliminate_bandits_infesting_village) and quest_slot_eq(qst.eliminate_bandits_infesting_village,1,p_001):
            quest_slot_002 = quest_get_slot(qst.eliminate_bandits_infesting_village,11)
            quest_slot_002 += 1
            if quest_slot_002 < 3:
                quest_set_slot(qst.eliminate_bandits_infesting_village,11,quest_slot_002)
            else:
                party_set_slot(p_001,39,0)
                abort_quest(qst.eliminate_bandits_infesting_village,2)
            #end
        elif check_quest_active(qst.deal_with_bandits_at_lords_village) and quest_slot_eq(qst.deal_with_bandits_at_lords_village,1,p_001):
            quest_slot_002 = quest_get_slot(qst.deal_with_bandits_at_lords_village,11)
            quest_slot_002 += 1
            if quest_slot_002 < 3:
                quest_set_slot(qst.deal_with_bandits_at_lords_village,11,quest_slot_002)
            else:
                party_set_slot(p_001,39,0)
                abort_quest(qst.deal_with_bandits_at_lords_village,2)
            #end
        else:
            party_set_slot(p_001,39,0)
            random_x_003 = store_random_in_range(0,100)
            var004 = 1
            if check_quest_active(qst.collect_taxes) and quest_slot_eq(qst.collect_taxes,1,p_001):
                var004 = 0
            elif check_quest_active(qst.train_peasants_against_bandits) and quest_slot_eq(qst.train_peasants_against_bandits,1,p_001):
                var004 = 0
            #end
            if var004 == 1 and random_x_003 < 3:
                random_x_003 = store_random_in_range(0,3)
                if random_x_003 == 0:
                    var005 = trp.bandit
                elif random_x_003 == 1:
                    var005 = trp.mountain_bandit
                else:
                    var005 = trp.forest_bandit
                #end
            #end
            party_set_slot(p_001,39,var005)
            change_center_prosperity(p_001,-1)
            _newglob_total_prosperity_from_bandits += -1
            if _cheat_mode == 2:
                s1 = str_store_party_name(p_001)
                print("@{!}DEBUG --{s1} is infested by bandits.")
            #end
        #end
    #end


def update_booksellers():
    for p_001 in range(p.town_1, p.castle_1):
        party_set_slot(p_001,98,0)
    #end
    for trp_002 in range(trp.tavern_bookseller_1, trp.tavern_minstrel_1):
        p_001 = store_random_in_range(p.town_1,p.castle_1)
        party_set_slot(p_001,98,trp_002)
    #end


def update_tavern_minstrels():
    for p_001 in range(p.town_1, p.castle_1):
        party_set_slot(p_001,99,0)
    #end
    for trp_002 in range(trp.tavern_minstrel_1, trp.kingdom_heroes_including_player_begin):
        p_001 = store_random_in_range(p.town_1,p.castle_1)
        party_set_slot(p_001,99,trp_002)
        if _cheat_mode == 1:
            s4 = str_store_troop_name(trp_002)
            s5 = str_store_party_name(p_001)
            print(gstr.s4_is_at_s5)
        #end
    #end


def update_other_taverngoers():
    random_x_001 = store_random_in_range(p.town_1,p.castle_1)
    troop_set_slot(trp.fight_promoter,12,random_x_001)
    random_x_002 = store_random_in_range(p.town_1,p.castle_1)
    troop_set_slot(trp.belligerent_drunk,12,random_x_002)


def update_faction_notes(var001):
    if faction_slot_eq(var001,21,2) or var001 == fac.player_faction:
        faction_set_note_available(var001,0)
    else:
        faction_set_note_available(var001,1)
    #end


def update_faction_political_notes(var001):
    evaluate_realm_stability(var001)
    add_faction_note_from_sreg(var001,2,gstr.instability_reg0_of_lords_are_disgruntled_reg1_are_restless,0)


def update_faction_traveler_notes(var001):
    var002 = 0
    for cur_party in __all_parties__:
        party_faction_004 = store_faction_of_party(cur_party)
        if party_faction_004 == var001:
            party_num_companions_005 = party_get_num_companions(cur_party)
            var002 += party_num_companions_005
        #end
    #end
    s5 = str_store_faction_name(var001)
    reg1 = var002
    #add_faction_note_from_sreg(var001,1,"@{s5} has a strength of {reg1} men in total.",1) # Johandros - TODO: fix quick strings


def update_troop_notes():
    pass


def update_troop_location_notes(troop_id_001, var002):
    if True:
        get_information_about_troops_position(troop_id_001,1)
        if reg0 != 0:
            search_troop_prisoner_of_party(troop_id_001)
            if reg0 == -1:
                reg1 = troop_get_type(troop_id_001)
                #if var002 == 0: # Johandros - TODO: fix quick strings
                #    add_troop_note_from_sreg(troop_id_001,2,"@The last time you saw {reg1?her:him} - {s1}",1)
                #else:
                #    add_troop_note_from_sreg(troop_id_001,2,"@The last time you heard about {reg1?her:him} - {s1}",1)
                ##end
            #end
        #end
    #end


def update_troop_location_notes_prisoned(troop_id_001, var002):
    reg1 = troop_get_type(troop_id_001)
    s1 = str_store_faction_name_link(var002)
    add_troop_note_from_sreg(troop_id_001,2,gstr.reg1shehe_is_prisoner_of_s1,1)


def update_troop_political_notes(troop_id_001):
    if True:
        str_clear(47)
        troop_faction_002 = store_faction_of_troop(troop_id_001)
        faction_slot_003 = faction_get_slot(troop_faction_002,11)
        str_clear(40)
        var004 = 0
        for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
            troop_get_relation_with_troop(troop_id_001,trp_005)
            if reg0 < -10:
                s39 = str_store_troop_name_link(trp_005)
                if var004 == 0:
                    s40 = str_store_string(gstr.s39_rival)
                    var004 = 1
                else:
                    s41 = str_store_string(gstr.s40)
                    s40 = str_store_string(gstr.s41_s39_rival)
                #end
            #end
        #end
        str_clear(46)
        if _cheat_mode >= 1:
            if troop_slot_eq(troop_id_001,52,1):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_martial_)
            elif troop_slot_eq(troop_id_001,52,5):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_debauched_)
            elif troop_slot_eq(troop_id_001,52,3):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_pitiless_)
            elif troop_slot_eq(troop_id_001,52,4):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_calculating_)
            elif troop_slot_eq(troop_id_001,52,2):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_quarrelsome_)
            elif troop_slot_eq(troop_id_001,52,6):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_goodnatured_)
            elif troop_slot_eq(troop_id_001,52,7):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_upstanding_)
            elif troop_slot_eq(troop_id_001,52,21):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_conventional_)
            elif troop_slot_eq(troop_id_001,52,22):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_adventurous_)
            elif troop_slot_eq(troop_id_001,52,23):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_romantic_)
            elif troop_slot_eq(troop_id_001,52,25):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_moralist_)
            elif troop_slot_eq(troop_id_001,52,24):
                s46 = str_store_string(gstr.reputation_cheat_mode_only_ambitious_)
            else:
                reg11 = troop_get_slot(troop_id_001,52)
                s46 = str_store_string(gstr.reputation_cheat_mode_only_reg11_)
            #end
            if _cheat_mode == 1:
                for slot_no_006 in range(35, 38):
                    troop_slot_007 = troop_get_slot(troop_id_001,slot_no_006)
                    if is_between(troop_slot_007,trp.knight_1_1_wife,trp.heroes_end):
                        s39 = str_store_troop_name_link(troop_slot_007)
                        troop_get_relation_with_troop(troop_id_001,troop_slot_007)
                        s2 = str_store_string(gstr.love_interest)
                        if troop_slot_eq(troop_id_001,34,troop_slot_007):
                            s2 = str_store_string(gstr.betrothed)
                        #end
                    #end
                    s40 = str_store_string(gstr.s40_s39_s2_reg0)
                #end
            #end
        #end
        s45 = str_store_string(gstr.other_relations_s40_)
        str_clear(44)
        if troop_id_001 != faction_slot_003:
            troop_get_relation_with_troop(troop_id_001,faction_slot_003)
            s44 = str_store_string(gstr.relation_with_liege_reg0_)
        #end
        str_clear(48)
        if _cheat_mode == 1:
            cur_hours_008 = store_current_hours()
            if cur_hours_008 > 0:
                calculate_troop_political_factors_for_liege(troop_id_001,faction_slot_003)
                s48 = str_store_string(gstr.sense_of_security_military_reg1_court_position_reg3_)
            #end
        #end
        s47 = str_store_string(gstr.s46s45s44s48)
        add_troop_note_from_sreg(troop_id_001,3,gstr.political_details_s47_,1)
    #end


def update_center_notes():
    pass


def update_center_recon_notes(party_id_001):
    if is_between(party_id_001,p.town_1,p.castle_1) or is_between(party_id_001,p.castle_1,p.village_1):
        party_slot_002 = party_get_slot(party_id_001,53)
        center_get_food_consumption(party_id_001)
        var003 = reg0
        reg6 = party_slot_002 / var003
        party_collect_attachments_to_party(party_id_001,p.collective_ally)
        reg5 = party_get_num_companions(p.collective_ally)
        #add_party_note_from_sreg(party_id_001,1,"@Current garrison consists of {reg5} men.^Has food stock for {reg6} days.",1) # Johandros - TODO: fix quick strings
    #end


def update_all_notes():
    update_troop_notes(trp.player)
    for trp_001 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_001,2,2) or troop_slot_eq(trp_001,2,6) or troop_slot_eq(trp_001,2,9):
            update_troop_notes(trp_001)
        #end
    #end
    for p_002 in range(p.town_1, p.salt_mine):
        update_center_notes(p_002)
    #end
    for fac_003 in range(fac.player_supporters_faction, fac.kingdoms_end):
        update_faction_notes(fac_003)
    #end


def agent_troop_get_banner_mesh(var001, troop_id_002):
    team_faction_010_list1 = [
    fac.ccoop_all_stars,
    fac.outlaws,
    ]
    troop_id_003 = -1
    faction_slot_004 = mesh.banners_default_b
    if var001 < 0:
        if troop_id_002 >= 0 and troop_slot_ge(troop_id_002,13,1) or troop_id_002 == trp.player:
            troop_id_003 = troop_id_002
        elif is_between(troop_id_002,trp.npc1,trp.kingdom_1_lord):
            troop_id_003 = trp.player
        else:
            faction_slot_004 = mesh.banners_default_a
        #end
    elif _g_is_quick_battle == 1:
        agent_team_no_005 = agent_get_team(var001)
        if agent_team_no_005 == 0:
            faction_slot_004 = _g_quick_battle_team_0_banner
        else:
            faction_slot_004 = _g_quick_battle_team_1_banner
        #end
    elif game_in_multiplayer_mode():
        agent_group_006 = agent_get_group(var001)
        if not player_is_active(agent_group_006):
            agent_group_006 = agent_get_player_id(var001)
        #end
        if _g_multiplayer_allow_player_banners == 1 and player_is_active(agent_group_006):
            bannder_id_007 = player_get_banner_id(agent_group_006)
            if bannder_id_007 >= 0:
                faction_slot_004 = bannder_id_007 + mesh.arms_a01
                var008 = 0
                for fac_009 in range(fac.kingdom_1, fac.kingdoms_end):
                    if faction_slot_eq(fac_009,15,faction_slot_004):
                        var008 = 1
                    #end
                #end
            #end
            if not is_between(faction_slot_004,mesh.arms_a01,mesh.arms_f21):
                var008 = 1
            #end
            if var008 == 0:
                pass
            else:
                agent_team_no_005 = agent_get_team(var001)
                team_faction_010 = team_get_faction(agent_team_no_005)
                if agent_is_human(var001):
                    if team_faction_010 in team_faction_010_list1:
                        troop_id_002 = agent_get_troop_id(var001)
                        team_faction_010 = store_faction_of_troop(troop_id_002)
                    #end
                    faction_slot_004 = faction_get_slot(team_faction_010,15)
                else:
                    agent_rider_011 = agent_get_rider(var001)
                    if agent_rider_011 >= 0 and agent_is_active(agent_rider_011):
                        agent_team_no_012 = agent_get_team(agent_rider_011)
                        team_faction_013 = team_get_faction(agent_team_no_012)
                        faction_slot_004 = faction_get_slot(team_faction_013,15)
                    else:
                        faction_slot_004 = mesh.banners_default_c
                    #end
                #end
            #end
        #end
    elif _talk_context == 14 and troop_id_002 != trp.player:
        faction_slot_004 = mesh.banners_default_d
    elif troop_id_002 != trp.player and is_between(_g_encountered_party,p.town_1,p.village_1):
        party_slot_017 = party_get_slot(_g_encountered_party,7)
        if party_slot_017 >= 0:
            troop_id_003 = party_slot_017
        #end
    else:
        troop_id_014 = agent_get_troop_id(var001)
        if troop_slot_ge(troop_id_014,13,1) or troop_id_002 == trp.player:
            troop_id_003 = troop_id_014
        else:
            party_id_015 = agent_get_party_id(var001)
            if party_id_015 < 0 and is_between(troop_id_014,trp.npc1,trp.kingdom_1_lord) and main_party_has_troop(troop_id_014):
                party_id_015 = p.main_party
            #end
        #end
        if party_id_015 >= 0:
            party_template_id_016 = party_get_template_id(party_id_015)
            if party_template_id_016 == pt.deserters:
                faction_slot_004 = mesh.banners_default_c
            elif is_between(party_id_015,p.town_1,p.salt_mine) and is_between(troop_id_014,trp.npc1,trp.kingdom_1_lord) and _talk_context != 14:
                troop_id_003 = trp.player
            elif is_between(party_id_015,p.town_1,p.salt_mine):
                party_slot_017 = party_get_slot(_g_encountered_party,7)
                if party_slot_017 >= 0:
                    troop_id_003 = party_slot_017
                elif party_slot_eq(party_id_015,0,13) or party_id_015 == p.main_party:
                    party_num_companions_stacks_018 = party_get_num_companion_stacks(party_id_015)
                    if party_num_companions_stacks_018 > 0:
                        troop_id_019 = party_stack_get_troop_id(party_id_015,0)
                        if troop_slot_ge(troop_id_019,13,1) or troop_id_019 == trp.player:
                            troop_id_003 = troop_id_019
                        #end
                    #end
                #end
            #end
        #end
    #end
    if troop_id_003 >= 0:
        if not troop_slot_ge(troop_id_003,13,1):
            faction_slot_004 = mesh.banners_default_b
        else:
            troop_slot_020 = troop_get_slot(troop_id_003,13)
            var021 = spr.banner_f21
            var021 += 1
            if is_between(troop_slot_020,spr.banner_a,var021):
                troop_slot_020 -= spr.banner_a
                faction_slot_004 = troop_slot_020 + mesh.arms_a01
            #end
        #end
    #end
    reg0 = faction_slot_004


def shield_item_set_banner(var001, var002, var003):
    agent_troop_get_banner_mesh(var002,var003)
    cur_item_set_tableau_material(var001,reg0)


def troop_agent_set_banner(var001, var002, var003):
    agent_troop_get_banner_mesh(var002,var003)
    cur_agent_set_banner_tableau_material(var001,reg0)


def add_troop_to_cur_tableau(troop_id_001):
    set_fixed_point_multiplier(100)
    var002 = -1
    troop_slot_003 = troop_get_slot(troop_id_001,13)
    var004 = spr.banner_f21
    var004 += 1
    if is_between(troop_slot_003,spr.banner_a,var004):
        troop_slot_003 -= spr.banner_a
        var002 = troop_slot_003 + mesh.banner_a01
    #end
    cur_tableau_clear_override_items()
    cur_tableau_set_override_flags(31)
    init_position(2)
    cur_tableau_set_camera_parameters(1,6,6,10,10000)
    init_position(5)
    var005 = 162
    var006 = troop_id_001 * 87323
    var006 = 139
    var007 = troop_id_001 * 124337
    var007 %= 50
    var007 += -25
    var008 = troop_id_001 * 98123
    var008 %= 20
    var008 += -14
    var009 = anim.stand_man
    position_set_z(5,var005)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    position_rotate_y(5,var007)
    position_rotate_x(5,var008)
    position_move_z(5,var006,0)
    position_move_x(5,5,0)
    if var002 >= 0:
        init_position(1)
        position_set_z(1,-1500)
        position_set_x(1,265)
        position_set_y(1,400)
        position_transform_position_to_parent(3,5,1)
        cur_tableau_add_mesh(var002,3,400,0)
    #end
    cur_tableau_add_troop(troop_id_001,2,var009,0)
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-60)
    cur_tableau_add_sun_light(0,8,175,150,125)


def add_troop_to_cur_tableau_for_character(troop_id_001):
    set_fixed_point_multiplier(100)
    cur_tableau_clear_override_items()
    cur_tableau_set_override_flags(512)
    init_position(2)
    cur_tableau_set_camera_parameters(1,4,8,10,10000)
    init_position(5)
    var002 = 150
    var003 = 360
    var004 = -15
    var005 = -18
    var006 = 1
    position_set_z(5,var002)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    position_rotate_y(5,var004)
    position_rotate_x(5,var005)
    position_move_z(5,var003,0)
    position_move_x(5,5,0)
    if troop_is_hero(troop_id_001):
        cur_tableau_add_troop(troop_id_001,2,var006,-1)
    else:
        var007 = troop_id_001 * 126233
        var007 %= 1000
        var007 += 1
        cur_tableau_add_troop(troop_id_001,2,var006,var007)
    #end
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-60)
    cur_tableau_add_sun_light(0,8,175,150,125)


def add_troop_to_cur_tableau_for_inventory(troop_id_001):
    var002 = store_mod(troop_id_001,4)
    troop_id_001 /= 4
    var002 *= 90
    set_fixed_point_multiplier(100)
    cur_tableau_clear_override_items()
    init_position(2)
    position_rotate_z(2,var002)
    cur_tableau_set_camera_parameters(1,4,6,10,10000)
    init_position(5)
    var003 = 105
    var004 = 380
    var005 = -15
    var006 = -18
    var007 = 1
    position_set_z(5,var003)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    position_rotate_y(5,var005)
    position_rotate_x(5,var006)
    position_move_z(5,var004,0)
    position_move_x(5,5,0)
    if troop_is_hero(troop_id_001):
        cur_tableau_add_troop(troop_id_001,2,var007,-1)
    else:
        var008 = troop_id_001 * 126233
        var008 %= 1000
        var008 += 1
        cur_tableau_add_troop(troop_id_001,2,var007,var008)
    #end
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-60)
    cur_tableau_add_sun_light(0,8,175,150,125)


def add_troop_to_cur_tableau_for_profile(troop_id_001):
    set_fixed_point_multiplier(100)
    cur_tableau_clear_override_items()
    cur_tableau_set_camera_parameters(1,4,6,10,10000)
    init_position(5)
    var002 = 105
    var003 = 380
    var004 = -15
    var005 = -18
    var006 = 1
    position_set_z(5,var002)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    position_rotate_y(5,var004)
    position_rotate_x(5,var005)
    position_move_z(5,var003,0)
    position_move_x(5,5,0)
    var007 = profile_get_banner_id()
    if var007 >= 0:
        init_position(2)
        var007 += mesh.banner_a01
        position_set_x(2,-175)
        position_set_y(2,-300)
        position_set_z(2,180)
        position_rotate_x(2,90)
        position_rotate_y(2,-15)
        cur_tableau_add_mesh(var007,2,0,0)
    #end
    init_position(2)
    if troop_is_hero(troop_id_001):
        cur_tableau_add_troop(troop_id_001,2,var006,-1)
    else:
        var008 = troop_id_001 * 126233
        var008 %= 1000
        var008 += 1
        cur_tableau_add_troop(troop_id_001,2,var006,var008)
    #end
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-60)
    cur_tableau_add_sun_light(0,8,175,150,125)


def add_troop_to_cur_tableau_for_retirement(var001):
    cur_tableau_set_override_flags(511)
    if var001 == 0:
        cur_tableau_add_override_item(itm.pilgrim_hood)
        cur_tableau_add_override_item(itm.pilgrim_disguise)
        cur_tableau_add_override_item(itm.wrapping_boots)
        var002 = anim.pose_1
    elif var001 == 1:
        cur_tableau_add_override_item(itm.pilgrim_hood)
        cur_tableau_add_override_item(itm.red_tunic)
        cur_tableau_add_override_item(itm.wrapping_boots)
        cur_tableau_add_override_item(itm.dagger)
        var002 = anim.pose_1
    elif var001 == 2:
        cur_tableau_add_override_item(itm.linen_tunic)
        cur_tableau_add_override_item(itm.wrapping_boots)
        var002 = anim.pose_2
    elif var001 == 3:
        cur_tableau_add_override_item(itm.nomad_vest)
        cur_tableau_add_override_item(itm.nomad_boots)
        var002 = anim.pose_2
    elif var001 == 4:
        cur_tableau_add_override_item(itm.leather_apron)
        cur_tableau_add_override_item(itm.leather_boots)
        var002 = anim.pose_3
    elif var001 == 5:
        cur_tableau_add_override_item(itm.red_shirt)
        cur_tableau_add_override_item(itm.woolen_hose)
        cur_tableau_add_override_item(itm.fur_hat)
        var002 = anim.pose_3
    elif var001 == 6:
        cur_tableau_add_override_item(itm.red_gambeson)
        cur_tableau_add_override_item(itm.leather_boots)
        cur_tableau_add_override_item(itm.sword_medieval_c)
        var002 = anim.pose_4
    elif var001 == 7:
        cur_tableau_add_override_item(itm.nobleman_outfit)
        cur_tableau_add_override_item(itm.blue_hose)
        cur_tableau_add_override_item(itm.sword_medieval_c)
        var002 = anim.pose_4
    elif var001 == 8:
        cur_tableau_add_override_item(itm.courtly_outfit)
        cur_tableau_add_override_item(itm.woolen_hose)
        cur_tableau_add_override_item(itm.sword_medieval_c)
        var002 = anim.pose_4
    else:
        cur_tableau_add_override_item(itm.heraldic_mail_with_surcoat_for_tableau)
        cur_tableau_add_override_item(itm.mail_boots_for_tableau)
        cur_tableau_add_override_item(itm.sword_medieval_c)
        var002 = anim.pose_5
    #end
    set_fixed_point_multiplier(100)
    cur_tableau_set_camera_parameters(1,6,6,10,10000)
    var003 = 155
    var004 = 575
    var005 = -5
    var006 = 10
    init_position(5)
    position_set_z(5,var003)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    position_rotate_y(5,var005)
    position_rotate_x(5,var006)
    position_move_z(5,var004,0)
    position_move_x(5,60,0)
    init_position(2)
    cur_tableau_add_troop(trp.player,2,var002,0)
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-60)
    cur_tableau_add_sun_light(0,8,175,150,125)


def add_troop_to_cur_tableau_for_party(troop_id_001):
    var002 = store_mod(troop_id_001,2)
    troop_id_001 /= 2
    set_fixed_point_multiplier(100)
    cur_tableau_clear_override_items()
    if var002 == 1:
        cur_tableau_set_override_flags(543)
    #end
    init_position(2)
    cur_tableau_set_camera_parameters(1,6,6,10,10000)
    init_position(5)
    var003 = 105
    var004 = 450
    var005 = 15
    var006 = -18
    var007 = 1
    troop_inv_slot_008 = troop_get_inventory_slot(troop_id_001,8)
    if troop_inv_slot_008 > 0 and var002 == 0:
        cur_tableau_add_horse(troop_inv_slot_008,2,anim.horse_stand,0)
        var007 = anim.ride_0
        var005 = 23
        var003 = 150
        var004 = 550
    #end
    position_set_z(5,var003)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    position_rotate_y(5,var005)
    position_rotate_x(5,var006)
    position_move_z(5,var004,0)
    position_move_x(5,5,0)
    if troop_is_hero(troop_id_001):
        cur_tableau_add_troop(troop_id_001,2,var007,-1)
    else:
        var009 = troop_id_001 * 126233
        var009 %= 1000
        var009 += 1
        cur_tableau_add_troop(troop_id_001,2,var007,var009)
    #end
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-60)
    cur_tableau_add_sun_light(0,8,175,150,125)


def get_prosperity_text_to_s50(party_id_001):
    party_slot_002 = party_get_slot(party_id_001,50)
    party_slot_002 /= 20
    if party_slot_002 == 0:
        s50 = str_store_string("@Very Poor")
    elif party_slot_002 == 1:
        s50 = str_store_string("@Poor")
    elif party_slot_002 == 2:
        s50 = str_store_string("@Average")
    elif party_slot_002 == 3:
        s50 = str_store_string("@Rich")
    else:
        s50 = str_store_string("@Very Rich")
    #end


def spawn_bandits():
    set_spawn_radius(1)
    if _cheat_mode == 1:
        print("@{!}DEBUG : Doing spawn bandit script")
    #end
    party_template_set_slot(pt.steppe_bandits,3,pt.steppe_bandit_lair)
    party_template_set_slot(pt.taiga_bandits,3,pt.taiga_bandit_lair)
    party_template_set_slot(pt.mountain_bandits,3,pt.mountain_bandit_lair)
    party_template_set_slot(pt.forest_bandits,3,pt.forest_bandit_lair)
    party_template_set_slot(pt.sea_raiders,3,pt.sea_raider_lair)
    party_template_set_slot(pt.desert_bandits,3,pt.desert_bandit_lair)
    party_template_set_slot(pt.steppe_bandits,5,p.steppe_bandit_spawn_point)
    party_template_set_slot(pt.taiga_bandits,5,p.taiga_bandit_spawn_point)
    party_template_set_slot(pt.mountain_bandits,5,p.mountain_bandit_spawn_point)
    party_template_set_slot(pt.forest_bandits,5,p.forest_bandit_spawn_point)
    party_template_set_slot(pt.sea_raiders,5,p.sea_raider_spawn_point_1)
    party_template_set_slot(pt.desert_bandits,5,p.desert_bandit_spawn_point)
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.mountain_bandits)
        if num_parties_of_template_001 < 16:
            random_x_002 = store_random(1)
            random_x_002 += p.mountain_bandit_spawn_point
            set_spawn_radius(25)
            spawn_around_party(random_x_002,pt.mountain_bandits)
        #end
    #end
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.forest_bandits)
        if num_parties_of_template_001 < 16:
            random_x_002 = store_random(1)
            random_x_002 += p.forest_bandit_spawn_point
            set_spawn_radius(25)
            spawn_around_party(random_x_002,pt.forest_bandits)
        #end
    #end
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.sea_raiders)
        if num_parties_of_template_001 < 16:
            random_x_002 = store_random(2)
            random_x_002 += p.sea_raider_spawn_point_1
            set_spawn_radius(25)
            spawn_around_party(random_x_002,pt.sea_raiders)
        #end
    #end
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.steppe_bandits)
        if num_parties_of_template_001 < 16:
            random_x_002 = store_random(1)
            random_x_002 += p.steppe_bandit_spawn_point
            set_spawn_radius(25)
            spawn_around_party(random_x_002,pt.steppe_bandits)
        #end
    #end
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.taiga_bandits)
        if num_parties_of_template_001 < 16:
            random_x_002 = store_random(1)
            random_x_002 += p.taiga_bandit_spawn_point
            set_spawn_radius(25)
            spawn_around_party(random_x_002,pt.taiga_bandits)
        #end
    #end
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.desert_bandits)
        if num_parties_of_template_001 < 16:
            random_x_002 = store_random(1)
            random_x_002 += p.desert_bandit_spawn_point
            set_spawn_radius(25)
            spawn_around_party(random_x_002,pt.desert_bandits)
        #end
    #end
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.looters)
        if num_parties_of_template_001 < 42:
            random_x_002 = store_random_in_range(p.village_1,p.salt_mine)
            set_spawn_radius(25)
            spawn_around_party(random_x_002,pt.looters)
            party_id_003 = reg0
            if check_quest_active(qst.deal_with_looters):
                party_set_flags(party_id_003,262144,1)
            else:
                party_set_flags(party_id_003,262144,0)
            #end
        #end
    #end
    if True:
        num_parties_of_template_001 = store_num_parties_of_template(pt.deserters)
        if num_parties_of_template_001 < 15:
            set_spawn_radius(4)
            for trp_004 in range(trp.npc1, trp.knight_1_1_wife):
                if troop_slot_eq(trp_004,2,2):
                    random_x_005 = store_random_in_range(0,100)
                    if random_x_005 < 5:
                        troop_slot_006 = troop_get_slot(trp_004,10)
                        troop_faction_007 = store_faction_of_troop(trp_004)
                        if troop_faction_007 != fac.player_supporters_faction and troop_slot_006 > 0 and not party_is_in_any_town(troop_slot_006):
                            spawn_around_party(troop_slot_006,pt.deserters)
                            var008 = reg0
                            troop_faction_009 = store_faction_of_troop(trp_004)
                            faction_slot_010 = faction_get_slot(troop_faction_009,41)
                            character_lvl_011 = store_character_level(trp.player)
                            var012 = character_lvl_011 * 2
                            var012 += 11
                            random_x_013 = store_random_in_range(10,var012)
                            party_add_members(var008,faction_slot_010,random_x_013)
                            random_x_005 = store_random_in_range(1,4)
                            for var014 in range(0, random_x_005):
                                party_upgrade_with_xp(var008,1000000,0)
                            #end
                        #end
                    #end
                #end
            #end
        #end
    #end
    for pt_015 in range(pt.steppe_bandits, pt.deserters):
        party_template_slot_016 = party_template_get_slot(pt_015,4)
        if party_template_slot_016 <= 1:
            party_template_slot_017 = party_template_get_slot(pt_015,3)
            party_template_slot_018 = party_template_get_slot(pt_015,5)
            set_spawn_radius(20)
            spawn_around_party(party_template_slot_018,party_template_slot_017)
            party_id_019 = reg0
            party_set_slot(party_id_019,0,18)
            s4 = str_store_party_name(party_id_019)
            pos4 = party_get_position(party_id_019)
            party_cur_terrain_020 = party_get_current_terrain(party_id_019)
            pos_z_021 = position_get_z(4)
            pos_y_022 = position_get_y(4)
            var023 = 0
            for p_024 in range(p.town_1, p.salt_mine):
                if var023 == 0:
                    distance_parties_025 = store_distance_to_party_from_party(party_id_019,p_024)
                    if distance_parties_025 < 3:
                        var023 = 1
                    #end
                #end
            #end
        #end
        if var023 == 1 and party_is_active(party_id_019):
            remove_party(party_id_019)
            party_template_set_slot(pt_015,4,0)
        elif pt_015 == pt.sea_raiders and party_cur_terrain_020 == 3 and map_get_water_position_around_position(5,4,4):
            party_template_set_slot(pt_015,4,party_id_019)
            party_set_flags(party_id_019,256,1)
        elif pt_015 == pt.mountain_bandits and party_cur_terrain_020 == 3 and pos_z_021 > 250:
            party_template_set_slot(pt_015,4,party_id_019)
            party_set_flags(party_id_019,256,1)
        elif pt_015 == pt.desert_bandits and party_cur_terrain_020 == 5 and pos_y_022 > -9000 and pos_z_021 > 125:
            party_template_set_slot(pt_015,4,party_id_019)
            party_set_flags(party_id_019,256,1)
        elif pt_015 == pt.steppe_bandits and party_cur_terrain_020 == 2 or party_cur_terrain_020 == 10 and party_cur_terrain_020 == 10 or pos_z_021 > 200:
            party_template_set_slot(pt_015,4,party_id_019)
            party_set_flags(party_id_019,256,1)
        elif pt_015 == pt.taiga_bandits and party_cur_terrain_020 == 12:
            party_template_set_slot(pt_015,4,party_id_019)
            party_set_flags(party_id_019,256,1)
        elif pt_015 == pt.forest_bandits and party_cur_terrain_020 == 11:
            party_template_set_slot(pt_015,4,party_id_019)
            party_set_flags(party_id_019,256,1)
        elif party_is_active(party_id_019):
            s4 = str_store_party_name(party_id_019)
            remove_party(party_id_019)
            party_template_set_slot(pt_015,4,0)
        else:
            pass
        #end
    #end


def count_mission_casualties_from_agents():
    party_clear(p.player_casualties)
    party_clear(p.enemy_casualties)
    party_clear(p.ally_casualties)
    _any_allies_at_the_last_battle = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent):
            party_id_002 = agent_get_party_id(cur_agent)
            troop_id_003 = agent_get_troop_id(cur_agent)
            troop_set_slot(troop_id_003,146,0)
            troop_set_slot(troop_id_003,147,0)
            troop_set_slot(troop_id_003,148,0)
        #end
    #end
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent):
            party_id_002 = agent_get_party_id(cur_agent)
            if party_id_002 != p.main_party and agent_is_ally(cur_agent):
                _any_allies_at_the_last_battle = 1
            #end
        #end
        if agent_is_routed(cur_agent):
            agent_slot_004 = agent_get_slot(cur_agent,15)
            if agent_slot_004 == 1:
                if True:
                    troop_id_005 = agent_get_troop_id(cur_agent)
                    party_id_006 = agent_get_party_id(cur_agent)
                    party_faction_007 = store_faction_of_party(party_id_006)
                    if party_id_002 == p.main_party:
                        _num_routed_us += 1
                    elif agent_is_ally(cur_agent):
                        _num_routed_allies += 1
                    else:
                        _num_routed_enemies += 1
                        faction_slot_008 = faction_get_slot(party_faction_007,90)
                        faction_slot_008 += 1
                        faction_set_slot(party_faction_007,90,faction_slot_008)
                        party_add_members(p.routed_enemies,troop_id_005,1)
                    #end
                #end
            #end
            troop_id_003 = agent_get_troop_id(cur_agent)
            if party_id_002 == p.main_party:
                troop_slot_009 = troop_get_slot(troop_id_003,146)
                troop_slot_009 += 1
                troop_set_slot(troop_id_003,146,troop_slot_009)
            elif agent_is_ally(cur_agent):
                troop_slot_010 = troop_get_slot(troop_id_003,147)
                troop_slot_010 += 1
                troop_set_slot(troop_id_003,147,troop_slot_010)
            else:
                troop_slot_011 = troop_get_slot(troop_id_003,148)
                troop_slot_011 += 1
                troop_set_slot(troop_id_003,148,troop_slot_011)
            #end
        #end
        if not agent_is_alive(cur_agent):
            troop_id_003 = agent_get_troop_id(cur_agent)
            if party_id_002 == p.main_party:
                party_add_members(p.player_casualties,troop_id_003,1)
                if agent_is_wounded(cur_agent):
                    party_wound_members(p.player_casualties,troop_id_003,1)
                #end
            #end
        elif agent_is_ally(cur_agent):
            party_add_members(p.ally_casualties,troop_id_003,1)
            if agent_is_wounded(cur_agent):
                party_wound_members(p.ally_casualties,troop_id_003,1)
            #end
        else:
            party_add_members(p.enemy_casualties,troop_id_003,1)
            if agent_is_wounded(cur_agent):
                party_wound_members(p.enemy_casualties,troop_id_003,1)
            #end
        #end
    #end


def get_max_skill_of_player_party(skill_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(p.main_party)
    skill_lvl_003 = store_skill_level(skill_001,trp.player)
    var004 = trp.player
    for stack_no_005 in range(0, party_num_companions_stacks_002):
        troop_id_006 = party_stack_get_troop_id(p.main_party,stack_no_005)
        if troop_is_hero(troop_id_006) and not troop_is_wounded(troop_id_006):
            skill_lvl_007 = store_skill_level(skill_001,troop_id_006)
            if skill_lvl_007 > skill_lvl_003:
                skill_lvl_003 = skill_lvl_007
                var004 = troop_id_006
            #end
        #end
    #end
    reg0 = party_get_skill_level(p.main_party,skill_001)
    reg1 = var004


def upgrade_hero_party(var001, var002):
    party_upgrade_with_xp(var001,var002,0)


def get_improvement_details(var001):
    if var001 == 130:
        s0 = str_store_string("@Manor")
        s1 = str_store_string("@A manor lets you rest at the village and pay your troops half wages while you rest.")
        reg0 = 8000
    elif var001 == 131:
        s0 = str_store_string("@Mill")
        s1 = str_store_string("@A mill increases village prosperity by 5%.")
        reg0 = 6000
    elif var001 == 132:
        s0 = str_store_string("@Watch Tower")
        s1 = str_store_string("@A watch tower lets the villagers raise alarm earlier. The time it takes for enemies to loot the village increases by 50%.")
        reg0 = 5000
    elif var001 == 133:
        s0 = str_store_string("@School")
        s1 = str_store_string("@A shool increases the loyality of the villagers to you by +1 every month.")
        reg0 = 9000
    elif var001 == 134:
        s0 = str_store_string("@Messenger Post")
        s1 = str_store_string("@A messenger post lets the inhabitants send you a message whenever enemies are nearby - even if you are far away from here.")
        reg0 = 4000
    elif var001 == 135:
        s0 = str_store_string("@Prison Tower")
        s1 = str_store_string("@A prison tower reduces the chance of captives held here running away successfully.")
        reg0 = 7000
    #end


def cf_troop_agent_is_alive(var001):
    var002 = 0
    for cur_agent in __all_agents__:
        troop_id_004 = agent_get_troop_id(cur_agent)
        if var001 == troop_id_004 and agent_is_alive(cur_agent):
            var002 += 1
        #end
    #end


def cf_village_recruit_volunteers_cond():
    if _cheat_mode == 1:
        print(gstr.checking_volunteer_availability_script)
    #end
    if not party_slot_eq(_current_town,35,2) and not party_slot_eq(_current_town,35,1) and not party_slot_ge(_current_town,39,1):
        party_faction_001 = store_faction_of_party(_current_town)
        party_slot_002 = party_get_slot(_current_town,26)
        faction_relation_003 = store_relation(party_faction_001,fac.player_faction)
        if party_slot_002 >= 0:
            if _cheat_mode == 1:
                print(gstr.center_relation_at_least_zero)
            #end
        #end
    #end
    if party_slot_002 >= 5 or party_faction_001 == _players_kingdom or faction_relation_003 >= 0 or party_faction_001 == _supported_pretender_old_faction or _players_kingdom == 0:
        if _cheat_mode == 1:
            print(gstr.relationfaction_conditions_met)
        #end
    #end
    if party_slot_ge(_current_town,93,0) and party_slot_ge(_current_town,92,1):
        if _cheat_mode == 1:
            print(gstr.troops_available)
        #end
    #end
    party_free_companions_capacity_004 = party_get_free_companions_capacity(p.main_party)
    if party_free_companions_capacity_004 >= 1:
        if _cheat_mode == 1:
            print(gstr.party_has_capacity)
        #end
    #end


def village_recruit_volunteers_recruit():
    party_slot_001 = party_get_slot(_current_town,92)
    party_slot_002 = party_get_slot(_current_town,93)
    party_free_companions_capacity_003 = party_get_free_companions_capacity(p.main_party)
    val_min(party_slot_002,party_free_companions_capacity_003)
    troop_gold_004 = store_troop_gold(trp.player)
    var005 = troop_gold_004 / 10
    val_min(party_slot_002,var005)
    party_add_members(p.main_party,party_slot_001,party_slot_002)
    party_set_slot(_current_town,93,-1)
    gold_006 = party_slot_002 * 10
    troop_remove_gold(trp.player,gold_006)


def get_troop_item_amount(troop_id_001, var002):
    troop_inv_capacity_003 = troop_get_inventory_capacity(troop_id_001)
    var004 = 0
    for inventory_slot_no_005 in range(0, troop_inv_capacity_003):
        troop_inv_slot_006 = troop_get_inventory_slot(troop_id_001,inventory_slot_no_005)
        if troop_inv_slot_006 == var002:
            var004 += 1
        #end
    #end
    reg0 = var004


def get_name_from_dna_to_s50(var001):
    var002 = gstr.surname_1
    var002 -= gstr.name_1
    var003 = gstr.surnames_end
    var003 -= gstr.surname_1
    var004 = var001
    var004 %= var002
    var005 = var001
    var005 /= var002
    var005 %= var003
    var004 += gstr.name_1
    var005 += gstr.surname_1
    s50 = str_store_string(var004)
    s50 = str_store_string(var005)


def change_center_prosperity(party_id_001, var002):
    party_slot_003 = party_get_slot(party_id_001,50)
    var004 = party_slot_003 + var002
    val_clamp(var004,0,100)
    var005 = party_slot_003 / 20
    var006 = var004 / 20
    if var005 != var006 and not is_between(party_id_001,p.castle_1,p.village_1):
        s2 = str_store_party_name_link(party_id_001)
        get_prosperity_text_to_s50(party_id_001)
        s3 = str_store_string(50)
        party_set_slot(party_id_001,50,var004)
        get_prosperity_text_to_s50(party_id_001)
        s4 = str_store_string(50)
        if party_slot_eq(party_id_001,7,trp.player):
            print("@Prosperity of {s2} has changed from {s3} to {s4}.")
        #end
        update_center_notes(party_id_001)
    else:
        party_set_slot(party_id_001,50,var004)
    #end
    if True:
        cur_hours_007 = store_current_hours()
        if cur_hours_007 > 1:
            var008 = var004 - party_slot_003
            if var008 < 0:
                _newglob_total_prosperity_losses += var008
            elif var008 > 0:
                _newglob_total_prosperity_gains += var008
            #end
        #end
    #end
    if _cheat_mode == 3:
        reg4 = _newglob_total_prosperity_from_bandits
        reg5 = _newglob_total_prosperity_from_caravan_trade
        reg7 = _newglob_total_prosperity_from_villageloot
        reg8 = _newglob_total_prosperity_from_townloot
        reg9 = _newglob_total_prosperity_from_village_trade
        reg10 = _newglob_total_prosperity_from_convergence
        reg11 = _newglob_total_prosperity_losses
        reg12 = _newglob_total_prosperity_gains
        print("@{!}DEBUG: Total prosperity actual losses: {reg11}")
        print("@{!}DEBUG: Total prosperity actual gains: {reg12}")
        print("@{!}DEBUG: Prosperity changes from random bandits: {reg4}")
        print("@{!}DEBUG: Prosperity changes from caravan trades: {reg5}")
        print("@{!}DEBUG: Prosperity changes from farmer trades: {reg9}")
        print("@{!}DEBUG: Prosperity changes from looted villages: {reg7}")
        print("@{!}DEBUG: Prosperity changes from sieges: {reg8}")
        print("@{!}DEBUG: Theoretical prosperity changes from convergence: {reg10}")
    #end


def get_center_ideal_prosperity(var001):
    var002 = 65
    center_get_goods_availability(var001)
    var003 = reg0 * 2
    var002 -= var003
    if is_between(var001,p.village_1,p.salt_mine) and party_slot_eq(var001,131,1):
        var002 += 5
    #end
    val_max(var002,0)
    reg0 = var002


def good_price_affects_good_production(party_id_001, var002, var003, var004):
    reg4 = var003
    if var003 > 0:
        slot_no_005 = var002 - itm.spice
        slot_no_005 += 250
        party_slot_006 = party_get_slot(party_id_001,slot_no_005)
        if is_between(party_id_001,p.town_1,p.castle_1):
            party_slot_006 *= 4
            var007 = 4
            for p_008 in range(p.village_1, p.salt_mine):
                if party_slot_eq(p_008,120,party_id_001):
                    party_slot_009 = party_get_slot(p_008,slot_no_005)
                    party_slot_006 += party_slot_009
                    var007 += 1
                #end
            #end
            party_slot_006 /= var007
        #end
        if party_slot_006 < 1000:
            var004 *= 2
        #end
        if var004 > 1:
            party_slot_006 -= 1000
            party_slot_006 /= var004
            party_slot_006 += 1000
        #end
        var003 *= 1000
        var003 /= party_slot_006
    #end
    reg0 = var003


def get_poorest_village_of_faction(var001):
    var002 = -1
    var003 = 101
    for p_004 in range(p.village_1, p.salt_mine):
        party_faction_005 = store_faction_of_party(p_004)
        if party_faction_005 == var001:
            party_slot_006 = party_get_slot(p_004,50)
            if party_slot_006 < var003:
                var003 = party_slot_006
                var002 = p_004
            #end
        #end
    #end
    reg0 = var002


def troop_add_gold(troop_id_001, gold_002):
    troop_add_gold(troop_id_001,gold_002)
    if troop_id_001 == trp.player:
        play_sound(snd.money_received)
    #end


def initialize_npcs():
    troop_set_slot(trp.npc1,62,2)
    troop_set_slot(trp.npc1,63,4)
    troop_set_slot(trp.npc1,64,1)
    troop_set_slot(trp.npc1,66,-1)
    troop_set_slot(trp.npc1,71,trp.npc7)
    troop_set_slot(trp.npc1,73,trp.npc16)
    troop_set_slot(trp.npc1,75,trp.npc2)
    troop_set_slot(trp.npc1,60,p.village_25)
    troop_set_slot(trp.npc1,141,300)
    troop_set_slot(trp.npc1,143,2)
    troop_set_slot(trp.npc1,144,trp.npc14)
    troop_set_slot(trp.npc1,67,p.town_17)
    troop_set_slot(trp.npc1,14,0)
    troop_set_slot(trp.npc1,52,8)
    troop_set_slot(trp.npc2,62,3)
    troop_set_slot(trp.npc2,63,2)
    troop_set_slot(trp.npc2,64,4)
    troop_set_slot(trp.npc2,66,1)
    troop_set_slot(trp.npc2,71,trp.npc5)
    troop_set_slot(trp.npc2,73,trp.npc9)
    troop_set_slot(trp.npc2,75,trp.npc1)
    troop_set_slot(trp.npc2,60,p.town_1)
    troop_set_slot(trp.npc2,141,0)
    troop_set_slot(trp.npc2,143,4)
    troop_set_slot(trp.npc2,144,trp.npc16)
    troop_set_slot(trp.npc2,67,p.town_1)
    troop_set_slot(trp.npc2,14,0)
    troop_set_slot(trp.npc2,52,10)
    troop_set_slot(trp.npc3,62,3)
    troop_set_slot(trp.npc3,63,4)
    troop_set_slot(trp.npc3,64,1)
    troop_set_slot(trp.npc3,66,-1)
    troop_set_slot(trp.npc3,71,trp.npc14)
    troop_set_slot(trp.npc3,73,trp.npc8)
    troop_set_slot(trp.npc3,75,trp.npc9)
    troop_set_slot(trp.npc3,60,p.town_3)
    troop_set_slot(trp.npc3,141,0)
    troop_set_slot(trp.npc3,143,5)
    troop_set_slot(trp.npc3,144,trp.npc5)
    troop_set_slot(trp.npc3,67,p.town_15)
    troop_set_slot(trp.npc3,14,0)
    troop_set_slot(trp.npc3,52,9)
    troop_set_slot(trp.npc4,62,1)
    troop_set_slot(trp.npc4,63,4)
    troop_set_slot(trp.npc4,64,4)
    troop_set_slot(trp.npc4,66,-1)
    troop_set_slot(trp.npc4,71,trp.npc10)
    troop_set_slot(trp.npc4,73,trp.npc7)
    troop_set_slot(trp.npc4,75,trp.npc5)
    troop_set_slot(trp.npc4,60,p.village_34)
    troop_set_slot(trp.npc4,141,300)
    troop_set_slot(trp.npc4,143,1)
    troop_set_slot(trp.npc4,144,trp.npc6)
    troop_set_slot(trp.npc4,67,p.town_3)
    troop_set_slot(trp.npc4,14,0)
    troop_set_slot(trp.npc4,52,4)
    troop_set_slot(trp.npc5,62,2)
    troop_set_slot(trp.npc5,63,3)
    troop_set_slot(trp.npc5,64,-1)
    troop_set_slot(trp.npc5,66,0)
    troop_set_slot(trp.npc5,71,trp.npc2)
    troop_set_slot(trp.npc5,73,trp.npc11)
    troop_set_slot(trp.npc5,75,trp.npc4)
    troop_set_slot(trp.npc5,60,p.town_14)
    troop_set_slot(trp.npc5,141,400)
    troop_set_slot(trp.npc5,143,2)
    troop_set_slot(trp.npc5,144,trp.npc9)
    troop_set_slot(trp.npc5,67,p.town_10)
    troop_set_slot(trp.npc5,14,fac.kingdom_3)
    troop_set_slot(trp.npc5,52,4)
    troop_set_slot(trp.npc6,62,3)
    troop_set_slot(trp.npc6,63,2)
    troop_set_slot(trp.npc6,64,4)
    troop_set_slot(trp.npc6,66,1)
    troop_set_slot(trp.npc6,71,trp.npc11)
    troop_set_slot(trp.npc6,73,trp.npc13)
    troop_set_slot(trp.npc6,75,trp.npc12)
    troop_set_slot(trp.npc6,60,p.town_4)
    troop_set_slot(trp.npc6,141,0)
    troop_set_slot(trp.npc6,143,4)
    troop_set_slot(trp.npc6,144,trp.npc8)
    troop_set_slot(trp.npc6,67,p.town_7)
    troop_set_slot(trp.npc6,14,fac.kingdom_1)
    troop_set_slot(trp.npc6,52,7)
    troop_set_slot(trp.npc7,62,2)
    troop_set_slot(trp.npc7,63,3)
    troop_set_slot(trp.npc7,64,-1)
    troop_set_slot(trp.npc7,66,0)
    troop_set_slot(trp.npc7,71,trp.npc1)
    troop_set_slot(trp.npc7,73,trp.npc4)
    troop_set_slot(trp.npc7,75,trp.npc16)
    troop_set_slot(trp.npc7,60,p.village_5)
    troop_set_slot(trp.npc7,143,4)
    troop_set_slot(trp.npc7,144,trp.npc3)
    troop_set_slot(trp.npc7,67,p.town_2)
    troop_set_slot(trp.npc7,14,0)
    troop_set_slot(trp.npc7,52,10)
    troop_set_slot(trp.npc8,62,1)
    troop_set_slot(trp.npc8,63,3)
    troop_set_slot(trp.npc8,64,-1)
    troop_set_slot(trp.npc8,66,0)
    troop_set_slot(trp.npc8,71,trp.npc12)
    troop_set_slot(trp.npc8,73,trp.npc3)
    troop_set_slot(trp.npc8,75,trp.npc13)
    troop_set_slot(trp.npc8,60,p.sea_raider_spawn_point_2)
    troop_set_slot(trp.npc8,141,500)
    troop_set_slot(trp.npc8,143,5)
    troop_set_slot(trp.npc8,144,trp.npc2)
    troop_set_slot(trp.npc8,67,p.town_12)
    troop_set_slot(trp.npc8,14,fac.kingdom_4)
    troop_set_slot(trp.npc8,52,1)
    troop_set_slot(trp.npc9,62,1)
    troop_set_slot(trp.npc9,63,2)
    troop_set_slot(trp.npc9,64,4)
    troop_set_slot(trp.npc9,66,1)
    troop_set_slot(trp.npc9,71,trp.npc13)
    troop_set_slot(trp.npc9,73,trp.npc2)
    troop_set_slot(trp.npc9,75,trp.npc3)
    troop_set_slot(trp.npc9,60,p.town_13)
    troop_set_slot(trp.npc9,141,300)
    troop_set_slot(trp.npc9,143,5)
    troop_set_slot(trp.npc9,144,trp.npc1)
    troop_set_slot(trp.npc9,67,p.town_8)
    troop_set_slot(trp.npc9,14,fac.kingdom_2)
    troop_set_slot(trp.npc9,52,1)
    troop_set_slot(trp.npc10,62,3)
    troop_set_slot(trp.npc10,63,2)
    troop_set_slot(trp.npc10,64,2)
    troop_set_slot(trp.npc10,66,1)
    troop_set_slot(trp.npc10,71,trp.npc4)
    troop_set_slot(trp.npc10,73,trp.npc14)
    troop_set_slot(trp.npc10,75,trp.npc11)
    troop_set_slot(trp.npc10,60,p.castle_28)
    troop_set_slot(trp.npc10,141,200)
    troop_set_slot(trp.npc10,143,2)
    troop_set_slot(trp.npc10,144,trp.npc7)
    troop_set_slot(trp.npc10,67,p.town_5)
    troop_set_slot(trp.npc10,14,fac.kingdom_5)
    troop_set_slot(trp.npc10,52,9)
    troop_set_slot(trp.npc11,62,2)
    troop_set_slot(trp.npc11,63,3)
    troop_set_slot(trp.npc11,64,-1)
    troop_set_slot(trp.npc11,66,0)
    troop_set_slot(trp.npc11,71,trp.npc6)
    troop_set_slot(trp.npc11,73,trp.npc5)
    troop_set_slot(trp.npc11,75,trp.npc10)
    troop_set_slot(trp.npc11,60,p.town_6)
    troop_set_slot(trp.npc11,141,100)
    troop_set_slot(trp.npc11,143,1)
    troop_set_slot(trp.npc11,144,trp.npc15)
    troop_set_slot(trp.npc11,67,p.town_6)
    troop_set_slot(trp.npc11,14,0)
    troop_set_slot(trp.npc11,52,10)
    troop_set_slot(trp.npc12,62,3)
    troop_set_slot(trp.npc12,63,3)
    troop_set_slot(trp.npc12,64,-1)
    troop_set_slot(trp.npc12,66,0)
    troop_set_slot(trp.npc12,71,trp.npc8)
    troop_set_slot(trp.npc12,73,trp.npc15)
    troop_set_slot(trp.npc12,75,trp.npc6)
    troop_set_slot(trp.npc12,60,p.castle_16)
    troop_set_slot(trp.npc12,141,0)
    troop_set_slot(trp.npc12,143,1)
    troop_set_slot(trp.npc12,144,trp.npc13)
    troop_set_slot(trp.npc12,67,p.town_14)
    troop_set_slot(trp.npc12,14,0)
    troop_set_slot(trp.npc12,52,9)
    troop_set_slot(trp.npc13,62,1)
    troop_set_slot(trp.npc13,63,3)
    troop_set_slot(trp.npc13,64,-1)
    troop_set_slot(trp.npc13,66,0)
    troop_set_slot(trp.npc13,71,trp.npc9)
    troop_set_slot(trp.npc13,73,trp.npc6)
    troop_set_slot(trp.npc13,75,trp.npc8)
    troop_set_slot(trp.npc13,60,p.castle_15)
    troop_set_slot(trp.npc13,141,300)
    troop_set_slot(trp.npc13,143,1)
    troop_set_slot(trp.npc13,144,trp.npc10)
    troop_set_slot(trp.npc13,67,p.town_4)
    troop_set_slot(trp.npc13,14,0)
    troop_set_slot(trp.npc13,52,8)
    troop_set_slot(trp.npc14,62,1)
    troop_set_slot(trp.npc14,63,4)
    troop_set_slot(trp.npc14,64,2)
    troop_set_slot(trp.npc14,66,-1)
    troop_set_slot(trp.npc14,71,trp.npc3)
    troop_set_slot(trp.npc14,73,trp.npc10)
    troop_set_slot(trp.npc14,75,trp.npc15)
    troop_set_slot(trp.npc14,60,p.castle_18)
    troop_set_slot(trp.npc14,141,400)
    troop_set_slot(trp.npc14,143,4)
    troop_set_slot(trp.npc14,144,trp.npc11)
    troop_set_slot(trp.npc14,67,p.town_16)
    troop_set_slot(trp.npc14,14,0)
    troop_set_slot(trp.npc14,52,3)
    troop_set_slot(trp.npc15,62,2)
    troop_set_slot(trp.npc15,63,2)
    troop_set_slot(trp.npc15,64,4)
    troop_set_slot(trp.npc15,66,1)
    troop_set_slot(trp.npc15,71,trp.npc16)
    troop_set_slot(trp.npc15,73,trp.npc12)
    troop_set_slot(trp.npc15,75,trp.npc14)
    troop_set_slot(trp.npc15,60,p.castle_1)
    troop_set_slot(trp.npc15,141,300)
    troop_set_slot(trp.npc15,143,2)
    troop_set_slot(trp.npc15,144,trp.npc4)
    troop_set_slot(trp.npc15,67,p.town_18)
    troop_set_slot(trp.npc15,52,10)
    troop_set_slot(trp.npc16,62,1)
    troop_set_slot(trp.npc16,63,4)
    troop_set_slot(trp.npc16,64,3)
    troop_set_slot(trp.npc16,66,-1)
    troop_set_slot(trp.npc16,71,trp.npc15)
    troop_set_slot(trp.npc16,73,trp.npc1)
    troop_set_slot(trp.npc16,75,trp.npc7)
    troop_set_slot(trp.npc16,60,p.village_20)
    troop_set_slot(trp.npc16,141,200)
    troop_set_slot(trp.npc16,143,5)
    troop_set_slot(trp.npc16,144,trp.npc12)
    troop_set_slot(trp.npc16,67,p.town_9)
    troop_set_slot(trp.npc16,52,8)
    _number_of_npc_slots = 141 - 101
    for trp_001 in range(trp.npc1, trp.kingdom_1_lord):
        for var002 in range(0, _number_of_npc_slots):
            slot_no_003 = var002 + 101
            var004 = var002 * 16
            var005 = gstr.npc1_intro
            var005 += var004
            var005 += trp_001
            var005 -= trp.npc1
            troop_set_slot(trp_001,slot_no_003,var005)
        #end
    #end
    add_log_entry(45,trp.player,-1,-1,-1)
    troop_set_slot(trp.kingdom_1_pretender,14,fac.kingdom_1)
    troop_set_slot(trp.kingdom_2_pretender,14,fac.kingdom_2)
    troop_set_slot(trp.kingdom_3_pretender,14,fac.kingdom_3)
    troop_set_slot(trp.kingdom_4_pretender,14,fac.kingdom_4)
    troop_set_slot(trp.kingdom_5_pretender,14,fac.kingdom_5)
    troop_set_slot(trp.kingdom_6_pretender,14,fac.kingdom_6)
    for trp_006 in range(trp.kingdom_1_pretender, trp.knight_1_1_wife):
        troop_set_slot(trp_006,52,0)
    #end


def objectionable_action(var001, var002):
    var003 = -2
    for trp_004 in range(trp.npc1, trp.kingdom_1_lord):
        if main_party_has_troop(trp_004):
            if troop_slot_eq(trp_004,62,var001):
                troop_slot_005 = troop_get_slot(trp_004,63)
                if troop_slot_eq(trp_004,61,1):
                    troop_slot_006 = troop_get_slot(trp_004,69)
                    troop_slot_005 *= 2
                    troop_slot_006 += troop_slot_005
                    troop_set_slot(trp_004,69,troop_slot_006)
                elif troop_slot_eq(trp_004,61,2) or _disable_npc_complaints == 1:
                    troop_slot_006 = troop_get_slot(trp_004,69)
                    troop_slot_006 += troop_slot_005
                    troop_set_slot(trp_004,69,troop_slot_006)
                elif troop_slot_eq(trp_004,61,0) and troop_slot_005 > var003:
                    _npc_with_grievance = trp_004
                    _npc_grievance_string = var002
                    _npc_grievance_slot = 61
                    var003 = troop_slot_005
                    _npc_praise_not_complaint = 0
                    if troop_slot_005 < 0:
                        _npc_praise_not_complaint = 1
                    #end
                #end
            #end
        elif troop_slot_eq(trp_004,64,var001):
            troop_slot_005 = troop_get_slot(trp_004,66)
            if troop_slot_eq(trp_004,65,1):
                troop_slot_006 = troop_get_slot(trp_004,69)
                troop_slot_005 *= 2
                troop_slot_006 += troop_slot_005
                troop_set_slot(trp_004,69,troop_slot_006)
            elif troop_slot_eq(trp_004,65,2) or _disable_npc_complaints == 1:
                troop_slot_006 = troop_get_slot(trp_004,69)
                troop_slot_006 += troop_slot_005
                troop_set_slot(trp_004,69,troop_slot_006)
            elif troop_slot_eq(trp_004,65,0) and troop_slot_005 > var003:
                _npc_with_grievance = trp_004
                _npc_grievance_string = var002
                _npc_grievance_slot = 65
                var003 = troop_slot_005
                _npc_praise_not_complaint = 0
                if troop_slot_005 < 0:
                    _npc_praise_not_complaint = 1
                #end
            #end
        #end
        if _npc_with_grievance > 0 and _npc_praise_not_complaint == 0:
            s4 = str_store_troop_name(_npc_with_grievance)
            print("@{s4} looks upset.")
        #end
    #end


def post_battle_personality_clash_check():
    for trp_001 in range(trp.npc1, trp.kingdom_1_lord):
        if _disable_npc_complaints == 0 and main_party_has_troop(trp_001) and not troop_is_wounded(trp_001):
            troop_slot_002 = troop_get_slot(trp_001,73)
            if main_party_has_troop(troop_slot_002) and not troop_is_wounded(troop_slot_002):
                if troop_slot_eq(trp_001,74,0):
                    if True:
                        _npc_with_personality_clash_2 = trp_001
                    #end
                #end
            #end
        #end
    #end
    for trp_001 in range(trp.npc1, trp.kingdom_1_lord):
        if troop_slot_eq(trp_001,76,0) and _disable_npc_complaints == 0 and main_party_has_troop(trp_001) and not troop_is_wounded(trp_001):
            troop_slot_002 = troop_get_slot(trp_001,75)
            if main_party_has_troop(troop_slot_002) and not troop_is_wounded(troop_slot_002):
                _npc_with_personality_match = trp_001
            #end
        #end
    #end
    if _npc_with_personality_clash_2 > 0:
        if _cheat_mode == 1:
            print(gstr.personality_clash_conversation_begins)
        #end
        if main_party_has_troop(_npc_with_personality_clash_2):
            _npc_map_talk_context = 74
            start_map_conversation(_npc_with_personality_clash_2)
        else:
            _npc_with_personality_clash_2 = 0
        #end
    elif _npc_with_personality_match > 0:
        if _cheat_mode == 1:
            print(gstr.personality_match_conversation_begins)
        #end
        if main_party_has_troop(_npc_with_personality_match):
            _npc_map_talk_context = 76
            start_map_conversation(_npc_with_personality_match)
        else:
            _npc_with_personality_match = 0
        #end
    #end


def event_player_defeated_enemy_party():
    if check_quest_active(qst.raid_caravan_to_start_war) and not check_quest_concluded(qst.raid_caravan_to_start_war) and party_slot_eq(_g_enemy_party,0,11):
        party_faction_001 = store_faction_of_party(_g_enemy_party)
        if quest_slot_eq(qst.raid_caravan_to_start_war,3,party_faction_001):
            quest_slot_002 = quest_get_slot(qst.raid_caravan_to_start_war,11)
            quest_slot_003 = quest_get_slot(qst.raid_caravan_to_start_war,10)
            quest_slot_002 += 1
            quest_set_slot(qst.raid_caravan_to_start_war,11,quest_slot_002)
            if quest_slot_002 >= quest_slot_003:
                quest_slot_004 = quest_get_slot(qst.raid_caravan_to_start_war,3)
                quest_slot_005 = quest_get_slot(qst.raid_caravan_to_start_war,6)
                troop_faction_006 = store_faction_of_troop(quest_slot_005)
                diplomacy_start_war_between_kingdoms(quest_slot_004,troop_faction_006,1)
                succeed_quest(qst.raid_caravan_to_start_war)
            #end
        #end
    #end


def event_player_captured_as_prisoner():
    if check_quest_active(qst.raid_caravan_to_start_war) and not check_quest_concluded(qst.raid_caravan_to_start_war):
        quest_slot_001 = quest_get_slot(qst.raid_caravan_to_start_war,3)
        party_faction_002 = store_faction_of_party(_capturer_party)
        if quest_slot_001 == party_faction_002:
            fail_quest(qst.raid_caravan_to_start_war)
        #end
    #end
    for trp_003 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_003,2,2):
            troop_slot_004 = troop_get_slot(trp_003,10)
            if troop_slot_004 > 0 and party_is_active(troop_slot_004) and party_slot_eq(troop_slot_004,4,11) and party_slot_eq(troop_slot_004,5,p.main_party):
                party_set_ai_state(troop_slot_004,-1,-1)
                _g_recalculate_ais = 1
            #end
        #end
    #end


def npc_morale(troop_id_001):
    troop_slot_002 = troop_get_slot(troop_id_001,69)
    troop_slot_003 = troop_get_slot(troop_id_001,77)
    party_morale_004 = party_get_morale(p.main_party)
    var005 = party_morale_004 - troop_slot_002
    var005 -= troop_slot_003
    var005 += 50
    reg8 = var005
    var005 *= 3
    var005 /= 4
    val_clamp(var005,0,100)
    reg5 = party_morale_004
    reg6 = troop_slot_002
    reg7 = troop_slot_003
    reg9 = var005
    if troop_slot_002 < 3:
        s7 = str_store_string(gstr.happy)
    elif troop_slot_002 < 15:
        s7 = str_store_string(gstr.content)
    elif troop_slot_002 < 30:
        s7 = str_store_string(gstr.concerned)
    elif troop_slot_002 < 45:
        s7 = str_store_string(gstr.not_happy)
    else:
        s7 = str_store_string(gstr.miserable)
    #end
    if troop_slot_003 < 3:
        s6 = str_store_string(gstr.happy)
    elif troop_slot_003 < 15:
        s6 = str_store_string(gstr.content)
    elif troop_slot_003 < 30:
        s6 = str_store_string(gstr.concerned)
    elif troop_slot_003 < 45:
        s6 = str_store_string(gstr.not_happy)
    else:
        s6 = str_store_string(gstr.miserable)
    #end
    if var005 > 80:
        s8 = str_store_string(gstr.happy)
        s63 = str_store_string(gstr.bar_enthusiastic)
    elif var005 > 60:
        s8 = str_store_string(gstr.content)
        s63 = str_store_string(gstr.bar_content)
    elif var005 > 40:
        s8 = str_store_string(gstr.concerned)
        s63 = str_store_string(gstr.bar_weary)
    elif var005 > 20:
        s8 = str_store_string(gstr.not_happy)
        s63 = str_store_string(gstr.bar_disgruntled)
    else:
        s8 = str_store_string(gstr.miserable)
        s63 = str_store_string(gstr.bar_miserable)
    #end
    s21 = str_store_string(gstr.npc_morale_report)
    reg0 = var005


def retire_companion(troop_id_001, var002):
    remove_member_from_party(troop_id_001,p.main_party)
    troop_set_slot(troop_id_001,77,0)
    troop_set_slot(troop_id_001,69,0)
    troop_slot_003 = troop_get_slot(trp.player,7)
    var004 = troop_slot_003 + var002
    troop_set_slot(troop_id_001,2,11)
    troop_set_slot(troop_id_001,84,var004)


def reduce_companion_morale_for_clash(troop_id_001, troop_id_002, slot_no_003):
    troop_slot_004 = troop_get_slot(troop_id_001,slot_no_003)
    troop_slot_005 = troop_get_slot(troop_id_001,77)
    troop_slot_006 = troop_get_slot(troop_id_002,77)
    if troop_slot_004 == 1:
        troop_slot_005 += 5
    elif troop_slot_004 == 2:
        troop_slot_006 += 5
    elif troop_slot_004 == 3:
        troop_slot_005 += 3
        troop_slot_006 += 3
    #end
    troop_set_slot(troop_id_001,77,troop_slot_005)
    troop_set_slot(troop_id_002,77,troop_slot_006)


def calculate_ransom_amount_for_troop(troop_id_001):
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    var003 = 400
    var004 = -9
    if faction_slot_eq(troop_faction_002,11,troop_id_001):
        var003 += 4000
    elif troop_slot_eq(troop_id_001,2,6):
        var003 += 2500
        get_kingdom_lady_social_determinants(troop_id_001)
        var004 = reg0
    #end
    var005 = 0
    for p_006 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_006,7,troop_id_001) or party_slot_eq(p_006,7,var004):
            if party_slot_eq(p_006,0,3):
                var005 += 4
            elif party_slot_eq(p_006,0,2):
                var005 += 2
            else:
                var005 += 1
            #end
        #end
    #end
    var005 *= 500
    var003 += var005
    troop_slot_007 = troop_get_slot(troop_id_001,7)
    troop_slot_007 *= 2
    var003 += troop_slot_007
    var008 = var003 * 3
    var008 /= 2
    random_x_009 = store_random_in_range(var003,var008)
    random_x_009 /= 100
    random_x_009 *= 100
    reg0 = random_x_009


def offer_ransom_amount_to_player_for_prisoners_in_party(var001):
    var002 = 0
    party_num_prisoners_stacks_003 = party_get_num_prisoner_stacks(var001)
    for var004 in range(0, party_num_prisoners_stacks_003):
        if var002 == 0:
            party_prisoner_troop_id_005 = party_prisoner_stack_get_troop_id(var001,var004)
            if troop_is_hero(party_prisoner_troop_id_005) and troop_slot_eq(party_prisoner_troop_id_005,2,2) or troop_slot_eq(party_prisoner_troop_id_005,2,6):
                troop_faction_006 = store_faction_of_troop(party_prisoner_troop_id_005)
                random_x_007 = store_random_in_range(0,100)
                if faction_slot_eq(troop_faction_006,21,0) and random_x_007 <= 5 and _g_ransom_offer_rejected != 1:
                    party_num_prisoners_stacks_003 = 0
                    var002 = 1
                    _g_ransom_offer_troop = party_prisoner_troop_id_005
                    _g_ransom_offer_party = var001
                    jump_to_menu(mnu.enemy_offer_ransom_for_prisoner)
                #end
            #end
        #end
    #end
    reg0 = var002


def event_hero_taken_prisoner_by_player(var001):
    if check_quest_active(qst.persuade_lords_to_make_peace):
        if quest_slot_eq(qst.persuade_lords_to_make_peace,2,var001):
            var001 *= -1
            quest_set_slot(qst.persuade_lords_to_make_peace,2,var001)
            var001 *= -1
        elif quest_slot_eq(qst.persuade_lords_to_make_peace,4,var001):
            var001 *= -1
            quest_set_slot(qst.persuade_lords_to_make_peace,4,var001)
            var001 *= -1
        #end
        if not check_quest_concluded(qst.persuade_lords_to_make_peace) and not quest_slot_ge(qst.persuade_lords_to_make_peace,2,0) and not quest_slot_ge(qst.persuade_lords_to_make_peace,4,0):
            succeed_quest(qst.persuade_lords_to_make_peace)
        #end
    #end
    update_troop_location_notes(var001,0)


def cf_check_hero_can_escape_from_player(var001):
    var002 = 0
    if check_quest_active(qst.persuade_lords_to_make_peace) and quest_slot_eq(qst.persuade_lords_to_make_peace,2,var001) or quest_slot_eq(qst.persuade_lords_to_make_peace,4,var001):
        var002 = 1
    elif var001 >= trp.sea_raider_leader and var001 < trp.bandit_leaders_end:
        if check_quest_active(qst.learn_where_merchant_brother_is):
            var002 = 1
        else:
            var002 = -1
        #end
    #end
    var003 = 0
    if var002 == 0:
        random_x_004 = store_random_in_range(0,100)
        if random_x_004 < 70:
            var003 = 1
        elif var002 == -1:
            var003 = 1
        #end
    #end


def cf_party_remove_random_regular_troop(party_id_001):
    party_num_companions_stacks_002 = party_get_num_companion_stacks(party_id_001)
    var003 = 0
    for stack_no_004 in range(0, party_num_companions_stacks_002):
        troop_id_005 = party_stack_get_troop_id(party_id_001,stack_no_004)
        if not troop_is_hero(troop_id_005):
            party_stack_size_006 = party_stack_get_size(party_id_001,stack_no_004)
            var003 += party_stack_size_006
        #end
    #end
    reg0 = -1
    if var003 > 0:
        random_x_007 = store_random_in_range(0,var003)
        for stack_no_004 in range(0, party_num_companions_stacks_002):
            troop_id_005 = party_stack_get_troop_id(party_id_001,stack_no_004)
            if not troop_is_hero(troop_id_005):
                party_stack_size_006 = party_stack_get_size(party_id_001,stack_no_004)
                random_x_007 -= party_stack_size_006
                if random_x_007 < 0:
                    party_num_companions_stacks_002 = 0
                    party_remove_members(party_id_001,troop_id_005,1)
                    reg0 = troop_id_005
                #end
            #end
        #end
    #end


def place_player_banner_near_inventory():
    troop_slot_001 = troop_get_slot(trp.player,13)
    if troop_slot_001 > 0:
        scp_instance_002 = scene_prop_get_instance(troop_slot_001,0)
        if scp_instance_002 >= 0:
            agent_no_003 = get_player_agent_no()
            pos1 = agent_get_look_position(agent_no_003)
            position_move_y(1,-500)
            position_rotate_z(1,180)
            position_set_z_to_ground_level(1)
            position_move_z(1,300)
            prop_instance_set_position(scp_instance_002,1)
        #end
        scp_instance_004 = scene_prop_get_instance(spr.banner_pole,0)
        if scp_instance_004 >= 0:
            position_move_z(1,-320)
            prop_instance_set_position(scp_instance_004,1)
        #end
    else:
        init_position(1)
        position_move_z(1,-1000000)
        scp_instance_002 = scene_prop_get_instance(spr.banner_a,0)
        if scp_instance_002 >= 0:
            prop_instance_set_position(scp_instance_002,1)
        #end
        scp_instance_004 = scene_prop_get_instance(spr.banner_pole,0)
        if scp_instance_004 >= 0:
            prop_instance_set_position(scp_instance_004,1)
        #end
    #end


def place_player_banner_near_inventory_bms():
    troop_slot_001 = troop_get_slot(trp.player,13)
    if troop_slot_001 > 0:
        replace_scene_props(spr.banner_a,troop_slot_001)
    #end


def stay_captive_for_hours(var001):
    cur_hours_002 = store_current_hours()
    cur_hours_002 += var001
    val_max(_g_check_autos_at_hour,cur_hours_002)
    var001 += 1
    rest_for_hours(var001,0,0)


def set_parties_around_player_ignore_player(var001, var002):
    for cur_party in __all_parties__:
        if party_is_active(cur_party):
            distance_parties_004 = store_distance_to_party_from_party(p.main_party,cur_party)
            if distance_parties_004 < var001:
                party_ignore_player(cur_party,var002)
            #end
        #end
    #end


def randomly_make_prisoner_heroes_escape_from_party(var001, var002):
    quest_slot_003 = -1
    quest_slot_004 = -1
    if check_quest_active(qst.rescue_lord_by_replace):
        quest_slot_003 = quest_get_slot(qst.rescue_lord_by_replace,2)
    #end
    if check_quest_active(qst.deliver_message_to_prisoner_lord):
        quest_slot_004 = quest_get_slot(qst.deliver_message_to_prisoner_lord,2)
    #end
    party_num_prisoners_stacks_005 = party_get_num_prisoner_stacks(var001)
    for var006 in range(0, party_num_prisoners_stacks_005):
        party_prisoner_troop_id_007 = party_prisoner_stack_get_troop_id(var001,var006)
        if troop_is_hero(party_prisoner_troop_id_007) and party_prisoner_troop_id_007 != quest_slot_003 and party_prisoner_troop_id_007 != quest_slot_004 and troop_slot_eq(party_prisoner_troop_id_007,2,2):
            random_x_008 = store_random_in_range(0,1000)
            if random_x_008 < var002:
                party_remove_prisoners(var001,party_prisoner_troop_id_007,1)
                remove_troop_from_prison(party_prisoner_troop_id_007)
                s1 = str_store_troop_name_link(party_prisoner_troop_id_007)
                if var001 == p.main_party:
                    s2 = str_store_string("@your party")
                else:
                    s2 = str_store_party_name(var001)
                #end
            #end
        #end
        reg0 = 0
        if var001 == p.main_party or party_slot_eq(var001,7,trp.player):
            reg0 = 1
        #end
        troop_faction_009 = store_faction_of_troop(party_prisoner_troop_id_007)
        str_store_faction_name_link(s3, troop_faction_009)
        print("@{reg0?One of your prisoners;;; :}{s1} of {s3} has escaped from captivity!")
    #end


def fill_tournament_participants_troop(var001, var002):
    slot_no_003 = 0
    if var002 == 1:
        party_num_companions_stacks_004 = party_get_num_companion_stacks(p.main_party)
        for stack_no_005 in range(0, party_num_companions_stacks_004):
            troop_id_006 = party_stack_get_troop_id(p.main_party,stack_no_005)
            if troop_is_hero(troop_id_006) and troop_id_006 != trp.kidnapped_girl:
                troop_set_slot(trp.tournament_participants,slot_no_003,troop_id_006)
                slot_no_003 += 1
            #end
        #end
    #end
    party_collect_attachments_to_party(var001,p.temp_party)
    party_num_companions_stacks_004 = party_get_num_companion_stacks(p.temp_party)
    for stack_no_005 in range(0, party_num_companions_stacks_004):
        troop_id_006 = party_stack_get_troop_id(p.temp_party,stack_no_005)
        if troop_is_hero(troop_id_006):
            troop_set_slot(trp.tournament_participants,slot_no_003,troop_id_006)
            slot_no_003 += 1
        #end
    #end
    if True:
        random_x_007 = store_random_in_range(0,100)
        if random_x_007 < 50:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.xerina)
            slot_no_003 += 1
        #end
    #end
    if True:
        random_x_007 = store_random_in_range(0,100)
        if random_x_007 < 50:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.dranton)
            slot_no_003 += 1
        #end
    #end
    if True:
        random_x_007 = store_random_in_range(0,100)
        if random_x_007 < 50:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.kradus)
            slot_no_003 += 1
        #end
    #end
    var008 = slot_no_003
    for slot_no_003 in range(var008, 64):
        random_x_007 = store_random_in_range(0,6)
        if random_x_007 == 0:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.regular_fighter)
        elif random_x_007 == 1:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.veteran_fighter)
        elif random_x_007 == 2:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.champion_fighter)
        elif random_x_007 == 3:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.sword_sister)
        elif random_x_007 == 4:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.hired_blade)
        else:
            troop_set_slot(trp.tournament_participants,slot_no_003,trp.mercenary_swordsman)
        #end
    #end


def get_num_tournament_participants():
    var001 = 0
    for var002 in range(0, 64):
        if troop_slot_ge(trp.tournament_participants,var002,0):
            var001 += 1
        #end
    #end
    reg0 = var001


def get_random_tournament_participant():
    get_num_tournament_participants()
    var001 = reg0
    random_x_002 = store_random_in_range(0,var001)
    var003 = 1
    for slot_no_004 in range(0, 64):
        if var003 == 1 and troop_slot_ge(trp.tournament_participants,slot_no_004,0):
            random_x_002 -= 1
            if random_x_002 < 0:
                var003 = 0
                troop_slot_005 = troop_get_slot(trp.tournament_participants,slot_no_004)
                troop_set_slot(trp.tournament_participants,slot_no_004,-1)
            #end
        #end
    #end
    reg0 = troop_slot_005


def add_tournament_participant(var001):
    var002 = 1
    for slot_no_003 in range(0, 64):
        if var002 == 1 and troop_slot_eq(trp.tournament_participants,slot_no_003,-1):
            troop_set_slot(trp.tournament_participants,slot_no_003,var001)
            var002 = 0
        #end
    #end


def get_random_tournament_team_amount_and_size():
    get_num_tournament_participants()
    var001 = reg0
    party_slot_002 = party_get_slot(_current_town,157)
    party_slot_002 += 1
    party_slot_003 = party_get_slot(_current_town,158)
    party_slot_003 += 1
    var004 = var001
    val_min(var004,party_slot_002)
    var005 = var001
    val_min(var005,party_slot_003)
    var006 = 1
    if var001 >= 32:
        var006 = 2
        val_min(var006,party_slot_003)
    #end
    var007 = 500
    for var008 in range(0, var007):
        random_x_009 = store_random_in_range(2,var004)
        random_x_010 = store_random_in_range(var006,var005)
        var011 = random_x_009 * random_x_010
        if var011 <= var001:
            var012 = var001 - var011
            if var012 != 1:
                var007 = 0
            #end
        #end
    #end
    if var007 > 0:
        random_x_009 = 2
        random_x_010 = 1
    #end
    reg0 = random_x_009
    reg1 = random_x_010


def get_troop_priority_point_for_tournament(troop_id_001):
    var002 = 0
    if troop_id_001 >= 0:
        var002 += 40000
        if troop_id_001 == trp.player:
            var002 += 80000
        #end
        if troop_is_hero(troop_id_001):
            var002 += 20000
        #end
        if troop_slot_eq(troop_id_001,2,5):
            var002 += 10000
        elif troop_slot_eq(troop_id_001,2,2):
            troop_slot_003 = troop_get_slot(troop_id_001,7)
            var002 += troop_slot_003
            var002 += 1000
        else:
            character_lvl_004 = store_character_level(troop_id_001)
            var002 += character_lvl_004
        #end
    #end
    reg0 = var002


def sort_tournament_participant_troops():
    for slot_no_001 in range(0, 63):
        var002 = slot_no_001 + 1
        for slot_no_003 in range(var002, 64):
            troop_slot_004 = troop_get_slot(trp.tournament_participants,slot_no_001)
            troop_slot_005 = troop_get_slot(trp.tournament_participants,slot_no_003)
            get_troop_priority_point_for_tournament(troop_slot_004)
            var006 = reg0
            get_troop_priority_point_for_tournament(troop_slot_005)
            var007 = reg0
            if var007 > var006:
                troop_set_slot(trp.tournament_participants,slot_no_001,troop_slot_005)
                troop_set_slot(trp.tournament_participants,slot_no_003,troop_slot_004)
            #end
        #end
    #end


def remove_tournament_participants_randomly(var001):
    for var002 in range(0, var001):
        var003 = 0
        for slot_no_004 in range(0, 64):
            troop_slot_005 = troop_get_slot(trp.tournament_participants,slot_no_004)
            if troop_slot_005 >= 0:
                character_lvl_006 = store_character_level(troop_slot_005)
                val_min(character_lvl_006,38)
                var007 = 40 - character_lvl_006
                var003 += var007
            #end
        #end
        random_x_008 = store_random_in_range(0,var003)
        var009 = 1
        for slot_no_004 in range(0, 64):
            if var009 == 1:
                troop_slot_005 = troop_get_slot(trp.tournament_participants,slot_no_004)
                if troop_slot_005 >= 0:
                    character_lvl_006 = store_character_level(troop_slot_005)
                    val_min(character_lvl_006,38)
                    var007 = 40 - character_lvl_006
                    random_x_008 -= var007
                    if random_x_008 < 0:
                        troop_set_slot(trp.tournament_participants,slot_no_004,-1)
                        var009 = 0
                    #end
                #end
            #end
        #end
    #end


def end_tournament_fight(var001):
    get_num_tournament_participants()
    var002 = reg0
    var003 = var002 / 2
    remove_tournament_participants_randomly(var003)
    var004 = _g_tournament_num_participants_for_fight
    var004 /= 2
    agent_no_005 = get_player_agent_no()
    agent_team_no_006 = agent_get_team(agent_no_005)
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent):
            troop_id_008 = agent_get_troop_id(cur_agent)
            if not is_between(troop_id_008,trp.town_1_arena_master,trp.town_1_armorer):
                agent_team_no_009 = agent_get_team(cur_agent)
                var010 = 0
                if var001 == 1 and agent_team_no_009 == agent_team_no_006:
                    var010 += 5000000
                #end
            #end
        #end
        agent_kill_count_011 = agent_get_kill_count(cur_agent,1)
        var012 = agent_kill_count_011 * 160000
        var010 += var012
        get_troop_priority_point_for_tournament(troop_id_008)
        var010 += reg0
        if cur_agent == agent_no_005 and var001 == 0:
            var013 = 1
            if agent_kill_count_011 >= 2:
                var013 = 0
            elif agent_kill_count_011 == 1 and _g_tournament_cur_tier <= 1:
                var013 = 0
            #end
            if var013 == 1:
                var010 = 0
            #end
        #end
        agent_set_slot(cur_agent,6,var010)
    #end
    for var014 in range(0, var004):
        var015 = 0
        agent_id_016 = -1
        for cur_agent in __all_agents__:
            if agent_is_human(cur_agent):
                agent_slot_017 = agent_get_slot(cur_agent,6)
                if agent_slot_017 > var015:
                    agent_id_016 = cur_agent
                    var015 = agent_slot_017
                #end
            #end
        #end
        agent_set_slot(agent_id_016,6,0)
        troop_id_008 = agent_get_troop_id(agent_id_016)
        add_tournament_participant(troop_id_008)
    #end
    _g_tournament_player_team_won = var001
    jump_to_menu(mnu.town_tournament)


def get_win_amount_for_tournament_bet():
    party_slot_001 = party_get_slot(_current_town,51)
    if _g_tournament_cur_tier == 0:
        var002 = 120
    elif _g_tournament_cur_tier == 1:
        var002 = 90
    elif _g_tournament_cur_tier == 2:
        var002 = 60
    elif _g_tournament_cur_tier == 3:
        var002 = 40
    elif _g_tournament_cur_tier == 4:
        var002 = 20
    else:
        var002 = 8
    #end
    var002 *= party_slot_001
    var002 /= 100
    var002 += 100
    reg0 = var002


def tournament_place_bet(gold_001):
    get_win_amount_for_tournament_bet()
    var002 = reg0
    var002 *= gold_001
    var002 /= 100
    var002 -= gold_001
    _g_tournament_bet_placed += gold_001
    _g_tournament_bet_win_amount += var002
    troop_remove_gold(trp.player,gold_001)
    _g_tournament_last_bet_tier = _g_tournament_cur_tier


def calculate_amount_of_cattle_can_be_stolen(party_id_001):
    get_max_skill_of_player_party(skl.looting)
    var002 = reg0
    var003 = var002 * 2
    party_count_fit_for_battle(p.main_party)
    var004 = reg0 + 10
    var004 /= 10
    var003 += var004
    party_slot_005 = party_get_slot(party_id_001,205)
    val_min(var003,party_slot_005)
    reg0 = var003


def draw_banner_to_region(troop_id_001, var002, var003, var004, var005, var006, var007, var008, var009, var010):
    var024_list1 = [
    3,
    2,
    ]
    var024_list1 = [
    3,
    1,
    ]
    var024_list1 = [
    3,
    2,
    ]
    var024_list1 = [
    3,
    1,
    ]
    var024_list1 = [
    3,
    2,
    ]
    var024_list1 = [
    3,
    1,
    ]
    var024_list1 = [
    3,
    2,
    ]
    var024_list1 = [
    3,
    1,
    ]
    var010_list1 = [
    3,
    2,
    ]
    troop_slot_011_list1 = [
    mesh.custom_banner_fg17,
    mesh.custom_banner_fg16,
    mesh.custom_banner_fg13,
    mesh.custom_banner_fg12,
    mesh.custom_banner_fg11,
    mesh.custom_banner_fg10,
    mesh.custom_banner_fg09,
    mesh.custom_banner_fg08,
    mesh.custom_banner_fg03,
    mesh.custom_banner_fg02,
    mesh.custom_banner_fg01,
    mesh.custom_banner_bg,
    ]
    troop_slot_011 = troop_get_slot(troop_id_001,91)
    troop_slot_011 += mesh.custom_banner_bg
    troop_slot_012 = troop_get_slot(troop_id_001,85)
    troop_slot_013 = troop_get_slot(troop_id_001,86)
    troop_slot_014 = troop_get_slot(troop_id_001,97)
    troop_slot_015 = troop_get_slot(troop_id_001,98)
    get_troop_custom_banner_num_positionings(troop_id_001)
    var016 = reg0
    troop_slot_015 %= var016
    init_position(2)
    position_set_x(2,var004)
    position_set_y(2,var005)
    var017 = 1
    convert_to_fixed_point(var017)
    position_set_z(2,var017)
    init_position(1)
    position_set_x(1,var002)
    position_set_y(1,var003)
    position_move_z(1,-20)
    init_position(3)
    position_set_x(3,var008)
    position_set_y(3,var008)
    position_set_z(3,var017)
    if troop_slot_011 in troop_slot_011_list1:
        cur_tableau_add_mesh_with_scale_and_vertex_color(troop_slot_011,1,2,0,troop_slot_012)
    else:
        cur_tableau_add_mesh_with_scale_and_vertex_color(troop_slot_011,1,3,0,troop_slot_012)
    #end
    position_move_z(1,-20)
    position_move_x(2,var004)
    position_move_y(2,var005)
    cur_tableau_add_mesh_with_scale_and_vertex_color(mesh.custom_banner_bg,1,2,0,troop_slot_013)
    var018 = var006
    val_min(var018,var007)
    val_min(var018,var009)
    get_custom_banner_charge_type_position_scale_color(trp.player,troop_slot_015)
    if var010 in var010_list1:
        var019 = 0
        if troop_slot_014 == 1:
            var019 = 1
        elif troop_slot_014 == 2 and troop_slot_015 == 1:
            var019 = 1
        elif troop_slot_014 == 3 and troop_slot_015 == 1:
            var019 = 1
        #end
        if var019 == 1:
            var003 += 30
        #end
    #end
    if troop_slot_014 >= 1:
        reg1 *= var018
        reg1 /= 10000
        pos_x_020 = position_get_x(0)
        pos_y_021 = position_get_y(0)
        pos_x_020 *= var006
        pos_y_021 *= var007
        pos_x_020 /= 10000
        pos_y_021 /= 10000
        pos_x_020 += var002
        pos_y_021 += var003
        position_set_x(0,pos_x_020)
        position_set_y(0,pos_y_021)
        var022 = reg1
        convert_to_fixed_point(var022)
        var023 = var022 * -1
        init_position(4)
        position_set_x(4,var022)
        position_set_y(4,var022)
        position_set_z(4,var022)
        var024 = reg0 / 256
        if var024 in var024_list1:
            position_set_x(4,var023)
        #end
        if var024 in var024_list1:
            position_set_y(4,var023)
        #end
        reg0 %= 256
        cur_tableau_add_mesh_with_scale_and_vertex_color(reg0,0,4,0,reg2)
    #end
    if troop_slot_014 >= 2:
        reg4 *= var018
        reg4 /= 10000
        pos_x_020 = position_get_x(1)
        pos_y_021 = position_get_y(1)
        pos_x_020 *= var006
        pos_y_021 *= var007
        pos_x_020 /= 10000
        pos_y_021 /= 10000
        pos_x_020 += var002
        pos_y_021 += var003
        position_set_x(1,pos_x_020)
        position_set_y(1,pos_y_021)
        var022 = reg4
        convert_to_fixed_point(var022)
        var023 = var022 * -1
        init_position(4)
        position_set_x(4,var022)
        position_set_y(4,var022)
        position_set_z(4,var022)
        var024 = reg3 / 256
        if var024 in var024_list1:
            position_set_x(4,var023)
        #end
        if var024 in var024_list1:
            position_set_y(4,var023)
        #end
        reg3 %= 256
        cur_tableau_add_mesh_with_scale_and_vertex_color(reg3,1,4,0,reg5)
    #end
    if troop_slot_014 >= 3:
        reg7 *= var018
        reg7 /= 10000
        pos_x_020 = position_get_x(2)
        pos_y_021 = position_get_y(2)
        pos_x_020 *= var006
        pos_y_021 *= var007
        pos_x_020 /= 10000
        pos_y_021 /= 10000
        pos_x_020 += var002
        pos_y_021 += var003
        position_set_x(2,pos_x_020)
        position_set_y(2,pos_y_021)
        var022 = reg7
        convert_to_fixed_point(var022)
        var023 = var022 * -1
        init_position(4)
        position_set_x(4,var022)
        position_set_y(4,var022)
        position_set_z(4,var022)
        var024 = reg6 / 256
        if var024 in var024_list1:
            position_set_x(4,var023)
        #end
        if var024 in var024_list1:
            position_set_y(4,var023)
        #end
        reg6 %= 256
        cur_tableau_add_mesh_with_scale_and_vertex_color(reg6,2,4,0,reg8)
    #end
    if troop_slot_014 >= 4:
        reg10 *= var018
        reg10 /= 10000
        pos_x_020 = position_get_x(3)
        pos_y_021 = position_get_y(3)
        pos_x_020 *= var006
        pos_y_021 *= var007
        pos_x_020 /= 10000
        pos_y_021 /= 10000
        pos_x_020 += var002
        pos_y_021 += var003
        position_set_x(3,pos_x_020)
        position_set_y(3,pos_y_021)
        var022 = reg10
        convert_to_fixed_point(var022)
        var023 = var022 * -1
        init_position(4)
        position_set_x(4,var022)
        position_set_y(4,var022)
        position_set_z(4,var022)
        var024 = reg9 / 256
        if var024 in var024_list1:
            position_set_x(4,var023)
        #end
        if var024 in var024_list1:
            position_set_y(4,var023)
        #end
        reg9 %= 256
        cur_tableau_add_mesh_with_scale_and_vertex_color(reg9,3,4,0,reg11)
    #end


def get_troop_custom_banner_num_positionings(troop_id_001):
    troop_slot_002 = troop_get_slot(troop_id_001,97)
    if troop_slot_002 == 1:
        var003 = 2
    elif troop_slot_002 == 2:
        var003 = 4
    elif troop_slot_002 == 3:
        var003 = 6
    else:
        var003 = 2
    #end
    reg0 = var003


def get_custom_banner_charge_type_position_scale_color(troop_id_001, var002):
    troop_slot_003 = troop_get_slot(troop_id_001,97)
    init_position(0)
    init_position(1)
    init_position(2)
    init_position(3)
    reg0 = troop_get_slot(troop_id_001,92)
    reg0 += mesh.custom_banner_charge_01
    reg2 = troop_get_slot(troop_id_001,87)
    reg3 = troop_get_slot(troop_id_001,93)
    reg3 += mesh.custom_banner_charge_01
    reg5 = troop_get_slot(troop_id_001,88)
    reg6 = troop_get_slot(troop_id_001,94)
    reg6 += mesh.custom_banner_charge_01
    reg8 = troop_get_slot(troop_id_001,89)
    reg9 = troop_get_slot(troop_id_001,95)
    reg9 += mesh.custom_banner_charge_01
    reg11 = troop_get_slot(troop_id_001,90)
    if troop_slot_003 == 1:
        if var002 == 0:
            reg1 = 100
        else:
            reg1 = 50
        #end
    elif troop_slot_003 == 2:
        if var002 == 0:
            position_set_y(0,25)
            position_set_y(1,-25)
            reg1 = 40
            reg4 = 40
        elif var002 == 1:
            position_set_x(0,-25)
            position_set_x(1,25)
            reg1 = 40
            reg4 = 40
        elif var002 == 2:
            position_set_x(0,-25)
            position_set_y(0,25)
            position_set_x(1,25)
            position_set_y(1,-25)
            reg1 = 50
            reg4 = 50
        else:
            position_set_x(0,-25)
            position_set_y(0,-25)
            position_set_x(1,25)
            position_set_y(1,25)
            reg1 = 50
            reg4 = 50
        #end
    elif troop_slot_003 == 3:
        if var002 == 0:
            position_set_y(0,33)
            position_set_y(2,-33)
            reg1 = 30
            reg4 = 30
            reg7 = 30
        elif var002 == 1:
            position_set_x(0,-33)
            position_set_x(2,33)
            reg1 = 30
            reg4 = 30
            reg7 = 30
        elif var002 == 2:
            position_set_x(0,-30)
            position_set_y(0,30)
            position_set_x(2,30)
            position_set_y(2,-30)
            reg1 = 35
            reg4 = 35
            reg7 = 35
        elif var002 == 3:
            position_set_x(0,-30)
            position_set_y(0,-30)
            position_set_x(2,30)
            position_set_y(2,30)
            reg1 = 35
            reg4 = 35
            reg7 = 35
        elif var002 == 4:
            position_set_x(0,-25)
            position_set_y(0,-25)
            position_set_y(1,25)
            position_set_x(2,25)
            position_set_y(2,-25)
            reg1 = 50
            reg4 = 50
            reg7 = 50
        else:
            position_set_x(0,-25)
            position_set_y(0,25)
            position_set_y(1,-25)
            position_set_x(2,25)
            position_set_y(2,25)
            reg1 = 50
            reg4 = 50
            reg7 = 50
        #end
    else:
        if var002 == 0:
            position_set_x(0,-25)
            position_set_y(0,25)
            position_set_x(1,25)
            position_set_y(1,25)
            position_set_x(2,-25)
            position_set_y(2,-25)
            position_set_x(3,25)
            position_set_y(3,-25)
            reg1 = 50
            reg4 = 50
            reg7 = 50
            reg10 = 50
        else:
            position_set_y(0,30)
            position_set_x(1,-30)
            position_set_x(2,30)
            position_set_y(3,-30)
            reg1 = 35
            reg4 = 35
            reg7 = 35
            reg10 = 35
        #end
    #end


def get_random_custom_banner(troop_id_001):
    random_x_002 = store_random_in_range(1,5)
    troop_set_slot(troop_id_001,97,random_x_002)
    random_x_003 = store_random_in_range(0,42)
    get_custom_banner_color_from_index(random_x_003)
    var004 = reg0
    troop_set_slot(troop_id_001,85,var004)
    var005 = 1
    for var006 in range(0, var005):
        random_x_003 = store_random_in_range(0,42)
        get_custom_banner_color_from_index(random_x_003)
        var007 = reg0
        if cf_check_color_visibility(var004,var007):
            troop_set_slot(troop_id_001,86,var007)
        else:
            var005 += 1
        #end
    #end
    var005 = 4
    var008 = 0
    for var006 in range(0, var005):
        random_x_003 = store_random_in_range(0,42)
        get_custom_banner_color_from_index(random_x_003)
        var009 = reg0
        if cf_check_color_visibility(var009,var004) and cf_check_color_visibility(var009,var007):
            slot_no_010 = var008 + 87
            troop_set_slot(troop_id_001,slot_no_010,var009)
            random_x_011 = store_random_in_range(mesh.custom_banner_charge_01,mesh.tableau_mesh_custom_banner)
            random_x_011 -= mesh.custom_banner_charge_01
            slot_no_010 = var008 + 92
            troop_set_slot(troop_id_001,slot_no_010,random_x_011)
            var008 += 1
        else:
            var005 += 1
        #end
    #end
    random_x_012 = store_random_in_range(mesh.custom_banner_bg,mesh.custom_banner_charge_01)
    random_x_012 -= mesh.custom_banner_bg
    troop_set_slot(troop_id_001,91,random_x_012)
    random_x_013 = store_random_in_range(mesh.custom_banner_01,mesh.custom_banner_bg)
    random_x_013 -= mesh.custom_banner_01
    troop_set_slot(troop_id_001,96,random_x_013)
    random_x_014 = store_random_in_range(0,4)
    troop_set_slot(troop_id_001,98,random_x_014)


def get_custom_banner_color_from_index(var001):
    var002 = 4278190080
    var003 = 0
    var004 = 0
    var005 = 0
    var006 = store_mod(var001,7)
    if var006 == 0:
        var005 = 255
    elif var006 == 1:
        var003 = 238
    elif var006 == 2:
        var003 = 251
        var004 = 172
    elif var006 == 3:
        var003 = 95
        var005 = 255
    elif var006 == 4:
        var003 = 5
        var004 = 68
    elif var006 == 5:
        var003 = 238
        var004 = 238
        var005 = 238
    else:
        var003 = 34
        var004 = 34
        var005 = 34
    #end
    var007 = var001 / 7
    var007 = 8 - var007
    var003 *= var007
    var003 /= 8
    var004 *= var007
    var004 /= 8
    var005 *= var007
    var005 /= 8
    var004 *= 256
    var003 *= 65536
    var002 += var005
    var002 += var004
    var002 += var003
    reg0 = var002


def cf_check_color_visibility(var001, var002):
    var003 = store_mod(var001,256)
    var004 = var001 / 256
    var004 %= 256
    var005 = var001 / 65536
    var005 %= 256
    var006 = store_mod(var002,256)
    var007 = var002 / 256
    var007 %= 256
    var008 = var002 / 65536
    var008 %= 256
    var009 = var005 - var008
    val_abs(var009)
    var010 = var004 - var007
    val_abs(var010)
    var011 = var003 - var006
    val_abs(var011)
    var012 = 0
    val_max(var012,var009)
    val_max(var012,var010)
    val_max(var012,var011)


def get_next_active_kingdom(var001):
    var002 = fac.kingdoms_end
    for var003 in range(fac.player_supporters_faction, var002):
        var001 += 1
        if var001 >= fac.kingdoms_end:
            var001 = fac.player_supporters_faction
        #end
        if faction_slot_eq(var001,21,0) and var001 != fac.player_supporters_faction:
            var002 = 0
        #end
    #end
    reg0 = var001


def remove_cattles_if_herd_is_close_to_party(party_id_001, var002):
    var003 = var002
    for cur_party in __all_parties__:
        if var003 > 0 and party_slot_eq(cur_party,0,17):
            distance_parties_005 = store_distance_to_party_from_party(cur_party,party_id_001)
            if distance_parties_005 < 3:
                var006 = 1
                if check_quest_active(qst.move_cattle_herd) and quest_slot_eq(qst.move_cattle_herd,8,cur_party):
                    var006 = 0
                #end
            #end
        #end
        if var006 == 1:
            party_count_companions_of_type(party_companions_of_type_007,cur_party,trp.cattle)
            if party_companions_of_type_007 <= var003:
                var008 = party_companions_of_type_007
                remove_party(cur_party)
            else:
                var008 = var003
                party_remove_members(cur_party,trp.cattle,var003)
            #end
        #end
        var003 -= var008
        if party_slot_eq(party_id_001,0,4):
            party_slot_009 = party_get_slot(party_id_001,205)
            party_slot_009 += var008
            party_set_slot(party_id_001,205,party_slot_009)
        #end
        reg3 = var008
        s1 = str_store_party_name_link(party_id_001)
        print("@You brought {reg3} heads of cattle to {s1}.")
        if _cheat_mode > 0:
            reg4 = party_slot_009
            print("@{!}Village now has {reg4}")
        #end
    #end
    reg0 = var002 - var003


def get_rumor_to_s61(var001):
    cur_hours_002 = store_current_hours()
    var003 = cur_hours_002 / 24
    var004 = 0
    var005 = 3
    for var006 in range(0, var005):
        var007 = var006 * 6781
        var007 += var001
        var008 = store_mod(var007,7)
        var007 += cur_hours_002
        if var008 == 0:
            if True:
                var009 = p.castle_1
                var009 -= p.town_1
                party_id_010 = store_mod(var007,var009)
                party_id_010 += p.town_1
                if party_slot_ge(party_id_010,156,1) and party_id_010 != _current_town:
                    s62 = str_store_party_name(party_id_010)
                    s61 = str_store_string("@I heard that there will be a tournament in {s62} soon.")
                    var004 = 1
                #end
            #end
        elif var008 == 1:
            if True:
                var009 = trp.knight_1_1_wife
                var009 -= trp.kingdom_1_lord
                troop_id_011 = store_mod(var007,var009)
                troop_id_011 += trp.kingdom_1_lord
                if is_between(troop_id_011,trp.npc1,trp.knight_1_1_wife):
                    troop_slot_012 = troop_get_slot(troop_id_011,52)
                    if troop_slot_012 > 0:
                        var013 = troop_slot_012 + gstr.gossip_about_character_default
                        s6 = str_store_troop_name(troop_id_011)
                        s61 = str_store_string(var013)
                        var004 = 1
                    #end
                #end
            #end
        elif var008 == 2:
            if True:
                var009 = itm.siege_supply
                var009 -= itm.spice
                var014 = var007 + var003
                var014 = store_mod(var014,var009)
                slot_no_015 = var014 + 250
                var014 += itm.spice
                var016 = 1000 * 3
                var016 /= 4
                var017 = -1
                for var018 in range(0, 10):
                    var009 = p.castle_1
                    var009 -= p.town_1
                    var019 = var007 + var018
                    party_id_010 = store_mod(var019,var009)
                    party_id_010 += p.town_1
                    if party_id_010 != _g_encountered_party:
                        party_slot_020 = party_get_slot(party_id_010,slot_no_015)
                        if party_slot_020 < var016:
                            var016 = party_slot_020
                            var017 = party_id_010
                        #end
                    #end
                #end
                if var017 >= 0:
                    s62 = str_store_item_name(var014)
                    s63 = str_store_party_name(var017)
                    s61 = str_store_string("@I heard that one can buy {s62} very cheap at {s63}.")
                    var004 = 1
                #end
            #end
        elif var008 == 3:
            if True:
                var009 = itm.siege_supply
                var009 -= itm.spice
                var014 = var007 + var003
                var014 = store_mod(var014,var009)
                slot_no_015 = var014 + 250
                var014 += itm.spice
                var021 = 1000 * 5
                var021 /= 4
                var022 = -1
                for var018 in range(0, 10):
                    var009 = p.castle_1
                    var009 -= p.town_1
                    var019 = var007 + var018
                    party_id_010 = store_mod(var019,var009)
                    party_id_010 += p.town_1
                    if party_id_010 != _g_encountered_party:
                        party_slot_020 = party_get_slot(party_id_010,slot_no_015)
                        if party_slot_020 > var021:
                            var021 = party_slot_020
                            var022 = party_id_010
                        #end
                    #end
                #end
                if var022 >= 0:
                    s62 = str_store_item_name(var014)
                    s63 = str_store_party_name(var022)
                    s61 = str_store_string("@I heard that they pay a very high price for {s62} at {s63}.")
                    var004 = 1
                #end
            #end
        #end
        if var004 > 0:
            var005 = 0
        #end
    #end
    reg0 = var004


def lord_comment_to_s43(troop_id_001, var002):
    troop_slot_003 = troop_get_slot(troop_id_001,52)
    if True:
        if troop_slot_003 == 8:
            troop_slot_003 = 6
        elif troop_slot_003 == 10:
            troop_slot_003 = 4
        elif troop_slot_003 == 9:
            troop_slot_003 = 6
        #end
    #end
    var004 = troop_slot_003 + var002
    s43 = str_store_string(var004)
    reg0 = var004


def add_log_entry(var001, var002, party_id_003, troop_id_004, var005):
    var001_list1 = [
    18,
    19,
    11,
    ]
    party_slot_006 = -1
    party_faction_007 = -1
    troop_faction_008 = -1
    if party_is_active(party_id_003,0):
        party_slot_006 = party_get_slot(party_id_003,7)
        party_faction_007 = store_faction_of_party(party_id_003)
    else:
        party_slot_006 = 0
        party_faction_007 = 0
    #end
    if is_between(troop_id_004,0,trp.local_merchant):
        troop_faction_008 = store_faction_of_troop(troop_id_004)
    else:
        troop_faction_008 = 0
    #end
    _num_log_entries += 1
    cur_hours_009 = store_current_hours()
    troop_set_slot(trp.log_array_entry_type,_num_log_entries,var001)
    troop_set_slot(trp.log_array_entry_time,_num_log_entries,cur_hours_009)
    troop_set_slot(trp.log_array_actor,_num_log_entries,var002)
    troop_set_slot(trp.log_array_center_object,_num_log_entries,party_id_003)
    troop_set_slot(trp.log_array_center_object_lord,_num_log_entries,party_slot_006)
    troop_set_slot(trp.log_array_center_object_faction,_num_log_entries,party_faction_007)
    troop_set_slot(trp.log_array_troop_object,_num_log_entries,troop_id_004)
    troop_set_slot(trp.log_array_troop_object_faction,_num_log_entries,troop_faction_008)
    troop_set_slot(trp.log_array_faction_object,_num_log_entries,var005)
    if _cheat_mode == 1:
        reg3 = _num_log_entries
        reg4 = var001
        print("@{!}Log entry {reg3}: type {reg4}")
        if party_id_003 > 0 and var001 != 3 and var001 != 5 and party_is_active(party_id_003):
            s4 = str_store_party_name(party_id_003)
            print("@{!}Center: {s4}")
        #end
        if troop_id_004 > 0 and var001 != 3 and var001 != 5:
            s4 = str_store_troop_name(troop_id_004)
            print("@{!}Troop: {s4}")
        #end
        if party_slot_006 > 0 and var001 != 3 and var001 != 5:
            s4 = str_store_troop_name(party_slot_006)
            print("@{!}Lord: {s4}")
        #end
    #end
    if var001 in var001_list1:
        if _cheat_mode == 1:
            print("@{!}Ally party is present")
        #end
        for trp_010 in range(trp.npc1, trp.knight_1_1_wife):
            party_count_companions_of_type(party_companions_of_type_011,p.collective_friends,trp_010)
            if party_companions_of_type_011 > 0:
                troop_set_slot(trp_010,9,_num_log_entries)
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(trp_010)
                    print("@{!}{s4} is present at event")
                #end
            #end
        #end
    #end


def get_relevant_comment_for_log_entry(slot_no_001):
    troop_slot_015_list1 = [
    5,
    2,
    3,
    ]
    troop_slot_015_list2 = [
    7,
    6,
    ]
    troop_slot_015_list1 = [
    5,
    3,
    ]
    troop_slot_015_list2 = [
    6,
    7,
    ]
    troop_slot_015_list2 = [
    5,
    3,
    ]
    troop_slot_015_list2 = [
    7,
    1,
    ]
    troop_slot_015_list2 = [
    5,
    2,
    ]
    troop_slot_015_list2 = [
    5,
    3,
    ]
    troop_slot_015_list2 = [
    5,
    3,
    ]
    troop_slot_015_list2 = [
    5,
    3,
    ]
    troop_slot_015_list2 = [
    1,
    3,
    ]
    troop_slot_015_list1 = [
    5,
    2,
    ]
    troop_slot_015_list2 = [
    5,
    3,
    ]
    troop_slot_015_list1 = [
    7,
    6,
    ]
    troop_slot_002 = troop_get_slot(trp.log_array_entry_type,slot_no_001)
    troop_slot_003 = troop_get_slot(trp.log_array_entry_time,slot_no_001)
    troop_slot_004 = troop_get_slot(trp.log_array_actor,slot_no_001)
    troop_slot_005 = troop_get_slot(trp.log_array_center_object,slot_no_001)
    troop_slot_006 = troop_get_slot(trp.log_array_center_object_lord,slot_no_001)
    troop_slot_007 = troop_get_slot(trp.log_array_center_object_faction,slot_no_001)
    troop_slot_008 = troop_get_slot(trp.log_array_troop_object,slot_no_001)
    troop_slot_009 = troop_get_slot(trp.log_array_troop_object_faction,slot_no_001)
    troop_slot_010 = troop_get_slot(trp.log_array_faction_object,slot_no_001)
    var011 = 0
    var012 = -1
    var013 = -1
    var014 = 0
    troop_slot_015 = troop_get_slot(_g_talk_troop,52)
    cur_hours_016 = store_current_hours()
    var017 = cur_hours_016 - troop_slot_003
    faction_relation_018 = 0
    if _players_kingdom > 0:
        faction_relation_018 = store_relation(_players_kingdom,troop_slot_009)
    #end
    if _cheat_mode == -1:
        if True:
            reg5 = slot_no_001
            reg6 = troop_slot_002
            reg8 = troop_slot_003
            if _players_kingdom > 0:
                if troop_slot_009 > 0:
                    reg7 = faction_relation_018
                    print("@{!}Event #{reg5} - type {reg6} - time {reg8}: player's kingdom relation to troop object = {reg7}")
                elif troop_slot_007 > 0:
                    reg7 = faction_relation_018
                    print("@{!}Event #{reg5} - type {reg6} - time {reg8}: player's kingdom relation to center object faction = {reg7}")
                elif troop_slot_010 > 0:
                    reg7 = faction_relation_018
                    print("@{!}Event #{reg5} - type {reg6} - time {reg8}: player's kingdom relation to faction object = {reg7}")
                else:
                    print("@{!}Event #{reg5} - type {reg6} - time {reg8}. No relevant kingdom relation")
                #end
            #end
        else:
            print("@{!}Event #{reg5} - type {reg6} - time {reg8}. Player unaffiliated")
        #end
    #end
    if troop_slot_002 == 45 and _g_talk_troop_met == 0 and is_between(_g_talk_troop_faction_relation,-5,5) and is_between(_g_talk_troop_relation,-5,5):
        var011 = 25
        troop_slot_019 = troop_get_slot(trp.player,7)
        troop_slot_020 = troop_get_slot(trp.player,13)
        random_x_021 = store_random_in_range(100,200)
        if troop_slot_015 == 0 and _players_kingdom > 0:
            var012 = gstr.comment_intro_liege_affiliated
            if faction_slot_eq(_players_kingdom,11,trp.player):
                var012 = gstr.comment_intro_liege_affiliated_to_player
            #end
        elif _character_gender == 1:
            troop_get_romantic_chemistry_with_troop(_g_talk_troop,trp.player)
            var022 = reg0
            random_x_023 = store_random_in_range(0,2)
            if random_x_023 == 0 or var022 > 10:
                if troop_slot_019 > random_x_021 or _g_disable_condescending_comments == 1:
                    var012 = gstr.comment_intro_female_famous_liege
                    var012 += troop_slot_015
                elif var022 >= 9:
                    var012 = gstr.comment_intro_female_admiring_liege
                    var012 += troop_slot_015
                elif troop_slot_020 > 0:
                    var012 = gstr.comment_intro_female_noble_liege
                    var012 += troop_slot_015
                else:
                    var012 = gstr.comment_intro_female_common_liege
                    var012 += troop_slot_015
                #end
            #end
            if var012 == gstr.comment_intro_female_common_badtempered:
                var013 = gstr.rejoinder_intro_female_common_badtempered
            elif var012 == gstr.comment_intro_female_noble_pitiless:
                var013 = gstr.rejoinder_intro_female_noble_pitiless
            elif var012 == gstr.comment_intro_female_common_pitiless:
                var013 = gstr.rejoinder_intro_female_common_pitiless
            elif var012 == gstr.comment_intro_female_noble_sadistic:
                var013 = gstr.rejoinder_intro_female_noble_sadistic
            elif var012 == gstr.comment_intro_female_common_sadistic:
                var013 = gstr.rejoinder_intro_female_common_sadistic
            elif var012 == gstr.comment_intro_female_common_upstanding:
                var013 = gstr.rejoinder_intro_female_common_upstanding
            elif var012 == gstr.comment_intro_female_noble_upstanding:
                var013 = gstr.rejoinder_intro_female_noble_upstanding
            elif var012 == gstr.comment_intro_female_common_martial:
                var013 = gstr.rejoinder_intro_female_common_martial
            elif var012 == gstr.comment_intro_female_sadistic_admiring:
                var013 = gstr.rejoinder_intro_female_sadistic_admiring
            elif var012 == gstr.comment_intro_female_badtempered_admiring:
                var013 = gstr.rejoinder_intro_female_badtempered_admiring
            elif var012 == gstr.comment_intro_female_pitiless_admiring:
                var013 = gstr.rejoinder_intro_female_pitiless_admiring
            #end
        else:
            if troop_slot_019 > random_x_021:
                var012 = gstr.comment_intro_famous_liege
                var012 += troop_slot_015
            elif troop_slot_020 > 0:
                var012 = gstr.comment_intro_noble_liege
                var012 += troop_slot_015
                if var012 == gstr.comment_intro_noble_sadistic:
                    var013 = gstr.rejoinder_intro_noble_sadistic
                #end
            else:
                var012 = gstr.comment_intro_common_liege
                var012 += troop_slot_015
            #end
        #end
    elif troop_slot_002 == 1 and troop_slot_004 == trp.player:
        if troop_slot_006 == _g_talk_troop:
            var011 = 200
            var014 = -1
            var012 = gstr.comment_you_raided_my_village_default
            if _g_talk_troop_faction_relation < -5 and troop_slot_015 == 6 or troop_slot_015 == 7:
                var012 = gstr.comment_you_raided_my_village_enemy_benevolent
            elif _g_talk_troop_faction_relation < -5 and troop_slot_015 == 4 or troop_slot_015 == 3:
                var012 = gstr.comment_you_raided_my_village_enemy_coldblooded
            elif _g_talk_troop_faction_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_raided_my_village_enemy_spiteful
            elif _g_talk_troop_faction_relation < -5:
                var012 = gstr.comment_you_raided_my_village_enemy
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_raided_my_village_unfriendly_spiteful
            elif _g_talk_troop_relation > 5:
                var012 = gstr.comment_you_raided_my_village_friendly
            #end
        #end
    elif troop_slot_002 == 2 and troop_slot_004 == trp.player:
        if troop_slot_006 == _g_talk_troop:
            var011 = 30
            var014 = -1
            var012 = gstr.comment_you_robbed_my_village_default
            if _g_talk_troop_faction_relation < -5 and troop_slot_015 == 4 or troop_slot_015 == 3:
                var012 = gstr.comment_you_robbed_my_village_enemy_coldblooded
            elif _g_talk_troop_faction_relation < -5:
                var012 = gstr.comment_you_robbed_my_village_enemy
            elif _g_talk_troop_relation > 5 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_robbed_my_village_friendly_spiteful
            elif _g_talk_troop_relation > 5:
                var012 = gstr.comment_you_robbed_my_village_friendly
            #end
        #end
    elif troop_slot_002 == 3 and troop_slot_004 == trp.player and troop_slot_010 == _g_talk_troop_faction and troop_slot_005 == -1 and troop_slot_008 == -1 and faction_slot_eq(_g_talk_troop_faction,11,_g_talk_troop):
        var011 = 30
        var014 = -1
        var012 = gstr.comment_you_accosted_my_caravan_default
        if _g_talk_troop_faction_relation < -5:
            var012 = gstr.comment_you_accosted_my_caravan_enemy
        #end
    elif troop_slot_002 == 4 and troop_slot_004 == trp.player:
        if troop_slot_006 == _g_talk_troop:
            var011 = 40
            var014 = 0
            if troop_slot_015 in troop_slot_015_list1:
                var012 = gstr.comment_you_helped_villagers_benevolent
                var014 = 1
            elif _g_talk_troop_relation > 5 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_helped_villagers_friendly_cruel
                var014 = -1
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_helped_villagers_unfriendly_spiteful
                var014 = -1
            elif _g_talk_troop_relation > 5:
                var012 = gstr.comment_you_helped_villagers_friendly
            elif troop_slot_015 in troop_slot_015_list2:
                var012 = gstr.comment_you_helped_villagers_cruel
                var014 = -1
            else:
                var012 = gstr.comment_you_helped_villagers_default
            #end
        #end
    elif troop_slot_002 == 10:
        if troop_slot_006 == _g_talk_troop:
            party_faction_024 = store_faction_of_party(troop_slot_005)
            if party_faction_024 == _players_kingdom and _g_talk_troop_faction != _players_kingdom and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_captured_my_castle_enemy_spiteful
                var011 = 200
            elif troop_slot_006 == _g_talk_troop:
                party_faction_024 = store_faction_of_party(troop_slot_005)
                if party_faction_024 == _players_kingdom and _g_talk_troop_faction != _players_kingdom and troop_slot_015 == 1 or troop_slot_015 == 6:
                    var012 = gstr.comment_you_captured_my_castle_enemy_chivalrous
                    var011 = 200
                elif troop_slot_006 == _g_talk_troop:
                    party_faction_024 = store_faction_of_party(troop_slot_005)
                    if party_faction_024 == _players_kingdom and _g_talk_troop_faction != _players_kingdom:
                        var012 = gstr.comment_you_captured_my_castle_enemy
                        var011 = 200
                    elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_015 == 2 or troop_slot_015 == 5:
                        var012 = gstr.comment_you_captured_a_castle_allied_spiteful
                        var011 = 75
                    elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and _g_talk_troop_relation > 5:
                        var012 = gstr.comment_you_captured_a_castle_allied_friendly
                        var011 = 75
                    elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
                        var012 = gstr.comment_you_captured_a_castle_allied_unfriendly_spiteful
                        var011 = 75
                    elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and _g_talk_troop_relation < -5:
                        var012 = gstr.comment_you_captured_a_castle_allied_unfriendly
                        var011 = 75
                    elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0:
                        var012 = gstr.comment_you_captured_a_castle_allied
                        var011 = 75
                    #end
                #end
            #end
        #end
    elif troop_slot_002 == 24 and _players_kingdom == _g_talk_troop_faction and faction_slot_eq(_g_talk_troop_faction,11,_g_talk_troop):
        var012 = gstr.comment_you_claimed_the_throne_1_player_liege
        var011 = 500
        if _g_talk_troop_relation < -10:
            pass
        elif troop_slot_002 == 25 and _players_kingdom == _g_talk_troop_faction and faction_slot_eq(_g_talk_troop_faction,11,_g_talk_troop):
            var012 = gstr.comment_you_claimed_the_throne_2_player_liege
            var011 = 500
            if _g_talk_troop_relation < -10:
                pass
            elif troop_slot_002 == 22 and troop_slot_004 == trp.player and troop_slot_ge(troop_slot_008,52,8):
                if troop_slot_015 in troop_slot_015_list1:
                    var012 = gstr.comment_you_enfiefed_a_commoner_nasty
                    var011 = 100
                    var014 = -3
                elif troop_slot_015 == 7:
                    var012 = gstr.comment_you_enfiefed_a_commoner_hesitant
                    var011 = 100
                    var014 = -2
                elif troop_slot_015 in troop_slot_015_list2:
                    var012 = gstr.comment_you_enfiefed_a_commoner_derisive
                    var011 = 100
                    var014 = -4
                #end
            #end
        #end
    elif troop_slot_002 == 11 or troop_slot_002 == 17 and troop_slot_eq(_g_talk_troop,9,slot_no_001):
        if _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_we_defeated_a_lord_unfriendly_spiteful
            var011 = 150
        elif _g_talk_troop_relation < -5:
            var012 = gstr.comment_we_defeated_a_lord_unfriendly
            var011 = 150
        elif troop_slot_015 in troop_slot_015_list2:
            var012 = gstr.comment_we_defeated_a_lord_cruel
            var011 = 150
        elif troop_slot_015 == 2:
            var012 = gstr.comment_we_defeated_a_lord_cruel
            var011 = 150
        elif troop_slot_015 == 7:
            var012 = gstr.comment_we_defeated_a_lord_upstanding
            var011 = 150
        else:
            var012 = gstr.comment_we_defeated_a_lord_default
            var011 = 150
        #end
    elif troop_slot_002 == 10 or troop_slot_002 == 18 and troop_slot_eq(_g_talk_troop,9,slot_no_001):
        if _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_we_fought_in_siege_unfriendly_spiteful
            var011 = 150
        elif _g_talk_troop_relation < -5:
            var012 = gstr.comment_we_fought_in_siege_unfriendly
            var011 = 150
        elif troop_slot_015 in troop_slot_015_list2:
            var012 = gstr.comment_we_fought_in_siege_cruel
            var011 = 150
            var014 = 1
        elif troop_slot_015 == 2:
            var012 = gstr.comment_we_fought_in_siege_quarrelsome
            var011 = 150
            var014 = 1
        elif troop_slot_015 == 7:
            var012 = gstr.comment_we_fought_in_siege_upstanding
            var011 = 150
            var014 = 1
        elif troop_slot_015 == 1:
            var012 = gstr.comment_we_fought_in_siege_default
            var011 = 150
            var014 = 2
        elif faction_slot_eq(_players_kingdom,11,_g_talk_troop):
            var012 = gstr.comment_we_fought_in_siege_default
            var011 = 150
            var014 = 1
        else:
            var012 = gstr.comment_we_fought_in_siege_default
            var011 = 150
            var014 = 1
        #end
    elif troop_slot_002 == 20:
        if troop_slot_008 == _g_talk_troop and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_give_castle_in_my_control
            var011 = 200
        elif troop_slot_008 == _g_talk_troop and troop_slot_015 == 1 or troop_slot_015 == 6:
            var012 = gstr.comment_you_give_castle_in_my_control
            var011 = 200
        elif troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_you_give_castle_in_my_control
            var011 = 200
        #end
    elif troop_slot_002 == 19 and troop_slot_eq(_g_talk_troop,9,slot_no_001):
        if _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_we_fought_in_major_battle_unfriendly_spiteful
            var011 = 150
        elif _g_talk_troop_relation < -5:
            var012 = gstr.comment_we_fought_in_major_battle_unfriendly
            var011 = 150
        elif troop_slot_015 in troop_slot_015_list2:
            var012 = gstr.comment_we_fought_in_major_battle_cruel
            var011 = 150
            var014 = 1
        elif troop_slot_015 == 2:
            var012 = gstr.comment_we_fought_in_major_battle_cruel
            var011 = 150
            var014 = 1
        elif troop_slot_015 == 7:
            var012 = gstr.comment_we_fought_in_major_battle_upstanding
            var011 = 150
            var014 = 1
        elif faction_slot_eq(_players_kingdom,11,_g_talk_troop):
            var012 = gstr.comment_we_fought_in_major_battle_default
            var011 = 150
            var014 = 1
        elif troop_slot_015 == 1:
            var012 = gstr.comment_we_fought_in_major_battle_default
            var011 = 150
            var014 = 2
        else:
            var012 = gstr.comment_we_fought_in_major_battle_default
            var011 = 150
            var014 = 1
        #end
    elif troop_slot_002 == 35:
        if troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_player_suggestion_succeeded
            var011 = 200
            var014 = 3
        #end
    elif troop_slot_002 == 36:
        if troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_player_suggestion_failed
            var011 = 200
            var014 = -5
        #end
    elif troop_slot_002 == 11:
        if troop_slot_008 == _g_talk_troop and troop_slot_015 == 1 or troop_slot_015 == 6:
            var012 = gstr.comment_you_defeated_me_enemy_chivalrous
            var011 = 200
        elif troop_slot_008 == _g_talk_troop and troop_slot_015 == 5 or troop_slot_015 == 2:
            var012 = gstr.comment_you_defeated_me_enemy_spiteful
            var011 = 200
        elif troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_you_defeated_me_enemy
            var011 = 200
        elif troop_slot_009 == _g_talk_troop_faction and troop_slot_015 == 7 or troop_slot_015 == 4:
            var012 = gstr.comment_you_defeated_my_friend_enemy_pragmatic
            var011 = 85
        elif troop_slot_009 == _g_talk_troop_faction and troop_slot_015 == 1 or troop_slot_015 == 6:
            var012 = gstr.comment_you_defeated_my_friend_enemy_chivalrous
            var011 = 85
        elif troop_slot_009 == _g_talk_troop_faction and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_defeated_my_friend_enemy_spiteful
            var011 = 85
        elif troop_slot_009 == _g_talk_troop_faction:
            var012 = gstr.comment_you_defeated_my_friend_enemy
            var011 = 85
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and faction_slot_eq(_players_kingdom,11,_g_talk_troop):
            var012 = gstr.comment_you_defeated_a_lord_allied_liege
            var011 = 150
            var014 = 1
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_defeated_a_lord_allied_unfriendly_spiteful
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_defeated_a_lord_allied_spiteful
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and _g_talk_troop_relation < -5 and troop_slot_015 == 7 or troop_slot_015 == 1:
            var012 = gstr.comment_you_defeated_a_lord_allied_unfriendly_chivalrous
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0:
            var012 = gstr.comment_you_defeated_a_lord_allied
            var011 = 65
        #end
    elif troop_slot_002 == 11:
        if troop_slot_008 == _g_talk_troop and troop_slot_015 == 1 or troop_slot_015 == 6:
            var012 = gstr.comment_you_defeated_me_enemy_chivalrous
            var011 = 200
        elif troop_slot_008 == _g_talk_troop and troop_slot_015 == 5 or troop_slot_015 == 2:
            var012 = gstr.comment_you_defeated_me_enemy_spiteful
            var011 = 200
        elif troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_you_defeated_me_enemy
            var011 = 200
        elif troop_slot_009 == _g_talk_troop_faction and troop_slot_015 == 7 or troop_slot_015 == 4:
            var012 = gstr.comment_you_defeated_my_friend_enemy_pragmatic
            var011 = 85
        elif troop_slot_009 == _g_talk_troop_faction and troop_slot_015 == 1 or troop_slot_015 == 6:
            var012 = gstr.comment_you_defeated_my_friend_enemy_chivalrous
            var011 = 85
        elif troop_slot_009 == _g_talk_troop_faction and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_defeated_my_friend_enemy_spiteful
            var011 = 85
        elif troop_slot_009 == _g_talk_troop_faction:
            var012 = gstr.comment_you_defeated_my_friend_enemy
            var011 = 85
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and faction_slot_eq(_players_kingdom,11,_g_talk_troop):
            var012 = gstr.comment_you_defeated_a_lord_allied_liege
            var011 = 70
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_defeated_a_lord_allied_unfriendly_spiteful
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_defeated_a_lord_allied_spiteful
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and _g_talk_troop_relation < -5 and troop_slot_015 == 7 or troop_slot_015 == 1:
            var012 = gstr.comment_you_defeated_a_lord_allied_unfriendly_chivalrous
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0:
            var012 = gstr.comment_you_defeated_a_lord_allied
            var011 = 65
        #end
    elif troop_slot_002 == 17 and troop_slot_008 != _g_talk_troop and troop_slot_009 == _g_talk_troop_faction:
        if _g_talk_troop_relation < -5 and troop_slot_015 == 7 or troop_slot_015 == 1:
            var012 = gstr.comment_you_helped_my_ally_unfriendly_chivalrous
            var011 = 65
            var014 = 2
        elif _g_talk_troop_relation < -5:
            var012 = gstr.comment_you_helped_my_ally_unfriendly
            var011 = 0
        elif troop_slot_015 == 0:
            var012 = gstr.comment_you_helped_my_ally_liege
            var011 = 65
            var014 = 3
        elif _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_helped_my_ally_unfriendly_spiteful
            var011 = 65
        elif troop_slot_015 in troop_slot_015_list2:
            var012 = gstr.comment_you_helped_my_ally_spiteful
            var011 = 65
        elif troop_slot_015 in troop_slot_015_list2:
            var012 = gstr.comment_you_helped_my_ally_chivalrous
            var011 = 65
            var014 = 2
        elif troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_you_helped_my_ally_default
        #end
    elif troop_slot_002 == 14 and troop_slot_eq(_g_talk_troop,9,slot_no_001):
        if _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_we_were_defeated_unfriendly_spiteful
            var011 = 150
        elif _g_talk_troop_relation < -5:
            var012 = gstr.comment_we_were_defeated_unfriendly
            var011 = 150
        elif troop_slot_015 in troop_slot_015_list2:
            var012 = gstr.comment_we_were_defeated_cruel
            var011 = 150
        else:
            var012 = gstr.comment_we_were_defeated_default
            var011 = 150
        #end
    elif troop_slot_002 == 14:
        if troop_slot_008 == _g_talk_troop and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_i_defeated_you_enemy_spiteful
            var011 = 200
        elif troop_slot_008 == _g_talk_troop and troop_slot_015 == 1:
            var012 = gstr.comment_i_defeated_you_enemy_chivalrous
            var011 = 200
        elif troop_slot_008 == _g_talk_troop and troop_slot_015 == 6 or troop_slot_015 == 7:
            var012 = gstr.comment_i_defeated_you_enemy_benevolent
            var011 = 200
        elif troop_slot_008 == _g_talk_troop and troop_slot_015 == 3 or troop_slot_015 == 4:
            var012 = gstr.comment_i_defeated_you_enemy_coldblooded
            var011 = 200
        elif troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_i_defeated_you_enemy
            var011 = 200
        elif troop_slot_008 == _g_talk_troop:
            var012 = gstr.comment_i_defeated_you_enemy
            var011 = 200
        elif _players_kingdom == _g_talk_troop_faction and troop_slot_015 == 2 or troop_slot_015 == 5 and _g_talk_troop_relation > 5:
            var012 = gstr.comment_you_were_defeated_allied_friendly_spiteful
            var011 = 80
        elif _players_kingdom == _g_talk_troop_faction and troop_slot_015 == 3 or troop_slot_015 == 5 and _g_talk_troop_relation < -5:
            var012 = gstr.comment_you_were_defeated_allied_unfriendly_cruel
            var011 = 80
        elif _players_kingdom == _g_talk_troop_faction and troop_slot_015 == 2 or troop_slot_015 == 5 and _g_talk_troop_relation <= 5:
            var012 = gstr.comment_you_were_defeated_allied_spiteful
            var011 = 80
        elif _players_kingdom == _g_talk_troop_faction and troop_slot_015 == 3:
            var012 = gstr.comment_you_were_defeated_allied_pitiless
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and troop_slot_015 == 7 and _g_talk_troop_relation < -15:
            var012 = gstr.comment_you_were_defeated_allied_unfriendly_upstanding
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction and _g_talk_troop_relation < -10:
            var012 = gstr.comment_you_were_defeated_allied_unfriendly
            var011 = 65
        elif _players_kingdom == _g_talk_troop_faction:
            var012 = gstr.comment_you_were_defeated_allied
            var011 = 65
        #end
    elif troop_slot_002 == 15 and troop_slot_eq(_g_talk_troop,9,slot_no_001):
        if _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_abandoned_us_unfriendly_spiteful
            var011 = 150
            var014 = -5
        elif _g_talk_troop_relation < -5 and troop_slot_015 == 3:
            var012 = gstr.comment_you_abandoned_us_unfriendly_pitiless
            var011 = 150
            var014 = -5
        elif _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_abandoned_us_spiteful
            var014 = -5
        elif troop_slot_015 == 1:
            var012 = gstr.comment_you_abandoned_us_chivalrous
            var011 = 150
            var014 = -2
        elif troop_slot_015 in troop_slot_015_list2:
            var012 = gstr.comment_you_abandoned_us_benefitofdoubt
            var011 = 150
            var014 = -1
        else:
            var012 = gstr.comment_you_abandoned_us_default
            var011 = 150
            var014 = -2
        #end
    elif troop_slot_002 == 15 or troop_slot_002 == 16 and troop_slot_008 == _g_talk_troop:
        if _cheat_mode == 1:
            reg7 = var017
            print("@{!}Elapsed hours: {reg7}")
        #end
        if var017 > 2:
            if troop_slot_015 in troop_slot_015_list1:
                var012 = gstr.comment_you_ran_from_me_enemy_spiteful
                var011 = 25
            elif troop_slot_015 == 1:
                var012 = gstr.comment_you_ran_from_me_enemy_chivalrous
                var011 = 25
            elif troop_slot_015 in troop_slot_015_list2:
                var012 = gstr.comment_you_ran_from_me_enemy_benevolent
                var011 = 25
            elif troop_slot_015 == 4:
                var012 = gstr.comment_you_ran_from_me_enemy_coldblooded
                var011 = 25
            else:
                var012 = gstr.comment_you_ran_from_me_enemy
                var011 = 25
            #end
        #end
    elif troop_slot_002 == 16:
        if _players_kingdom == _g_talk_troop_faction and troop_slot_008 != _g_talk_troop and _g_talk_troop_relation < 5 and troop_slot_015 == 1:
            var012 = gstr.comment_you_ran_from_foe_allied_chivalrous
            var011 = 80
            var014 = -3
        elif _players_kingdom == _g_talk_troop_faction and troop_slot_008 != _g_talk_troop and troop_slot_015 == 7:
            var012 = gstr.comment_you_ran_from_foe_allied_upstanding
            var011 = 80
            var014 = -1
        elif _players_kingdom == _g_talk_troop_faction and troop_slot_008 != _g_talk_troop and _g_talk_troop_relation < 5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_ran_from_foe_allied_spiteful
            var011 = 80
        #end
    elif troop_slot_002 == 13:
        if troop_slot_008 == _g_talk_troop and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_let_me_go_spiteful
            var011 = 300
            var014 = -15
        elif troop_slot_008 == _g_talk_troop and _g_talk_troop_faction_relation >= 0:
            var012 = gstr.comment_you_let_me_go_default
            var011 = 300
            var014 = 2
        elif troop_slot_008 == _g_talk_troop and _g_talk_troop_faction_relation < 0 and troop_slot_015 == 1 or troop_slot_015 == 7:
            var014 = 5
            var011 = 300
            var012 = gstr.comment_you_let_me_go_enemy_chivalrous
        elif troop_slot_008 == _g_talk_troop and _g_talk_troop_faction_relation < 0 and troop_slot_015 == 3 or troop_slot_015 == 4:
            var011 = 300
            var012 = gstr.comment_you_let_me_go_enemy_coldblooded
        elif troop_slot_008 == _g_talk_troop and _g_talk_troop_faction_relation < 0:
            var011 = 300
            var012 = gstr.comment_you_let_me_go_enemy
            var014 = 1
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_008 != _g_talk_troop and troop_slot_015 == 1 or troop_slot_015 == 6:
            var012 = gstr.comment_you_let_go_a_lord_allied_chivalrous
            var011 = 80
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_008 != _g_talk_troop and troop_slot_015 == 7:
            var012 = gstr.comment_you_let_go_a_lord_allied_upstanding
            var011 = 80
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_008 != _g_talk_troop and troop_slot_015 == 4 or troop_slot_015 == 3:
            var012 = gstr.comment_you_let_go_a_lord_allied_coldblooded
            var011 = 80
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_008 != _g_talk_troop and _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
            var012 = gstr.comment_you_let_go_a_lord_allied_unfriendly_spiteful
            var011 = 80
        elif _players_kingdom == _g_talk_troop_faction and faction_relation_018 < 0 and troop_slot_008 != _g_talk_troop:
            var012 = gstr.comment_you_let_go_a_lord_allied
            var011 = 80
        #end
    elif troop_slot_002 == 21 and troop_slot_004 == trp.player:
        if troop_slot_010 == _g_talk_troop_faction and troop_slot_008 != _g_talk_troop and troop_slot_010 == _players_kingdom:
            var011 = 200
            if _g_talk_troop_relation < -5 and troop_slot_015 == 1:
                var012 = gstr.comment_pledged_allegiance_allied_martial_unfriendly
            elif troop_slot_015 == 1:
                var012 = gstr.comment_pledged_allegiance_allied_martial
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 2:
                var012 = gstr.comment_pledged_allegiance_allied_quarrelsome_unfriendly
            elif troop_slot_015 == 2:
                var012 = gstr.comment_pledged_allegiance_allied_quarrelsome
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 3:
                var012 = gstr.comment_pledged_allegiance_allied_selfrighteous_unfriendly
            elif troop_slot_015 == 3:
                var012 = gstr.comment_pledged_allegiance_allied_selfrighteous
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 4:
                var012 = gstr.comment_pledged_allegiance_allied_cunning_unfriendly
            elif troop_slot_015 == 4:
                var012 = gstr.comment_pledged_allegiance_allied_cunning
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 5:
                var012 = gstr.comment_pledged_allegiance_allied_debauched_unfriendly
            elif troop_slot_015 == 5:
                var012 = gstr.comment_pledged_allegiance_allied_debauched
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 6:
                var012 = gstr.comment_pledged_allegiance_allied_goodnatured_unfriendly
            elif troop_slot_015 == 6:
                var012 = gstr.comment_pledged_allegiance_allied_goodnatured
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 7:
                var012 = gstr.comment_pledged_allegiance_allied_upstanding_unfriendly
            elif troop_slot_015 == 7:
                var012 = gstr.comment_pledged_allegiance_allied_upstanding
            #end
        #end
    elif troop_slot_002 == 22 and troop_slot_008 == trp.player:
        if troop_slot_010 == _g_talk_troop_faction and troop_slot_004 != _g_talk_troop and troop_slot_010 == _players_kingdom:
            var011 = 110
            if _g_talk_troop_relation > 5 and troop_slot_015 == 3 or troop_slot_015 == 5:
                var012 = gstr.comment_our_king_granted_you_a_fief_allied_friendly_cruel
            elif _g_talk_troop_relation > 5 and troop_slot_015 == 2 or troop_slot_015 == 4:
                var012 = gstr.comment_our_king_granted_you_a_fief_allied_friendly_cynical
            elif _g_talk_troop_relation > 5:
                var012 = gstr.comment_our_king_granted_you_a_fief_allied_friendly
            elif is_between(_g_talk_troop_relation,-5,5) and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_our_king_granted_you_a_fief_allied_spiteful
                var014 = -2
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 7:
                var012 = gstr.comment_our_king_granted_you_a_fief_allied_unfriendly_upstanding
            elif _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_our_king_granted_you_a_fief_allied_unfriendly_spiteful
            else:
                var012 = gstr.comment_our_king_granted_you_a_fief_allied
            #end
        #end
    elif troop_slot_002 == 23 and troop_slot_004 == trp.player:
        if troop_slot_010 == _g_talk_troop_faction and troop_slot_008 != _g_talk_troop:
            if _g_talk_troop_faction_relation >= 0 and _g_talk_troop_faction != _players_kingdom:
                var011 = 180
                if _g_talk_troop_relation > 5:
                    var012 = gstr.comment_you_renounced_your_alliegance_friendly
                elif _g_talk_troop_relation >= 0 and troop_slot_015 == 6:
                    var012 = gstr.comment_you_renounced_your_alliegance_friendly
                else:
                    var012 = gstr.comment_you_renounced_your_alliegance_default
                #end
            elif _g_talk_troop_faction_relation < 0:
                var011 = 300
                if _g_talk_troop_relation >= 0 and troop_slot_015 == 3 or troop_slot_015 == 5:
                    var012 = gstr.comment_you_renounced_your_alliegance_unfriendly_moralizing
                elif _g_talk_troop_relation > 5 and troop_slot_015 == 6 or troop_slot_015 == 7:
                    var012 = gstr.comment_you_renounced_your_alliegance_enemy_friendly
                elif _g_talk_troop_relation > 5:
                    var012 = gstr.comment_you_renounced_your_alliegance_enemy
                elif is_between(_g_talk_troop_relation,-5,5) and troop_slot_015 == 2 or troop_slot_015 == 5:
                    var012 = gstr.comment_you_renounced_your_alliegance_unfriendly_spiteful
                    var014 = -2
                elif _g_talk_troop_relation < -5 and troop_slot_015 == 2 or troop_slot_015 == 3 or troop_slot_015 == 5:
                    var012 = gstr.comment_you_renounced_your_alliegance_unfriendly_spiteful
                else:
                    var012 = gstr.comment_you_renounced_your_alliegance_default
                #end
            #end
        #end
    elif troop_slot_002 == 56 and troop_slot_008 == trp.player:
        if troop_slot_015 == 2 or troop_slot_015 == 5 and _g_talk_troop_relation < -5:
            var011 = 200
            var012 = gstr.comment_marriage_normal_nasty
        else:
            troop_get_family_relation_to_troop(troop_slot_004,_g_talk_troop)
            if reg0 >= 5:
                var012 = gstr.comment_marriage_normal_family
                var011 = 300
                var014 = reg0
                var014 /= 3
            else:
                troop_faction_025 = store_faction_of_troop(troop_slot_004)
                if troop_faction_025 == _g_talk_troop_faction:
                    var012 = gstr.comment_marriage_normal
                    var011 = 100
                #end
            #end
        #end
    elif troop_slot_002 == 57 and troop_slot_008 == trp.player:
        if True:
            troop_get_family_relation_to_troop(troop_slot_004,_g_talk_troop)
            if reg0 >= 5:
                var012 = gstr.comment_marriage_elopement_family
                var011 = 300
                var014 = 0 - reg0
                var014 /= 3
            else:
                troop_faction_025 = store_faction_of_troop(troop_slot_004)
                if troop_faction_025 == _g_talk_troop_faction and faction_slot_eq(troop_faction_025,11,_g_talk_troop):
                    var012 = gstr.comment_marriage_elopement_liege
                    var011 = 300
                    var014 = -10
                #end
            #end
        #end
    elif troop_slot_002 == 31 and troop_slot_004 == _g_talk_troop and troop_slot_005 == trp.player and not troop_slot_ge(troop_slot_008,30,trp.player):
        s54 = str_store_troop_name(troop_slot_008)
        if troop_slot_015 in troop_slot_015_list1:
            var012 = gstr.comment_i_quarreled_with_you_over_woman_derisive
            var011 = 200
            var014 = -20
        else:
            var012 = gstr.comment_i_quarreled_with_you_over_woman_default
            var011 = 200
            var014 = -20
        #end
    elif troop_slot_002 == 77 and troop_slot_004 == trp.player and faction_slot_eq(troop_slot_010,11,_g_talk_troop) and _players_kingdom == troop_slot_010:
        var014 = -10
        var012 = gstr.comment_you_broke_truce_as_my_vassal
        var011 = 300
    elif troop_slot_002 == 76 and troop_slot_004 == trp.player and faction_slot_eq(troop_slot_010,11,_g_talk_troop) and _players_kingdom == troop_slot_010:
        var014 = -3
        var012 = gstr.comment_you_attacked_neutral_as_my_vassal
        var011 = 200
    elif troop_slot_002 == 27 and troop_slot_005 == _g_talk_troop:
        s50 = str_store_troop_name(troop_slot_004)
        s51 = str_store_troop_name(troop_slot_005)
        s54 = str_store_troop_name(troop_slot_008)
        var012 = gstr.comment_lord_intervened_against_me
        var011 = -1
    elif troop_slot_002 == 32 and troop_slot_004 == _g_talk_troop:
        s51 = str_store_troop_name(troop_slot_005)
        s54 = str_store_troop_name(troop_slot_008)
        var012 = gstr.comment_i_protested_marshall_appointment
        var011 = -1
    elif troop_slot_002 == 33 and troop_slot_004 == _g_talk_troop:
        s51 = str_store_troop_name(troop_slot_005)
        s54 = str_store_troop_name(troop_slot_008)
        s56 = str_store_troop_name(troop_slot_010)
        var012 = gstr.comment_i_blamed_defeat
        var011 = -1
    elif troop_slot_002 == 26 and troop_slot_004 == _g_talk_troop:
        s51 = str_store_party_name(troop_slot_005)
        s54 = str_store_troop_name(troop_slot_008)
        s56 = str_store_troop_name(troop_slot_010)
        var012 = gstr.comment_i_was_entitled_to_fief
        var011 = -1
    elif troop_slot_002 == 31 and troop_slot_004 == _g_talk_troop:
        s51 = str_store_troop_name(troop_slot_005)
        s54 = str_store_troop_name(troop_slot_008)
        var012 = gstr.comment_i_quarreled_with_troop_over_woman
        var011 = -1
    elif troop_slot_002 == 31 and troop_slot_005 == _g_talk_troop:
        s51 = str_store_troop_name(troop_slot_004)
        s54 = str_store_troop_name(troop_slot_008)
        var012 = gstr.comment_i_quarreled_with_troop_over_woman
        var011 = -1
    elif troop_slot_002 == 66 and troop_slot_004 == trp.player:
        if troop_slot_006 == _g_talk_troop:
            var011 = 200
            var014 = -1
            var012 = gstr.comment_you_stole_cattles_from_my_village_default
            if _g_talk_troop_faction_relation < -3 and troop_slot_015 == 6 or troop_slot_015 == 7:
                var012 = gstr.comment_you_stole_cattles_from_my_village_enemy_benevolent
            elif _g_talk_troop_faction_relation < -3 and troop_slot_015 == 4 or troop_slot_015 == 3:
                var012 = gstr.comment_you_stole_cattles_from_my_village_enemy_coldblooded
            elif _g_talk_troop_faction_relation < -3 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_stole_cattles_from_my_village_enemy_spiteful
            elif _g_talk_troop_faction_relation < -3:
                var012 = gstr.comment_you_stole_cattles_from_my_village_enemy
            elif _g_talk_troop_relation < -3 and troop_slot_015 == 2 or troop_slot_015 == 5:
                var012 = gstr.comment_you_stole_cattles_from_my_village_unfriendly_spiteful
            elif _g_talk_troop_relation > 6:
                var012 = gstr.comment_you_stole_cattles_from_my_village_friendly
            #end
        #end
    #end
    reg0 = var012
    reg1 = var011
    reg2 = var014
    reg3 = var013


def get_relevant_comment_to_s42():
    troop_slot_001 = troop_get_slot(_g_talk_troop,52)
    if _cheat_mode == 1:
        var002 = troop_slot_001 + gstr.personality_archetypes
        s15 = str_store_string(var002)
        print("@{!}Reputation type: {s15}")
    #end
    var003 = 50
    var004 = -1
    var005 = -1
    var006 = 0
    slot_no_007 = -1
    var008 = 0
    cur_hours_009 = store_current_hours()
    troop_slot_010 = troop_get_slot(_g_talk_troop,29)
    troop_set_slot(_g_talk_troop,29,_num_log_entries)
    var011 = _num_log_entries + 1
    for slot_no_012 in range(1, var011):
        troop_slot_013 = troop_get_slot(trp.log_array_entry_time,slot_no_012)
        var014 = cur_hours_009 - troop_slot_013
        if slot_no_012 <= troop_slot_010:
            if slot_no_012 == troop_slot_010 and _cheat_mode == 1:
                reg5 = slot_no_012
                print("@{!}Entries up to #{reg5} skipped")
            #end
        else:
            get_relevant_comment_for_log_entry(slot_no_012)
            if reg1 > 10:
                var015 = reg1
                var016 = reg0
                var017 = reg3
                random_x_018 = store_random_in_range(70,140)
                var015 *= random_x_018
                var019 = var014 + 500
                var015 *= 1000
                var015 /= var019
                if var015 > var003:
                    var003 = var015
                    var004 = var016
                    var005 = var017
                    slot_no_007 = slot_no_012
                    var008 = reg2
                #end
            #end
        #end
    #end
    if var004 > 0:
        var006 = 1
        troop_slot_020 = troop_get_slot(trp.log_array_actor,slot_no_007)
        troop_slot_021 = troop_get_slot(trp.log_array_center_object,slot_no_007)
        troop_slot_022 = troop_get_slot(trp.log_array_center_object_lord,slot_no_007)
        troop_slot_023 = troop_get_slot(trp.log_array_center_object_faction,slot_no_007)
        troop_slot_024 = troop_get_slot(trp.log_array_troop_object,slot_no_007)
        troop_slot_025 = troop_get_slot(trp.log_array_troop_object_faction,slot_no_007)
        troop_slot_026 = troop_get_slot(trp.log_array_faction_object,slot_no_007)
        if troop_slot_020 >= 0:
            s50 = str_store_troop_name(troop_slot_020)
        #end
        if troop_slot_021 >= 0:
            s51 = str_store_party_name(troop_slot_021)
        #end
        if troop_slot_022 >= 0:
            s52 = str_store_troop_name(troop_slot_022)
        #end
        if troop_slot_023 >= 0:
            s53 = str_store_faction_name(troop_slot_023)
        #end
        if troop_slot_024 >= 0:
            s54 = str_store_troop_name(troop_slot_024)
        #end
        if is_between(troop_slot_025,fac.player_supporters_faction,fac.kingdoms_end):
            s55 = str_store_faction_name(troop_slot_025)
            s55 = str_store_string(gstr.the_s55)
        elif is_between(troop_slot_024,trp.bandit,trp.black_khergit_horseman):
            s55 = str_store_string(gstr.bandits)
        elif troop_slot_025 == fac.deserters:
            s55 = str_store_string(gstr.deserters)
        else:
            s55 = str_store_string(gstr.travellers_on_the_road)
        #end
        if troop_slot_026 >= 0:
            s56 = str_store_faction_name(troop_slot_026)
        #end
        _g_last_comment_copied_to_s42 = var004
        _g_rejoinder_to_last_comment = var005
        s42 = str_store_string(var004)
    #end
    reg0 = var006
    _log_comment_relation_change = var008


def merchant_road_info_to_s42(party_id_001):
    var002 = -1
    var003 = -1
    var004 = -1
    var005 = -1
    str_clear(32)
    str_clear(42)
    str_clear(47)
    for p_006 in range(p.town_1, p.salt_mine):
        party_set_slot(p_006,248,0)
    #end
    var007 = 0
    var008 = 0
    for var009 in range(0, _num_log_entries):
        slot_no_010 = _num_log_entries - var009
        if troop_slot_eq(trp.log_array_entry_type,slot_no_010,3) or troop_slot_eq(trp.log_array_entry_type,slot_no_010,5):
            troop_slot_011 = troop_get_slot(trp.log_array_center_object,slot_no_010)
            troop_slot_012 = troop_get_slot(trp.log_array_troop_object,slot_no_010)
            if troop_slot_011 == party_id_001 or troop_slot_012 == party_id_001:
                troop_slot_013 = troop_get_slot(trp.log_array_entry_time,slot_no_010)
                cur_hours_014 = store_current_hours()
                var015 = cur_hours_014 - troop_slot_013
                reg3 = var015
                if var015 < 672:
                    if _cheat_mode == 1 and troop_slot_eq(trp.log_array_entry_type,slot_no_010,3):
                        print(gstr.attack_on_travellers_found_reg3_hours_ago)
                    elif _cheat_mode == 1 and troop_slot_eq(trp.log_array_entry_type,slot_no_010,5):
                        print(gstr.trade_event_found_reg3_hours_ago)
                    #end
                #end
            #end
        #end
        if var015 < 24:
            s46 = str_store_string(gstr.a_short_while_ago)
        elif var015 < 48:
            s46 = str_store_string(gstr.one_day_ago)
        elif var015 < 72:
            s46 = str_store_string("@two days ago")
        elif var015 < 154:
            s46 = str_store_string(gstr.earlier_this_week)
        elif var015 < 240:
            s46 = str_store_string(gstr.about_a_week_ago)
        elif var015 < 480:
            s46 = str_store_string(gstr.about_two_weeks_ago)
        else:
            s46 = str_store_string(gstr.several_weeks_ago)
        #end
        troop_slot_016 = troop_get_slot(trp.log_array_actor,slot_no_010)
        troop_slot_017 = troop_get_slot(trp.log_array_faction_object,slot_no_010)
        s39 = str_store_string(gstr.unknown_assailants)
        var018 = -1
        if party_is_active(troop_slot_016):
            party_faction_019 = store_faction_of_party(troop_slot_016)
            if troop_slot_017 == party_faction_019:
                var018 = troop_slot_016
                s39 = str_store_party_name(var018)
                _g_bandit_party_for_bounty = -1
                if troop_slot_017 == fac.kingdom_1:
                    s39 = str_store_string(gstr.swadians)
                elif troop_slot_017 == fac.kingdom_2:
                    s39 = str_store_string(gstr.vaegirs)
                elif troop_slot_017 == fac.kingdom_3:
                    s39 = str_store_string(gstr.khergits)
                elif troop_slot_017 == fac.kingdom_4:
                    s39 = str_store_string(gstr.nords)
                elif troop_slot_017 == fac.kingdom_5:
                    s39 = str_store_string(gstr.rhodoks)
                elif troop_slot_017 == fac.kingdom_6:
                    s39 = str_store_string(gstr.sarranids)
                elif troop_slot_017 == fac.player_supporters_faction:
                    s39 = str_store_string(gstr.your_followers)
                else:
                    var002 = var018
                    var003 = troop_slot_011
                    var004 = troop_slot_012
                    var005 = var015
                #end
            #end
        #end
        if troop_slot_011 == party_id_001 and troop_slot_eq(trp.log_array_entry_type,slot_no_010,3) and party_slot_eq(troop_slot_012,248,0):
            party_set_slot(troop_slot_012,248,1)
            s40 = str_store_party_name(troop_slot_012)
            s44 = str_store_string(gstr.we_have_heard_that_travellers_heading_to_s40_were_attacked_on_the_road_s46_by_s39)
            s43 = str_store_string(gstr.s42)
            s42 = str_store_string(gstr.s43_s44)
            var007 += 1
        elif troop_slot_012 == party_id_001 and troop_slot_eq(trp.log_array_entry_type,slot_no_010,3) and party_slot_eq(troop_slot_011,248,0):
            party_set_slot(troop_slot_011,248,1)
            s40 = str_store_party_name(troop_slot_011)
            s44 = str_store_string(gstr.we_have_heard_that_travellers_coming_from_s40_were_attacked_on_the_road_s46_by_s39)
            s43 = str_store_string(gstr.s42)
            s42 = str_store_string(gstr.s43_s44)
            var007 += 1
        elif troop_slot_012 == party_id_001 and troop_slot_eq(trp.log_array_entry_type,slot_no_010,5) and party_slot_eq(troop_slot_011,248,0):
            party_set_slot(troop_slot_011,248,1)
            s40 = str_store_party_name(troop_slot_011)
            s44 = str_store_string(gstr.travellers_coming_from_s40_traded_here_s46)
            s43 = str_store_string(gstr.s42)
            s42 = str_store_string(gstr.s43_s44)
            var008 += 1
        #end
    #end
    if var008 <= 2 and var007 == 0:
        cur_hours_020 = store_current_hours()
        if cur_hours_020 < 168:
            s42 = str_store_string(gstr.it_is_still_early_in_the_caravan_season_so_we_have_seen_little_tradings42)
        elif var008 == 0 and var007 == 0:
            s42 = str_store_string(gstr.there_has_been_very_little_trading_activity_here_recentlys42)
        elif var008 <= 2 and var007 == 0:
            s42 = str_store_string(gstr.there_has_some_trading_activity_here_recently_but_not_enoughs42)
        elif var008 <= 2 and var007 <= 2:
            s42 = str_store_string(gstr.there_has_some_trading_activity_here_recently_but_the_roads_are_dangerouss42)
        elif var007 >= 3:
            s42 = str_store_string(gstr.the_roads_around_here_are_very_dangerouss42)
        elif var007 >= 1:
            s42 = str_store_string(gstr.we_have_received_many_traders_in_town_here_although_there_is_some_danger_on_the_roadss42)
        else:
            s42 = str_store_string(gstr.we_have_received_many_traders_in_town_heres42)
        #end
    #end
    var021 = 0
    for slot_no_022 in range(190, 205):
        party_slot_023 = party_get_slot(party_id_001,slot_no_022)
        if is_between(party_slot_023,p.town_1,p.salt_mine) and party_slot_eq(party_slot_023,248,0):
            s41 = str_store_party_name(party_slot_023)
            if var021 == 1:
                s44 = str_store_string(gstr.s44_s41)
            else:
                s44 = str_store_string(gstr.s41)
            #end
        #end
        var021 = 1
    #end
    if var021 == 1:
        s47 = str_store_string(gstr.there_is_little_news_about_the_caravan_routes_to_the_towns_of_s44_and_nearby_parts_but_no_news_is_good_news_and_those_are_therefore_considered_safe)
    #end
    var024 = 0
    for p_025 in range(p.village_1, p.salt_mine):
        if party_slot_eq(p_025,121,party_id_001) and party_slot_eq(p_025,248,0):
            s41 = str_store_party_name(p_025)
            if var024 == 1:
                s44 = str_store_string(gstr.s44_s41)
            else:
                s44 = str_store_string(gstr.s41)
            #end
        #end
        var024 = 1
    #end
    if var024 == 1 and var021 == 1:
        s47 = str_store_string(gstr.s47_also_the_roads_to_the_villages_of_s44_and_other_outlying_hamlets_are_considered_safe)
    elif var024 == 1:
        s47 = str_store_string(gstr.however_the_roads_to_the_villages_of_s44_and_other_outlying_hamlets_are_considered_safe)
    #end
    s33 = str_store_string(gstr.we_have_shortages_of)
    var026 = 0
    for itm_027 in range(itm.spice, itm.siege_supply):
        slot_no_028 = itm_027 - itm.spice
        slot_no_028 += 250
        party_slot_029 = party_get_slot(party_id_001,slot_no_028)
        if party_slot_029 > 1100:
            s34 = str_store_item_name(itm_027)
            reg1 = party_slot_029
            s33 = str_store_string(gstr.s33_s34_reg1)
            var026 = 1
        #end
    #end
    if var026 == 0:
        s32 = str_store_string(gstr.we_have_adequate_stores_of_all_commodities)
    else:
        s32 = str_store_string(gstr.s33_and_some_other_commodities)
    #end
    reg0 = var002
    reg1 = var003
    reg2 = var004
    reg3 = var005


def get_manhunt_information_to_s15(quest_id_001):
    s15 = str_store_string(gstr.the_roads_are_full_of_brigands_friend_but_that_name_in_particular_does_not_sound_familiar_good_hunting_to_you_nonetheless)
    quest_slot_002 = quest_get_slot(quest_id_001,8)
    if is_between(_g_talk_troop,trp.npc1,trp.knight_1_1_wife):
        troop_slot_003 = troop_get_slot(_g_talk_troop,10)
    elif _g_encountered_party > p.spawn_points_end:
        troop_slot_003 = _g_encountered_party
    else:
        troop_slot_003 = -1
    #end
    for slot_no_004 in range(0, _num_log_entries):
        if troop_slot_003 > -1:
            troop_slot_005 = troop_get_slot(trp.log_array_actor,slot_no_004)
            if troop_slot_005 == troop_slot_003:
                troop_slot_006 = troop_get_slot(trp.log_array_troop_object,slot_no_004)
                if troop_slot_006 == quest_slot_002:
                    cur_hours_007 = store_current_hours()
                    troop_slot_008 = troop_get_slot(trp.log_array_entry_time,slot_no_004)
                    cur_hours_007 -= troop_slot_008
                    if cur_hours_007 <= 1:
                        s16 = str_store_string(gstr.less_than_an_hour_ago)
                    elif cur_hours_007 <= 48:
                        reg3 = cur_hours_007
                        s16 = str_store_string(gstr.maybe_reg3_hours_ago)
                    else:
                        cur_hours_007 /= 24
                        reg3 = cur_hours_007
                        s16 = str_store_string(gstr.reg3_days_ago)
                    #end
                #end
            #end
        #end
        troop_slot_009 = troop_get_slot(trp.log_array_center_object,slot_no_004)
        s17 = str_store_party_name(troop_slot_009)
        troop_slot_010 = troop_get_slot(trp.log_array_entry_type,slot_no_004)
        if troop_slot_010 == 70:
            s15 = str_store_string(gstr.youre_in_luck_we_sighted_those_bastards_s16_near_s17_hurry_and_you_might_be_able_to_pick_up_their_trail_while_its_still_hot)
        #end
    #end


def rebellion_arguments(troop_id_001, var002, troop_id_003):
    var004 = 0
    var005 = 0
    troop_slot_006 = troop_get_slot(troop_id_001,52)
    troop_faction_007 = store_faction_of_troop(troop_id_003)
    troop_faction_008 = store_faction_of_troop(troop_id_003)
    if troop_id_003 == trp.player:
        var009 = _player_right_to_rule
    elif is_between(troop_id_003,trp.kingdom_1_pretender,trp.knight_1_1_wife) and troop_slot_eq(troop_id_003,14,troop_faction_007):
        var009 = 75
    else:
        var009 = 60
    #end
    if var002 == 1:
        var005 = var009 - 30
    elif var002 == 2:
        var005 = _player_honor - 20
    elif var002 == 5:
        var005 = _player_honor - 20
    elif var002 == 4:
        var005 = 0
        for p_010 in range(p.town_1, p.salt_mine):
            party_faction_011 = store_faction_of_party(p_010)
            var005 = -40
            if _players_kingdom == troop_faction_008 and party_faction_011 == fac.player_faction or party_faction_011 == fac.player_supporters_faction:
                var005 += 5
            elif party_faction_011 == troop_faction_008:
                var005 += 5
            #end
        #end
    elif var002 == 3:
        var005 = 20
        for trp_012 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_013 = store_faction_of_troop(trp_012)
            if troop_id_001 != _g_talk_troop and troop_faction_013 == fac.player_supporters_faction or troop_faction_013 == _players_kingdom and troop_slot_eq(trp_012,47,1):
                var005 -= 20
            #end
        #end
    #end
    val_clamp(var005,-40,41)
    if troop_slot_006 == 1:
        if var002 == 1:
            var004 = 30
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_claims_to_the_throne_good_there_is_nothing_id_rather_do_than_fight_for_a_good_cause)
            else:
                s15 = str_store_string(gstr.you_speak_of_claims_to_the_throne_well_there_is_nothing_id_rather_do_than_fight_for_a_good_cause_but_the_claim_you_make_seems_somewhat_weak)
            #end
        elif var002 == 5:
            var004 = 10
            if var005 > 0:
                s15 = str_store_string(gstr.i_am_pleased_that_you_speak_of_upholding_my_ancient_rights_which_are_sometimes_trod_upon_in_these_sorry_days)
            else:
                s15 = str_store_string(gstr.i_am_pleased_that_you_speak_of_upholding_my_ancient_rights_but_sometimes_men_make_pledges_before_they_are_king_which_they_cannot_keep_once_they_take_the_throne)
            #end
        elif var002 == 2:
            var004 = 0
            if True:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_well_i_supposed_thats_good_but_sometimes_the_commons_overstep_their_boundaries_im_more_concerned_that_your_claim_be_legal_so_i_can_swing_my_sword_with_a_good_conscience)
            #end
        elif var002 == 3:
            var004 = -10
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_good_i_ask_for_no_more_than_my_due)
            else:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_unfortunately_you_are_not_wellknown_for_rewarding_those_to_whom_you_have_made_such_offers)
            #end
        elif var002 == 4:
            var004 = -30
            s15 = str_store_string(gstr.you_speak_of_unifying_calradia_well_i_believe_that_well_always_be_fighting__its_important_that_we_fight_for_a_rightful_cause)
        #end
    elif troop_slot_006 == 2:
        if var002 == 1:
            var004 = -20
            s15 = str_store_string(gstr.you_talk_of_claims_to_the_throne_but_i_leave_bickering_about_legalities_to_the_lawyers_and_clerks)
        elif var002 == 2:
            var004 = -30
            s15 = str_store_string(gstr.you_speak_of_ruling_justly_hah_ill_believe_theres_such_a_thing_as_a_just_king_when_i_see_one)
        elif var002 == 5:
            var004 = 0
            s15 = str_store_string(gstr.you_spoke_of_protecting_the_rights_of_the_nobles_if_you_did_youd_be_the_first_king_to_do_so_in_a_very_long_time)
        elif var002 == 3:
            var004 = 30
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_ay_well_lets_see_if_you_deliver)
            else:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_bah_youre_not_known_for_delivering_on_your_pledges)
            #end
        elif var002 == 4:
            var004 = 10
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_well_youve_done_a_good_job_at_making_calradia_bend_its_knee_to_you_so_maybe_thats_not_just_talk)
            else:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_id_be_impressed_if_i_thought_you_could_do_it_but_unfortunately_you_dont)
            #end
        #end
    elif troop_slot_006 == 3:
        if var002 == 1:
            var004 = -20
            s15 = str_store_string(gstr.you_speak_of_claims_to_the_throne_well_any_peasant_can_claim_to_be_a_kings_bastard)
        elif var002 == 2:
            var004 = -30
            s15 = str_store_string(gstr.well_its_a_fine_thing_to_court_the_commons_with_promises_but_what_do_you_have_to_offer_me)
        elif var002 == 5:
            var004 = 0
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_rights_of_lords_that_would_make_a_fine_change_if_my_rights_as_lord_would_be_respected)
            else:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_rights_of_lords_that_would_make_a_fine_change_if_my_rights_as_lord_would_be_respected_however_it_is_easy_for_you_to_make_promises_while_you_are_weak_that_you_have_no_intention_of_keeping_when_you_are_strong)
            #end
        elif var002 == 3:
            var004 = 20
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_well_my_family_is_of_ancient_and_noble_lineage_so_you_promise_me_no_more_than_my_due_still_your_gesture_is_appreciated)
            else:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_well_you_make_that_pledge_but_i_am_not_impressed)
            #end
        elif var002 == 4:
            var004 = 20
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_well_much_of_this_land_now_bends_its_knee_to_you_so_perhaps_that_is_not_just_talk)
            else:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_but_right_now_yours_is_just_one_squabbling_faction_among_many)
            #end
        #end
    elif troop_slot_006 == 4:
        if var002 == 1:
            var004 = -30
            s15 = str_store_string(gstr.you_speak_of_claims_well_no_offense_but_a_claim_unsupported_by_might_rarely_prospers)
        elif var002 == 2:
            var004 = 10
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_well_i_suppose_that_will_make_for_a_more_prosperous_realm_ive_always_tried_to_treat_my_peasants_decently_saves_going_to_bed_worrying_about_whether_youll_wake_up_with_the_roof_on_fire)
            else:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_very_well_but_remember_that_peasants_are_more_likely_to_cause_trouble_if_you_make_promises_then_dont_deliver_than_if_you_never_made_the_promise_in_the_first_place)
            #end
        elif var002 == 5:
            var004 = 15
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_rights_of_lords_good_youd_be_well_advised_to_do_that__men_fight_better_for_a_king_wholl_respect_their_rights)
            else:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_rights_of_lords_very_well_but_remember__failing_to_keep_promises_which_you_made_while_scrambling_up_the_throne_is_the_quickest_way_to_topple_off_of_it_once_you_get_there)
            #end
        elif var002 == 3:
            var004 = -20
            s15 = str_store_string(gstr.you_speak_of_giving_me_land_very_good_but_often_i_find_that_when_a_man_makes_too_many_promises_trying_to_get_to_the_top_he_has_trouble_keeping_them_once_he_reaches_it)
        elif var002 == 4:
            var004 = 20
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_well_many_have_said_that_you_might_very_well_be_the_one_to_do_it)
            else:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_well_all_the_kings_say_that_im_not_sure_that_you_will_succeed_while_they_fail)
            #end
        #end
    elif troop_slot_006 == 5:
        if var002 == 1:
            var004 = -20
            s15 = str_store_string(gstr.you_speak_of_claims_do_you_think_i_care_for_the_nattering_of_lawyers)
        elif var002 == 2:
            var004 = -20
            s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_how_kind_of_you_i_shall_tell_my_swineherd_all_about_your_sweet_promises_no_doubt_he_will_become_your_most_faithful_vassal)
        elif var002 == 5:
            var004 = -10
            s15 = str_store_string(gstr.you_speak_of_protecing_the_rights_of_lords_such_sweet_words_but_ill_tell_you_this__the_only_rights_that_are_respected_in_this_world_are_the_rights_to_dominate_whoever_is_weaker_and_to_submit_to_whoever_is_stronger)
        elif var002 == 3:
            var004 = 20
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_yes_very_good__but_you_had_best_deliver)
            else:
                s15 = str_store_string(gstr.you_speak_of_giving_me_land_hah_perhaps_all_those_others_to_whom_you_promised_lands_will_simply_step_aside)
            #end
        elif var002 == 4:
            var004 = 10
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_you_may_indeed_humble_the_other_kings_of_this_land_and_in_that_case_i_would_hope_that_you_would_remember_me_as_your_faithful_servant)
            else:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_but_you_are_weak_and_i_think_that_you_will_remain_weak)
            #end
        #end
    elif troop_slot_006 == 6:
        if var002 == 1:
            var004 = 10
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_claims_its_good_for_a_king_to_have_a_strong_claim_although_admittedly_im_more_concerned_that_he_rules_just_ly_than_with_legalities_anyway_your_claim_seems_wellfounded_to_me)
            else:
                s15 = str_store_string(gstr.you_speak_of_claims_but_your_claim_seems_a_bit_weak_to_me)
            #end
        elif var002 == 2:
            var004 = 20
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_i_like_that_my_tenants_are_a_happy_lot_i_think_but_i_hear_of_others_in_other_estates_that_arent_so_fortunate)
            else:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_im_glad_to_hear_you_say_that_but_do_me_a_favor__dont_promise_the_commons_anything_you_cant_deliver_thats_a_sure_way_to_get_them_to_rebel_and_it_breaks_my_heart_to_have_to_put_them_down)
            #end
        elif var002 == 5:
            var004 = 0
            s15 = str_store_string(gstr.you_speak_of_protecting_the_rights_of_lords_well_very_good_i_suppose_but_you_know__we_lords_can_take_of_ourselves_its_the_common_folk_who_need_a_strong_king_to_look_out_for_them_to_my_mind)
        elif var002 == 3:
            var004 = -15
            s15 = str_store_string(gstr.you_speak_of_giving_me_land_its_kind_of_you_really_though_that_is_not_necessary)
        elif var002 == 4:
            var004 = -25
            s15 = str_store_string(gstr.you_speak_of_unifying_calradia_well_maybe_you_can_unite_this_land_by_the_sword_but_im_not_sure_that_this_will_make_you_a_good_ruler)
        #end
    elif troop_slot_006 == 7:
        if var002 == 1:
            var004 = 10
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_claims_a_king_must_have_a_strong_legal_claim_for_there_not_to_be_chaos_in_the_realm_and_yours_is_wellestablished)
            else:
                s15 = str_store_string(gstr.you_speak_of_claims_a_king_must_have_a_strong_legal_claim_for_there_not_to_be_chaos_in_the_realm_but_your_claim_is_not_so_strong)
            #end
        elif var002 == 5:
            var004 = -5
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_rights_of_lords_it_is_of_course_important_that_a_king_respect_the_rights_of_his_vassals_although_i_worry_that_a_king_who_took_a_throne_without_proper_cause_would_not_rule_with_justice)
            else:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_rights_of_lords_it_is_of_course_important_that_a_king_respect_the_rights_of_his_vassals_however_i_would_like_to_know_that_you_would_indeed_deliver_on_your_promises)
            #end
        elif var002 == 2:
            var004 = 5
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_i_would_be_pleased_to_serve_a_king_who_respected_the_rights_of_his_subjects_although_i_worry_that_a_king_who_took_a_throne_without_proper_cause_would_not_rule_with_justice)
            else:
                s15 = str_store_string(gstr.you_speak_of_protecting_the_commons_i_would_be_pleased_to_serve_a_king_who_respected_the_rights_of_his_subjects_however_i_would_like_to_know_that_you_would_indeed_deliver_on_your_promises)
            #end
        elif var002 == 3:
            var004 = -40
            s15 = str_store_string(gstr.i_am_not_swayed_by_promises_of_reward)
        elif var002 == 4:
            var004 = 10
            if var005 > 0:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_it_would_be_good_to_bring_peace_to_the_realm_and_i_believe_that_you_are_strong_enough_to_do_so)
            else:
                s15 = str_store_string(gstr.you_speak_of_unifying_calradia_it_would_be_good_to_bring_peace_the_realm_but_with_your_kingdom_in_its_current_state_i_worry_that_you_are_just_bringing_more_discord)
            #end
        #end
    #end
    s14 = str_store_string(gstr.s15)
    reg0 = var004
    reg1 = var005


def get_culture_with_party_faction_for_music(party_id_001):
    party_faction_002_list1 = [
    fac.player_supporters_faction,
    fac.player_faction,
    ]
    party_faction_002 = store_faction_of_party(party_id_001)
    if party_faction_002 in party_faction_002_list1:
        party_faction_002 = _players_kingdom
    #end
    if is_between(party_id_001,p.town_1,p.salt_mine) and party_faction_002 == fac.player_supporters_faction or not is_between(party_faction_002,fac.player_supporters_faction,fac.kingdoms_end):
        party_faction_002 = party_get_slot(party_id_001,61)
    #end
    get_culture_with_faction_for_music(party_faction_002)


def get_culture_with_faction_for_music(var001):
    var001_list2 = [
    fac.forest_bandits,
    fac.mountain_bandits,
    fac.deserters,
    fac.peasant_rebels,
    fac.outlaws,
    ]
    if var001 == fac.kingdom_1:
        var002 = 1
    elif var001 == fac.kingdom_2:
        var002 = 2
    elif var001 == fac.kingdom_3:
        var002 = 4
    elif var001 == fac.kingdom_4:
        var002 = 8
    elif var001 == fac.kingdom_5:
        var002 = 16
    elif var001 == fac.kingdom_6:
        var002 = 32
    elif var001 in var001_list2:
        var002 = 32
    else:
        var002 = 0
    #end
    reg0 = var002


def music_set_situation_with_culture(var001):
    var001_list1 = [
    1048576,
    8192,
    ]
    var001_list2 = [
    1024,
    4096,
    ]
    var001_list1 = [
    2097152,
    16384,
    524288,
    1048576,
    8192,
    ]
    var002 = 0
    if var001 in var001_list1:
        get_culture_with_party_faction_for_music(_g_encountered_party)
        val_or(var002,reg0)
    elif var001 in var001_list2:
        get_culture_with_party_faction_for_music(_g_encountered_party)
        val_or(var002,reg0)
        get_culture_with_party_faction_for_music(p.main_party)
        val_or(var002,reg0)
        get_closest_center(p.main_party)
        get_culture_with_party_faction_for_music(reg0)
        val_or(var002,reg0)
    elif var001 == 2048:
        get_culture_with_faction_for_music(_g_multiplayer_team_1_faction)
        val_or(var002,reg0)
        get_culture_with_faction_for_music(_g_multiplayer_team_2_faction)
        val_or(var002,reg0)
    elif var001 == 65536:
        get_culture_with_party_faction_for_music(p.main_party)
        val_or(var002,reg0)
        get_closest_center(p.main_party)
        get_culture_with_party_faction_for_music(reg0)
        val_or(var002,reg0)
    elif var001 == 8388608:
        get_culture_with_party_faction_for_music(p.main_party)
        val_or(var002,reg0)
    elif var001 == 32768:
        get_culture_with_party_faction_for_music(_g_encountered_party)
        val_or(var002,reg0)
    #end
    if var001 in var001_list1:
        if is_currently_night():
            var001 = 524288
        #end
    #end
    music_set_situation(var001)
    music_set_culture(var002)


def combat_music_set_situation_with_culture():
    var001 = 1024
    var002 = 0
    var003 = 0
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
            troop_id_005 = agent_get_troop_id(cur_agent)
            character_lvl_006 = store_character_level(troop_id_005)
            character_lvl_006 += 10
            character_lvl_006 *= character_lvl_006
            if agent_is_ally(cur_agent):
                var002 += character_lvl_006
            else:
                var003 += character_lvl_006
            #end
        #end
    #end
    var002 *= 4
    var002 /= 3
    if var002 < var003:
        var001 = 4096
    #end
    music_set_situation_with_culture(var001)


def play_victorious_sound():
    music_set_situation_with_culture(8388608)


def set_items_for_tournament(var001, var002, var003, var004, var005, var006, var007, var008, var009, var010):
    var011 = var003 + var004
    var011 += var008
    for var012 in range(0, 32):
        mission_tpl_entry_clear_override_items(mt.arena_melee_fight,var012)
        var013 = 0
        var014 = var012 / 8
        if True:
            random_x_015 = store_random_in_range(0,100)
            if random_x_015 < var001:
                var013 = 1
                mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_horse)
            #end
        #end
        if var013 == 1:
            var016 = var011 + var002
            var016 += var006
            var016 += var007
        else:
            var016 = var011 + var005
        #end
        random_x_015 = store_random_in_range(0,var016)
        var017 = itm.arena_shield_red
        var017 += var014
        if True:
            random_x_015 -= var003
            if random_x_015 < 0:
                if True:
                    random_x_018 = store_random_in_range(0,100)
                    if random_x_018 < 50:
                        mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_sword)
                        mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,var017)
                    else:
                        mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.heavy_practice_sword)
                    #end
                #end
            #end
        else:
            random_x_015 -= var004
            if random_x_015 < 0:
                mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_axe)
                mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,var017)
            else:
                random_x_015 -= var008
                if random_x_015 < 0:
                    mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_sword)
                    mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_crossbow)
                    mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_bolts)
                elif var013 == 0:
                    random_x_015 -= var005
                    if random_x_015 < 0:
                        mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_bow)
                        mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_arrows)
                        mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_dagger)
                    elif var013 == 1:
                        random_x_015 -= var002
                        if random_x_015 < 0:
                            mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_lance)
                            mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,var017)
                        elif var013 == 1:
                            random_x_015 -= var006
                            if random_x_015 < 0:
                                mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_javelin)
                                mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,var017)
                            elif var013 == 1:
                                random_x_015 -= var007
                                if random_x_015 < 0:
                                    mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_bow)
                                    mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_arrows)
                                    mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,itm.practice_dagger)
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if var009 >= 0:
            var019 = var009 + var014
            mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,var019)
        #end
        if var010 >= 0:
            var020 = var010 + var014
            mission_tpl_entry_add_override_item(mt.arena_melee_fight,var012,var020)
        #end
    #end


def custom_battle_end():
    _g_custom_battle_team1_death_count = 0
    _g_custom_battle_team2_death_count = 0
    agent_no_001 = get_player_agent_no()
    agent_team_no_002 = agent_get_team(agent_no_001)
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and not agent_is_alive(cur_agent):
            agent_team_no_004 = agent_get_team(cur_agent)
            if agent_team_no_004 == agent_team_no_002:
                _g_custom_battle_team1_death_count += 1
            else:
                _g_custom_battle_team2_death_count += 1
            #end
        #end
    #end


def remove_troop_from_prison(troop_id_001):
    troop_set_slot(troop_id_001,8,-1)
    if _do_not_cancel_quest == 0 and check_quest_active(qst.rescue_lord_by_replace) and quest_slot_eq(qst.rescue_lord_by_replace,2,troop_id_001):
        cancel_quest(qst.rescue_lord_by_replace)
    #end
    if _do_not_cancel_quest == 0 and check_quest_active(qst.rescue_prisoner) and quest_slot_eq(qst.rescue_prisoner,2,troop_id_001):
        cancel_quest(qst.rescue_prisoner)
    #end
    if check_quest_active(qst.deliver_message_to_prisoner_lord) and quest_slot_eq(qst.deliver_message_to_prisoner_lord,2,troop_id_001):
        cancel_quest(qst.deliver_message_to_prisoner_lord)
    #end


def debug_variables(var001, var002):
    pass


def troop_describes_troop_to_s15(var001, var002):
    s15 = str_store_troop_name(var002)
    if var002 == trp.player:
        s15 = str_store_string(gstr.you)
    elif var002 == var001:
        s15 = str_store_string(gstr.myself)
    else:
        troop_get_family_relation_to_troop(var002,var001)
        if reg0 > 0:
            s15 = str_store_string(gstr.my_s11_s15)
        else:
            troop_get_relation_with_troop(var002,var001)
            if reg0 >= 20:
                s15 = str_store_string(gstr.my_friend_s15)
            #end
        #end
    #end


def troop_describes_quarrel_with_troop_to_s14(var001, var002):
    s15 = str_store_troop_name(var001)
    s16 = str_store_troop_name(var002)
    s14 = str_store_string(gstr.stop_gap__s15_is_the_rival_of_s16)
    if var001 == _g_talk_troop and cf_test_lord_incompatibility_to_s17(var001,var002):
        s14 = str_store_string(17)
    elif var002 == _g_talk_troop and cf_test_lord_incompatibility_to_s17(var002,var001):
        s14 = str_store_string(17)
    else:
        s14 = str_store_string(gstr.general_quarrel)
    #end


def cf_test_lord_incompatibility_to_s17(troop_id_001, troop_id_002):
    var003 = 0
    troop_slot_004 = troop_get_slot(troop_id_001,52)
    troop_slot_005 = troop_get_slot(troop_id_002,52)
    reg15 = troop_get_type(troop_id_002)
    s18 = str_store_troop_name(troop_id_002)
    var006 = 1
    troop_get_family_relation_to_troop(troop_id_002,troop_id_001)
    var007 = reg0
    if var007 > 0:
        var008 = reg0 / 5
        var006 += var008
        s18 = str_store_string(gstr.my_s11_s18)
    elif troop_slot_005 > 7 and troop_slot_004 == 5 or troop_slot_004 == 3:
        s18 = str_store_string(gstr.the_socalled_s11_s18)
    #end
    if troop_slot_004 == 1 and is_between(var007,1,5):
        var003 = 100
        s17 = str_store_string(gstr.s18_would_cheat_me_of_my_inheritance_by_heaven_i_know_my_rights_and_im_not_going_to_back_down)
    elif troop_slot_004 == 1 and troop_slot_005 == 2:
        s17 = str_store_string(gstr.s18_once_questioned_my_honour_and_my_bravery_i_long_for_the_day_when_i_can_meet_him_in_battle_and_make_him_retract_his_statement)
        var003 = 50
    elif troop_slot_004 == 1 and troop_slot_005 == 7:
        s17 = str_store_string(gstr.s18_once_questioned_my_judgment_in_battle_by_heaven_would_he_have_us_shirk_our_duty_to_smite_our_sovereigns_foes)
        var003 = 50
    elif troop_slot_005 == 1 and is_between(var007,1,5):
        var003 = 100
        s17 = str_store_string(gstr.s18_seems_to_think_he_has_the_right_to_some_of_my_property_well_he_does_not)
    elif troop_slot_004 == 2 and troop_slot_005 == 1:
        s17 = str_store_string(gstr.s18_once_took_something_i_said_amiss_stubborn_bastard_wont_give_it_up_and_keeps_trying_to_get_me_to_recant_my_words)
        var003 = 50
    elif troop_slot_004 == 2 and troop_slot_005 == 4:
        s17 = str_store_string(gstr.s18_is_a_crafty_weasel_and_i_dont_trust_him_one_bit)
        var003 = 100
    elif troop_slot_004 == 5 and troop_slot_005 == 7:
        s17 = str_store_string(gstr.s18_i_despite_him_he_puts_on_such_a_nauseating_display_of_virtue_and_thinks_nothing_of_insulting_his_betters)
        var003 = 100
    elif troop_slot_004 == 5 and troop_slot_005 == 3:
        s17 = str_store_string(gstr.s18_entered_into_a_little_deal_with_me_and_is_now_trying_to_wriggle_out_of_it)
        var003 = 100
    elif troop_slot_004 == 3 and troop_slot_005 == 5:
        s17 = str_store_string(gstr.s18_once_ran_an_errand_for_me_and_now_thinks_i_owe_him_something_i_owe_his_ilk_nothing)
        var003 = 100
    elif troop_slot_004 == 3 and troop_slot_005 == 6:
        s17 = str_store_string(gstr.s18_is_soft_and_weak_and_not_fit_to_govern_a_fief_and_i_have_always_detested_him)
        var003 = 100
    elif troop_slot_004 == 4 and troop_slot_005 == 2:
        s17 = str_store_string(gstr.s18_is_a_quarrelsome_oaf_and_a_liability_in_my_opinion_and_ive_let_him_know_as_much)
        var003 = 100
    elif troop_slot_004 == 4 and troop_slot_005 == 6:
        s17 = str_store_string(gstr.s18_i_am_sorry_to_say_is_far_too_softhearted_a_man_to_be_given_any_kind_of_responsibility_his_chivalry_will_allow_the_enemy_to_flee_to_fight_another_day_and_will_cost_the_lives_of_my_own_faithful_men)
        var003 = 100
    elif troop_slot_004 == 6 and troop_slot_005 == 4:
        s17 = str_store_string(gstr.s18_seems_to_have_something_against_me_for_some_reason_i_dont_like_to_talk_ill_of_people_but_i_think_hes_can_be_a_bit_of_a_cad_sometimes)
        var003 = 100
    elif troop_slot_004 == 6 and troop_slot_005 == 3:
        s17 = str_store_string(gstr.s18_has_always_treated_me_contemptuously_although_i_have_done_him_no_wrong)
        var003 = 100
    elif troop_slot_004 == 7 and troop_slot_005 == 5:
        s17 = str_store_string(gstr.s18_is_thoroughly_dishonorable_and_a_compulsive_spinner_of_intrigues_which_i_fear_will_drag_us_into_wars_or_incite_rebellions)
        var003 = 50
    elif troop_slot_004 == 7 and troop_slot_005 == 1:
        s17 = str_store_string(gstr.s18_disappoints_me_i_once_scolded_for_his_rashness_in_battle_and_he_took_offense_i_do_not_care_to_apologize_for_my_efforts_to_save_his_life_and_the_lives_of_his_men)
        var003 = 50
    elif troop_slot_004 == 7 or troop_slot_004 == 1 or troop_slot_004 == 3 and troop_slot_005 == 8:
        s17 = str_store_string(gstr.s18_squanders_money_and_carouses_in_a_way_most_unbefitting_a_noble_by_doing_so_he_disgraces_us_all)
        var003 = 100
    elif troop_slot_004 == 8 and troop_slot_005 == 7 or troop_slot_005 == 1 or troop_slot_005 == 3:
        s17 = str_store_string(gstr.s18_has_been_speaking_ill_of_me_behind_my_back_or_so_they_say)
        var003 = 100
    elif troop_slot_004 == 2 or troop_slot_004 == 1 or troop_slot_004 == 3 and troop_slot_005 == 10:
        s17 = str_store_string(gstr.s18_is_a_disgrace_reg3shehe_consorts_with_merchants_lends_money_at_interest_uses_coarse_language_and_shows_no_attempt_to_uphold_the_dignity_of_the_honor_bestowed_upon_reg3herhim)
        var003 = 100
    elif troop_slot_004 == 10 and troop_slot_005 == 2 or troop_slot_005 == 1 or troop_slot_005 == 3:
        s17 = str_store_string(gstr.s18_has_condemned_me_for_engaging_in_commerce_what_could_possibly_be_wrong_with_that)
        var003 = 100
    elif troop_slot_004 == 5 or troop_slot_004 == 1 or troop_slot_004 == 3 and troop_slot_005 == 9:
        s17 = str_store_string(gstr.s18_i_have_heard_has_been_encouraging_seditious_ideas_among_the_peasantry__a_foolish_move_which_endangers_us_all)
        var003 = 100
    elif troop_slot_004 == 9 and troop_slot_005 == 5 or troop_slot_005 == 1 or troop_slot_005 == 3:
        s17 = str_store_string(gstr.s18_has_called_me_out_for_the_way_i_deal_with_my_tenants_well_so_be_it_if_i_teach_them_that_they_are_the_equal_of_anyone_with_socalled_gentle_blood_what_is_it_to_reg3herhim)
        var003 = 100
    elif troop_slot_004 == 21 and troop_slot_005 == 1 or troop_slot_005 == 3:
        s17 = str_store_string(gstr.a_most_gallant_gentleman_who_knows_how_to_treat_a_lady)
        var003 = -50
    elif troop_slot_004 == 21 and troop_slot_005 == 2:
        s17 = str_store_string(gstr.a_base_cad)
        var003 = 50
    elif troop_slot_004 == 22 and troop_slot_005 == 4:
        s17 = str_store_string(gstr.a_man_who_treats_me_as_his_equal_which_is_rare)
        var003 = -50
    elif troop_slot_004 == 22 and troop_slot_005 == 1 or troop_slot_005 == 5:
        s17 = str_store_string(gstr.appears_to_value_me_with_his_estate_and_his_horse_as_prizes_worth_having)
        var003 = 50
    elif troop_slot_004 == 22 and troop_slot_005 != 6:
        s17 = str_store_string(gstr.a_bit_dull_but_what_can_you_expect)
        var003 = 10
    elif troop_slot_004 == 23:
        troop_get_romantic_chemistry_with_troop(troop_id_001,troop_id_002)
        if reg0 >= 10:
            s17 = str_store_string(gstr.the_man_whom_destiny_intends_for_me)
            var003 = -50
        elif troop_slot_004 == 23 and reg0 < 0:
            s17 = str_store_string(gstr.is_not_right_for_me__i_cannot_say_why_but_he_makes_my_skin_crawl)
            var003 = 50
        elif troop_slot_004 == 24 and troop_slot_005 == 3 or troop_slot_005 == 4:
            s17 = str_store_string(gstr.is_a_man_who_clearly_intends_to_make_his_mark_in_the_world)
            var003 = -20
        elif troop_slot_004 == 24 and troop_slot_005 == 6:
            s17 = str_store_string(gstr.is_a_layabout_a_naif_prey_for_others_who_are_cleverer_than_he)
            var003 = 30
        elif troop_slot_004 == 25 and troop_slot_005 == 7:
            s17 = str_store_string(gstr.is_a_man_of_stalwart_character)
            var003 = -50
        elif troop_slot_004 == 25 and troop_slot_005 == 5 or troop_slot_005 == 4:
            s17 = str_store_string(gstr.appears_to_be_a_man_of_low_morals)
            var003 = 50
        elif troop_slot_004 == 25 and troop_slot_005 == 2:
            s17 = str_store_string(gstr.appears_to_be_a_man_who_lacks_selfdiscipline)
            var003 = 50
        else:
            pass
        #end
    #end
    var003 /= var006
    reg0 = var003


def troop_get_romantic_chemistry_with_troop(var001, var002):
    var003 = var001 + var002
    var003 += _romantic_attraction_seed
    var004 = store_mod(var003,5)
    var004 *= var004
    var004 *= 3
    attribute_lvl_005 = store_attribute_level(var002,3)
    attribute_lvl_005 -= var004
    attribute_lvl_005 *= 2
    reg0 = attribute_lvl_005


def cf_troop_get_romantic_attraction_to_troop(troop_id_001, troop_id_002):
    var003 = 0
    troop_type_004 = troop_get_type(troop_id_001)
    if troop_type_004 == 1:
        troop_type_005 = troop_get_type(troop_id_002)
        if troop_type_005 == 0:
            troop_get_romantic_chemistry_with_troop(troop_id_001,troop_id_002)
            var006 = reg0
            troop_slot_007 = troop_get_slot(troop_id_002,7)
            var008 = 60
            troop_slot_007 /= 5
            troop_slot_007 -= var008
            val_min(troop_slot_007,60)
            if True:
                var009 = 0
                if cf_test_lord_incompatibility_to_s17(troop_id_001,troop_id_002):
                    var009 = 0 - reg0
                #end
            #end
        #end
    #end
    troop_slot_010 = troop_get_slot(troop_id_001,52)
    if troop_slot_010 == 24:
        troop_slot_007 *= 2
        var006 /= 2
    elif troop_slot_010 == 23:
        troop_slot_007 /= 2
        var006 *= 2
    elif troop_slot_010 == 22:
        troop_slot_007 /= 2
    elif troop_slot_010 == 25:
        troop_slot_007 /= 2
        var006 /= 2
    #end
    var003 += var006
    var003 += var009
    var003 += troop_slot_007
    reg0 = var003


def cf_random_political_event():
    random_x_001 = store_random_in_range(trp.npc1,trp.knight_1_1_wife)
    random_x_002 = store_random_in_range(trp.npc1,trp.knight_1_1_wife)
    if troop_slot_eq(random_x_001,2,2) and troop_slot_eq(random_x_002,2,2) and random_x_001 != random_x_002:
        _total_political_events += 1
        troop_faction_003 = store_faction_of_troop(random_x_001)
        troop_faction_004 = store_faction_of_troop(random_x_002)
        reg8 = _total_political_events
        faction_slot_005 = faction_get_slot(troop_faction_003,11)
        faction_slot_006 = faction_get_slot(troop_faction_004,11)
        if troop_faction_003 == troop_faction_004 or random_x_001 == faction_slot_005 or random_x_002 == faction_slot_006:
            troop_get_relation_with_troop(random_x_001,random_x_002)
            var007 = reg0
            random_x_008 = store_random_in_range(0,100)
            if troop_faction_003 == troop_faction_004 and faction_slot_005 != trp.player and var007 <= -10:
                troop_get_relation_with_troop(random_x_001,faction_slot_005)
                if reg0 > 0:
                    var009 = reg0
                    troop_get_relation_with_troop(random_x_002,faction_slot_005)
                    if reg0 > 0:
                        var010 = var009 * reg0
                        var010 /= 4
                        if random_x_008 <= var010:
                            s4 = str_store_troop_name(faction_slot_005)
                            s5 = str_store_troop_name(random_x_001)
                            s6 = str_store_troop_name(random_x_002)
                            if _cheat_mode == 1:
                                print(gstr.check_reg8_s4_reconciles_s5_and_s6_)
                            #end
                        #end
                    #end
                #end
            #end
        #end
        troop_change_relation_with_troop(random_x_001,random_x_002,20)
        _total_random_quarrel_changes += 20
    elif troop_faction_003 == troop_faction_004 and var007 <= -10:
        if faction_slot_005 == trp.player:
            if _cheat_mode == 1:
                print(gstr.diagnostic__player_should_receive_consultation_quest_here_if_not_already_active)
            #end
            if not check_quest_active(qst.consult_with_minister) and not check_quest_active(qst.resolve_dispute) and _g_minister_notification_quest == 0:
                _g_minister_notification_quest = qst.resolve_dispute
                quest_set_slot(qst.resolve_dispute,2,random_x_001)
                quest_set_slot(qst.resolve_dispute,4,random_x_002)
                add_notification_menu(mnu.notification_player_should_consult,0,0)
            else:
                troop_get_relation_with_troop(random_x_001,faction_slot_005)
                var011 = reg0
                troop_get_relation_with_troop(random_x_002,faction_slot_005)
                var012 = reg0
                random_x_013 = store_random_in_range(-5,5)
                var011 += random_x_013
                if var011 >= var012:
                    var014 = random_x_001
                    var015 = random_x_002
                else:
                    var015 = random_x_001
                    var014 = random_x_002
                #end
            #end
            s4 = str_store_troop_name(faction_slot_005)
            s5 = str_store_troop_name(var014)
            s6 = str_store_troop_name(var015)
            if _cheat_mode == 1:
                print(gstr.check_reg8_s4_rules_in_s5s_favor_in_quarrel_with_s6_)
            #end
            add_log_entry(27,faction_slot_005,var015,var014,troop_faction_003)
            troop_change_relation_with_troop(var014,faction_slot_005,10)
            troop_change_relation_with_troop(var015,faction_slot_005,-20)
            _total_random_quarrel_changes += -10
        #end
    elif is_between(random_x_001,trp.npc1,trp.kingdom_1_lord) and is_between(random_x_002,trp.npc1,trp.kingdom_1_lord) and var007 >= -10 and troop_slot_eq(random_x_001,71,random_x_002) or troop_slot_eq(random_x_001,73,random_x_002):
        s5 = str_store_troop_name(random_x_001)
        s6 = str_store_troop_name(random_x_002)
        if _cheat_mode == 1:
            print(gstr.check_reg8_new_rivalry_generated_between_s5_and_s6)
        #end
        troop_change_relation_with_troop(random_x_001,random_x_002,-30)
        _total_random_quarrel_changes += -30
    elif troop_faction_003 == troop_faction_004 and var007 >= -10 and cf_test_lord_incompatibility_to_s17(random_x_001,random_x_002):
        var016 = reg0
        if var016 > 0 and random_x_008 < var016:
            s5 = str_store_troop_name(random_x_001)
            s6 = str_store_troop_name(random_x_002)
            if _cheat_mode == 1:
                print(gstr.check_reg8_new_rivalry_generated_between_s5_and_s6)
            #end
        #end
        troop_change_relation_with_troop(random_x_001,random_x_002,-30)
        _total_random_quarrel_changes += -30
    else:
        cur_hours_017 = store_current_hours()
        if cur_hours_017 >= 24 and troop_faction_003 != troop_faction_004 and is_between(troop_faction_003,fac.player_supporters_faction,fac.kingdoms_end) and cf_troop_can_intrigue(random_x_002,0) and random_x_002 != faction_slot_006 and random_x_002 != faction_slot_005:
            s5 = str_store_troop_name(faction_slot_005)
            s6 = str_store_troop_name(random_x_002)
            if _cheat_mode >= 1:
                print(gstr.check_reg8_s5_attempts_to_win_over_s6)
            #end
        #end
        calculate_troop_political_factors_for_liege(random_x_002,faction_slot_005)
        var018 = reg0
        calculate_troop_political_factors_for_liege(random_x_002,faction_slot_006)
        var019 = reg0
        if var018 > var019:
            if _cheat_mode >= 1:
                s4 = str_store_troop_name(random_x_002)
                print("@{!}DEBUG - {s4} faction changed in subornment")
            #end
            change_troop_faction(random_x_002,troop_faction_003)
        #end
    #end


def evaluate_realm_stability(faction_id_001):
    var002 = 0
    var003 = 0
    var004 = 0
    faction_slot_005 = faction_get_slot(faction_id_001,11)
    for trp_006 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_006,2,2):
            troop_faction_007 = store_faction_of_troop(trp_006)
            if troop_faction_007 == faction_id_001:
                var002 += 1
                calculate_troop_political_factors_for_liege(trp_006,faction_slot_005)
                if reg3 <= -10:
                    var004 += 1
                elif reg3 <= 10:
                    var003 += 1
                #end
            #end
        #end
    #end
    if var002 > 0:
        var008 = var004 * 100
        var008 /= var002
        var009 = var003 * 100
        var009 /= var002
        var010 = var008 * 2
        var010 += var009
        faction_set_slot(faction_id_001,61,var010)
        reg0 = var008
        reg1 = var009
        reg1 = var009
    else:
        if _cheat_mode == 1:
            s1 = str_store_faction_name(faction_id_001)
            print(gstr.s1_has_no_lords)
        #end
        reg0 = 0
        reg1 = 0
    #end


def battle_political_consequences(party_id_001, party_id_002):
    party_template_id_004_list1 = [
    pt.kingdom_caravan_party,
    pt.village_farmers,
    ]
    if _cheat_mode == 1:
        s4 = str_store_party_name(party_id_002)
        s5 = str_store_party_name(party_id_001)
        print(gstr.do_political_consequences_for_s4_victory_over_s5)
    #end
    party_faction_003 = store_faction_of_party(party_id_002)
    if party_id_002 == p.main_party:
        party_faction_003 = _players_kingdom
    #end
    party_template_id_004 = party_get_template_id(party_id_001)
    if party_template_id_004 in party_template_id_004_list1:
        party_slot_005 = party_get_slot(party_id_001,5)
        party_slot_006 = party_get_slot(party_id_001,126)
        add_log_entry(3,party_id_002,party_slot_006,party_slot_005,party_faction_003)
        if _cheat_mode == 2 and not is_between(party_faction_003,fac.player_supporters_faction,fac.kingdoms_end):
            s65 = str_store_string(gstr.bandits_attacked_a_party_on_the_roads_so_a_bounty_is_probably_available)
            add_notification_menu(mnu.debug_alert_from_s65,0,0)
            s15 = str_store_party_name(party_slot_006)
            s16 = str_store_party_name(party_slot_005)
            print(gstr.travellers_attacked_on_road_from_s15_to_s16)
        #end
    #end
    if True:
        party_template_id_007 = party_get_template_id(party_id_002)
        if party_template_id_007 == pt.kingdom_hero_party and party_id_002 != p.main_party:
            troop_id_008 = party_stack_get_troop_id(party_id_002,0)
            if is_between(troop_id_008,trp.npc1,trp.knight_1_1_wife):
                party_faction_003 = store_faction_of_party(party_id_002)
                party_collect_attachments_to_party(party_id_002,p.temp_party_2)
                party_num_companions_stacks_009 = party_get_num_companion_stacks(p.temp_party_2)
                for stack_no_010 in range(0, party_num_companions_stacks_009):
                    troop_id_011 = party_stack_get_troop_id(p.temp_party_2,stack_no_010)
                    if is_between(troop_id_011,trp.npc1,trp.knight_1_1_wife):
                        if True:
                            troop_slot_012 = troop_get_slot(troop_id_011,10)
                            if party_is_active(troop_slot_012) and cf_party_under_player_suggestion(troop_slot_012):
                                add_log_entry(35,trp.player,-1,troop_id_011,-1)
                            #end
                        #end
                    #end
                #end
            #end
            troop_faction_013 = store_faction_of_troop(troop_id_011)
            if troop_faction_013 == party_faction_003 and troop_id_011 != troop_id_008:
                if _cheat_mode == 4:
                    s15 = str_store_troop_name(troop_id_011)
                    s16 = str_store_troop_name(troop_id_008)
                    print(gstr.s15_shares_joy_of_victory_with_s16)
                #end
            #end
            troop_change_relation_with_troop(troop_id_011,troop_id_008,3)
            _total_battle_ally_changes += 3
        #end
        party_clear(p.temp_party_2)
    #end
    if True:
        party_collect_attachments_to_party(party_id_001,p.temp_party_2)
        party_num_companions_stacks_009 = party_get_num_companion_stacks(p.temp_party_2)
        if _marshall_defeated_in_battle > 0:
            s15 = str_store_troop_name(_marshall_defeated_in_battle)
            troop_faction_014 = store_faction_of_troop(_marshall_defeated_in_battle)
            if _cheat_mode == 1:
                print(gstr.faction_marshall_s15_involved_in_defeat)
            #end
        elif _marshall_defeated_in_battle == trp.player and party_id_001 == p.main_party and faction_slot_eq(fac.player_supporters_faction,21,0):
            if _cheat_mode == 1:
                print(gstr.player_faction_marshall_involved_in_defeat)
            #end
        else:
            _marshall_defeated_in_battle = -1
        #end
        for stack_no_010 in range(0, party_num_companions_stacks_009):
            troop_id_011 = party_stack_get_troop_id(p.temp_party_2,stack_no_010)
            if troop_slot_eq(troop_id_011,2,2):
                if True:
                    troop_slot_015 = troop_get_slot(troop_id_011,10)
                    if party_is_active(troop_slot_015) and cf_party_under_player_suggestion(troop_slot_015):
                        add_log_entry(36,trp.player,-1,troop_id_011,-1)
                    #end
                #end
            #end
            troop_faction_013 = store_faction_of_troop(troop_id_011)
            faction_slot_016 = faction_get_slot(troop_faction_013,11)
            if troop_id_011 != faction_slot_016:
                if _cheat_mode == 1:
                    s14 = str_store_troop_name(troop_id_011)
                    s15 = str_store_faction_name(troop_faction_013)
                    print(gstr.s14_of_s15_defeated_in_battle_loses_one_point_relation_with_liege)
                #end
            #end
            if faction_slot_016 == trp.player or _players_kingdom == troop_faction_013:
                troop_change_relation_with_troop(troop_id_011,faction_slot_016,-1)
                _total_battle_ally_changes += -1
            #end
            faction_inflict_war_damage_on_faction(party_faction_003,troop_faction_013,10)
            if is_between(troop_id_008,trp.npc1,trp.knight_1_1_wife) or troop_id_008 == trp.player and troop_id_008 == trp.player or party_id_002 == p.main_party and troop_slot_eq(troop_id_011,52,2) or troop_slot_eq(troop_id_011,52,3) or troop_slot_eq(troop_id_011,52,5):
                troop_change_relation_with_troop(troop_id_011,troop_id_008,-1)
                _total_battle_enemy_changes += -1
                if _cheat_mode == 1:
                    s14 = str_store_troop_name(troop_id_011)
                    s15 = str_store_troop_name(troop_id_008)
                    print(gstr.s14_defeated_in_battle_by_s15_loses_one_point_relation)
                #end
            #end
            if _marshall_defeated_in_battle > -1 and troop_faction_013 == troop_faction_014:
                s14 = str_store_troop_name(troop_id_011)
                if cf_test_lord_incompatibility_to_s17(troop_id_011,_marshall_defeated_in_battle):
                    if _cheat_mode == 1:
                        print(gstr.s14_blames_s15_for_defeat)
                    #end
                #end
            #end
            add_log_entry(33,troop_id_011,_marshall_defeated_in_battle,faction_slot_016,party_faction_003)
            troop_change_relation_with_troop(troop_id_011,faction_slot_016,-15)
            _total_battle_ally_changes += -15
            if _marshall_defeated_in_battle != faction_slot_016:
                troop_change_relation_with_troop(troop_id_011,_marshall_defeated_in_battle,-15)
                _total_battle_ally_changes += -15
            #end
        #end
        party_clear(p.temp_party_2)
    #end


def faction_inflict_war_damage_on_faction(faction_id_001, faction_id_002, var003):
    slot_no_004 = faction_id_002 + 140
    slot_no_004 -= fac.player_supporters_faction
    faction_slot_005 = faction_get_slot(faction_id_001,slot_no_004)
    faction_slot_005 += var003
    faction_set_slot(faction_id_001,slot_no_004,faction_slot_005)
    if _cheat_mode >= 1:
        s4 = str_store_faction_name(faction_id_001)
        s5 = str_store_faction_name(faction_id_002)
        reg3 = faction_slot_005
        reg4 = var003
        print("@{!}{s4} inflicts {reg4} damage on {s5};;; raising total inflicted to {reg3}")
    #end
    faction_slot_006 = faction_get_slot(faction_id_002,8)
    if faction_slot_006 >= 0 and var003 > 0:
        troop_slot_007 = troop_get_slot(faction_slot_006,150)
        troop_slot_007 += var003
        val_min(troop_slot_007,100)
        troop_set_slot(faction_slot_006,150,troop_slot_007)
        if _cheat_mode >= 1:
            s4 = str_store_troop_name(faction_slot_006)
            reg4 = var003
            reg5 = troop_slot_007
            print("@{!}War damage raises {s4}'s controversy by {reg4} to {reg5}")
        #end
    #end
    faction_slot_006 = faction_get_slot(faction_id_001,8)
    if faction_slot_006 >= 0:
        var003 /= 3
        if var003 > 0:
            troop_slot_007 = troop_get_slot(faction_slot_006,150)
            troop_slot_007 -= var003
            val_max(troop_slot_007,0)
            troop_set_slot(faction_slot_006,150,troop_slot_007)
            if _cheat_mode >= 1:
                s4 = str_store_troop_name(faction_slot_006)
                reg4 = var003
                reg5 = troop_slot_007
                print("@{!}War damage lowers {s4}'s controversy by {reg4} to {reg5}")
            #end
        #end
    #end


def calculate_troop_political_factors_for_liege(troop_id_001, troop_id_002):
    troop_id_002_list1 = [
    _supported_pretender,
    trp.player,
    ]
    troop_slot_003_list1 = [
    2,
    6,
    ]
    troop_slot_003 = troop_get_slot(troop_id_001,52)
    troop_faction_004 = store_faction_of_troop(troop_id_002)
    if troop_faction_004 == fac.player_faction:
        troop_faction_004 = fac.player_supporters_faction
    #end
    var005 = 0
    if not faction_slot_eq(troop_faction_004,11,troop_id_002):
        var005 = 1
        if _cheat_mode == 1:
            s32 = str_store_troop_name(troop_id_002)
            print(gstr.s32_is_undeclared_rebel)
        #end
    #end
    var006 = 0
    var007 = 0
    var008 = 0
    var009 = -1
    if is_between(troop_id_001,trp.npc1,trp.knight_1_1_wife):
        for p_010 in range(p.town_1, p.salt_mine):
            if var009 == -1 and party_slot_eq(p_010,7,troop_id_001):
                var009 = p_010
            #end
        #end
    #end
    var011 = 0
    for p_010 in range(p.town_1, p.salt_mine):
        if p_010 != var009 and var009 > 0:
            if is_between(p_010,p.town_1,p.castle_1):
                var012 = 9000
            elif is_between(p_010,p.castle_1,p.village_1):
                var012 = 6000
            else:
                var012 = 1000
            #end
        #end
        distance_parties_013 = store_distance_to_party_from_party(var009,p_010)
        distance_parties_013 += 10
        var012 /= distance_parties_013
        var012 /= distance_parties_013
        party_faction_014 = store_faction_of_party(p_010)
        if party_faction_014 == troop_faction_004:
            var011 = 1
            var008 += var012
        elif party_faction_014 != troop_faction_004:
            faction_relation_015 = store_relation(party_faction_014,troop_faction_004)
            if var005 == 1 or faction_relation_015 < 0:
                var012 /= 2
            else:
                var012 /= 4
            #end
            var008 -= var012
        #end
    #end
    if var011 == 0:
        var008 += 20
        if _cheat_mode == 2:
            print(gstr.small_bonus_for_no_base)
        #end
    #end
    val_clamp(var008,-100,100)
    var016 = var008
    if troop_slot_003 == 4:
        var016 *= 2
    elif troop_slot_003 == 1:
        var016 /= 2
    #end
    var017 = 0
    for trp_018 in range(trp.kingdom_heroes_including_player_begin, trp.knight_1_1_wife):
        troop_id_019 = trp_018
        if troop_slot_eq(troop_id_019,2,2) or troop_id_019 == trp.kingdom_heroes_including_player_begin or is_between(troop_id_019,trp.kingdom_1_pretender,trp.knight_1_1_wife):
            troop_faction_020 = store_faction_of_troop(troop_id_019)
            if trp_018 == trp.kingdom_heroes_including_player_begin:
                troop_id_019 = trp.player
                troop_faction_020 = _players_kingdom
                if _g_talk_troop == troop_id_001:
                    troop_faction_021 = store_faction_of_troop(troop_id_001)
                    if troop_faction_021 == troop_faction_004:
                        troop_faction_020 = 0
                    #end
                #end
            #end
        #end
        if troop_faction_020 == troop_faction_004 and not faction_slot_eq(troop_faction_020,11,troop_id_019) and var005 != 1 and not is_between(troop_id_019,trp.kingdom_1_pretender,trp.knight_1_1_wife):
            troop_get_relation_with_troop(troop_id_001,troop_id_019)
            var022 = reg0
            troop_get_relation_with_troop(troop_id_019,troop_id_002)
            var023 = reg0
            var024 = var022 * var023
            var024 /= 100
            if _cheat_mode == 2 and _g_talk_troop == troop_id_001:
                s20 = str_store_faction_name(troop_faction_020)
                s15 = str_store_troop_name(troop_id_019)
                reg15 = var024
                print(gstr.s15_considered_member_of_faction_s20_weight_of_reg15)
            #end
        #end
        var017 += var024
    #end
    val_clamp(var017,-100,101)
    if True:
        troop_get_relation_with_troop(troop_id_001,troop_id_002)
        var025 = reg0
        var017 += var025
    #end
    var017 /= 2
    val_clamp(var017,-100,101)
    var026 = var017
    if troop_slot_003 in troop_slot_003_list1:
        var026 *= 2
    #end
    var006 = 0
    var027 = var006
    if 1 == 0 and troop_id_002 != trp.player and troop_id_002 != _supported_pretender:
        var028 = 0
        var029 = 0
        var030 = 0
    else:
        troop_slot_031 = troop_get_slot(troop_id_001,53)
        rebellion_arguments(troop_id_001,troop_slot_031,troop_id_002)
        var029 = reg0
        var028 = reg1
        var030 = var029 + var028
        skill_lvl_032 = store_skill_level(skl.persuasion,trp.player)
        if var030 > 0:
            var033 = skill_lvl_032 + 5
            var033 *= 2
            var033 /= 3
            var030 *= var033
            var030 /= 10
        elif var030 < 0:
            var034 = 10 - skill_lvl_032
            var030 *= var034
            var030 /= 10
        #end
        if troop_id_002 != trp.player and troop_id_002 != _supported_pretender:
            var028 /= 2
            var029 /= 2
            var030 /= 2
        #end
    #end
    if True:
        troop_faction_021 = store_faction_of_troop(troop_id_001)
        if troop_faction_021 == troop_faction_004:
            var007 = 0
        elif troop_id_002 == trp.player:
            var007 = 60 - _player_right_to_rule
        else:
            troop_slot_035 = troop_get_slot(troop_id_001,14)
            troop_slot_036 = troop_get_slot(troop_id_002,14)
            if troop_slot_035 == troop_slot_036:
                var007 = 10
            else:
                var007 = 50
            #end
        #end
    #end
    val_clamp(var007,0,101)
    var037 = var007
    if troop_slot_003 == 5:
        var037 /= 2
    elif troop_slot_003 == 7:
        var037 *= 2
    #end
    reg1 = var008
    reg2 = var016
    reg3 = var017
    reg4 = var026
    reg5 = var006
    reg6 = var027
    reg7 = var028
    reg17 = var029
    reg8 = var030
    reg9 = var007
    reg10 = var037
    if _cheat_mode == 1 and _g_talk_troop == troop_id_001:
        s20 = str_store_troop_name(troop_id_001)
        s21 = str_store_faction_name(troop_faction_004)
        s22 = str_store_troop_name(troop_id_002)
        print("@{!}G talk troop {s20} evaluates being vassal to {s22} of {s21}")
        print(gstr.base_result_for_security_reg1)
        print(gstr.result_for_security_weighted_by_personality_reg2)
        print(gstr.base_result_for_political_connections_reg3)
        print(gstr.result_for_political_connections_weighted_by_personality_reg4)
        if troop_id_002 in troop_id_002_list1:
            print(gstr.result_for_argument_strength_reg7)
            print(gstr.result_for_argument_appeal_reg17)
            print(gstr.combined_result_for_argument_modified_by_persuasion_reg8)
        #end
        print(gstr.base_changing_sides_penalty_reg9)
        print(gstr.changing_sides_penalty_weighted_by_personality_reg10)
    #end
    var038 = var016 + var026
    var038 += var027
    var038 += var030
    var038 -= var037
    reg0 = var038
    if _cheat_mode == 2:
        print("@{!}DEBUG -- Analyzing lord allegiances - combined bonuses and penalties = {reg0}")
    #end


def cf_troop_can_intrigue(troop_id_001, var002):
    troop_slot_003 = troop_get_slot(troop_id_001,10)
    if party_is_active(troop_slot_003):
        if _cheat_mode == 1 and troop_id_001 == _g_talk_troop:
            print(gstr.intrigue_test_troop_party_is_active)
        #end
    #end
    party_battle_opponent_004 = party_get_battle_opponent(troop_slot_003)
    if party_battle_opponent_004 <= 0:
        if _cheat_mode == 1 and troop_id_001 == _g_talk_troop:
            print(gstr.intrigue_test_troop_party_is_not_in_battle)
        #end
    #end
    if troop_slot_eq(troop_id_001,8,-1):
        if _cheat_mode == 1 and troop_id_001 == _g_talk_troop:
            print(gstr.intrigue_test_troop_is_not_prisoner)
        #end
    #end
    party_attached_005 = party_get_attached_to(troop_slot_003)
    party_faction_006 = store_faction_of_party(troop_slot_003)
    var007 = 0
    for trp_008 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_id_001 != trp_008 and var007 == 0 and troop_slot_eq(trp_008,2,2):
            troop_slot_009 = troop_get_slot(trp_008,10)
            if party_is_active(troop_slot_009) and troop_slot_003 != troop_slot_009:
                party_faction_010 = store_faction_of_party(troop_slot_009)
                if party_faction_006 == party_faction_010:
                    if party_attached_005 == -1:
                        distance_parties_011 = store_distance_to_party_from_party(troop_slot_003,troop_slot_009)
                        if distance_parties_011 < 3:
                            var007 = 1
                        elif is_between(party_attached_005,p.town_1,p.village_1):
                            party_attached_012 = party_get_attached_to(troop_slot_009)
                            if party_attached_005 == party_attached_012:
                                var007 = 1
                            #end
                        #end
                    #end
                #end
            #end
        #end
    #end
    if _cheat_mode == 1 and troop_id_001 == _g_talk_troop:
        print(gstr.intrigue_test_troop_is_nearby)
    #end
    if var002 == 0:
        pass
    #end


def troop_change_relation_with_troop(troop_id_001, troop_id_002, var003):
    if troop_id_001 == trp.player:
        change_player_relation_with_troop(troop_id_002,var003)
    elif troop_id_002 == trp.player:
        change_player_relation_with_troop(troop_id_001,var003)
    elif troop_id_001 == troop_id_002:
        pass
    else:
        troop_get_relation_with_troop(troop_id_001,troop_id_002)
        var004 = reg0 + var003
        val_clamp(var004,-100,101)
        if var004 == 0:
            var004 = 1
        #end
        slot_no_005 = troop_id_002 + 0
        troop_set_slot(troop_id_001,slot_no_005,var004)
        slot_no_006 = troop_id_001 + 0
        troop_set_slot(troop_id_002,slot_no_006,var004)
    #end
    if var003 < -5:
        if troop_id_001 == trp.player:
            troop_faction_007 = _players_kingdom
        else:
            troop_faction_007 = store_faction_of_troop(troop_id_001)
        #end
        if troop_id_002 == trp.player:
            troop_faction_008 = _players_kingdom
        else:
            troop_faction_008 = store_faction_of_troop(troop_id_002)
        #end
        if troop_faction_007 == troop_faction_008 and is_between(troop_faction_007,fac.player_supporters_faction,fac.kingdoms_end):
            var009 = var003 * -1
            troop_slot_010 = troop_get_slot(troop_id_001,150)
            troop_slot_010 += var009
            val_min(troop_slot_010,100)
            troop_set_slot(troop_id_001,150,troop_slot_010)
            troop_slot_011 = troop_get_slot(troop_id_002,150)
            troop_slot_011 += var009
            val_min(troop_slot_011,100)
            troop_set_slot(troop_id_002,150,troop_slot_011)
        #end
    #end
    if is_between(troop_id_001,trp.npc1,trp.knight_1_1_wife) and is_between(troop_id_002,trp.npc1,trp.knight_1_1_wife) and troop_id_001 != troop_id_002:
        if var003 > 0:
            _total_relation_adds += var003
        else:
            _total_relation_subs -= var003
        #end
    #end
    if _cheat_mode == 4 and is_between(troop_id_001,trp.npc1,trp.knight_1_1_wife) and is_between(troop_id_002,trp.npc1,trp.knight_1_1_wife) and troop_id_001 != troop_id_002:
        s20 = str_store_troop_name(troop_id_001)
        s15 = str_store_troop_name(troop_id_002)
        reg4 = var003
        reg14 = var004
        print(gstr.s20_relation_with_s15_changed_by_reg4_to_reg14)
        reg4 = _total_relation_adds
        print(gstr.total_additions_reg4)
        reg4 = _total_relation_subs
        print(gstr.total_subtractions_reg4)
        reg4 = _total_courtship_quarrel_changes
        print("@{!}DEBUG -- Total courtship quarrel changes: {reg4}")
        reg4 = _total_random_quarrel_changes
        print("@{!}DEBUG -- Total random quarrel changes: {reg4}")
        reg4 = _total_battle_ally_changes
        print("@{!}DEBUG -- Total battle changes for allies: {reg4}")
        reg4 = _total_battle_enemy_changes
        print("@{!}DEBUG -- Total battle changes for enemies: {reg4}")
        reg4 = _total_promotion_changes
        print("@{!}DEBUG -- Total promotion changes: {reg4}")
        reg4 = _total_feast_changes
        print("@{!}DEBUG -- Total feast changes: {reg4}")
        reg4 = _total_policy_dispute_changes
        reg5 = _number_of_controversial_policy_decisions
        print("@{!}DEBUG -- Total policy dispute changes: {reg4} from {reg5} decisions")
        reg4 = _total_indictment_changes
        print("@{!}DEBUG -- Total faction switch changes: {reg4}")
        reg4 = _total_no_fief_changes
        print("@{!}DEBUG -- Total no fief changes: {reg4}")
        reg4 = _total_relation_changes_through_convergence
        print("@{!}DEBUG -- Total changes through convergence: {reg4}")
        reg4 = _total_vassal_days_responding_to_campaign
        print("@{!}DEBUG -- Total vassal responses to campaign: {reg4}")
        reg4 = _total_vassal_days_on_campaign
        print("@{!}DEBUG -- Total vassal campaign days: {reg4}")
        val_max(_total_vassal_days_on_campaign,1)
        var012 = _total_vassal_days_responding_to_campaign * 100
        var012 /= _total_vassal_days_on_campaign
        reg4 = var012
        print("@{!}DEBUG -- Vassal response rate: {reg4}")
    #end


def troop_get_relation_with_troop(troop_id_001, var002):
    troop_slot_003 = 0
    if troop_id_001 == -1 or var002 == -1:
        troop_slot_003 = 0
    elif troop_id_001 == trp.player:
        troop_get_player_relation(var002)
        troop_slot_003 = reg0
    elif var002 == trp.player:
        troop_get_player_relation(troop_id_001)
        troop_slot_003 = reg0
    else:
        slot_no_004 = var002 + 0
        troop_slot_003 = troop_get_slot(troop_id_001,slot_no_004)
    #end
    val_clamp(troop_slot_003,-100,101)
    reg0 = troop_slot_003


def appoint_faction_marshall(faction_id_001, troop_id_002):
    faction_slot_003 = faction_get_slot(faction_id_001,11)
    faction_slot_004 = faction_get_slot(faction_id_001,8)
    faction_set_slot(faction_id_001,8,troop_id_002)
    if faction_slot_004 >= 0:
        troop_slot_005 = troop_get_slot(faction_slot_004,10)
        if party_is_active(troop_slot_005):
            party_set_marshall(troop_slot_005,0)
        #end
    #end
    if troop_id_002 >= 0:
        troop_slot_006 = troop_get_slot(troop_id_002,10)
        if party_is_active(troop_slot_006):
            party_set_marshall(troop_slot_006,1)
        #end
    #end
    if troop_id_002 != faction_slot_003 and troop_id_002 != faction_slot_004 and troop_id_002 == trp.player or is_between(troop_id_002,trp.npc1,trp.knight_1_1_wife) and faction_id_001 == fac.player_supporters_faction or not check_quest_active(qst.rebel_against_kingdom):
        if _cheat_mode == 1:
            s15 = str_store_faction_name(faction_id_001)
            print(gstr.checking_lord_reactions_in_s15)
        #end
        troop_change_relation_with_troop(troop_id_002,faction_slot_003,5)
        _total_promotion_changes += 5
        for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
            if troop_slot_eq(trp_007,2,2):
                troop_faction_008 = store_faction_of_troop(trp_007)
                if troop_faction_008 == faction_id_001 and trp_007 != troop_id_002 and trp_007 != faction_slot_003:
                    troop_get_relation_with_troop(troop_id_002,trp_007)
                    var009 = reg0 - 10
                    var009 /= 15
                    if var009 != 0:
                        if troop_slot_eq(trp_007,154,troop_id_002):
                            var009 += 1
                            val_max(var009,0)
                        #end
                    #end
                #end
            #end
            troop_change_relation_with_troop(faction_slot_003,trp_007,var009)
            _total_promotion_changes += var009
            if var009 < -2:
                random_x_010 = store_random_in_range(1,10)
                var009 += random_x_010
                if var009 < 0:
                    s14 = str_store_troop_name(trp_007)
                    s15 = str_store_troop_name(troop_id_002)
                    if _cheat_mode == 1:
                        print(gstr.s14_protests_the_appointment_of_s15_as_marshall)
                    #end
                #end
            #end
            troop_change_relation_with_troop(faction_slot_003,trp_007,-10)
            troop_change_relation_with_troop(troop_id_002,trp_007,-5)
            _total_promotion_changes += -15
            add_log_entry(32,trp_007,troop_id_002,faction_slot_003,_g_encountered_x_party_faction)
        #end
    #end


def center_get_item_consumption():
    pass


def locate_player_minister():
    var001 = 0
    for p_002 in range(p.town_1, p.village_1):
        if var001 < p.town_1:
            party_faction_003 = store_faction_of_party(p_002)
            if party_faction_003 == fac.player_supporters_faction and not party_slot_ge(p_002,7,trp.npc1):
                var001 = p_002
            #end
        #end
    #end
    troop_slot_004 = troop_get_slot(_g_player_minister,12)
    troop_set_slot(_g_player_minister,12,var001)
    if troop_slot_004 != p_002:
        s10 = str_store_party_name(p_002)
        s11 = str_store_troop_name(_g_player_minister)
        print(gstr.s11_relocates_to_s10)
    #end


def lord_get_home_center(troop_id_001):
    var002 = -1
    for p_003 in range(p.town_1, p.village_1):
        if var002 == -1 and party_slot_eq(p_003,7,troop_id_001):
            var002 = p_003
        #end
    #end
    if var002 == -1:
        for p_003 in range(p.town_1, p.salt_mine):
            if var002 == -1 and party_slot_eq(p_003,7,troop_id_001):
                if not is_between(p_003,p.town_1,p.village_1):
                    party_slot_004 = party_get_slot(p_003,120)
                    var002 = party_slot_004
                #end
            #end
        #end
    #end
    if var002 == -1:
        troop_faction_005 = store_faction_of_troop(troop_id_001)
        if troop_faction_005 == fac.player_supporters_faction and is_between(_g_player_court,p.town_1,p.village_1):
            party_faction_006 = store_faction_of_party(_g_player_court)
            if party_faction_006 == fac.player_supporters_faction:
                var002 = _g_player_court
            #end
        #end
    #end
    if var002 == -1:
        troop_faction_005 = store_faction_of_troop(troop_id_001)
        faction_slot_007 = faction_get_slot(troop_faction_005,11)
        if troop_id_001 != faction_slot_007:
            lord_get_home_center(faction_slot_007)
            if reg0 > -1:
                var002 = reg0
            #end
        #end
    #end
    if var002 == -1:
        troop_faction_005 = store_faction_of_troop(troop_id_001)
        for p_008 in range(p.town_1, p.village_1):
            if var002 == -1:
                party_faction_009 = store_faction_of_party(p_008)
                if troop_faction_005 == party_faction_009:
                    var002 = p_008
                #end
            #end
        #end
    #end
    reg0 = var002


def get_kingdom_lady_social_determinants(troop_id_001):
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    var003 = -1
    troop_slot_004 = -1
    var005 = 0
    if troop_slot_ge(troop_id_001,30,0):
        troop_slot_004 = troop_get_slot(troop_id_001,30)
    elif troop_slot_ge(troop_id_001,31,0):
        troop_slot_004 = troop_get_slot(troop_id_001,31)
    elif troop_slot_ge(troop_id_001,33,0):
        troop_slot_004 = troop_get_slot(troop_id_001,33)
    #end
    if faction_slot_eq(troop_faction_002,4,6):
        faction_slot_006 = faction_get_slot(troop_faction_002,5)
        if troop_slot_004 > -1:
            troop_slot_007 = troop_get_slot(troop_slot_004,10)
            if party_is_active(troop_slot_007):
                party_attached_008 = party_get_attached_to(troop_slot_007)
                if party_attached_008 == faction_slot_006 and is_between(faction_slot_006,p.town_1,p.village_1):
                    var003 = faction_slot_006
                elif troop_slot_eq(trp.player,30,troop_id_001) and is_between(_g_player_court,p.town_1,p.village_1):
                    var003 = _g_player_court
                else:
                    for p_009 in range(p.town_1, p.village_1):
                        party_faction_010 = store_faction_of_party(p_009)
                        if troop_faction_002 == party_faction_010 or not is_between(troop_faction_002,fac.player_supporters_faction,fac.kingdoms_end):
                            party_slot_011 = party_get_slot(p_009,7)
                            if party_slot_011 > -1:
                                troop_get_family_relation_to_troop(troop_id_001,party_slot_011)
                                if is_between(troop_faction_002,fac.player_supporters_faction,fac.kingdoms_end) or troop_slot_eq(trp.player,30,troop_id_001) and faction_slot_eq(troop_faction_002,11,party_slot_011):
                                    val_max(reg0,1)
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if _cheat_mode == 2:
                s3 = str_store_troop_name(troop_id_001)
                s4 = str_store_troop_name(party_slot_011)
                s5 = str_store_party_name(p_009)
                print(gstr.checking_s3_at_s5_with_s11_relationship_with_s4_score_reg0)
                str_clear(11)
            #end
            if reg0 > var005:
                var005 = reg0
                var003 = p_009
            #end
        #end
    #end
    reg0 = troop_slot_004
    reg1 = var003


def age_troop_one_year(troop_id_001):
    troop_type_002 = troop_get_type(troop_id_001)
    troop_slot_003 = troop_get_slot(troop_id_001,18)
    troop_slot_004 = troop_get_slot(troop_id_001,19)
    troop_slot_003 += 1
    random_x_005 = store_random_in_range(1,5)
    if troop_type_002 == 1:
        pass
    #end
    troop_slot_004 += random_x_005
    if troop_slot_003 > 45:
        attribute_lvl_006 = store_attribute_level(troop_id_001,0)
        attribute_lvl_007 = store_attribute_level(troop_id_001,1)
        random_x_008 = store_random_in_range(0,50)
        if random_x_008 < attribute_lvl_006:
            troop_raise_attribute(troop_id_001,0,-1)
        #end
        if random_x_008 < attribute_lvl_007:
            troop_raise_attribute(troop_id_001,1,-1)
        #end
    #end
    val_clamp(troop_slot_004,1,100)
    troop_set_slot(troop_id_001,18,troop_slot_003)
    troop_set_slot(troop_id_001,19,troop_slot_004)
    troop_set_age(troop_id_001,troop_slot_004)


def add_lady_items(troop_id_001):
    troop_equip_items(troop_id_001)
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    random_x_003 = store_random_in_range(0,6)
    if troop_slot_eq(troop_id_001,52,22) or troop_slot_eq(troop_id_001,52,24) and troop_slot_eq(troop_id_001,52,22) or random_x_003 < 2 and not troop_slot_ge(troop_id_001,18,40):
        if troop_faction_002 == fac.kingdom_2 and random_x_003 < 4:
            troop_add_item(troop_id_001,itm.fur_coat,0)
        elif troop_faction_002 == fac.kingdom_3 and random_x_003 < 3:
            troop_add_item(troop_id_001,itm.nomad_robe,0)
        else:
            troop_add_item(troop_id_001,itm.nomad_vest,0)
        #end
    elif troop_faction_002 == fac.kingdom_1:
        if random_x_003 < 2:
            troop_add_item(troop_id_001,itm.lady_dress_ruby,0)
        elif random_x_003 < 4:
            troop_add_item(troop_id_001,itm.lady_dress_green,0)
        else:
            troop_add_item(troop_id_001,itm.lady_dress_blue,0)
        #end
    elif troop_faction_002 == fac.kingdom_2:
        if random_x_003 == 0:
            troop_add_item(troop_id_001,itm.blue_dress,0)
        elif random_x_003 == 1:
            troop_add_item(troop_id_001,itm.lady_dress_green,0)
        elif random_x_003 == 2:
            troop_add_item(troop_id_001,itm.lady_dress_blue,0)
        elif random_x_003 < 5 and not troop_slot_eq(troop_id_001,52,21) and not troop_slot_eq(troop_id_001,52,24):
            troop_add_item(troop_id_001,itm.peasant_dress,0)
        elif random_x_003 < 5:
            troop_add_item(troop_id_001,itm.lady_dress_ruby,0)
        else:
            troop_add_item(troop_id_001,itm.court_dress,0)
        #end
    elif troop_faction_002 == fac.kingdom_3:
        troop_add_item(troop_id_001,itm.khergit_lady_dress,0)
    elif troop_faction_002 == fac.kingdom_4:
        pass
    elif troop_faction_002 == fac.kingdom_5:
        pass
    #end
    troop_equip_items(troop_id_001)
    if troop_has_item_equipped(troop_id_001,itm.nomad_vest) or troop_has_item_equipped(troop_id_001,itm.fur_coat) or troop_has_item_equipped(troop_id_001,itm.nomad_robe):
        pass
    elif troop_slot_eq(troop_id_001,52,25) or troop_slot_eq(troop_id_001,52,21) or random_x_003 < 2:
        if troop_has_item_equipped(troop_id_001,itm.khergit_lady_dress):
            troop_add_item(troop_id_001,itm.khergit_lady_hat,0)
        elif troop_has_item_equipped(troop_id_001,itm.lady_dress_ruby):
            troop_add_item(troop_id_001,itm.turret_hat_ruby,0)
            s4 = str_store_troop_name(troop_id_001)
        elif troop_has_item_equipped(troop_id_001,itm.lady_dress_blue):
            troop_add_item(troop_id_001,itm.turret_hat_blue,0)
            s4 = str_store_troop_name(troop_id_001)
        elif troop_has_item_equipped(troop_id_001,itm.lady_dress_green):
            troop_add_item(troop_id_001,itm.turret_hat_green,0)
            s4 = str_store_troop_name(troop_id_001)
        elif troop_has_item_equipped(troop_id_001,itm.green_dress):
            troop_add_item(troop_id_001,itm.wimple_with_veil,0)
            s4 = str_store_troop_name(troop_id_001)
        elif troop_faction_002 != fac.kingdom_3 and troop_faction_002 != fac.kingdom_6:
            troop_add_item(troop_id_001,itm.wimple_a,0)
            s4 = str_store_troop_name(troop_id_001)
        elif troop_faction_002 == fac.kingdom_6:
            if troop_has_item_equipped(troop_id_001,itm.sarranid_lady_dress):
                troop_add_item(troop_id_001,itm.sarranid_head_cloth,0)
            else:
                troop_add_item(troop_id_001,itm.sarranid_head_cloth_b,0)
            #end
        #end
    #end
    troop_equip_items(troop_id_001)


def init_troop_age(troop_id_001, var002):
    if var002 > 20:
        troop_set_slot(troop_id_001,18,20)
    else:
        troop_set_slot(troop_id_001,18,var002)
    #end
    var003 = var002 - 20
    troop_set_age(troop_id_001,0)
    if var003 > 0:
        for var004 in range(0, var003):
            age_troop_one_year(troop_id_001)
        #end
    #end


def assign_troop_love_interests(troop_id_001):
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    for var003 in range(0, 50):
        random_x_004 = store_random_in_range(trp.knight_1_1_wife,trp.heroes_end)
        if troop_slot_eq(random_x_004,30,-1):
            troop_faction_005 = store_faction_of_troop(random_x_004)
            if troop_faction_002 == troop_faction_005:
                troop_get_family_relation_to_troop(troop_id_001,random_x_004)
                if reg0 == 0:
                    troop_get_relation_with_troop(troop_id_001,random_x_004)
                    if reg0 == 0 and not troop_slot_eq(troop_id_001,35,random_x_004) and not troop_slot_eq(troop_id_001,36,random_x_004) and not troop_slot_eq(troop_id_001,37,random_x_004):
                        if troop_slot_eq(troop_id_001,35,0):
                            troop_set_slot(troop_id_001,35,random_x_004)
                        elif troop_slot_eq(troop_id_001,36,0):
                            troop_set_slot(troop_id_001,36,random_x_004)
                        elif troop_slot_eq(troop_id_001,37,0):
                            troop_set_slot(troop_id_001,37,random_x_004)
                        #end
                    #end
                #end
            #end
        #end
    #end


def faction_conclude_feast(var001, party_id_002):
    s3 = str_store_faction_name(var001)
    s4 = str_store_party_name(party_id_002)
    if _cheat_mode == 1:
        print(gstr.s3_feast_concludes_at_s4)
    #end
    if var001 == fac.player_faction:
        var001 = _players_kingdom
    #end
    party_set_slot(party_id_002,156,0)
    var003 = 0
    var004 = 0
    for trp_005 in range(trp.npc1, trp.heroes_end):
        troop_faction_006 = store_faction_of_troop(trp_005)
        if var001 == troop_faction_006:
            var003 += 1
            if troop_slot_eq(trp_005,12,party_id_002):
                var004 += 1
                if troop_slot_eq(trp_005,2,6):
                    troop_slot_007 = troop_get_slot(trp_005,34)
                    if troop_slot_007 > 0:
                        troop_slot_008 = troop_get_slot(troop_slot_007,10)
                        if party_is_active(troop_slot_008):
                            party_attached_009 = party_get_attached_to(troop_slot_008)
                            if party_attached_009 == party_id_002:
                                troop_faction_010 = store_faction_of_troop(trp_005)
                                troop_faction_011 = store_faction_of_troop(troop_slot_007)
                                if troop_faction_011 == troop_faction_010 and troop_faction_010 == var001:
                                    cur_hours_012 = store_current_hours()
                                    troop_slot_013 = troop_get_slot(trp_005,39)
                                    cur_hours_012 -= troop_slot_013
                                    if cur_hours_012 >= 144:
                                        get_kingdom_lady_social_determinants(trp_005)
                                        var014 = reg1
                                        if party_id_002 == var014 and trp_005 != trp.player and troop_slot_007 != trp.player:
                                            courtship_event_bride_marry_groom(trp_005,troop_slot_007,0)
                                        #end
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
    #end
    party_slot_015 = party_get_slot(party_id_002,7)
    var016 = 0
    if check_quest_active(qst.organize_feast) and quest_slot_eq(qst.organize_feast,1,party_id_002):
        party_slot_015 = trp.player
        var017 = 400
        succeed_quest(qst.organize_feast)
        end_quest(qst.organize_feast)
        internal_politics_rate_feast_to_s9(trp.household_possessions,var017,_players_kingdom,1)
        var016 = reg0
    else:
        var016 = 60
    #end
    if _cheat_mode >= 1:
        s4 = str_store_troop_name(party_slot_015)
        reg4 = var016
        print("@{!}DEBUG - {s4}'s feast has rating of {reg4}")
    #end
    if party_slot_015 >= 0:
        var018 = var016 / 3
        change_troop_renown(party_slot_015,var018)
        for trp_005 in range(trp.npc1, trp.knight_1_1_wife):
            if troop_slot_eq(trp_005,2,2):
                troop_slot_019 = troop_get_slot(trp_005,10)
                if party_is_active(troop_slot_019):
                    party_attached_020 = party_get_attached_to(troop_slot_019)
                    if party_attached_020 == party_id_002:
                        var021 = var016
                        var021 /= 20
                        if party_slot_015 == trp.player:
                            var021 -= 1
                            val_max(var021,0)
                        #end
                    #end
                #end
            #end
            troop_change_relation_with_troop(party_slot_015,trp_005,var021)
            _total_feast_changes += var021
        #end
    #end
    reg3 = var004
    reg4 = var003
    if _cheat_mode == 1:
        print(gstr.attendance_reg3_nobles_out_of_reg4)
    #end


def lady_evaluate_troop_as_suitor(var001, troop_id_002):
    troop_get_romantic_chemistry_with_troop(var001,troop_id_002)
    var003 = reg0
    if call_script(script.cf_test_lord_incompatibility_to_s17,var001,troop_id_002):
        pass
    #end
    var004 = 0 - reg0
    reg2 = var004
    if True:
        troop_slot_005 = troop_get_slot(troop_id_002,7)
        troop_slot_005 /= 20
        if troop_slot_eq(var001,52,21) or troop_slot_eq(var001,52,24):
            troop_slot_005 *= 2
            troop_slot_005 -= 15
        #end
    #end
    var006 = troop_slot_005 + var004
    var006 += var003
    reg0 = var006


def courtship_event_troop_court_lady(troop_id_001, troop_id_002):
    troop_slot_003 = troop_get_slot(troop_id_002,38)
    troop_set_slot(troop_id_002,38,troop_id_001)
    if troop_slot_003 == trp.player and troop_slot_ge(troop_id_002,5,2):
        troop_get_relation_with_troop(troop_id_001,trp.player)
        var004 = reg0
        if troop_slot_eq(troop_id_001,52,3) or troop_slot_eq(troop_id_001,52,2) or troop_slot_eq(troop_id_001,52,5) and var004 > -20:
            add_log_entry(31,troop_id_001,trp.player,troop_id_002,0)
        elif is_between(var004,-5,-25):
            add_log_entry(31,troop_id_001,trp.player,troop_id_002,0)
        #end
    elif troop_slot_003 != trp.player and troop_id_001 != troop_slot_003 and troop_slot_003 >= trp.npc1 and cf_test_lord_incompatibility_to_s17(troop_id_001,troop_slot_003):
        add_log_entry(31,troop_id_001,troop_slot_003,troop_id_002,0)
        troop_get_relation_with_troop(troop_id_001,troop_slot_003)
        if reg0 >= 0:
            troop_change_relation_with_troop(troop_id_001,troop_slot_003,-20)
            _total_courtship_quarrel_changes += -20
        elif troop_slot_eq(troop_id_001,52,2) and troop_id_001 != troop_slot_003 and troop_slot_003 >= trp.npc1:
            troop_get_relation_with_troop(troop_id_001,troop_slot_003)
            if reg0 < 10:
                add_log_entry(31,troop_id_001,troop_slot_003,troop_id_002,0)
                if reg0 >= 0:
                    troop_change_relation_with_troop(troop_id_001,troop_slot_003,-20)
                    _total_courtship_quarrel_changes += -20
                #end
            #end
        #end
    #end
    lady_evaluate_troop_as_suitor(troop_id_002,troop_id_001)
    random_x_005 = store_random_in_range(5,16)
    var006 = reg0 / random_x_005
    troop_get_relation_with_troop(troop_id_002,troop_id_001)
    var007 = reg0
    troop_change_relation_with_troop(troop_id_002,troop_id_001,var006)
    troop_get_relation_with_troop(troop_id_002,troop_id_001)
    var008 = reg0
    if var008 >= 10 and var007 < 10:
        add_log_entry(51,troop_id_002,0,troop_id_001,0)
        if _cheat_mode == 1:
            print(gstr.note__favor_event_logged)
        #end
    elif var008 >= -20 or var008 >= 20:
        get_kingdom_lady_social_determinants(troop_id_002)
        var009 = reg0
        troop_get_relation_with_troop(troop_id_001,var009)
        var010 = reg0
        var011 = -1
        var012 = -1
        var013 = var010
        var014 = -1
        for trp_015 in range(trp.knight_1_1, trp.kingdom_1_pretender):
            if trp_015 != troop_id_001 and troop_slot_eq(trp_015,35,troop_id_002) or troop_slot_eq(trp_015,36,troop_id_002) or troop_slot_eq(trp_015,37,troop_id_002):
                if True:
                    troop_get_relation_with_troop(trp_015,troop_id_002)
                    if reg0 > var011:
                        var012 = trp_015
                        var011 = reg0
                    #end
                #end
            #end
            if True:
                troop_get_relation_with_troop(trp_015,var009)
                if reg0 > var013:
                    var014 = trp_015
                    var013 = reg0
                #end
            #end
        #end
        if var008 < -20 and troop_slot_eq(var009,52,3) or troop_slot_eq(var009,52,5) or troop_slot_eq(var009,52,2) and var014 == -1 and troop_slot_eq(troop_id_001,52,3) or troop_slot_eq(troop_id_001,52,5) or troop_slot_eq(troop_id_001,52,2) and troop_slot_eq(troop_id_001,34,-1) and troop_slot_eq(troop_id_002,34,-1):
            add_log_entry(53,troop_id_002,0,troop_id_001,0)
            troop_set_slot(troop_id_001,34,troop_id_002)
            troop_set_slot(troop_id_002,34,troop_id_001)
            cur_hours_016 = store_current_hours()
            troop_set_slot(troop_id_002,39,cur_hours_016)
            troop_set_slot(troop_id_001,39,cur_hours_016)
            if _cheat_mode == 1:
                print(gstr.result_lady_forced_to_agree_to_engagement)
            #end
        elif var008 < -20:
            add_log_entry(54,troop_id_002,0,troop_id_001,0)
            courtship_event_lady_break_relation_with_suitor(troop_id_002,troop_id_001)
            if _cheat_mode == 1:
                print(gstr.result_lady_rejects_suitor)
            #end
        elif var008 > 20 and var010 > 0 and var012 == -1 and troop_slot_eq(troop_id_001,34,-1) and troop_slot_eq(troop_id_002,34,-1):
            add_log_entry(52,troop_id_002,0,troop_id_001,0)
            troop_set_slot(troop_id_001,34,troop_id_002)
            troop_set_slot(troop_id_002,34,troop_id_001)
            cur_hours_016 = store_current_hours()
            troop_set_slot(troop_id_002,39,cur_hours_016)
            troop_set_slot(troop_id_001,39,cur_hours_016)
            if _cheat_mode == 1:
                s4 = str_store_troop_name(troop_id_002)
                s5 = str_store_troop_name(troop_id_001)
                print(gstr.result_happy_engagement_between_s4_and_s5)
            #end
        elif var008 > 20 and var012 == -1 and troop_slot_eq(var009,52,22) or troop_slot_eq(var009,52,24) and troop_slot_eq(troop_id_001,34,-1) and troop_slot_eq(troop_id_002,34,-1):
            courtship_event_bride_marry_groom(troop_id_002,troop_id_001,1)
            if _cheat_mode == 1:
                s4 = str_store_troop_name(troop_id_002)
                s5 = str_store_troop_name(troop_id_001)
                print(gstr.result_s4_elopes_with_s5)
            #end
        elif troop_slot_eq(troop_id_002,52,21) and var014 == -1 and var010 > 4:
            random_x_005 = store_random_in_range(0,5)
            if random_x_005 == 0 and troop_slot_eq(troop_id_001,34,-1) and troop_slot_eq(troop_id_002,34,-1):
                add_log_entry(59,troop_id_002,0,troop_id_001,0)
                troop_set_slot(troop_id_001,34,troop_id_002)
                troop_set_slot(troop_id_002,34,troop_id_001)
                cur_hours_016 = store_current_hours()
                troop_set_slot(troop_id_002,39,cur_hours_016)
                troop_set_slot(troop_id_001,39,cur_hours_016)
                if _cheat_mode == 1:
                    s4 = str_store_troop_name(troop_id_002)
                    s5 = str_store_troop_name(troop_id_001)
                    print(gstr.result_s4_reluctantly_agrees_to_engagement_with_s5)
                #end
            #end
        elif var008 > 20:
            reg3 = store_random_in_range(0,3)
            if _cheat_mode == 1:
                print(gstr.result_stalemate_patience_roll_equal_reg3)
            #end
            if reg3 == 0:
                add_log_entry(58,troop_id_002,0,troop_id_001,0)
                courtship_event_lady_break_relation_with_suitor(troop_id_002,troop_id_001)
            #end
        #end
    #end


def courtship_event_lady_break_relation_with_suitor(troop_id_001, troop_id_002):
    for slot_no_003 in range(35, 38):
        if troop_slot_eq(troop_id_002,slot_no_003,troop_id_001):
            troop_set_slot(troop_id_002,slot_no_003,0)
        #end
    #end
    assign_troop_love_interests(troop_id_002)
    if troop_slot_eq(troop_id_001,34,troop_id_002):
        troop_set_slot(troop_id_001,34,-1)
        troop_set_slot(troop_id_002,34,-1)
    #end


def courtship_event_bride_marry_groom(troop_id_001, troop_id_002, var003):
    if troop_id_001 == trp.player:
        troop_slot_004 = _g_encountered_party
    else:
        troop_slot_004 = troop_get_slot(troop_id_001,12)
    #end
    troop_faction_005 = store_faction_of_troop(troop_id_002)
    if var003 == 0:
        add_log_entry(61,troop_id_001,troop_slot_004,troop_id_002,0)
    else:
        add_log_entry(57,troop_id_001,troop_slot_004,troop_id_002,0)
    #end
    s3 = str_store_troop_name(troop_id_001)
    s4 = str_store_troop_name(troop_id_002)
    s5 = str_store_party_name(troop_slot_004)
    if _cheat_mode == 1:
        print(gstr.s3_marries_s4_at_s5)
    #end
    troop_set_slot(troop_id_001,30,troop_id_002)
    troop_set_slot(troop_id_002,30,troop_id_001)
    for slot_no_006 in range(35, 38):
        troop_set_slot(troop_id_002,slot_no_006,0)
    #end
    for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
        for slot_no_006 in range(35, 38):
            if troop_slot_eq(trp_007,slot_no_006,troop_id_001):
                courtship_event_lady_break_relation_with_suitor(troop_id_001,trp_007)
            #end
        #end
    #end
    troop_set_slot(troop_id_001,34,-1)
    troop_set_slot(troop_id_002,34,-1)
    for trp_008 in range(trp.knight_1_1, trp.kingdom_1_pretender):
        troop_get_family_relation_to_troop(troop_id_001,trp_008)
        if reg0 > 0:
            var009 = reg0 / 3
            if var003 == 1:
                var009 *= -2
            #end
        #end
        troop_change_relation_with_troop(troop_id_002,troop_id_001,var009)
        _total_courtship_quarrel_changes += var009
    #end
    if troop_id_002 == trp.player or troop_id_001 == trp.player:
        change_player_right_to_rule(trp.player,15)
    #end
    if troop_id_002 == trp.player and check_quest_active(qst.wed_betrothed):
        succeed_quest(qst.wed_betrothed)
        end_quest(qst.wed_betrothed)
    #end
    if check_quest_active(qst.visit_lady) and quest_slot_eq(qst.visit_lady,6,troop_id_001):
        abort_quest(qst.visit_lady,0)
    #end
    if troop_id_002 == trp.player and check_quest_active(qst.visit_lady):
        abort_quest(qst.visit_lady,0)
    #end
    if troop_id_002 == trp.player and check_quest_active(qst.duel_courtship_rival):
        abort_quest(qst.duel_courtship_rival,0)
    #end
    if troop_id_001 == trp.player:
        player_join_faction(troop_faction_005)
        _player_has_homage = 1
    elif troop_id_002 == trp.player:
        if _cheat_mode >= 1:
            s4 = str_store_troop_name(troop_id_001)
            print("@{!} DEBUG - {s4} faction change in marriage case 5")
        #end
        troop_set_faction(troop_id_001,_players_kingdom)
    else:
        if _cheat_mode >= 1:
            s4 = str_store_troop_name(troop_id_001)
            print("@{!}DEBUG - {s4} faction changed by marriage - case 6")
        #end
        troop_set_faction(troop_id_001,troop_faction_005)
    #end
    if troop_id_002 == trp.player or troop_id_001 == trp.player:
        unlock_achievement(39)
        if var003 == 1:
            unlock_achievement(40)
        #end
    #end
    if troop_id_002 == trp.player or troop_id_001 == trp.player:
        start_wedding_cutscene(troop_id_002,troop_id_001)
    #end


def npc_decision_checklist_party_ai(troop_id_001):
    troop_slot_002 = troop_get_slot(troop_id_001,10)
    if _cheat_mode == 1:
        _g_talk_troop = troop_id_001
    #end
    troop_faction_003 = store_faction_of_troop(troop_id_001)
    if troop_id_001 == _g_talk_troop:
        s15 = str_store_string(gstr._i_must_attend_to_this_matter_before_i_worry_about_the_affairs_of_the_realm)
    #end
    party_attached_004 = party_get_attached_to(troop_slot_002)
    if party_attached_004 < 0:
        party_attached_004 = party_get_cur_town(troop_slot_002)
    #end
    party_slot_005 = -1
    if not is_between(party_attached_004,p.town_1,p.salt_mine):
        party_attached_004 = -1
    else:
        party_slot_005 = party_get_slot(party_attached_004,54)
        if not party_is_active(party_slot_005):
            party_slot_005 = -1
        #end
    #end
    party_count_fit_for_battle(troop_slot_002)
    var006 = reg0
    party_get_ideal_size(troop_slot_002)
    var007 = reg0
    var008 = var006 * 100
    var008 /= var007
    if faction_slot_eq(troop_faction_003,82,0) and faction_slot_eq(troop_faction_003,81,0):
        var009 = 0
    else:
        party_num_prisioners_010 = party_get_num_prisoners(troop_slot_002)
        val_max(var006,1)
        var009 = party_num_prisioners_010 / var006
    #end
    var011 = 0
    for fac_012 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if faction_slot_eq(fac_012,21,0):
            faction_relation_013 = store_relation(troop_faction_003,fac_012)
            if faction_relation_013 < 0:
                var011 = 1
            #end
        #end
    #end
    var014 = 0
    if party_slot_eq(troop_slot_002,4,5) or party_slot_eq(troop_slot_002,4,1):
        party_slot_015 = party_get_slot(troop_slot_002,5)
        if is_between(party_slot_015,p.town_1,p.salt_mine):
            party_faction_016 = store_faction_of_party(party_slot_015)
            faction_relation_013 = store_relation(troop_faction_003,party_faction_016)
            if faction_relation_013 < 0:
                distance_parties_017 = store_distance_to_party_from_party(troop_slot_002,party_slot_015)
                if distance_parties_017 < 10 and party_slot_eq(party_slot_015,35,5) or party_slot_eq(party_slot_015,35,0) or party_slot_eq(party_slot_015,35,1):
                    var014 = 1
                #end
            #end
        #end
    #end
    troop_slot_018 = troop_get_slot(troop_id_001,52)
    party_slot_019 = party_get_slot(troop_slot_002,4)
    party_slot_020 = party_get_slot(troop_slot_002,5)
    party_slot_021 = party_get_slot(troop_slot_002,56)
    cur_hours_022 = store_current_hours()
    party_slot_023 = party_get_slot(troop_slot_002,71)
    cur_hours_022 -= party_slot_023
    cur_hours_024 = store_current_hours()
    party_slot_025 = party_get_slot(troop_slot_002,69)
    cur_hours_024 -= party_slot_025
    cur_hours_026 = store_current_hours()
    party_slot_027 = party_get_slot(troop_slot_002,68)
    cur_hours_026 -= party_slot_027
    cur_hours_028 = store_current_hours()
    party_slot_029 = party_get_slot(troop_slot_002,70)
    cur_hours_028 -= party_slot_029
    troop_slot_030 = troop_get_slot(troop_id_001,49)
    var031 = store_mod(troop_slot_030,73)
    if troop_slot_018 == 1:
        var031 += 27
    elif troop_slot_018 != 5 and troop_slot_018 != 2:
        var031 += 14
    #end
    if var031 > cur_hours_026:
        var031 += cur_hours_026
        var031 /= 2
    #end
    if _cheat_mode == 1 and troop_id_001 == _g_talk_troop:
        s4 = str_store_troop_name(troop_id_001)
        reg3 = cur_hours_022
        reg4 = cur_hours_028
        reg5 = cur_hours_026
        reg6 = cur_hours_024
        reg7 = var031
    #end
    s17 = str_store_string(gstr.the_other_matter_took_precedence)
    var032 = 0
    if party_attached_004 >= 0 and var006 > 10 or var008 <= 30:
        party_slot_033 = 7
        party_id_034 = party_attached_004
        if troop_id_001 == _g_talk_troop:
            pass
            s14 = str_store_string(gstr.i_need_to_raise_some_men_before_attempting_anything_else)
            s16 = str_store_string(gstr.i_need_to_raise_some_men_before_attempting_anything_else)
        #end
    elif party_slot_005 > -1:
        party_slot_033 = 7
        party_id_034 = party_attached_004
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.i_cannot_leave_this_fortress_now_as_it_is_under_siege)
            s16 = str_store_string(gstr.after_all_we_are_under_siege)
        #end
    elif party_slot_019 == 14 and not party_is_in_any_town(troop_slot_002) and party_slot_020 >= 0 and party_is_active(party_slot_020):
        party_faction_035 = store_faction_of_party(party_slot_020)
        if troop_faction_003 == party_faction_035:
            party_slot_033 = 14
            party_id_034 = party_slot_020
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.we_are_not_strong_enough_to_face_the_enemy_out_in_the_open)
                s16 = str_store_string(gstr.i_should_probably_seek_shelter_behind_some_stout_walls)
            #end
        #end
    elif is_between(party_attached_004,p.town_1,p.village_1):
        party_slot_036 = party_get_slot(party_attached_004,67)
        party_slot_036 = party_get_slot(party_attached_004,67)
        if party_slot_036 >= 50:
            party_slot_033 = 7
            party_id_034 = party_attached_004
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.enemies_are_reported_to_be_nearby_and_we_should_stand_ready_to_either_man_the_walls_or_sortie_out_to_do_battle)
                s16 = str_store_string(gstr.the_enemy_is_nearby)
            #end
        #end
    elif faction_slot_eq(troop_faction_003,8,troop_id_001):
        str_clear(15)
        if faction_slot_eq(troop_faction_003,4,1):
            party_set_ai_initiative(troop_slot_002,10)
            party_slot_020 = party_get_slot(troop_slot_002,5)
            var037 = party_slot_020
            find_center_to_defend(troop_id_001)
            var038 = reg0
            var039 = 0
            if party_slot_020 < 0:
                random_x_040 = store_random_in_range(0,8)
                if _g_gathering_new_started == 1 or random_x_040 == 0:
                    var041 = 0
                    var042 = 0
                    for trp_043 in range(trp.npc1, trp.knight_1_1_wife):
                        troop_faction_044 = store_faction_of_troop(trp_043)
                        if troop_faction_044 == troop_faction_003:
                            troop_slot_045 = troop_get_slot(trp_043,10)
                            if party_is_active(troop_slot_045):
                                var042 += 1
                                if party_slot_eq(troop_slot_045,4,11) and party_slot_eq(troop_slot_045,5,troop_slot_002) and party_is_active(troop_slot_002):
                                    distance_parties_046 = store_distance_to_party_from_party(troop_slot_045,troop_slot_002)
                                    if distance_parties_046 < 15:
                                        var041 += 1
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            var047 = -1
            if var042 > 0:
                var047 = var041 * 100
                var047 /= var042
            #end
            if var047 <= 35:
                var048 = var038
                if _g_gathering_new_started == 1:
                    var049 = 100000
                    for p_050 in range(p.town_1, p.salt_mine):
                        party_faction_051 = store_faction_of_party(p_050)
                        if party_faction_051 == troop_faction_003:
                            if p_050 != var038:
                                distance_parties_052 = store_distance_to_party_from_party(troop_slot_002,p_050)
                                if distance_parties_052 < var049:
                                    var049 = distance_parties_052
                                    var048 = p_050
                                #end
                            #end
                        #end
                    #end
                else:
                    var053 = 150
                    if var047 >= 15:
                        var053 = 35 - var047
                        var053 += 5
                        var053 *= 6
                    #end
                    if var038 >= 0:
                        reg12 = store_distance_to_party_from_party(troop_slot_002,var038)
                    else:
                        reg12 = 0
                    #end
                    var054 = 0
                    for p_050 in range(p.town_1, p.village_1):
                        party_faction_051 = store_faction_of_party(p_050)
                        if party_faction_051 == troop_faction_003:
                            if True:
                                distance_parties_052 = store_distance_to_party_from_party(troop_slot_002,p_050)
                                if var038 >= 0:
                                    reg13 = store_distance_to_party_from_party(p_050,var038)
                                else:
                                    reg13 = 0
                                #end
                            #end
                            reg11 = reg13 - reg12
                            if reg11 >= 40 or distance_parties_052 >= var053 or p_050 == var038:
                                pass
                            else:
                                var054 += 1
                            #end
                        #end
                    #end
                    if var054 >= 0:
                        random_x_055 = store_random_in_range(0,var054)
                        random_x_055 += 1
                        var054 = 0
                        for p_050 in range(p.town_1, p.village_1):
                            party_faction_051 = store_faction_of_party(p_050)
                            if party_faction_051 == troop_faction_003:
                                if p_050 != var038:
                                    distance_parties_052 = store_distance_to_party_from_party(troop_slot_002,p_050)
                                    if distance_parties_052 < var053:
                                        if var038 >= 0:
                                            reg13 = store_distance_to_party_from_party(p_050,var038)
                                        else:
                                            reg13 = 0
                                        #end
                                    #end
                                #end
                                reg11 = reg13 - reg12
                                if reg11 < 40:
                                    random_x_055 -= 1
                                    if random_x_055 == 0:
                                        var048 = p_050
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
                var037 = var048
                var039 = 1
            #end
        elif is_between(party_slot_020,p.town_1,p.salt_mine):
            pos1 = party_get_position(troop_slot_002)
            pos2 = party_get_position(party_slot_020)
            distance_parties_052 = get_distance_between_positions(1,2)
            if distance_parties_052 <= 3:
                var037 = -1
            #end
        #end
        if var037 == -1:
            party_slot_033 = -1
        else:
            party_slot_033 = 16
        #end
        party_id_034 = var037
        if troop_id_001 == _g_talk_troop:
            if var037 == -1:
                s14 = str_store_string(gstr.as_the_marshall_i_am_assembling_the_army_of_the_realm)
            else:
                if troop_faction_003 == _players_kingdom and var039 == 1 and _number_of_report_to_army_quest_notes <= 13 and check_quest_active(qst.report_to_army):
                    s10 = str_store_party_name_link(var037)
                    faction_slot_056 = faction_get_slot(troop_faction_003,8)
                    s11 = str_store_troop_name_link(faction_slot_056)
                    cur_hours_057 = store_current_hours()
                    game_get_date_text(0,cur_hours_057)
                    s14 = str_store_string(gstr.as_the_marshall_i_am_assembling_the_army_of_the_realm_and_travel_to_lands_near_s10_to_inform_more_vassals)
                    s14 = str_store_string("@[[[{s1}]]] {s11}: {s14}")
                    add_quest_note_from_sreg(qst.report_to_army,_number_of_report_to_army_quest_notes,14,0)
                    _number_of_report_to_army_quest_notes += 1
                #end
                reg0 = var037
                s10 = str_store_party_name(var037)
                s14 = str_store_string(gstr.as_the_marshall_i_am_assembling_the_army_of_the_realm_and_travel_to_lands_near_s10_to_inform_more_vassals)
            #end
            s16 = str_store_string(gstr.i_intend_to_assemble_the_army_of_the_realm)
        #end
    elif faction_slot_eq(troop_faction_003,8,troop_id_001) and faction_slot_eq(troop_faction_003,4,2):
        faction_slot_058 = faction_get_slot(troop_faction_003,5)
        party_slot_033 = 1
        party_id_034 = faction_slot_058
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.as_the_marshall_i_am_leading_the_siege)
            s16 = str_store_string(gstr.i_intend_to_begin_the_siege)
        #end
    elif faction_slot_eq(troop_faction_003,8,troop_id_001) and faction_slot_eq(troop_faction_003,4,3):
        faction_slot_058 = faction_get_slot(troop_faction_003,5)
        party_slot_033 = 5
        party_id_034 = faction_slot_058
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.as_the_marshall_i_am_leading_our_raid)
            s16 = str_store_string(gstr.i_intend_to_start_our_raid)
        #end
    elif faction_slot_eq(troop_faction_003,8,troop_id_001) and faction_slot_eq(troop_faction_003,4,5):
        faction_slot_058 = faction_get_slot(troop_faction_003,5)
        if party_is_active(faction_slot_058):
            party_slot_005 = party_get_battle_opponent(faction_slot_058)
            if party_slot_005 > 0 and party_is_active(party_slot_005):
                party_slot_033 = 10
                party_id_034 = party_slot_005
                if troop_id_001 == _g_talk_troop:
                    s14 = str_store_string(gstr.as_the_marshall_i_am_leading_our_forces_to_engage_the_enemy_in_battle)
                    s16 = str_store_string(gstr.i_intend_to_lead_our_forces_out_to_engage_the_enemy)
                #end
            #end
        else:
            party_slot_033 = 4
            party_id_034 = faction_slot_058
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.as_the_marshall_i_am_leading_our_forces_in_search_of_the_enemy)
                s16 = str_store_string(gstr.i_intend_to_lead_our_forces_out_to_find_the_enemy)
            #end
        #end
    elif faction_slot_eq(troop_faction_003,8,troop_id_001) and faction_slot_eq(troop_faction_003,4,4):
        faction_slot_058 = faction_get_slot(troop_faction_003,5)
        if party_is_active(faction_slot_058):
            party_slot_033 = 10
            party_id_034 = faction_slot_058
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.as_the_marshall_i_am_leading_our_forces_to_engage_the_enemy_in_battle)
                s16 = str_store_string(gstr.i_intend_to_lead_our_forces_out_to_engage_the_enemy)
            #end
        #end
    elif False: # Johandros not know what to do > was else
        var059 = 30
        lord_get_home_center(troop_id_001)
        var060 = reg0
        if var060 > -1 and party_slot_eq(var060,7,troop_id_001):
            var061 = 0
            pos0 = party_get_position(var060)
            pos1 = party_get_position(troop_slot_002)
            distance_parties_052 = get_distance_between_positions(0,1)
            if distance_parties_052 <= 9000:
                var061 = distance_parties_052 / 600
                var061 = 15 - var061
            else:
                var061 = 0
            #end
        #end
        var059 += var061
        var062 = 35
        if faction_slot_eq(troop_faction_003,4,4) or faction_slot_eq(troop_faction_003,4,5) or faction_slot_eq(troop_faction_003,4,3) or faction_slot_eq(troop_faction_003,4,2) or faction_slot_eq(troop_faction_003,4,1):
            var062 = 0
            if faction_slot_eq(troop_faction_003,8,trp.player):
                campaign_ai = game_get_reduce_campaign_ai()
                if campaign_ai == 0:
                    var062 = 0
                elif campaign_ai == 1:
                    var062 = -10
                elif campaign_ai == 2:
                    var062 = -15
                #end
            #end
        #end
        var059 += var062
        val_max(var059,25)
        if var008 < var059:
            if True:
                var064 = var059 / 3
                if var008 >= var064:
                    troop_slot_065 = troop_get_slot(troop_id_001,11)
                    if troop_slot_065 <= 1800:
                        var032 = 1
                    #end
                #end
            #end
        #end
        party_slot_033 = 7
        party_id_034 = var060
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.i_dont_have_enough_troops_and_i_need_to_get_some_more)
            s16 = str_store_string(gstr.i_am_running_low_on_troops)
        #end
        if var032 == 0:
            pass
        elif var032 == 0 and party_slot_ge(troop_slot_002,244,trp.kingdom_heroes_including_player_begin):
            party_slot_066 = party_get_slot(troop_slot_002,245)
            party_slot_067 = party_get_slot(troop_slot_002,246)
            party_slot_068 = party_get_slot(troop_slot_002,247)
            if party_slot_067 >= 0:
                cur_hours_069 = store_current_hours()
                cur_hours_069 -= party_slot_068
                if party_is_active(party_slot_067):
                    party_slot_070 = party_get_slot(party_slot_067,35)
                    party_faction_071 = store_faction_of_party(party_slot_067)
                    faction_relation_072 = store_relation(troop_faction_003,party_faction_071)
                    var073 = 1
                    if cur_hours_069 > 48:
                        var073 = 0
                    elif party_slot_066 == 5 and faction_relation_072 >= 0 or party_slot_070 >= 2:
                        var073 = 0
                    elif party_slot_066 == 1 and faction_relation_072 >= 0:
                        var073 = 0
                    elif party_slot_066 == 7 or party_slot_066 == 14 or party_slot_066 == 11 or party_slot_066 == 16 and faction_relation_072 <= 0:
                        var073 = 0
                    #end
                #end
            #end
        #end
        if var073 == 1:
            party_slot_033 = party_slot_066
            party_id_034 = party_slot_067
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.we_are_following_your_direction)
            #end
        #end
    elif var032 == 0 and var014 == 0 and check_quest_active(qst.wed_betrothed) and quest_slot_eq(qst.wed_betrothed,6,troop_id_001):
        quest_slot_074 = quest_get_slot(qst.wed_betrothed,2)
        get_kingdom_lady_social_determinants(quest_slot_074)
        var075 = reg1
        party_slot_033 = 7
        party_id_034 = var075
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.i_need_to_make_preparations_for_your_wedding)
            s16 = str_store_string(gstr.after_all_i_need_to_make_preparations_for_your_wedding)
        #end
    elif var032 == 0 and var014 == 0 and check_quest_active(qst.wed_betrothed_female) and quest_slot_eq(qst.wed_betrothed_female,6,troop_id_001) and faction_slot_eq(troop_faction_003,4,6):
        faction_slot_076 = faction_get_slot(troop_faction_003,5)
        party_slot_033 = 7
        party_id_034 = faction_slot_076
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.i_am_heading_to_the_site_of_our_wedding)
            s16 = str_store_string(gstr.after_all_we_are_soon_to_be_wed)
        #end
    elif var032 == 0 and var014 == 0 and faction_slot_eq(troop_faction_003,4,6):
        faction_slot_076 = faction_get_slot(troop_faction_003,5)
        if party_slot_eq(faction_slot_076,7,troop_id_001):
            party_slot_033 = 7
            party_id_034 = faction_slot_076
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_am_hosting_a_feast_there)
                s16 = str_store_string(gstr.i_have_a_feast_to_host)
            #end
        #end
    elif var032 == 0 and var014 == 0 and faction_slot_eq(troop_faction_003,4,6):
        troop_slot_077 = troop_get_slot(troop_id_001,34)
        if is_between(troop_slot_077,trp.knight_1_1_wife,trp.heroes_end):
            faction_slot_076 = faction_get_slot(troop_faction_003,5)
            party_slot_033 = 7
            party_id_034 = faction_slot_076
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_am_to_be_the_bridegroom_there)
                s16 = str_store_string(gstr.my_wedding_day_draws_near)
            #end
        #end
    elif var032 == 0 and var009 > 35 and var014 == 0:
        lord_get_home_center(troop_id_001)
        var060 = reg0
        if var060 > -1:
            party_slot_033 = 7
            party_id_034 = var060
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_have_too_much_loot_and_too_many_prisoners_and_need_to_secure_them)
                s16 = str_store_string(gstr.i_should_think_of_dropping_off_some_of_my_prisoners)
            #end
        #end
    elif var032 == 0:
        var078 = -1
        var079 = 100
        if var014 == 0:
            for p_080 in range(p.town_1, p.village_1):
                if party_slot_eq(p_080,7,troop_id_001):
                    party_slot_081 = party_get_slot(p_080,56)
                    if party_slot_081 < var079:
                        var078 = p_080
                        var079 = party_slot_081
                    #end
                #end
            #end
        #end
        if var078 > -1:
            party_slot_033 = 7
            party_id_034 = var078
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_need_to_reinforce_it_as_it_is_poorly_garrisoned)
                s16 = str_store_string(gstr.there_is_a_hole_in_our_defenses)
            #end
        #end
    elif var032 == 0 and party_slot_019 == 12:
        faction_slot_056 = faction_get_slot(troop_faction_003,8)
        if faction_slot_056 >= 0:
            troop_slot_082 = troop_get_slot(faction_slot_056,10)
            if party_is_active(troop_slot_082):
                npc_decision_checklist_troop_follow_or_not(troop_id_001)
                if reg0 == 1:
                    party_slot_033 = 12
                    party_id_034 = troop_slot_082
                    if _g_talk_troop == troop_id_001:
                        s14 = str_store_string(gstr.i_am_following_the_marshals_orders)
                        s16 = str_store_string(gstr.the_marshal_has_given_me_this_command)
                    #end
                #end
            #end
        #end
    elif faction_slot_eq(troop_faction_003,4,5) and is_between(faction_slot_058,p.village_1,p.salt_mine):
        npc_decision_checklist_troop_follow_or_not(troop_id_001)
        if reg0 == 1:
            faction_slot_058 = faction_get_slot(troop_faction_003,5)
            party_slot_083 = party_get_slot(faction_slot_058,34)
            if party_is_active(party_slot_083):
                party_slot_084 = party_get_slot(faction_slot_058,67)
                if party_slot_084 < 4000:
                    party_slot_033 = 10
                    party_id_034 = party_slot_083
                    if troop_id_001 == _g_talk_troop:
                        s14 = str_store_string(gstr.our_realm_needs_my_support_there_is_enemy_raiding_one_of_our_villages_which_is_not_to_far_from_here_i_am_going_there)
                        s16 = str_store_string(gstr.the_marshal_has_issued_a_summons)
                    #end
                #end
            #end
        #end
    elif var032 == 0:
        npc_decision_checklist_troop_follow_or_not(troop_id_001)
        if reg0 == 1:
            faction_slot_056 = faction_get_slot(troop_faction_003,8)
            if faction_slot_056 >= 0:
                troop_slot_082 = troop_get_slot(faction_slot_056,10)
                party_slot_033 = 11
                party_id_034 = troop_slot_082
                if _g_talk_troop == troop_id_001:
                    s14 = str_store_string(gstr.i_am_answering_the_marshals_summons)
                    s16 = str_store_string(gstr.the_marshal_has_issued_a_summons)
                #end
            #end
        #end
    elif var032 == 0 and var011 == 1:
        var085 = -1
        for trp_086 in range(trp.npc1, trp.knight_1_1_wife):
            if troop_slot_eq(trp_086,2,2):
                troop_faction_087 = store_faction_of_troop(trp_086)
                if troop_faction_087 == troop_faction_003 and trp_086 != troop_id_001:
                    troop_slot_088 = troop_get_slot(trp_086,10)
                    if troop_slot_088 > 1 and party_is_active(troop_slot_088) and party_slot_eq(troop_slot_088,4,5) or party_slot_eq(troop_slot_088,4,1):
                        troop_get_relation_with_troop(troop_id_001,trp_086)
                        if reg0 > 4:
                            troop_slot_089 = troop_get_slot(troop_id_001,7)
                            troop_slot_090 = troop_get_slot(trp_086,7)
                            if troop_slot_089 <= troop_slot_090:
                                distance_parties_017 = store_distance_to_party_from_party(troop_slot_002,troop_slot_088)
                                if distance_parties_017 < 5:
                                    var085 = troop_slot_088
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if var085 > 0:
            party_slot_033 = 11
            party_id_034 = var085
            if troop_id_001 == _g_talk_troop:
                troop_id_091 = party_stack_get_troop_id(party_id_034,0)
                s10 = str_store_troop_name(troop_id_091)
                troop_get_family_relation_to_troop(troop_id_091,_g_talk_troop)
                if reg0 == 0:
                    s11 = str_store_string(gstr.comradeinarms)
                #end
            #end
            s14 = str_store_string(gstr.i_am_supporting_my_s11_s10)
            s16 = str_store_string(gstr.i_believe_that_one_of_my_comrades_is_in_need)
        #end
    elif var032 == 0 and var011 == 1 and var014 == 0:
        var092 = -1
        var093 = 50
        for p_080 in range(p.town_1, p.village_1):
            party_faction_094 = store_faction_of_party(p_080)
            faction_relation_013 = store_relation(troop_faction_003,party_faction_094)
            if faction_relation_013 < 0:
                party_slot_095 = party_get_slot(p_080,56)
                party_slot_095 *= 3
                party_slot_095 *= 2
                if party_slot_095 < party_slot_021 and party_slot_095 < 750 and party_slot_eq(p_080,35,0):
                    distance_parties_017 = store_distance_to_party_from_party(p_080,troop_slot_002)
                    if distance_parties_017 < var093:
                        var092 = p_080
                        var093 = distance_parties_017
                    #end
                #end
            #end
        #end
        if is_between(var092,p.town_1,p.salt_mine):
            party_slot_033 = 1
            party_id_034 = var092
            if _cheat_mode == 1:
                s20 = str_store_faction_name(troop_faction_003)
                s21 = str_store_party_name(party_id_034)
                print(gstr.s20_decided_to_attack_s21)
            #end
        #end
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.a_fortress_is_vulnerable)
            s16 = str_store_string(gstr.i_believe_that_the_enemy_may_be_vulnerable)
        #end
    elif False: # Johandros not know what to do > was else
        var096 = -1
        var097 = 300
        troop_slot_065 = troop_get_slot(troop_id_001,11)
        troop_slot_065 /= 10
        var097 += troop_slot_065
        if var014 == 0:
            if True:
                faction_slot_056 = faction_get_slot(troop_faction_003,8)
                reg17 = 0
                if party_slot_eq(troop_slot_002,4,11) and party_slot_eq(troop_slot_002,5,faction_slot_056):
                    reg17 = 1
                elif party_slot_eq(troop_slot_002,31,1):
                    reg17 = 1
                #end
            #end
            if reg17 == 1:
                if faction_slot_056 != trp.player and not party_slot_eq(troop_slot_002,31,1):
                    var097 += 125
                else:
                    var097 += 250
                #end
            #end
        #end
        for p_050 in range(p.town_1, p.salt_mine):
            if party_slot_eq(p_050,7,troop_id_001):
                reg17 = 0
                if is_between(p_050,p.village_1,p.salt_mine) and party_slot_eq(p_050,35,0):
                    reg17 = 1
                elif party_slot_eq(p_050,54,-1):
                    reg17 = 1
                #end
            #end
            if reg17 == 1:
                party_slot_098 = party_get_slot(p_050,48)
                party_slot_099 = party_get_slot(p_050,47)
                var100 = party_slot_099 + party_slot_098
                if var100 > var097:
                    var096 = p_050
                    var097 = var100
                #end
            #end
        #end
        if is_between(var096,p.town_1,p.salt_mine):
            if is_between(var096,p.town_1,p.village_1):
                party_slot_033 = 7
                party_id_034 = var096
            else:
                party_slot_033 = 16
                party_id_034 = var096
            #end
        #end
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.i_need_to_inspect_my_properties_and_collect_my_dues)
            s16 = str_store_string(gstr.it_has_been_too_long_since_i_have_inspected_my_estates)
        #end
    elif var032 == 0 and cur_hours_022 > 504 or var031 < 25 and cur_hours_022 > 168 and var014 == 0:
        lord_get_home_center(troop_id_001)
        var060 = reg0
        if var060 > -1:
            party_slot_033 = 7
            party_id_034 = var060
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.my_men_are_weary_so_we_are_returning_home)
                s16 = str_store_string(gstr.my_men_are_becoming_weary)
            #end
        #end
    elif var032 == 0 and cur_hours_026 > 12 or cur_hours_022 < 96 and var014 == 0 and var011 == 1 and troop_slot_018 == 5 or troop_slot_018 == 2:
        var101 = -1
        var097 = 0
        for p_102 in range(p.village_1, p.salt_mine):
            party_faction_103 = store_faction_of_party(p_102)
            faction_relation_013 = store_relation(party_faction_103,troop_faction_003)
            if faction_relation_013 < 0 and not party_slot_ge(p_102,35,2):
                party_slot_104 = party_get_slot(p_102,7)
                troop_get_relation_with_troop(troop_id_001,party_slot_104)
                var105 = reg0
                if var105 < var097:
                    var097 = var105
                    var101 = p_102
                #end
            #end
        #end
        if is_between(var101,p.town_1,p.salt_mine):
            party_slot_033 = 5
            party_id_034 = var101
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_have_a_score_to_settle_with_the_lord_there)
                s16 = str_store_string(gstr.i_am_thinking_of_settling_an_old_score)
            #end
        #end
    elif var032 == 0 and var011 == 1 and var014 == 0 and cur_hours_026 > 12 or cur_hours_022 < 96 and var031 > 40 and troop_slot_018 == 5 or troop_slot_018 == 3 or troop_slot_018 == 4 or troop_slot_018 == 2:
        troop_slot_106 = troop_get_slot(troop_id_001,11)
        if troop_slot_106 < 500:
            var097 = 0
            var101 = -1
            for p_102 in range(p.village_1, p.salt_mine):
                party_faction_103 = store_faction_of_party(p_102)
                faction_relation_013 = store_relation(party_faction_103,troop_faction_003)
                if faction_relation_013 < 0 and party_slot_eq(p_102,35,0) or party_slot_eq(p_102,35,1):
                    reg17 = party_get_slot(p_102,50)
                    distance_parties_017 = store_distance_to_party_from_party(troop_slot_002,p_102)
                    reg17 -= distance_parties_017
                    if reg17 > var097:
                        var097 = reg17
                        var101 = p_102
                    #end
                #end
            #end
        #end
        if var101 > -1:
            party_slot_033 = 5
            party_id_034 = var101
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_am_short_of_money_and_i_hear_that_there_is_much_wealth_there)
                s16 = str_store_string(gstr.i_need_to_refill_my_purse_preferably_with_the_enemys_money)
            #end
        #end
    elif var032 == 0 and var011 == 1 and var014 == 0 and var031 > 65:
        var097 = 0
        var101 = -1
        for p_102 in range(p.village_1, p.salt_mine):
            party_faction_103 = store_faction_of_party(p_102)
            faction_relation_013 = store_relation(party_faction_103,troop_faction_003)
            if faction_relation_013 < 0 and not party_slot_eq(p_102,35,2):
                party_slot_107 = party_get_slot(p_102,50)
                party_slot_107 *= 2
                distance_parties_017 = store_distance_to_party_from_party(troop_slot_002,p_102)
                party_slot_107 -= distance_parties_017
                if party_slot_107 > var097:
                    var097 = party_slot_107
                    var101 = p_102
                #end
            #end
        #end
        if var101 > -1:
            party_slot_033 = 5
            party_id_034 = var101
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.by_striking_at_the_enemys_richest_lands_perhaps_i_can_draw_them_out_to_battle)
                s16 = str_store_string(gstr.i_am_thinking_of_going_on_the_attack)
            #end
        #end
    elif var032 == 0 and troop_slot_018 == 7 and var011 == 1 and var014 == 0:
        var108 = -1
        for fac_109 in range(fac.player_supporters_faction, fac.kingdoms_end):
            faction_relation_013 = store_relation(troop_faction_003,fac_109)
            if faction_relation_013 < 0 and faction_slot_eq(fac_109,21,0):
                slot_no_110 = fac_109 + 140
                slot_no_110 -= fac.player_supporters_faction
                faction_slot_111 = faction_get_slot(troop_faction_003,slot_no_110)
                slot_no_112 = troop_faction_003 + 140
                slot_no_112 -= fac.player_supporters_faction
                faction_slot_113 = faction_get_slot(fac_109,slot_no_112)
                if faction_slot_111 > 80 and faction_slot_111 < faction_slot_113:
                    var108 = fac_109
                #end
            #end
        #end
        if var108 > -1:
            var101 = -1
            var097 = 50
            for p_114 in range(p.village_1, p.salt_mine):
                party_faction_103 = store_faction_of_party(p_114)
                if party_faction_103 == var108 and not party_slot_eq(p_114,35,2):
                    distance_parties_017 = store_distance_to_party_from_party(troop_slot_002,p_114)
                    if distance_parties_017 < var097:
                        var097 = distance_parties_017
                        var101 = p_114
                    #end
                #end
            #end
        #end
        if var101 > -1:
            party_slot_033 = 5
            party_id_034 = var101
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.perhaps_if_i_strike_one_more_blow_we_may_end_this_war_on_our_terms_)
                s16 = str_store_string(gstr.we_may_be_able_to_bring_this_war_to_a_close_with_a_few_more_blows)
            #end
        #end
    elif var032 == 0 and faction_slot_eq(troop_faction_003,4,6):
        faction_slot_076 = faction_get_slot(troop_faction_003,5)
        party_slot_115 = party_get_slot(faction_slot_076,7)
        if var014 == 0:
            troop_get_relation_with_troop(troop_id_001,party_slot_115)
            var116 = reg0
            if var116 >= 0:
                party_slot_033 = 7
                party_id_034 = faction_slot_076
                if troop_id_001 == _g_talk_troop:
                    s14 = str_store_string(gstr.i_wish_to_attend_the_feast_there)
                    s16 = str_store_string(gstr.there_is_a_feast_which_i_wish_to_attend)
                #end
            #end
        #end
    elif var032 == 0 and not troop_slot_eq(trp.player,34,troop_id_001) and troop_slot_eq(troop_id_001,30,-1) and not is_between(troop_id_001,trp.kingdom_1_lord,trp.knight_1_1) and not is_between(troop_id_001,trp.kingdom_1_pretender,trp.knight_1_1_wife) and cur_hours_028 > 72 and var014 == 0:
        var096 = -1
        var097 = 150
        for slot_no_117 in range(35, 38):
            troop_slot_118 = troop_get_slot(troop_id_001,slot_no_117)
            if is_between(troop_slot_118,trp.knight_1_1_wife,trp.heroes_end):
                troop_slot_119 = troop_get_slot(troop_slot_118,12)
                if is_between(troop_slot_119,p.town_1,p.salt_mine):
                    party_faction_120 = store_faction_of_party(troop_slot_119)
                    if troop_faction_003 == party_faction_120:
                        distance_parties_017 = store_distance_to_party_from_party(troop_slot_002,troop_slot_119)
                        if distance_parties_017 < var097:
                            var096 = troop_slot_119
                            var097 = distance_parties_017
                        #end
                    #end
                #end
            #end
        #end
        if var096 > -1:
            party_slot_033 = 7
            party_id_034 = var096
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.there_is_a_fair_lady_there_whom_i_wish_to_court)
                s16 = str_store_string(gstr.i_have_the_inclination_to_pay_court_to_a_fair_lady)
            #end
        #end
    elif var032 == 0:
        party_slot_015 = -1
        var097 = 60
        if var014 == 0 and var031 > 40:
            for p_121 in range(p.town_1, p.salt_mine):
                party_faction_051 = store_faction_of_party(p_121)
                if party_faction_051 == troop_faction_003 and party_slot_ge(p_121,55,0):
                    party_slot_122 = party_get_slot(p_121,66)
                    party_slot_123 = party_get_slot(p_121,67)
                    var124 = party_slot_123 * 14
                    var124 /= 10
                    party_slot_125 = party_get_slot(troop_slot_002,56)
                    if party_is_in_town(troop_slot_002,p_121) or party_slot_122 > var124 and party_slot_125 >= 100:
                        reg17 = party_get_slot(p_121,7)
                        troop_get_relation_with_troop(reg17,troop_id_001)
                        if troop_slot_018 == 7 or reg0 > -5:
                            distance_parties_017 = store_distance_to_party_from_party(troop_slot_002,p_121)
                            if distance_parties_017 < var097:
                                party_slot_015 = p_121
                                var097 = distance_parties_017
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if is_between(party_slot_015,p.town_1,p.salt_mine):
            party_slot_033 = 4
            party_id_034 = party_slot_015
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.we_have_heard_reports_that_the_enemy_is_in_the_area)
                s16 = str_store_string(gstr.i_have_heard_reports_of_enemy_incursions_into_our_territory)
            #end
        #end
    elif var032 == 0 and cur_hours_024 > 168 and var014 == 0:
        lord_get_home_center(troop_id_001)
        var060 = reg0
        if var060 > -1:
            party_slot_033 = 7
            party_id_034 = var060
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_need_to_spend_some_time_with_my_household)
                s16 = str_store_string(gstr.it_has_been_a_long_time_since_i_have_been_able_to_spend_time_with_my_household)
            #end
        #end
    elif var032 == 0 and var011 == 1 and var031 > 65 and var014 == 0:
        p_121 = -1
        var097 = 75
        for p_126 in range(p.village_1, p.salt_mine):
            party_faction_103 = store_faction_of_party(p_126)
            faction_relation_013 = store_relation(party_faction_103,troop_faction_003)
            if faction_relation_013 < 0:
                distance_parties_017 = store_distance_to_party_from_party(p_126,troop_slot_002)
                if distance_parties_017 < var097:
                    var097 = distance_parties_017
                    p_121 = p_126
                #end
            #end
        #end
        if is_between(p_121,p.village_1,p.salt_mine):
            party_slot_033 = 4
            party_id_034 = p_121
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_am_watching_the_borders)
                s16 = str_store_string(gstr.i_may_be_needed_to_watch_the_borders)
            #end
        #end
    elif 1 == 0:
        pass
    elif var032 == 0:
        lord_get_home_center(troop_id_001)
        var060 = reg0
        if is_between(var060,p.town_1,p.salt_mine) and var014 == 0:
            party_slot_033 = 4
            party_id_034 = var060
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_will_guard_the_areas_near_my_home)
                s16 = str_store_string(gstr.i_am_perhaps_needed_most_at_home)
            #end
        #end
    elif var032 == 0 and var014 == 0:
        lord_get_home_center(troop_id_001)
        var060 = reg0
        if is_between(var060,p.town_1,p.village_1):
            party_slot_033 = 7
            party_id_034 = var060
            if troop_id_001 == _g_talk_troop:
                s14 = str_store_string(gstr.i_cant_think_of_anything_better_to_do)
            #end
        #end
    elif var032 == 0 and var014 == 1:
        party_slot_033 = party_get_slot(troop_slot_002,4)
        party_id_034 = party_get_slot(troop_slot_002,5)
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.i_am_completing_what_i_have_already_begun)
        #end
    elif var032 == 0:
        party_slot_033 = -1
        party_id_034 = -1
        if troop_id_001 == _g_talk_troop:
            s14 = str_store_string(gstr.i_dont_even_have_a_home_to_which_to_return)
        #end
    #end
    if _cheat_mode == 2:
        s10 = str_store_troop_name(troop_id_001)
        print(gstr.debug__s10_decides_s14_faction_ai_s15)
    #end
    reg0 = party_slot_033
    reg1 = party_id_034


def npc_decision_checklist_troop_follow_or_not(troop_id_001):
    troop_slot_004_list2 = [
    6,
    9,
    ]
    troop_slot_004_list2 = [
    2,
    8,
    1,
    ]
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    faction_slot_003 = faction_get_slot(troop_faction_002,4)
    troop_slot_004 = troop_get_slot(troop_id_001,52)
    faction_slot_005 = faction_get_slot(troop_faction_002,8)
    var006 = 0
    troop_slot_007 = troop_get_slot(faction_slot_005,10)
    if faction_slot_005 == -1:
        if troop_id_001 == _g_talk_troop:
            s15 = str_store_string(gstr._i_am_acting_independently_because_no_marshal_is_appointed)
        #end
    elif not party_is_active(troop_slot_007):
        if troop_id_001 == _g_talk_troop:
            s15 = str_store_string(gstr._i_am_acting_independently_because_our_marshal_is_currently_indisposed)
        #end
    elif faction_slot_003 != 2 and faction_slot_003 != 3 and faction_slot_003 != 5 and faction_slot_003 != 4 and faction_slot_003 != 1:
        if troop_id_001 == _g_talk_troop:
            s15 = str_store_string(gstr._i_am_acting_independently_because_our_realm_is_currently_not_on_campaign)
        #end
    else:
        troop_get_relation_with_troop(troop_id_001,faction_slot_005)
        var008 = reg0
        if var008 <= -10:
            var009 = 10000
        else:
            var009 = var008 * -1000
        #end
        var009 += 1500
        campaign_ai = game_get_reduce_campaign_ai()
        if troop_faction_002 != _players_kingdom:
            if campaign_ai == 0:
                var009 += -1250
            elif campaign_ai == 1:
                pass
            elif campaign_ai == 2:
                var009 += 1250
            #end
        elif faction_slot_eq(troop_faction_002,8,trp.player):
            if campaign_ai == 0:
                var009 += -1000
            elif campaign_ai == 1:
                var009 += -1500
            elif campaign_ai == 2:
                var009 += -2000
            #end
        #end
        troop_slot_011 = troop_get_slot(troop_id_001,49)
        if troop_slot_011 <= var009:
            if troop_id_001 == _g_talk_troop:
                s15 = str_store_string(gstr._i_am_not_accompanying_the_marshal_because_i_fear_that_he_may_lead_us_into_disaster)
            #end
        #end
    # Johandros did not know what to do
    #else:
    #    troop_slot_012 = troop_get_slot(faction_slot_005,8)
    #    if var008 < 0 and troop_slot_012 >= 50:
    #        if troop_id_001 == _g_talk_troop:
    #            s15 = str_store_string(gstr.i_am_not_accompanying_the_marshal_because_i_question_his_judgment)
    #        #end
    #    #end
    #else:
    #    troop_slot_012 = troop_get_slot(faction_slot_005,8)
    #    if not faction_slot_eq(troop_faction_002,11,faction_slot_005) and var008 < 5 and troop_slot_012 >= 80:
    #        if troop_id_001 == _g_talk_troop:
    #            s15 = str_store_string(gstr.i_am_not_accompanying_the_marshal_because_will_be_reappointment)
    #        #end
    #    #end
    #else:
    #    var013 = 50 - var008
    #    var009 = var013 * 70
    #    campaign_ai = game_get_reduce_campaign_ai()
    #    if troop_faction_002 != _players_kingdom:
    #        if campaign_ai == 0:
    #            var009 += -1200
    #        elif campaign_ai == 1:
    #            pass
    #        elif campaign_ai == 2:
    #            var009 += 1200
    #        #end
    #    elif faction_slot_005 == trp.player:
    #        if campaign_ai == 0:
    #            var009 += -1000
    #        elif campaign_ai == 1:
    #            var009 += -1500
    #        elif campaign_ai == 2:
    #            var009 += -2000
    #        #end
    #    #end
    #    if troop_slot_004 == 3:
    #        var009 += 1500
    #    elif troop_slot_004 in troop_slot_004_list2:
    #        var009 += 1000
    #    elif troop_slot_004 == 4:
    #        var009 += 500
    #    elif troop_slot_004 == 7:
    #        pass
    #    elif troop_slot_004 in troop_slot_004_list2:
    #        var009 += -500
    #    elif troop_slot_004 == 10:
    #        var009 += -1000
    #    #end
    #    if troop_slot_eq(faction_slot_005,52,2):
    #        var009 += -750
    #    elif troop_slot_eq(faction_slot_005,52,1) or troop_slot_eq(faction_slot_005,52,7):
    #        var009 += -250
    #    #end
    #    var009 += 2000
    #    troop_slot_011 = troop_get_slot(troop_id_001,49)
    #    if troop_slot_011 <= var009:
    #        if troop_id_001 == _g_talk_troop:
    #            s15 = str_store_string(gstr.i_am_not_accompanying_the_marshal_because_i_can_do_greater_deeds)
    #        #end
    #    #end
    #else:
    #    cur_hours_014 = store_current_hours()
    #    faction_slot_015 = faction_get_slot(troop_faction_002,96)
    #    cur_hours_014 -= faction_slot_015
    #    var016 = 360
    #    var017 = var008 * 6
    #    var016 += var017
    #    if troop_slot_004 == 7:
    #        var016 *= 4
    #        var016 /= 3
    #    #end
    #    s16 = str_store_troop_name(faction_slot_005)
    #    if cur_hours_014 > var016:
    #        if troop_id_001 == _g_talk_troop:
    #            s15 = str_store_string(gstr._s16_has_kept_us_on_campaign_on_far_too_long_and_there_are_other_pressing_matters_to_which_i_must_attend)
    #        #end
    #    #end
    #else:
    #    troop_slot_018 = troop_get_slot(troop_id_001,10)
    #    if not party_is_active(troop_slot_018):
    #        pass
    #    else:
    #        troop_slot_019 = troop_get_slot(faction_slot_005,10)
    #        var020 = 40
    #        if faction_slot_eq(troop_faction_002,4,1):
    #            var020 = 50
    #        #end
    #    #end
    #    campaign_ai = game_get_reduce_campaign_ai()
    #    if troop_faction_002 != fac.player_supporters_faction and troop_faction_002 != _players_kingdom:
    #        if campaign_ai == 2:
    #            if faction_slot_eq(troop_faction_002,4,1):
    #                var020 += -10
    #            else:
    #                var020 += -8
    #            #end
    #        elif campaign_ai == 1:
    #            if faction_slot_eq(troop_faction_002,4,1):
    #                var020 += -5
    #            else:
    #                var020 += -4
    #            #end
    #        #end
    #    else:
    #        if campaign_ai == 2:
    #            if faction_slot_eq(troop_faction_002,4,1):
    #                var020 += 25
    #            else:
    #                var020 += 20
    #            #end
    #        elif campaign_ai == 1:
    #            if faction_slot_eq(troop_faction_002,4,1):
    #                var020 += 15
    #            else:
    #                var020 += 12
    #            #end
    #        elif campaign_ai == 0:
    #            if faction_slot_eq(troop_faction_002,4,1):
    #                var020 += 5
    #            else:
    #                var020 += 4
    #            #end
    #        #end
    #    #end
    #    faction_slot_021 = faction_get_slot(troop_faction_002,5)
    #    reg17 = 0
    #    if True:
    #        if not is_between(faction_slot_021,p.village_1,p.salt_mine):
    #            reg17 = 1
    #        #end
    #        if not faction_slot_eq(troop_faction_002,4,5):
    #            reg17 = 1
    #        #end
    #        if reg17 == 1:
    #            distance_parties_022 = store_distance_to_party_from_party(troop_slot_019,troop_slot_018)
    #            if distance_parties_022 > var020:
    #                if troop_id_001 == _g_talk_troop:
    #                    s15 = str_store_string(gstr._i_am_not_participating_in_the_marshals_campaign_because_i_do_not_know_where_to_find_our_main_army)
    #                #end
    #            #end
    #        #end
    #    elif reg17 == 0:
    #        reg17 = 1
    #        if party_slot_eq(troop_slot_018,4,11) and party_slot_eq(troop_slot_018,5,troop_slot_019):
    #            reg17 = 0
    #        #end
    #        if reg17 == 1:
    #            party_slot_023 = party_get_slot(faction_slot_021,67)
    #            if party_slot_023 >= 4000:
    #                party_slot_023 -= 4000
    #                var020 = party_slot_023 / 200
    #                var020 += 70
    #            else:
    #                var020 = party_slot_023 / 100
    #                var020 += 30
    #            #end
    #        #end
    #        distance_parties_022 = store_distance_to_party_from_party(faction_slot_021,troop_slot_018)
    #        if distance_parties_022 > var020:
    #            if troop_id_001 == _g_talk_troop:
    #                s15 = str_store_string(gstr._i_am_acting_independently_although_some_enemies_have_been_spotted_within_our_borders_they_havent_come_in_force_and_the_local_troops_should_be_able_to_dispatch_them)
    #            #end
    #        #end
    #    #end
    #    if distance_parties_022 > var020:
    #        pass
    #    else:
    #        if troop_id_001 == _g_talk_troop:
    #            s15 = str_store_string(gstr._the_needs_of_the_realm_must_come_first)
    #        #end
    #    #end
    #    var006 = 1
    # Johandros did not know what to do
    #end
    reg0 = var006


def find_total_prosperity_score(party_id_001):
    if is_between(party_id_001,p.town_1,p.village_1):
        party_slot_002 = party_get_slot(party_id_001,50)
        var003 = party_slot_002 + 200
        var003 /= 10
        if is_between(party_id_001,p.town_1,p.castle_1):
            var004 = var003 * 15
        else:
            var004 = var003 * 5
        #end
        var005 = var004
        for p_006 in range(p.village_1, p.salt_mine):
            if party_slot_eq(p_006,120,party_id_001):
                party_slot_007 = party_get_slot(p_006,50)
                var008 = party_slot_007 + 200
                var008 /= 10
                var009 = var008 * 5
                var005 += var009
            #end
        #end
    else:
        party_slot_002 = party_get_slot(party_id_001,50)
        var003 = party_slot_002 + 200
        var003 /= 10
        var004 = var003 * 5
        var005 = var004
    #end
    var005 /= 10
    reg0 = var005


def calculate_center_assailability_score(troop_id_001, party_id_002, var003):
    party_faction_019_list1 = [
    troop_faction_005,
    -1,
    ]
    var004 = -1
    troop_faction_005 = store_faction_of_troop(troop_id_001)
    cur_hours_006 = store_current_hours()
    faction_slot_007 = faction_get_slot(troop_faction_005,95)
    cur_hours_006 -= faction_slot_007
    var008 = cur_hours_006 / 12
    var008 += 30
    val_min(var008,100)
    faction_slot_009 = faction_get_slot(troop_faction_005,8)
    troop_slot_010 = -1
    party_slot_011 = 0
    if faction_slot_009 > 0:
        troop_slot_010 = troop_get_slot(faction_slot_009,10)
        if party_is_active(troop_slot_010):
            party_slot_011 = party_get_slot(troop_slot_010,56)
            party_slot_012 = party_get_slot(troop_slot_010,59)
        #end
    #end
    faction_slot_013 = faction_get_slot(troop_faction_005,85)
    faction_slot_014 = faction_get_slot(troop_faction_005,86)
    if True:
        cur_hours_015 = store_current_hours()
        var016 = faction_slot_014 + 24
        if cur_hours_015 > var016:
            faction_set_slot(troop_faction_005,85,0)
            faction_slot_013 = 0
        #end
    #end
    if faction_slot_013 == 0 or faction_slot_013 == party_id_002 or _g_do_not_skip_other_than_current_ai_object == 1 or not faction_slot_eq(troop_faction_005,8,troop_id_001) and party_is_active(party_id_002):
        party_faction_017 = store_faction_of_party(party_id_002)
        faction_relation_018 = store_relation(party_faction_017,troop_faction_005)
        if faction_relation_018 < 0:
            party_faction_019 = -1
            if is_between(party_id_002,p.town_1,p.village_1) and not party_slot_eq(party_id_002,54,-1):
                party_slot_020 = party_get_slot(party_id_002,54)
                if party_is_active(party_slot_020):
                    party_faction_019 = store_faction_of_party(party_slot_020)
                #end
            #end
        #end
        if party_faction_019 in party_faction_019_list1:
            var021 = 0
            if is_between(party_id_002,p.village_1,p.salt_mine):
                if party_slot_eq(party_id_002,35,1):
                    party_slot_022 = party_get_slot(party_id_002,34)
                    if party_is_active(party_slot_022):
                        party_faction_023 = store_faction_of_party(party_slot_022)
                        if party_faction_023 != troop_faction_005:
                            var024 = 1
                        else:
                            var024 = 0
                        #end
                    #end
                #end
            #end
            if party_slot_eq(party_id_002,35,2) or var024 == 1:
                var021 = 1
            #end
        #end
        if var021 == 0:
            var025 = 0
            for fac_026 in range(fac.player_supporters_faction, fac.kingdoms_end):
                if is_between(fac_026,fac.kingdom_1,fac.kingdoms_end) and fac_026 != troop_faction_005:
                    faction_slot_027 = faction_get_slot(fac_026,5)
                    if faction_slot_027 == party_id_002:
                        faction_relation_028 = store_relation(party_faction_017,fac_026)
                        if faction_relation_028 < 0:
                            var025 = 1
                        #end
                    #end
                #end
            #end
        #end
        if var025 == 0:
            if is_between(party_id_002,p.town_1,p.village_1):
                party_slot_029 = party_get_slot(party_id_002,56)
                party_slot_030 = party_get_slot(party_id_002,57)
                party_slot_030 /= 2
                var031 = party_slot_029 + party_slot_030
                var031 *= 4
                var031 /= 3
                var032 = party_slot_011
                var032 += party_slot_012
                var033 = var032 * 100
                if var031 > 0:
                    var033 /= var031
                else:
                    var033 = 1000
                #end
            #end
        else:
            party_slot_030 = party_get_slot(party_id_002,57)
            var031 = 1000
            var032 = party_slot_011
            var032 += party_slot_012
            var033 = var032 * 100
            if var031 > 0:
                var033 /= var031
            else:
                var033 = 1000
            #end
        #end
        if var033 >= 120:
            var034 = var033 - 120
            if var034 < 100:
                var035 = var034 + 20
            elif var034 < 200:
                var035 = var034 - 100
                var035 /= 2
                var035 += 120
            elif var034 < 400:
                var035 = var034 - 200
                var035 /= 5
                var035 += 170
            elif var034 < 800:
                var035 = var034 - 400
                var035 /= 10
                var035 += 210
            else:
                var035 = 250
            #end
        #end
        var036 = 0
        var037 = 0
        for p_038 in range(p.town_1, p.village_1):
            party_faction_039 = store_faction_of_party(p_038)
            if party_faction_039 == troop_faction_005:
                distance_parties_040 = store_distance_to_party_from_party(p_038,party_id_002)
                var037 += distance_parties_040
                var036 += 1
            #end
        #end
        if var036 > 0:
            var041 = var037 / var036
            if troop_slot_010 >= 0 and party_is_active(troop_slot_010):
                distance_parties_042 = store_distance_to_party_from_party(troop_slot_010,party_id_002)
            else:
                distance_parties_042 = 100
            #end
            if True:
                faction_slot_043 = faction_get_slot(troop_faction_005,4)
                if faction_slot_043 == 2:
                    faction_slot_044 = faction_get_slot(troop_faction_005,5)
                    if faction_slot_044 >= 0 and faction_slot_044 != party_id_002:
                        if var035 >= 300:
                            var035 = 200
                        elif var035 >= 100:
                            var035 -= 100
                            var035 /= 2
                            var035 += 100
                        #end
                    #end
                #end
                if faction_slot_eq(troop_faction_005,8,troop_id_001) and _g_do_not_skip_other_than_current_ai_object == 0:
                    var035 = 0
                #end
                faction_set_slot(troop_faction_005,85,faction_slot_044)
                cur_hours_015 = store_current_hours()
                faction_set_slot(troop_faction_005,86,cur_hours_015)
                if var003 == 0:
                    var045 = distance_parties_042 * 2
                    var045 /= 3
                else:
                    var045 = distance_parties_042 / 3
                #end
            #end
            var037 = var041 + var045
        else:
            var037 = 100
        #end
        if troop_slot_eq(troop_id_001,52,7) or troop_slot_eq(troop_id_001,52,5) or troop_slot_eq(troop_id_001,52,6) or troop_slot_eq(troop_id_001,52,4):
            if var037 < 30:
                var046 = 100
            elif var037 < 80:
                var046 = var037 - 30
                var046 /= 1
                var046 = 100 - var046
            elif var037 < 160:
                var046 = var037 - 80
                var046 /= 2
                var046 = 50 - var046
            else:
                var046 = 10
            #end
        else:
            if var037 < 40:
                var046 = 100
            elif var037 < 140:
                var046 = var037 - 40
                var046 /= 2
                var046 = 100 - var046
            elif var037 < 300:
                var046 = var037 - 140
                var046 /= 4
                var046 = 50 - var046
            else:
                var046 = 10
            #end
        #end
        var004 = var046 * var035
        var004 *= var008
        var004 /= 100
        find_total_prosperity_score(party_id_002)
        var047 = reg0
        var047 *= 3
        var047 /= 2
        var004 *= var047
        if party_slot_eq(party_id_002,62,troop_faction_005) and party_slot_eq(party_id_002,61,troop_faction_005):
            var004 *= 12
            var004 /= 10
        elif party_slot_eq(party_id_002,62,troop_faction_005) or party_slot_eq(party_id_002,61,troop_faction_005):
            var004 *= 11
            var004 /= 10
        #end
        var004 /= 1000
        if party_faction_017 == fac.player_supporters_faction:
            campaign_ai = game_get_reduce_campaign_ai()
            var049 = 0
            for p_050 in range(p.town_1, p.village_1):
                party_faction_051 = store_faction_of_party(p_050)
                if party_faction_051 == fac.player_supporters_faction:
                    var049 += 1
                #end
            #end
            if campaign_ai == 2:
                if var049 <= 2:
                    var052 = 0
                elif var049 == 3:
                    var052 = 20
                elif var049 == 4:
                    var052 = 40
                elif var049 == 5 and var049 == 6:
                    var052 = 55
                elif var049 == 7 and var049 == 8 and var049 == 9:
                    var052 = 70
                else:
                    var052 = 85
                #end
            elif campaign_ai == 1:
                if var049 <= 1:
                    var052 = 25
                elif var049 == 2:
                    var052 = 45
                elif var049 == 3:
                    var052 = 60
                elif var049 == 4 and var049 == 5:
                    var052 = 75
                elif var049 == 6 and var049 == 7 and var049 == 8:
                    var052 = 85
                else:
                    var052 = 92
                #end
            else:
                var052 = 100
            #end
            var004 *= var052
            var004 /= 100
        #end
        if _cheat_mode >= 1 and troop_faction_005 == fac.kingdom_4 and var004 >= -1:
            reg0 = var004
            reg7 = var047
            reg8 = var035
            reg9 = var046
            reg10 = var008
            s8 = str_store_party_name(party_id_002)
            reg11 = var003
        #end
    #end
    reg0 = var004
    reg1 = var033
    reg2 = var046
    reg3 = var047


def find_center_to_defend(troop_id_001):
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    faction_slot_003 = faction_get_slot(troop_faction_002,8)
    faction_slot_004 = faction_get_slot(troop_faction_002,4)
    troop_slot_005 = -1
    if faction_slot_003 > 0:
        troop_slot_005 = troop_get_slot(faction_slot_003,10)
    #end
    var006 = -1
    var007 = 0
    for p_008 in range(p.town_1, p.salt_mine):
        party_faction_009 = store_faction_of_party(p_008)
        if party_faction_009 == troop_faction_002:
            party_slot_010 = party_get_slot(p_008,67)
            var011 = party_slot_010
            var012 = 0
            if is_between(p_008,p.town_1,p.village_1) and party_slot_ge(p_008,54,0):
                find_total_prosperity_score(p_008)
                var013 = reg0
                party_slot_014 = party_get_slot(p_008,56)
                party_slot_014 *= 4
                party_slot_014 /= 3
                var015 = 0
                party_slot_014 += var015
                var016 = var011 * 100
                party_slot_014 += 1
                val_max(party_slot_014,1)
                var016 /= party_slot_014
                var017 = 0
                party_slot_018 = party_get_slot(p_008,54)
                if party_is_active(party_slot_018):
                    if party_slot_018 == p.main_party:
                        var017 = 1
                    else:
                        party_faction_019 = store_faction_of_party(party_slot_018)
                        if party_faction_019 == fac.player_faction:
                            var017 = 1
                        else:
                            party_attached_020 = party_get_attached_to(p.main_party)
                            if party_attached_020 >= 0 and party_attached_020 == party_slot_018:
                                var017 = 1
                            #end
                        #end
                    #end
                #end
            #end
            if var017 == 0:
                if var016 < 40:
                    var012 = 1
                elif var016 < 80:
                    var012 = var016 - 40
                    var012 /= 5
                    var012 += 1
                elif var016 < 120:
                    var012 = var016 - 80
                    var012 /= 4
                    var012 += 7
                elif var016 < 200:
                    var012 = var016 - 120
                    var012 /= 10
                    var012 += 17
                else:
                    var012 = 25
                #end
            else:
                if var016 < 200:
                    var012 = var016 / 10
                    var012 += 6
                else:
                    var012 = 26
                #end
            #end
        elif is_between(p_008,p.village_1,p.salt_mine) and party_slot_eq(p_008,35,1) and var011 > 0:
            find_total_prosperity_score(p_008)
            var016 = 100
            var013 = reg0
            var012 = 10
        #end
        if var012 > 0:
            if is_between(p_008,p.town_1,p.village_1):
                var021 = 120
                if troop_slot_005 >= 0 and party_is_active(troop_slot_005):
                    distance_parties_022 = store_distance_to_party_from_party(troop_slot_005,p_008)
                else:
                    distance_parties_022 = 100
                #end
            #end
            if faction_slot_004 == 5:
                faction_slot_023 = faction_get_slot(troop_faction_002,5)
                if is_between(faction_slot_023,p.town_1,p.village_1) and faction_slot_023 != p_008:
                    distance_parties_022 *= 2
                    distance_parties_022 += 20
                #end
            #end
            distance_parties_022 *= 2
            if distance_parties_022 < 10:
                var024 = 100
            elif distance_parties_022 < 160:
                var024 = distance_parties_022 - 10
                var024 /= 3
                var024 = 100 - var024
            elif distance_parties_022 < 360:
                var024 = distance_parties_022 - 250
                var024 /= 5
                var024 = 50 - var024
            else:
                var024 = 10
            #end
        else:
            var021 = var011 + 20000
            var021 /= 200
            var024 = 70
        #end
        var025 = var021 * var013
        var025 *= var012
        var025 *= var024
        var025 /= 10000
        if _cheat_mode >= 1 and var025 > 0 and troop_faction_002 == fac.kingdom_6:
            reg0 = var025
            s32 = str_store_party_name(p_008)
            reg1 = var013
            reg2 = var021
            reg3 = var012
            reg4 = var024
        #end
        if var025 > var007:
            var006 = p_008
            var007 = var025
            var026 = var011
        #end
    #end
    var007 *= 3
    var007 /= 2
    reg0 = var006
    reg1 = var007
    reg2 = var026


def npc_decision_checklist_peace_or_war(faction_id_001, faction_id_002, troop_id_003):
    faction_slot_004 = 0
    faction_slot_005 = 0
    var006 = 0
    var007 = 0
    var008 = 0
    var009 = 0
    _g_concession_demanded = 0
    faction_relation_010 = store_relation(faction_id_001,faction_id_002)
    if faction_id_002 == fac.player_supporters_faction:
        var011 = _player_honor
        faction_slot_005 += 2
    else:
        var011 = 0
    #end
    faction_slot_012 = faction_get_slot(faction_id_001,11)
    faction_slot_013 = faction_get_slot(faction_id_002,11)
    troop_get_relation_with_troop(faction_slot_012,faction_slot_013)
    var014 = reg0
    val_min(var014,10)
    var011 += var014
    s15 = str_store_troop_name(faction_slot_012)
    s16 = str_store_troop_name(faction_slot_013)
    faction_slot_015 = 0
    faction_slot_016 = 0
    diplomacy_faction_get_diplomatic_status_with_faction(faction_id_001,faction_id_002)
    var017 = reg0
    str_clear(12)
    if var017 == -2:
        s12 = str_store_string(gstr.s15_is_at_war_with_s16_)
        slot_no_018 = faction_id_002 + 140
        slot_no_018 -= fac.player_supporters_faction
        faction_slot_016 = faction_get_slot(faction_id_001,slot_no_018)
        slot_no_019 = faction_id_001 + 140
        slot_no_019 -= fac.player_supporters_faction
        faction_slot_015 = faction_get_slot(faction_id_002,slot_no_019)
    elif var017 == 1:
        s12 = str_store_string(gstr.in_the_short_term_s15_has_a_truce_with_s16_as_a_matter_of_general_policy_)
    elif var017 == -1:
        s12 = str_store_string(gstr.in_the_short_term_s15_was_recently_provoked_by_s16_and_is_under_pressure_to_declare_war_as_a_matter_of_general_policy_)
    #end
    if is_between(_g_talk_troop,trp.npc1,trp.knight_1_1_wife):
        str_clear(12)
    #end
    if troop_id_003 > -1:
        skill_lvl_020 = store_skill_level(skl.persuasion,troop_id_003)
        skill_lvl_020 *= 2
        var011 += skill_lvl_020
        if _cheat_mode == 1:
            reg4 = var011
            print(gstr.envoymodified_diplomacy_score_honor_plus_relation_plus_envoy_persuasion_equal_reg4)
        #end
    #end
    for fac_021 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_set_slot(fac_021,12,0)
    #end
    for cur_party in __all_parties__:
        var023 = 0
        if is_between(cur_party,p.town_1,p.castle_1):
            var023 = 3
        elif is_between(cur_party,p.castle_1,p.village_1):
            var023 = 2
        elif is_between(cur_party,p.village_1,p.salt_mine):
            var023 = 1
        else:
            party_template_id_024 = party_get_template_id(cur_party)
            if party_template_id_024 == pt.kingdom_hero_party:
                var023 = 2
            #end
        #end
        party_faction_025 = store_faction_of_party(cur_party)
        party_slot_026 = party_get_slot(cur_party,61)
        party_slot_027 = party_get_slot(cur_party,62)
        if is_between(party_faction_025,fac.player_supporters_faction,fac.kingdoms_end):
            faction_slot_028 = faction_get_slot(party_faction_025,12)
            faction_slot_028 += var023
            faction_set_slot(party_faction_025,12,faction_slot_028)
        #end
        if party_faction_025 == faction_id_002:
            faction_slot_005 += var023
            if party_slot_026 == faction_id_001 or party_slot_027 == faction_id_001:
                var006 += 1
                if is_between(cur_party,p.town_1,p.village_1):
                    _g_concession_demanded = cur_party
                    s18 = str_store_party_name(_g_concession_demanded)
                #end
            #end
        elif party_faction_025 == faction_id_001:
            faction_slot_004 += var023
        #end
    #end
    var029 = -1
    var030 = 60
    for fac_031 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_slot_032 = faction_get_slot(fac_031,12)
        if faction_slot_032 > var030:
            var029 = fac_031
            var030 = faction_slot_032
        #end
    #end
    if _cheat_mode == 2 and var029 > 1:
        s4 = str_store_faction_name(var029)
        reg3 = var030
        print("@{!}DEBUG - {s4} strongest kingdom with {reg3} strength")
    #end
    var033 = 1
    if faction_slot_004 > 0:
        var033 = faction_slot_005 * 100
        var033 /= faction_slot_004
    #end
    for fac_034 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if fac_034 != faction_id_002 and fac_034 != faction_id_001 and faction_slot_eq(fac_034,21,0):
            faction_relation_035 = store_relation(fac_034,faction_id_001)
            if faction_relation_035 < 0:
                var007 = fac_034
                var008 += 1
                faction_relation_035 = store_relation(fac_034,faction_id_002)
                if faction_relation_035 < 0:
                    var009 = fac_034
                #end
            #end
        #end
    #end
    cur_hours_036 = store_current_hours()
    faction_slot_037 = faction_get_slot(faction_id_001,98)
    var038 = cur_hours_036 - faction_slot_037
    if _supported_pretender > 0 and _supported_pretender == faction_slot_012 or _supported_pretender == faction_slot_013 and faction_id_001 == _supported_pretender_old_faction or faction_id_002 == _supported_pretender_old_faction:
        var039 = -3
        reg4 = troop_get_type(faction_slot_012)
        var040 = gstr.s12s15_cannot_negotiate_with_s16_as_to_do_so_would_undermine_reg4herhis_own_claim_to_the_throne_this_civil_war_must_almost_certainly_end_with_the_defeat_of_one_side_or_another
    elif var011 < -20 and var033 < 125 and faction_slot_015 < 400 and var017 == -2 or var038 < 720 and var008 == 0:
        var039 = -3
        reg4 = troop_get_type(faction_slot_012)
        var040 = gstr.s12s15_considers_s16_to_be_dangerous_and_untrustworthy_and_shehe_wants_to_bring_s16_down
    elif var006 > 0:
        if _cheat_mode == 1:
            print("@{!}Actor centers held by target noted")
        #end
        if faction_slot_015 < 200:
            if _cheat_mode == 1:
                print("@{!}War damage under minimum")
            #end
        #end
        if var033 < 125:
            if _cheat_mode == 1:
                print("@{!}Strength ratio correct")
            #end
        #end
        if var008 == 0:
            if _cheat_mode == 1:
                print("@{!}Third party wars")
            #end
        #end
        var039 = -2
        var040 = gstr.s12s15_is_anxious_to_reclaim_old_lands_such_as_s18_now_held_by_s16
    elif var017 == -2 and var033 < 125 and var008 <= 1 and faction_slot_016 >= 5 and var017 == -2 or var038 < 720:
        var041 = faction_slot_015 * 2
        if faction_slot_016 > var041:
            var039 = -2
            reg4 = troop_get_type(faction_slot_012)
            var040 = gstr.s12s15_feels_that_reg4shehe_is_winning_the_war_against_s16_and_sees_no_reason_not_to_continue
        elif var017 <= -1 and var017 == -1 or faction_slot_016 <= 1 and var033 < 150 and var008 == 0 and faction_slot_ge(faction_id_001,61,60):
            var039 = -1
            var040 = gstr.s12s15_faces_too_much_internal_discontent_to_feel_comfortable_ignoring_recent_provocations_by_s16s_subjects
        elif var017 == -2 and faction_slot_016 < 100 and var008 == 1:
            var039 = -1
            reg4 = troop_get_type(faction_slot_012)
            var040 = gstr.s12even_though_reg4shehe_is_fighting_on_two_fronts_s15_is_inclined_to_continue_the_war_against_s16_for_a_little_while_longer_for_the_sake_of_honor
        elif var017 == -2 and faction_slot_016 < 100 and var008 == 0:
            var039 = -1
            reg4 = troop_get_type(faction_slot_012)
            var040 = gstr.s12s15_feels_that_reg4shehe_must_pursue_the_war_against_s16_for_a_little_while_longer_for_the_sake_of_honor
        elif faction_slot_eq(faction_id_001,4,2) or faction_slot_eq(faction_id_001,4,3) or faction_slot_eq(faction_id_001,4,4):
            faction_slot_042 = faction_get_slot(faction_id_001,5)
            if party_is_active(faction_slot_042):
                party_faction_043 = store_faction_of_party(faction_slot_042)
                if party_faction_043 == faction_id_002:
                    s17 = str_store_party_name(faction_slot_042)
                    var039 = -1
                    var040 = gstr.s12s15_is_currently_on_the_offensive_against_s17_now_held_by_s16_and_reluctant_to_negotiate
                elif var029 == faction_id_002 and var008 == 0 and var017 >= -1 or var038 < 1440:
                    var044 = 0
                    for fac_045 in range(fac.player_supporters_faction, fac.kingdoms_end):
                        if fac_045 != faction_id_001 and fac_045 != faction_id_002 and faction_slot_eq(fac_045,21,0):
                            faction_relation_046 = store_relation(fac_045,faction_id_002)
                            if faction_relation_046 < 0:
                                var044 = 1
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if var044 == 1:
            var039 = -1
            var040 = gstr.s12s15_is_alarmed_by_the_growing_power_of_s16
        elif var008 == 0:
            if _cheat_mode >= 1:
                print("@{!}DEBUG -- No third party wars for {s15}")
            #end
        #end
        if faction_id_001 == var029:
            if _cheat_mode >= 1:
                print("@{!}DEBUG -- {s15} is strongest kingdom")
            #end
        #end
        faction_slot_004 = faction_get_slot(faction_id_001,12)
        faction_slot_005 = faction_get_slot(faction_id_002,12)
        var047 = faction_slot_004 - faction_slot_005
        if var047 >= 30:
            if _cheat_mode >= 1:
                print("@{!}DEBUG -- {s15} has 30 point advantage over {s16}")
            #end
        #end
        var048 = 0
        for p_049 in range(p.town_1, p.village_1):
            party_faction_050 = store_faction_of_party(p_049)
            if party_faction_050 == faction_id_001:
                for p_051 in range(p.town_1, p.village_1):
                    party_faction_052 = store_faction_of_party(p_051)
                    if party_faction_052 == faction_id_002:
                        distance_parties_053 = store_distance_to_party_from_party(p_051,p_049)
                        if distance_parties_053 < 25:
                            var048 = 1
                        #end
                    #end
                #end
            #end
        #end
        if var048 == 1:
            if _cheat_mode >= 1:
                print("@{!}DEBUG -- {s15} has proximity to {s16}")
            #end
        #end
        var039 = -1
        var040 = gstr.s12s15_declared_war_to_control_calradia
    elif var011 < -20:
        var039 = 0
        var040 = gstr.s12s15_distrusts_s16_and_fears_that_any_deals_struck_between_the_two_realms_will_not_be_kept
    elif faction_relation_010 < 0 and var008 >= 2:
        var039 = 3
        var040 = gstr.s12s15_is_at_war_on_too_many_fronts_and_eager_to_make_peace_with_s16
    elif var009 > 0 and var006 == 0 and faction_relation_010 >= 0 or True:
        var039 = 3
        s17 = str_store_faction_name(var009)
        reg4 = troop_get_type(faction_slot_012)
        var040 = gstr.s12s15_seems_to_think_that_s16_and_reg4shehe_have_a_common_enemy_in_the_s17
    elif var017 == -2 and var038 >= 720:
        reg4 = troop_get_type(faction_slot_012)
        var039 = 2
        var040 = gstr.s12s15_feels_frustrated_by_reg4herhis_inability_to_strike_a_decisive_blow_against_s16
    elif faction_relation_010 < 0 and faction_slot_015 > 100:
        var041 *= 2
        if faction_slot_016 < var041:
            var039 = 2
            var040 = gstr.s12s15_has_suffered_enough_in_the_war_with_s16_for_too_little_gain_and_is_ready_to_pursue_a_peace
        elif var007 > 0 and var011 >= 0 and faction_relation_010 < 0:
            var039 = 1
            s17 = str_store_faction_name(var007)
            var040 = gstr.s12s15_would_like_to_firm_up_a_truce_with_s16_to_respond_to_the_threat_from_the_s17
        elif var007 > 0 and var011 >= 0:
            var039 = 1
            s17 = str_store_faction_name(var007)
            var040 = gstr.s12s15_wishes_to_be_at_peace_with_s16_so_as_to_pursue_the_war_against_the_s17
        elif var033 > 175:
            var039 = 1
            var040 = gstr.s12s15_seems_to_be_intimidated_by_s16_and_would_like_to_avoid_hostilities
        elif faction_relation_010 < 0:
            var039 = 1
            var040 = gstr.s12s15_has_no_particular_reason_to_continue_the_war_with_s16_and_would_probably_make_peace_if_given_the_opportunity
        else:
            var039 = 1
            var040 = gstr.s12s15_seems_to_be_willing_to_improve_relations_with_s16
        #end
    #end
    s14 = str_store_string(var040)
    reg0 = var039
    reg1 = var040


def npc_decision_checklist_male_guardian_assess_suitor(troop_id_001, troop_id_002):
    troop_slot_003_list1 = [
    5,
    2,
    ]
    troop_slot_003 = troop_get_slot(troop_id_001,52)
    troop_faction_004 = store_faction_of_troop(troop_id_001)
    if troop_id_002 == trp.player:
        troop_faction_005 = _players_kingdom
    else:
        troop_faction_005 = store_faction_of_troop(troop_id_002)
    #end
    faction_relation_006 = store_relation(troop_faction_004,troop_faction_005)
    troop_get_relation_with_troop(troop_id_001,troop_id_002)
    var007 = reg0
    troop_slot_008 = troop_get_slot(troop_id_002,7)
    var009 = -1
    if troop_id_002 == trp.player and _marriage_candidate > 0:
        for trp_010 in range(trp.knight_1_1, trp.kingdom_1_pretender):
            troop_faction_011 = store_faction_of_troop(trp_010)
            if troop_faction_011 == troop_faction_004 and troop_slot_eq(trp_010,35,_marriage_candidate) or troop_slot_eq(trp_010,36,_marriage_candidate) or troop_slot_eq(trp_010,37,_marriage_candidate):
                troop_get_relation_with_troop(trp_010,troop_id_001)
                if reg0 > 5 and troop_slot_ge(trp_010,7,troop_slot_008):
                    var009 = trp_010
                    s14 = str_store_troop_name(trp_010)
                    s16 = str_store_troop_name(_marriage_candidate)
                #end
            #end
        #end
    #end
    if troop_slot_008 < 50 and troop_slot_eq(troop_id_001,52,2) or troop_slot_eq(troop_id_001,52,5) or troop_slot_eq(troop_id_001,52,3):
        var012 = gstr.excuse_me_how_can_you_possibly_imagine_yourself_worthy_to_marry_into_our_family
        var013 = -3
    elif troop_slot_008 < 50 and troop_slot_eq(troop_id_001,52,6):
        var012 = gstr.em_with_regard_to_her_ladyship_we_were_looking_specifically_for_a_groom_of_some_distinction_fight_hard_count_your_dinars_and_perhaps_some_day_in_the_future_we_may_speak_of_such_things_my_good_man
        var013 = -1
    elif troop_slot_008 < 50:
        var012 = gstr.em_with_regard_to_her_ladyship_we_were_looking_specifically_for_a_groom_of_some_distinction
        var013 = -2
    elif troop_slot_008 < 200 and not troop_slot_eq(troop_id_001,52,6):
        var012 = gstr.it_is_too_early_for_you_to_be_speaking_of_such_things_you_are_still_making_your_mark_in_the_world
        var013 = -1
    elif troop_id_002 == trp.player and troop_faction_005 != _players_kingdom:
        s4 = str_store_faction_name(troop_faction_004)
        if troop_slot_003 in troop_slot_003_list1:
            var012 = gstr.you_dont_serve_the_s4_so_id_say_no_one_day_we_may_be_at_war_and_i_prefer_not_to_have_to_kill_my_inlaws_if_at_all_possible
            var013 = -1
        elif troop_id_002 == trp.player and troop_faction_005 != _players_kingdom and troop_slot_003 != 6 and troop_slot_003 != 4:
            var012 = gstr.as_you_are_not_a_vassal_of_the_s4_i_must_decline_your_request_the_twists_of_fate_may_mean_that_we_will_one_day_cross_swords_and_i_would_hope_not_to_make_a_widow_of_a_lady_whom_i_am_obligated_to_protect
            var013 = -1
        elif troop_id_002 == trp.player and faction_relation_006 < 0:
            var012 = gstr.as_you_are_not_a_vassal_of_the_s4_i_must_decline_your_request_the_twists_of_fate_may_mean_that_we_will_one_day_cross_swords_and_i_would_hope_not_to_make_a_widow_of_a_lady_whom_i_am_obligated_to_protect
            var013 = -1
        elif troop_id_002 == trp.player and _player_has_homage != 1 and not faction_slot_eq(fac.player_supporters_faction,21,0):
            var012 = gstr.as_you_are_not_a_pledged_vassal_of_our_liege_with_the_right_to_hold_land_i_must_refuse_your_request_to_marry_into_our_family
            var013 = -1
        elif var009 > -1 and troop_slot_003 == 3 or troop_slot_003 == 5 or troop_slot_003 == 1 or troop_slot_003 == 2:
            var012 = gstr.look_here_lad__the_young_s14_has_been_paying_court_to_s16_and_youll_have_to_admit__hes_a_finer_catch_for_her_than_you_so_lets_have_no_more_of_this_talk_shall_we
            var013 = -1
        elif var007 < -4:
            var012 = gstr.i_do_not_care_for_you_sir_and_i_consider_it_my_duty_to_protect_the_ladies_of_my_household_from_undesirable_suitors
            var013 = -3
        elif var007 < 5:
            var012 = gstr.hmm_young_girls_may_easily_be_led_astray_so_out_of_a_sense_of_duty_to_the_ladies_of_my_household_i_think_i_would_like_to_get_to_know_you_a_bit_better_we_may_speak_of_this_at_a_later_date
            var013 = -1
        else:
            var012 = gstr.you_may_indeed_make_a_fine_match_for_the_young_mistress
            var013 = 1
        #end
    #end
    reg0 = var013
    reg1 = var012


def npc_decision_checklist_marry_female_pc(troop_id_001):
    troop_slot_002_list2 = [
    1,
    7,
    ]
    troop_slot_002 = troop_get_slot(troop_id_001,52)
    troop_get_romantic_chemistry_with_troop(troop_id_001,trp.player)
    var003 = reg0
    troop_get_relation_with_troop(troop_id_001,trp.player)
    var004 = reg0
    var005 = -1
    for trp_006 in range(trp.knight_1_1_wife, trp.heroes_end):
        if troop_slot_eq(troop_id_001,35,trp_006) or troop_slot_eq(troop_id_001,36,trp_006) or troop_slot_eq(troop_id_001,37,trp_006):
            troop_get_relation_with_troop(troop_id_001,var005)
            var007 = reg0
            if var007 > var004:
                var005 = trp_006
            #end
        #end
    #end
    var008 = 0
    for p_009 in range(p.town_1, p.salt_mine):
        if troop_slot_eq(p_009,7,trp.player):
            var008 += 1
        #end
    #end
    var010 = 0
    if troop_slot_ge(trp.player,34,trp.npc1) and not troop_slot_eq(trp.player,34,troop_id_001):
        s14 = str_store_string(gstr.my_lady_engaged_to_another)
    elif var004 < -3 and troop_slot_002 == 7 or troop_slot_002 == 4 or troop_slot_002 == 6:
        s14 = str_store_string(gstr.madame__given_our_relations_in_the_past_this_proposal_is_most_surprising_i_do_not_think_that_you_are_the_kind_of_woman_who_can_be_bent_to_a_hushands_will_and_i_would_prefer_not_to_have_our_married_life_be_a_source_of_constant_acrimony)
    elif var004 < -10 and troop_slot_002 == 2 or troop_slot_002 == 5 or troop_slot_002 == 3:
        s14 = str_store_string(gstr.i_would_prefer_to_marry_a_proper_maiden_who_will_obey_her_husband_and_is_not_likely_to_split_his_head_with_a_sword)
    elif var003 < 5:
        s14 = str_store_string(gstr.my_lady_not_sufficient_chemistry)
    elif troop_slot_002 in troop_slot_002_list2:
        s14 = str_store_string(gstr.my_lady_while_i_admire_your_valor_you_will_forgive_me_if_i_tell_you_that_a_woman_like_you_does_not_uphold_to_my_ideal_of_the_feminine_of_the_delicate_and_of_the_pure)
    elif troop_slot_002 == 2 and var003 < 15:
        s14 = str_store_string(gstr.nah_i_want_a_woman_wholl_keep_quiet_and_do_what_shes_told_i_dont_think_thats_you)
    elif troop_slot_002 == 3 or troop_slot_002 == 5 and var003 >= 10 and var008 == 0:
        s14 = str_store_string(gstr.my_lady_you_are_possessed_of_great_charms_but_no_properties_until_you_obtain_some_to_marry_you_would_be_an_act_of_ingratitude_towards_my_ancestors_and_my_lineage)
    elif troop_slot_002 == 3 or troop_slot_002 == 5 and var008 == 0:
        s14 = str_store_string(gstr.my_lady_you_are_a_woman_of_no_known_family_of_no_possessions__in_short_a_nobody_do_you_think_that_you_are_fit_to_marry_into_may_family)
    elif var003 < 5 and var004 < 20 and troop_slot_002 != 5 and troop_slot_002 != 3:
        s14 = str_store_string(gstr.my_lady__forgive_me__the_quality_of_our_bond_is_not_of_the_sort_which_the_poets_tell_us_is_necessary_to_sustain_a_happy_marriage)
    elif troop_slot_002 == 4:
        faction_slot_011 = faction_get_slot(11,_g_talk_troop_faction)
        s4 = str_store_troop_name(faction_slot_011)
        troop_get_relation_with_troop(faction_slot_011,trp.player)
        if reg0 < -10:
            s14 = str_store_string(gstr.um_i_think_that_if_i_want_to_stay_on_s4s_good_side_id_best_not_marry_you)
        elif _players_kingdom > 0 and _players_kingdom != _g_talk_troop_faction:
            faction_slot_011 = faction_get_slot(11,_g_talk_troop_faction)
            reg4 = troop_get_type(faction_slot_011)
            s14 = str_store_string(gstr.you_serve_another_realm_i_dont_see_s4_granting_reg4herhis_blessing_to_our_union)
        elif var005 > -1:
            s4 = str_store_troop_name(var005)
            s14 = str_store_string(gstr.madame_my_heart_currently_belongs_to_s4)
        elif var004 < 10:
            var010 = 2
            s14 = str_store_string(gstr.my_lady_you_are_a_woman_of_great_spirit_and_bravery_possessed_of_beauty_grace_and_wit_i_shall_give_your_proposal_consideration)
        else:
            var010 = 1
            s14 = str_store_string(gstr.my_lady_you_are_a_woman_of_great_spirit_and_bravery_possessed_of_beauty_grace_and_wit_i_would_be_most_honored_were_you_to_become_my_wife)
        #end
    #end
    reg0 = var010


def courtship_poem_reactions(troop_id_001, var002):
    troop_slot_003 = troop_get_slot(troop_id_001,52)
    if _cheat_mode == 1:
        reg4 = var002
        reg5 = troop_slot_003
        print(gstr.poem_choice_reg4_lady_rep_reg5)
    #end
    if var002 == 1 and troop_slot_003 == 21:
        s11 = str_store_string(gstr.ah__kais_and_layali__such_a_sad_tale_many_a_time_has_it_been_recounted_for_my_family_by_the_wandering_poets_who_come_to_our_home_and_it_has_never_failed_to_bring_tears_to_our_eyes)
        var004 = 5
    elif var002 == 1 and troop_slot_003 == 24:
        s11 = str_store_string(gstr.kais_and_layali_three_hundred_stanzas_of_pathetic_sniveling_if_you_ask_me_if_kais_wanted_to_escape_heartbreak_he_should_have_learned_to_live_within_his_station_and_not_yearn_for_what_he_cannot_have)
        var004 = 0
    elif var002 == 1 and troop_slot_003 == 23:
        s11 = str_store_string(gstr.kais_and_layali_no_one_should_ever_have_written_such_a_sad_poem_if_it_was_the_destiny_of_kais_and_layali_to_be_together_than_their_love_should_have_conquered_all_obstacles)
        var004 = 1
    elif var002 == 1:
        s11 = str_store_string(gstr.ah_kais_and_layali_a_very_old_standby_but_moving_in_its_way)
        var004 = 3
    elif var002 == 2 and troop_slot_003 == 22:
        s11 = str_store_string(gstr.the_saga_of_helgered_and_kara_such_happy_times_in_which_our_ancestors_lived_women_like_kara_could_venture_out_into_the_world_like_men_win_a_name_for_themselves_and_not_linger_in_their_husbands_shadow)
        var004 = 5
    elif var002 == 2 and troop_slot_003 == 24:
        s11 = str_store_string(gstr.ah_the_saga_of_helgered_and_kara_now_there_was_a_lady_who_knew_what_she_wanted_and_was_not_afraid_to_obtain_it)
        var004 = 2
    elif var002 == 2 and troop_slot_003 == 23:
        s11 = str_store_string(gstr.the_saga_of_helgered_and_kara_a_terrible_tale__but_it_speaks_of_a_very_great_love_if_she_were_willing_to_make_war_on_her_own_family)
        var004 = 2
    elif var002 == 2 and troop_slot_003 == 25:
        s11 = str_store_string(gstr.the_saga_of_helgered_and_kara_as_i_recall_kara_valued_her_own_base_passions_over_duty_to_her_family_that_she_made_war_on_her_own_father_i_have_no_time_for_a_poem_which_praises_such_a_woman)
        var004 = 0
    elif var002 == 2 and troop_slot_003 == 21:
        s11 = str_store_string(gstr.the_saga_of_helgered_and_kara_how_could_a_woman_don_armor_and_carry_a_sword_how_could_a_man_love_so_ungentle_a_creature)
        var004 = 0
    elif var002 == 3 and troop_slot_003 == 23:
        s11 = str_store_string(gstr.a_conversation_in_the_garden_i_cannot_understand_the_lady_in_that_poem_if_she_loves_the_man_why_does_she_tease_him_so)
        var004 = 0
    elif var002 == 3 and troop_slot_003 == 25:
        s11 = str_store_string(gstr.a_conversation_in_the_garden_let_us_see__it_is_morally_unedifying_it_exalts_deception_it_ends_with_a_maiden_surrendering_to_her_base_passions_and_yet_i_cannot_help_but_find_it_charming_perhaps_because_it_tells_us_that_love_need_not_be_tragic_to_be_memorable)
        var004 = 1
    elif var002 == 3 and troop_slot_003 == 24:
        s11 = str_store_string(gstr.a_conversation_in_the_garden_now_that_is_a_tale_every_lady_should_know_by_heart_to_learn_the_subtleties_of_the_politics_she_must_practice)
        var004 = 5
    elif var002 == 3:
        s11 = str_store_string(gstr.a_conversation_in_the_garden_it_is_droll_i_suppose__although_there_is_nothing_there_that_truly_stirs_my_soul)
        var004 = 3
    elif var002 == 5 and troop_slot_003 == 22:
        s11 = str_store_string(gstr.storming_the_fortress_of_love_ah_yes_the_lady_sits_within_doing_nothing_while_the_man_is_the_one_who_strives_and_achieves_i_have_enough_of_that_in_my_daily_life_why_listen_to_poems_about_it)
        var004 = 0
    elif var002 == 5 and troop_slot_003 == 21 or troop_slot_003 == 25:
        s11 = str_store_string(gstr.storming_the_fortress_of_love_ah_yes_an_uplifting_tribute_to_the_separate_virtues_of_man_and_woman)
        var004 = 3
    elif var002 == 5 and troop_slot_003 == 23:
        s11 = str_store_string(gstr.storming_the_fortress_of_love_ah_yes_but_although_it_is_a_fine_tale_of_virtues_it_speaks_nothing_of_passion)
        var004 = 1
    elif var002 == 5 and troop_slot_003 == 24:
        s11 = str_store_string(gstr.storming_the_fortress_of_love_ah_a_sermon_dressed_up_as_a_love_poem_if_you_ask_me)
        var004 = 1
    elif var002 == 4 and troop_slot_003 == 23:
        s11 = str_store_string(gstr.a_hearts_desire_ah_such_a_beautiful_account_of_the_perfect_perfect_love_to_love_like_that_must_be_to_truly_know_rapture)
        var004 = 4
    elif var002 == 4 and troop_slot_003 == 24:
        s11 = str_store_string(gstr.a_hearts_desire_silly_if_you_ask_me_if_the_poet_desires_a_lady_then_he_should_endeavor_to_win_her__and_not_dress_up_his_desire_with_a_pretense_of_piety)
        var004 = 0
    elif var002 == 4 and troop_slot_003 == 25:
        s11 = str_store_string(gstr.a_hearts_desire_hmm__it_is_an_interesting_exploration_of_earthly_and_divine_love_it_does_speak_of_the_spiritual_quest_which_brings_out_the_best_in_man_but_i_wonder_if_the_poet_has_not_confused_his_yearning_for_higher_things_with_his_baser_passions)
        var004 = 2
    elif var002 == 4:
        s11 = str_store_string(gstr.a_hearts_desire_oh_yes__it_is_very_worthy_and_philosophical_but_if_i_am_to_listen_to_a_bard_strum_a_lute_for_three_hours_i_personally_prefer_there_to_be_a_bit_of_a_story)
        var004 = 1
    #end
    if _cheat_mode == 1:
        reg4 = var004
        print(gstr.result_reg4_string_s11)
    #end
    reg0 = var004


def diplomacy_faction_get_diplomatic_status_with_faction(faction_id_001, var002):
    slot_no_003 = var002 + 120
    slot_no_004 = var002 + 130
    slot_no_003 -= fac.player_supporters_faction
    slot_no_004 -= fac.player_supporters_faction
    var005 = 0
    faction_slot_006 = 0
    if True:
        faction_relation_007 = store_relation(faction_id_001,var002)
        if faction_relation_007 < 0:
            var005 = -2
        elif faction_slot_ge(faction_id_001,slot_no_003,1):
            var005 = 1
            faction_slot_006 = faction_get_slot(faction_id_001,slot_no_003)
        elif faction_slot_ge(faction_id_001,slot_no_004,1):
            var005 = -1
            faction_slot_006 = faction_get_slot(faction_id_001,slot_no_004)
        #end
    #end
    reg0 = var005
    reg1 = faction_slot_006


def faction_follows_controversial_policy(faction_id_001, var002):
    faction_slot_003 = faction_get_slot(faction_id_001,11)
    if _cheat_mode >= 1:
        s3 = str_store_faction_name(faction_id_001)
        print(gstr.calculating_effect_for_policy_for_s3)
        _number_of_controversial_policy_decisions += 1
    #end
    if var002 == 80:
        var004 = 0
        var005 = -2
        var006 = -1
    elif var002 == 81:
        var004 = -3
        var005 = 0
        var006 = 0
    elif var002 == 83:
        var004 = 3
        var005 = 1
        var006 = 0
    elif var002 == 84:
        var004 = 0
        var005 = -3
        var006 = -5
    elif var002 == 82:
        var004 = -5
        var005 = 0
        var006 = 0
    #end
    if faction_slot_003 == trp.player:
        change_player_honor(var006)
    #end
    for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
        if troop_slot_eq(trp_007,2,2):
            troop_faction_008 = store_faction_of_troop(trp_007)
            if troop_faction_008 == faction_id_001 and trp_007 != faction_slot_003:
                if troop_slot_eq(trp_007,52,1) or troop_slot_eq(trp_007,52,2) or troop_slot_eq(trp_007,52,3) or troop_slot_eq(trp_007,52,5):
                    troop_change_relation_with_troop(faction_slot_003,trp_007,var004)
                    _total_policy_dispute_changes += var004
                #end
            #end
        #end
        if troop_slot_eq(trp_007,52,1) or troop_slot_eq(trp_007,52,6) or troop_slot_eq(trp_007,52,3) or troop_slot_eq(trp_007,52,9) or troop_slot_eq(trp_007,52,10) or troop_slot_eq(trp_007,52,7):
            troop_change_relation_with_troop(faction_slot_003,trp_007,var005)
            _total_policy_dispute_changes += var005
        #end
    #end


def internal_politics_rate_feast_to_s9(troop_id_001, var002, var003):
    val_max(var002,1)
    for itm_004 in range(itm.spice, itm.siege_supply):
        item_set_slot(itm_004,7,0)
    #end
    troop_inv_capacity_005 = troop_get_inventory_capacity(troop_id_001)
    for inventory_slot_no_006 in range(0, troop_inv_capacity_005):
        itm_004 = troop_get_inventory_slot(troop_id_001,inventory_slot_no_006)
        if is_between(itm_004,itm.spice,itm.siege_supply):
            troop_inv_slot_item_amount_007 = troop_inventory_slot_get_item_amount(troop_id_001,inventory_slot_no_006)
            item_slot_008 = item_get_slot(itm_004,7)
            item_slot_008 += troop_inv_slot_item_amount_007
            item_set_slot(itm_004,7,item_slot_008)
        #end
    #end
    var009 = 0
    var010 = 0
    var011 = var002 / 12
    for itm_012 in range(itm.smoked_fish, itm.siege_supply):
        item_slot_013 = item_get_slot(itm_012,7)
        var009 += item_slot_013
        if item_slot_013 >= var011:
            var010 += 1
        #end
    #end
    var009 *= 100
    var009 /= var002
    val_min(var009,100)
    var010 *= 85
    var010 /= 10
    val_min(var010,100)
    var014 = 0
    var015 = 0
    var016 = var002 / 4
    for itm_017 in range(itm.wine, itm.smoked_fish):
        item_id_018 = itm_017
        item_slot_019 = item_get_slot(item_id_018,7)
        var014 += item_slot_019
        if item_slot_019 >= var016:
            var015 += 1
        #end
    #end
    var014 *= 200
    val_max(var002,1)
    var014 /= var002
    val_min(var014,100)
    var015 *= 50
    item_slot_020 = item_get_slot(itm.spice,7)
    var021 = item_slot_020 * 100
    val_max(var011,1)
    item_slot_020 /= var011
    val_min(var021,100)
    item_slot_022 = item_get_slot(itm.oil,7)
    var023 = item_slot_022 * 100
    val_max(var011,1)
    item_slot_022 /= var011
    val_min(var023,100)
    var024 = var009 / 20
    var024 += gstr.feast_description
    s8 = str_store_string(var024)
    s9 = str_store_string(gstr.of_food_which_must_come_before_everything_else_the_amount_is_s8)
    var025 = var010 / 20
    var025 += gstr.feast_description
    s8 = str_store_string(var025)
    s9 = str_store_string(gstr.s9_and_the_variety_is_s8_)
    var026 = var014 / 20
    var026 += gstr.feast_description
    s8 = str_store_string(var026)
    s9 = str_store_string(gstr.s9_of_drink_which_guests_will_expect_in_great_abundance_the_amount_is_s8)
    var027 = var015 / 20
    var027 += gstr.feast_description
    s8 = str_store_string(var027)
    s9 = str_store_string(gstr.s9_and_the_variety_is_s8_)
    var028 = var021 / 20
    var028 += gstr.feast_description
    s8 = str_store_string(var028)
    s9 = str_store_string(gstr.s9_of_spice_which_is_essential_to_demonstrate_that_we_spare_no_expense_as_hosts_the_amount_is_s8_)
    var029 = var023 / 20
    var029 += gstr.feast_description
    s8 = str_store_string(var029)
    s9 = str_store_string(gstr.s9_of_oil_which_we_shall_require_to_light_the_lamps_the_amount_is_s8)
    var030 = var009 * 8
    var031 = var009 + var010
    var031 *= 2
    var031 += var015
    var031 += var014
    var031 += item_slot_020
    var031 += item_slot_022
    val_min(var031,var030)
    var031 /= 8
    val_clamp(var031,1,101)
    var032 = var031 / 20
    var032 += gstr.feast_description
    s8 = str_store_string(var032)
    s9 = str_store_string(gstr.s9_overall_our_table_will_be_considered_s8)
    reg0 = var031
    if var003 == 1:
        var033 = var002
        for var034 in range(0, 1999):
            if var033 > 0:
                for itm_004 in range(itm.spice, itm.siege_supply):
                    item_set_slot(itm_004,0,0)
                #end
            #end
            troop_inv_capacity_035 = troop_get_inventory_capacity(troop_id_001)
            for inventory_slot_no_036 in range(0, troop_inv_capacity_035):
                itm_004 = troop_get_inventory_slot(troop_id_001,inventory_slot_no_036)
                if itm_004 == itm.spice or itm_004 == itm.oil or itm_004 == itm.wine or itm_004 == itm.ale or is_between(itm_004,itm.smoked_fish,itm.siege_supply) and item_slot_eq(itm_004,0,0):
                    troop_inv_slot_item_amount_037 = troop_inventory_slot_get_item_amount(troop_id_001,inventory_slot_no_036)
                    if troop_inv_slot_item_amount_037 > 0:
                        troop_inv_slot_item_amount_037 -= 1
                        troop_inventory_slot_set_item_amount(troop_id_001,inventory_slot_no_036,troop_inv_slot_item_amount_037)
                        var033 -= 1
                        item_set_slot(itm_004,0,1)
                    #end
                #end
            #end
        #end
    #end


def faction_get_adjective_to_s10(faction_id_001):
    faction_id_001_list2 = [
    fac.deserters,
    fac.forest_bandits,
    fac.mountain_bandits,
    fac.outlaws,
    ]
    if faction_id_001 == fac.player_faction:
        faction_id_001 = _players_kingdom
    #end
    if faction_id_001 == fac.player_supporters_faction:
        s10 = str_store_string(gstr.rebel)
    elif faction_id_001 in faction_id_001_list2:
        s10 = str_store_string(gstr.bandit)
    else:
        faction_slot_002 = faction_get_slot(faction_id_001,22)
        s10 = str_store_string(faction_slot_002)
    #end


def setup_tavern_attacker(entry_no_001):
    if not troop_slot_eq(trp.hired_assassin,12,_g_encountered_party) and troop_slot_eq(trp.belligerent_drunk,12,_g_encountered_party):
        set_visitor(entry_no_001,trp.belligerent_drunk)
    #end
    if troop_slot_eq(trp.hired_assassin,12,_g_encountered_party):
        set_visitor(entry_no_001,trp.hired_assassin)
    #end


def activate_tavern_attackers():
    troop_id_002_list1 = [
    trp.hired_assassin,
    trp.belligerent_drunk,
    trp.fugitive,
    ]
    set_party_battle_mode()
    for cur_agent in __all_agents__:
        troop_id_002 = agent_get_troop_id(cur_agent)
        if troop_id_002 in troop_id_002_list1:
            agent_set_team(cur_agent,1)
            _g_main_attacker_agent = cur_agent
            agent_ai_set_aggressiveness(cur_agent,199)
        #end
    #end


def deactivate_tavern_attackers():
    troop_id_002_list1 = [
    trp.hired_assassin,
    trp.belligerent_drunk,
    trp.fugitive,
    ]
    finish_party_battle_mode()
    for cur_agent in __all_agents__:
        troop_id_002 = agent_get_troop_id(cur_agent)
        if troop_id_002 in troop_id_002_list1:
            agent_set_team(cur_agent,0)
            agent_ai_set_aggressiveness(cur_agent,0)
        #end
    #end


def activate_town_guard():
    set_party_battle_mode()
    for cur_agent in __all_agents__:
        troop_id_002 = agent_get_troop_id(cur_agent)
        if is_between(troop_id_002,trp.swadian_recruit,trp.looter):
            agent_set_team(cur_agent,1)
        elif is_between(cur_agent,trp.town_walker_1,trp.tournament_master) or is_between(cur_agent,trp.town_1_armorer,trp.village_1_elder):
            agent_clear_scripted_mode(cur_agent)
            agent_set_team(cur_agent,2)
        #end
    #end


def cf_prisoner_offered_parole(troop_id_001):
    if 1 == 0:
        troop_slot_002 = troop_get_slot(troop_id_001,8)
        if party_is_active(troop_slot_002) and is_between(troop_slot_002,p.town_1,p.village_1):
            party_slot_003 = party_get_slot(troop_slot_002,7)
            troop_slot_004 = troop_get_slot(troop_id_001,52)
            troop_slot_005 = troop_get_slot(party_slot_003,52)
            if troop_slot_004 != 5 and troop_slot_005 != 5 and troop_slot_005 != 2 and troop_slot_005 == 6 or troop_slot_eq(troop_id_001,2,2) or troop_slot_eq(troop_id_001,2,6):
                troop_get_relation_with_troop(party_slot_003,troop_id_001)


def neutral_behavior_in_fight():
    agent_no_001 = get_player_agent_no()
    pos3 = agent_get_position(agent_no_001)
    agent_team_no_002 = agent_get_team(agent_no_001)
    if _g_main_attacker_agent > 0:
        agent_team_no_003 = agent_get_team(_g_main_attacker_agent)
        pos5 = agent_get_position(_g_main_attacker_agent)
    elif agent_team_no_003 == -1:
        pos5 = agent_get_position(agent_no_001)
    #end
    set_fixed_point_multiplier(100)
    for cur_agent in __all_agents__:
        agent_team_no_005 = agent_get_team(cur_agent)
        if agent_team_no_005 != agent_team_no_003 and agent_team_no_005 != agent_team_no_002:
            troop_id_006 = agent_get_troop_id(cur_agent)
            if not is_between(troop_id_006,trp.swadian_recruit,trp.looter):
                pos4 = agent_get_position(cur_agent)
                var007 = 0
                var008 = -1
                if not agent_slot_eq(cur_agent,15,0):
                    agent_slot_009 = agent_get_slot(cur_agent,15)
                    var010 = agent_slot_009 - 1
                    pos6 = entry_point_get_position(var010)
                    distance_011 = get_distance_between_positions(6,4)
                    if distance_011 < 100:
                        agent_set_slot(cur_agent,15,0)
                    #end
                #end
            #end
        #end
        if agent_slot_eq(cur_agent,15,0):
            if True:
                distance_012 = get_distance_between_positions(4,5)
                distance_013 = get_distance_between_positions(4,3)
                val_min(distance_012,distance_013)
                if distance_012 > 700 or main_hero_fallen():
                    agent_set_scripted_destination(cur_agent,4)
                else:
                    for var010 in range(0, 64):
                        if not entry_point_is_auto_generated(var010):
                            pos6 = entry_point_get_position(var010)
                            distance_011 = get_distance_between_positions(6,4)
                            distance_014 = get_distance_between_positions(6,3)
                            var015 = distance_014 - distance_011
                            if var015 >= 0:
                                if distance_011 >= 2000:
                                    var016 = distance_011 - 2000
                                    val_min(var016,1000)
                                    val_min(distance_011,2000)
                                    distance_011 -= var016
                                #end
                            #end
                        #end
                    #end
                #end
                var015 *= distance_011
                if var015 >= var007:
                    var007 = var015
                    var008 = var010
                #end
            #end
            if var008 >= 0:
                pos6 = entry_point_get_position(var008)
                agent_set_speed_limit(cur_agent,10)
                agent_set_scripted_destination(cur_agent,6)
                var017 = var008 + 1
                agent_set_slot(cur_agent,15,var017)
            #end
        #end
    #end


def party_inflict_attrition(party_id_001, var002):
    party_clear(p.temp_casualties)
    party_num_companions_stacks_003 = party_get_num_companion_stacks(party_id_001)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(party_id_001,stack_no_004)
        if not troop_is_hero(troop_id_005):
            party_stack_size_006 = party_stack_get_size(party_id_001,stack_no_004)
            var007 = var002 * party_stack_size_006
            var008 = var007 / 100
            party_add_members(p.temp_casualties,troop_id_005,var008)
            var009 = var008 * 100
            var010 = var007 - var009
            if var010 > 0:
                random_x_011 = store_random_in_range(0,100)
                if random_x_011 < var010:
                    party_add_members(p.temp_casualties,troop_id_005,var008)
                #end
            #end
        #end
    #end
    party_num_companions_stacks_003 = party_get_num_companion_stacks(p.temp_casualties)
    for stack_no_004 in range(0, party_num_companions_stacks_003):
        troop_id_005 = party_stack_get_troop_id(p.temp_casualties,stack_no_004)
        party_stack_size_006 = party_stack_get_size(p.temp_casualties,stack_no_004)
        party_remove_members(party_id_001,troop_id_005,party_stack_size_006)
        if _cheat_mode == 1:
            reg3 = party_stack_size_006
            s4 = str_store_troop_name(troop_id_005)
            s5 = str_store_party_name(party_id_001)
            s65 = str_store_string(gstr.s5_suffers_attrition_reg3_x_s4)
            print(gstr.s65)
            if _debug_message_in_queue == 0:
                add_notification_menu(mnu.debug_alert_from_s65,0,0)
                _debug_message_in_queue = 1
            #end
        #end
    #end


def add_rumor_string_to_troop_notes(troop_id_001, troop_id_002, var003):
    s10 = str_store_troop_name(_g_talk_troop)
    s11 = str_store_string_reg(var003)
    cur_hours_004 = store_current_hours()
    game_get_date_text(0,cur_hours_004)
    s5 = str_store_string(gstr.s10_said_on_s1_s11__)
    if is_between(troop_id_001,trp.npc1,trp.heroes_end):
        troop_slot_005 = troop_get_slot(troop_id_001,45)
        troop_slot_005 += 1
        if not is_between(troop_slot_005,3,16):
            troop_slot_005 = 3
        #end
        troop_set_slot(troop_id_001,45,troop_slot_005)
        add_troop_note_from_sreg(troop_id_001,troop_slot_005,5,0)
        if _cheat_mode == 1:
            s3 = str_store_troop_name(troop_id_001)
            reg4 = troop_slot_005
            print(gstr.rumor_note_to_s3s_slot_reg4_s5)
        #end
    #end
    if is_between(troop_id_002,trp.npc1,trp.heroes_end):
        troop_slot_005 = troop_get_slot(troop_id_002,45)
        troop_slot_005 += 1
        if not is_between(troop_slot_005,3,16):
            troop_slot_005 = 3
        #end
        troop_set_slot(troop_id_002,45,troop_slot_005)
        add_troop_note_from_sreg(troop_id_002,troop_slot_005,5,0)
        if _cheat_mode == 1:
            s3 = str_store_troop_name(troop_id_002)
            reg4 = troop_slot_005
            print(gstr.rumor_note_to_s3s_slot_reg4_s5)
        #end
    #end


def character_can_wed_character():
    pass


def troop_change_career():
    pass


def center_get_goods_availability(party_id_001):
    s4 = str_store_party_name(party_id_001)
    var002 = 0
    for itm_003 in range(itm.spice, itm.siege_supply):
        if is_between(party_id_001,p.village_1,p.salt_mine):
            item_slot_004 = item_get_slot(itm_003,12)
        else:
            item_slot_004 = item_get_slot(itm_003,11)
        #end
        if item_slot_004 > 2:
            var005 = item_slot_004 / 4
            slot_no_006 = itm_003 - itm.spice
            slot_no_006 += 250
            party_slot_007 = party_get_slot(party_id_001,slot_no_006)
            var008 = party_slot_007 - 1000
            if var008 > 200:
                var008 /= 200
                val_min(var008,var005)
                var002 += var008
            #end
        #end
    #end
    reg0 = var002
    if _cheat_mode == 1:
        print("@{!}DEBUG -- hardship index for {s4} = {reg0}")
    #end


def lord_find_alternative_faction(troop_id_001):
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    var003 = -1
    var004 = -5
    if True:
        random_x_005 = store_random_in_range(0,10000)
        if _g_advantegous_faction > 0 or random_x_005 == 0:
            _g_advantegous_faction = store_random_in_range(fac.player_supporters_faction,fac.kingdoms_end)
        #end
    #end
    for fac_006 in range(fac.player_supporters_faction, fac.kingdoms_end):
        if _g_give_advantage_to_original_faction == 1 or fac_006 != troop_faction_002 and faction_slot_eq(fac_006,21,0):
            var007 = 0
            for p_008 in range(p.town_1, p.village_1):
                party_faction_009 = store_faction_of_party(p_008)
                if party_faction_009 == fac_006:
                    if party_slot_eq(p_008,0,3):
                        var007 += 2
                    else:
                        var007 += 1
                    #end
                #end
            #end
        #end
        var010 = 0
        for trp_011 in range(trp.kingdom_1_lord, trp.knight_1_1_wife):
            troop_faction_012 = store_faction_of_troop(trp_011)
            if troop_faction_012 == fac_006:
                var010 += 1
            #end
        #end
        val_max(var010,1)
        faction_slot_013 = faction_get_slot(fac_006,11)
        troop_get_relation_with_troop(troop_id_001,faction_slot_013)
        var014 = reg0
        var015 = var007 * 100
        var015 /= var010
        var015 += var014
        if fac_006 == troop_faction_002 and _g_give_advantage_to_original_faction == 1:
            var015 += 100
        #end
        if _g_advantegous_faction == fac_006:
            var015 += 50
        #end
        if fac_006 == _players_kingdom:
            var015 -= 100
            val_add(_player_right_to_rule)
        #end
        if var015 > var004:
            var004 = var015
            var003 = fac_006
        #end
    #end
    reg0 = var003


def set_up_duel_with_troop(_g_duel_troop):
    _g_start_arena_fight_at_nearest_town = 1
    if _g_start_arena_fight_at_nearest_town == 1:
        pass
    #end
    unlock_achievement(48)
    jump_to_menu(mnu.arena_duel_fight)
    finish_mission()


def test_player_for_career_and_marriage_incompatability():
    pass


def deduct_casualties_from_garrison():
    for cur_agent in __all_agents__:
        troop_id_002 = agent_get_troop_id(cur_agent)
        if is_between(troop_id_002,trp.novice_fighter,trp.tournament_master) and not agent_is_alive(cur_agent):
            if True:
                troop_count_companions_003 = store_troop_count_companions(troop_id_002,_g_encountered_party)
                if troop_count_companions_003 == 0:
                    troop_id_002 = 0
                    for slot_no_004 in range(41, 45):
                        troop_id_002 = faction_get_slot(_g_encountered_x_party_faction,slot_no_004)
                        faction_slot_005 = faction_get_slot(_g_encountered_x_party_faction,slot_no_004)
                        troop_count_companions_003 = store_troop_count_companions(faction_slot_005,_g_encountered_party)
                        if troop_count_companions_003 > 0:
                            troop_id_002 = faction_slot_005
                        #end
                    #end
                #end
            #end
        #end
        if troop_id_002 > 0:
            party_remove_members(_g_encountered_party,troop_id_002,1)
            s4 = str_store_troop_name(troop_id_002)
            s5 = str_store_party_name(_g_encountered_party)
        #end
    #end


def npc_decision_checklist_take_stand_on_issue(troop_id_001):
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    var003 = -1
    faction_slot_004 = faction_get_slot(troop_faction_002,64)
    var005 = 0
    if is_between(faction_slot_004,p.town_1,p.salt_mine) and _g_dont_give_fief_to_player_days > 1:
        var005 = 1
    elif _g_dont_give_marshalship_to_player_days > 1:
        var005 = 1
    #end
    troop_slot_006 = 0
    troop_set_slot(trp.player,46,0)
    if _players_kingdom == troop_faction_002 and _player_has_homage == 1:
        troop_slot_006 = troop_get_slot(trp.player,7)
    #end
    for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
        troop_set_slot(trp_007,46,0)
        troop_faction_008 = store_faction_of_troop(trp_007)
        if troop_faction_008 == troop_faction_002 and troop_slot_eq(trp_007,2,2):
            troop_slot_009 = troop_get_slot(trp_007,7)
            troop_slot_006 += troop_slot_009
        #end
    #end
    var010 = 0
    for p_011 in range(p.town_1, p.salt_mine):
        party_faction_012 = store_faction_of_party(p_011)
        if party_faction_012 == troop_faction_002:
            var013 = 1
            if is_between(p_011,p.town_1,p.castle_1):
                var013 = 2
            #end
        #end
        var010 += var013
        party_slot_014 = party_get_slot(p_011,7)
        if party_slot_014 > -1:
            troop_slot_015 = troop_get_slot(party_slot_014,46)
            troop_slot_015 += var013
            troop_set_slot(party_slot_014,46,troop_slot_015)
        #end
    #end
    val_max(var010,1)
    var016 = troop_slot_006 / var010
    if is_between(faction_slot_004,p.town_1,p.salt_mine):
        if not troop_slot_eq(troop_id_001,52,5) and not troop_slot_eq(troop_id_001,52,3) and not troop_slot_eq(troop_id_001,52,2) and is_between(faction_slot_004,p.village_1,p.salt_mine):
            var017 = -1
            var018 = -1
            if _players_kingdom == troop_faction_002 and _player_has_homage == 1 and var005 == 0 and troop_slot_eq(trp.player,46,0):
                troop_get_relation_with_troop(trp.player,troop_id_001)
                var019 = reg0
                if var019 > var018 and not troop_slot_ge(trp.player,150,75):
                    var017 = trp.player
                    var018 = var019
                #end
            #end
            for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_008 = store_faction_of_troop(trp_007)
                if troop_faction_008 == troop_faction_002 and troop_slot_eq(trp_007,2,2) and troop_slot_eq(trp_007,46,0):
                    if trp_007 == troop_id_001:
                        var019 = 50
                    else:
                        troop_get_relation_with_troop(trp_007,troop_id_001)
                        var019 = reg0
                    #end
                #end
                if not troop_slot_ge(trp_007,150,75) and var019 > var018:
                    var017 = trp_007
                    var018 = var019
                #end
            #end
            if var017 > -1:
                var003 = var017
                var020 = gstr.political_explanation_lord_lacks_center
            elif is_between(faction_slot_004,p.town_1,p.village_1) and not troop_slot_eq(troop_id_001,52,5) and not troop_slot_eq(troop_id_001,52,3) and not troop_slot_eq(troop_id_001,52,4):
                party_slot_021 = party_get_slot(faction_slot_004,28)
                if True:
                    if troop_faction_002 != _players_kingdom:
                        party_slot_021 = -1
                    elif _player_has_homage == 0:
                        party_slot_021 = -1
                    elif faction_slot_004 == _g_castle_requested_by_player:
                        party_slot_021 = trp.player
                    elif faction_slot_004 == _g_castle_requested_for_troop:
                        party_slot_021 = trp.player
                    elif party_slot_021 > -1:
                        troop_faction_022 = store_faction_of_troop(party_slot_021)
                        if troop_faction_022 != troop_faction_002:
                            party_slot_021 = -1
                        #end
                    #end
                #end
            #end
            if party_slot_021 > -1:
                if _cheat_mode == 1 and party_slot_021 > -1:
                    s3 = str_store_troop_name(party_slot_021)
                    print("@{!}Castle taken by {s3}")
                #end
            #end
            troop_get_relation_with_troop(troop_id_001,party_slot_021)
            if reg0 >= 0 and not troop_slot_ge(party_slot_021,150,25):
                troop_slot_009 = troop_get_slot(party_slot_021,7)
                troop_slot_023 = troop_get_slot(party_slot_021,46)
                val_max(troop_slot_023,1)
                var024 = troop_slot_009 / troop_slot_023
                var024 *= 6
                var024 /= 4
                if var024 >= var016:
                    var003 = party_slot_021
                    var020 = gstr.political_explanation_lord_took_center
                else:
                    var025 = -1
                    var018 = var016
                    var018 /= 3
                    var018 *= 2
                    if _cheat_mode == 1:
                        reg3 = var018
                        print("@{!}Two-thirds average renown = {reg3}")
                    #end
                #end
            #end
            if _players_kingdom == troop_faction_002 and _player_has_homage == 1 and var005 == 0:
                troop_get_relation_with_troop(trp.player,troop_id_001)
                var019 = reg0
                if var019 >= 20 and not troop_slot_ge(trp.player,150,50):
                    troop_slot_009 = troop_get_slot(trp.player,7)
                    troop_slot_023 = troop_get_slot(trp.player,46)
                    val_max(troop_slot_023,1)
                    var024 = troop_slot_009 / troop_slot_023
                    var025 = trp.player
                    var018 = var024
                #end
            #end
            for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_008 = store_faction_of_troop(trp_007)
                if troop_faction_008 == troop_faction_002 and troop_slot_eq(trp_007,2,2):
                    troop_get_relation_with_troop(trp_007,troop_id_001)
                    var019 = reg0
                    if trp_007 == troop_id_001 or var019 >= 20 and not troop_slot_ge(trp_007,150,50):
                        troop_slot_009 = troop_get_slot(trp_007,7)
                        troop_slot_023 = troop_get_slot(trp_007,46)
                        val_max(troop_slot_023,1)
                        var024 = troop_slot_009 / troop_slot_023
                        if _cheat_mode == 1:
                            s10 = str_store_troop_name(trp_007)
                            reg3 = var024
                            print("@{!}DEBUG -- Colleague test: score for {s10} = {reg3}")
                        #end
                    #end
                #end
                if var024 > var018:
                    var025 = trp_007
                    var018 = var024
                #end
            #end
            if var025 > -1:
                var003 = var025
                var020 = gstr.political_explanation_most_deserving_friend
            elif not troop_slot_eq(troop_id_001,52,5) and not troop_slot_eq(troop_id_001,52,3) and not troop_slot_eq(troop_id_001,52,2):
                var026 = -1
                var018 = 0
                if _players_kingdom == troop_faction_002 and _player_has_homage == 1 and var005 == 0:
                    troop_get_relation_with_troop(trp.player,troop_id_001)
                    var019 = reg0
                    if var019 >= 0:
                        troop_slot_009 = troop_get_slot(trp.player,7)
                        troop_slot_023 = troop_get_slot(trp.player,46)
                        if not troop_slot_ge(trp.player,150,25):
                            val_max(troop_slot_023,1)
                            var024 = troop_slot_009 / troop_slot_023
                            var026 = trp.player
                            var018 = var024
                        #end
                    #end
                #end
            #end
            for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
                troop_faction_008 = store_faction_of_troop(trp_007)
                if troop_faction_008 == troop_faction_002 and troop_slot_eq(trp_007,2,2):
                    troop_get_relation_with_troop(trp_007,troop_id_001)
                    var019 = reg0
                    if trp_007 == troop_id_001 or var019 >= 0 and not troop_slot_ge(trp_007,150,25):
                        troop_slot_009 = troop_get_slot(trp_007,7)
                        troop_slot_023 = troop_get_slot(trp_007,46)
                        val_max(troop_slot_023,1)
                        var024 = troop_slot_009 / troop_slot_023
                        if var024 > var018:
                            if _cheat_mode == 1:
                                s10 = str_store_string(trp_007)
                                reg3 = var024
                                print("@{!}DEBUG -- Open test: score for {s10} = {reg3}")
                            #end
                        #end
                    #end
                #end
                var026 = trp_007
                var018 = var024
            #end
            if var026 > -1:
                var003 = var026
                var020 = gstr.political_explanation_most_deserving_in_faction
            else:
                var003 = troop_id_001
                var020 = gstr.political_explanation_self
            #end
        #end
    elif faction_slot_004 == 1:
        var027 = 15
        if troop_slot_eq(troop_id_001,52,7):
            var027 = 5
        elif troop_slot_eq(troop_id_001,52,5):
            var027 = 25
        #end
        var028 = -1
        var018 = 0
        if _players_kingdom == troop_faction_002 and _player_has_homage == 1 and _g_player_is_captive == 0 and var005 == 0:
            troop_get_relation_with_troop(trp.player,troop_id_001)
            if reg0 >= var027:
                var028 = trp.player
                troop_slot_009 = troop_get_slot(trp.player,7)
                troop_slot_029 = troop_get_slot(trp.player,150)
                troop_slot_029 += 50
                var018 = troop_slot_009 / troop_slot_029
            #end
        #end
        for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
            troop_faction_008 = store_faction_of_troop(trp_007)
            if troop_faction_008 == troop_faction_002 and troop_slot_eq(trp_007,2,2) and troop_slot_eq(trp_007,8,-1) and not faction_slot_eq(troop_faction_002,11,trp_007):
                troop_get_relation_with_troop(trp_007,troop_id_001)
                var019 = reg0
                if trp_007 == troop_id_001 or var019 >= var027:
                    troop_slot_009 = troop_get_slot(trp_007,7)
                    troop_slot_029 = troop_get_slot(trp_007,150)
                    troop_slot_029 += 50
                    var030 = troop_slot_009 / troop_slot_029
                    if var030 > var018:
                        var028 = trp_007
                        var018 = var030
                    #end
                #end
            #end
        #end
        var003 = var028
        var020 = gstr.political_explanation_marshal
    #end
    if _cheat_mode == 1 and var003 > -1:
        s8 = str_store_troop_name(troop_id_001)
        s9 = str_store_troop_name(var003)
        s10 = str_store_string(var020)
        print("@{!}DEBUG -- {s8} backs {s9}:{s10}")
    #end
    reg0 = var003
    reg1 = var020


def npc_decision_checklist_evaluate_faction_strategy():
    pass


def process_player_enterprise(item_id_001, party_id_002):
    item_slot_003 = item_get_slot(item_id_001,56)
    item_slot_004 = item_get_slot(item_id_001,53)
    slot_no_005 = item_id_001 - itm.spice
    slot_no_005 += 250
    party_slot_006 = party_get_slot(party_id_002,slot_no_005)
    var007 = item_slot_004 * party_slot_006
    var007 /= 1000
    item_slot_008 = item_get_slot(item_id_001,55)
    var009 = item_slot_008 * var007
    item_slot_010 = item_get_slot(item_id_001,50)
    item_slot_004 = item_get_slot(item_slot_010,53)
    slot_no_005 = item_slot_010 - itm.spice
    slot_no_005 += 250
    party_slot_006 = party_get_slot(party_id_002,slot_no_005)
    var011 = item_slot_004 * party_slot_006
    var011 /= 1000
    item_slot_012 = item_get_slot(item_id_001,52)
    if item_slot_012 < 0:
        var013 = var011 / 2
    else:
        var013 = var011 * item_slot_012
    #end
    if item_slot_ge(item_id_001,57,1):
        item_slot_014 = item_get_slot(item_id_001,57)
        item_slot_004 = item_get_slot(item_slot_014,53)
        slot_no_005 = item_slot_014 - itm.spice
        slot_no_005 += 250
        party_slot_006 = party_get_slot(party_id_002,slot_no_005)
        if item_slot_012 < 0:
            var015 = var015 / 2
        else:
            var015 = var015 * item_slot_012
        #end
        var015 = item_slot_004 * party_slot_006
        var015 /= 1000
    else:
        var015 = 0
    #end
    var016 = var009 - var013
    var016 -= item_slot_003
    var016 -= var015
    reg0 = var016
    reg1 = var009
    reg2 = var013
    reg3 = item_slot_003
    reg4 = var007
    reg5 = var011
    reg10 = var015


def replace_scene_items_with_spawn_items_before_ms():
    for item_id_001 in range(0, itm.items_end):
        item_num_instances_002 = scene_item_get_num_instances(item_id_001)
        item_set_slot(item_id_001,22,0)
        var003 = 0
        for var004 in range(0, item_num_instances_002):
            item_instance_005 = scene_item_get_instance(item_id_001,var004)
            prop_instance_get_position(_g_position_to_use_for_replacing_scene_items,item_instance_005)
            slot_no_006 = 23 + var003
            item_set_slot(item_id_001,slot_no_006,_g_position_to_use_for_replacing_scene_items)
            var003 += 1
            _g_position_to_use_for_replacing_scene_items += 1
            item_set_slot(item_id_001,22,var003)
        #end
        replace_scene_items_with_scene_props(item_id_001,spr.empty)
    #end


def replace_scene_items_with_spawn_items_after_ms():
    for item_id_001 in range(0, itm.items_end):
        item_slot_002 = item_get_slot(item_id_001,22)
        for var003 in range(0, item_slot_002):
            slot_no_004 = 23 + var003
            item_slot_005 = item_get_slot(item_id_001,slot_no_004)
            set_spawn_position(item_slot_005)
            spawn_item(item_id_001,0)
        #end
    #end


def cf_is_melee_weapon_for_tutorial(var001):
    var001_list1 = [
    itm.practice_sword,
    itm.quarter_staff,
    ]
    var002 = 0
    if var001 in var001_list1:
        var002 = 1
    #end


def iterate_pointer_arrow():
    m_timer_a_ms_001 = store_mission_timer_a_msec()
    if True:
        var002 = m_timer_a_ms_001
        var003 = m_timer_a_ms_001
        var002 %= 1080
        var002 /= 3
        scp_instance_004 = scene_prop_get_instance(spr.pointer_arrow,0)
        pos0 = prop_instance_get_position(scp_instance_004)
        position_set_z_to_ground_level(0)
        position_move_z(0,_g_pointer_arrow_height_adder,1)
        set_fixed_point_multiplier(100)
        var002 *= 100
        var005 = store_sin(var002)
        position_move_z(0,var005,1)
        position_move_z(0,100,1)
        var003 %= 2880
        var003 /= 8
        init_position(1)
        position_rotate_z(1,var003)
        position_copy_rotation(0,1)
        prop_instance_set_position(scp_instance_004,0)
    #end


def find_center_to_attack_alt(var001, var002, var003):
    var004 = -1
    var005 = 0
    for p_006 in range(p.town_1, p.salt_mine):
        npc_decision_checklist_evaluate_enemy_center_for_attack(var001,p_006,var002,var003)
        var007 = reg0
        if var007 > var005:
            var004 = p_006
            var005 = var007
        #end
    #end
    reg0 = var004
    reg1 = var005


def npc_decision_checklist_evaluate_enemy_center_for_attack(troop_id_001, party_id_002, var003, var004):
    var005 = -1
    var006 = -1
    var007 = 0
    troop_faction_008 = store_faction_of_troop(troop_id_001)
    if var003 == 1:
        faction_slot_009 = faction_get_slot(troop_faction_008,8)
        if faction_slot_009 >= 0:
            troop_slot_010 = troop_get_slot(faction_slot_009,10)
        else:
            troop_slot_010 = troop_get_slot(troop_id_001,10)
        #end
    #end
    _g_use_current_ai_object_as_s8 = 0
    if not party_is_active(troop_slot_010):
        var005 = -1
        var006 = gstr.center_party_not_active
    else:
        party_faction_011 = store_faction_of_party(party_id_002)
        faction_relation_012 = store_relation(party_faction_011,troop_faction_008)
        if faction_relation_012 >= 0:
            var005 = -1
            var006 = gstr.center_is_friendly
        elif is_between(party_id_002,p.town_1,p.village_1):
            party_faction_013 = -1
            if not party_slot_eq(party_id_002,54,-1):
                party_slot_014 = party_get_slot(party_id_002,54)
                if party_is_active(party_slot_014):
                    party_faction_013 = store_faction_of_party(party_slot_014)
                #end
            #end
        #end
        if party_faction_013 != -1 and party_faction_013 != troop_faction_008:
            var005 = -1
            var006 = gstr.center_is_already_besieged
        elif is_between(party_id_002,p.village_1,p.salt_mine):
            var015 = 0
            if party_slot_eq(party_id_002,35,1):
                party_slot_016 = party_get_slot(party_id_002,34)
                if party_is_active(party_slot_016):
                    party_faction_017 = store_faction_of_party(party_slot_016)
                    if party_faction_017 != troop_faction_008:
                        var018 = 1
                    else:
                        var018 = 0
                    #end
                #end
            #end
        #end
        if party_slot_eq(party_id_002,35,2) or var018 == 1:
            var015 = 1
        #end
        if var015 == 1:
            var005 = -1
            var006 = gstr.center_is_looted_or_raided_already
        elif troop_slot_eq(troop_id_001,52,7) or troop_slot_eq(troop_id_001,52,6) and is_between(party_id_002,p.village_1,p.salt_mine):
            var005 = -1
            var006 = gstr.center_marshal_does_not_want_to_attack_innocents
        else:
            var019 = 1000
            for p_020 in range(p.town_1, p.village_1):
                party_faction_021 = store_faction_of_party(p_020)
                if party_faction_021 == troop_faction_008:
                    distance_parties_022 = store_distance_to_party_from_party(p_020,party_id_002)
                    if distance_parties_022 < var019:
                        var019 = distance_parties_022
                    #end
                #end
            #end
        #end
        if var019 > 75 and troop_slot_eq(troop_id_001,52,7) or troop_slot_eq(troop_id_001,52,5) or troop_slot_eq(troop_id_001,52,6) or troop_slot_eq(troop_id_001,52,4):
            var005 = -1
            var006 = gstr.center_far_away_our_cautious_marshal_does_not_wish_to_reconnoiter
        elif var019 > 90:
            var005 = -1
            var006 = gstr.center_far_away_even_for_our_aggressive_marshal_to_reconnoiter
        elif is_between(party_id_002,p.town_1,p.village_1) and not troop_slot_eq(troop_id_001,52,1) and not troop_slot_eq(troop_id_001,52,2) and not troop_slot_eq(troop_id_001,52,3):
            var023 = 0
            for p_024 in range(p.town_1, p.village_1):
                if var023 == 0:
                    party_faction_025 = store_faction_of_party(p_024)
                    if party_faction_025 == troop_faction_008:
                        distance_parties_026 = store_distance_to_party_from_party(party_id_002,p_024)
                        if distance_parties_026 < 60:
                            var023 = 1
                        #end
                    #end
                #end
            #end
        #end
        if var023 == 0:
            var005 = -1
            var006 = gstr.center_is_indefensible
        else:
            party_slot_027 = party_get_slot(troop_slot_010,56)
            party_slot_028 = party_get_slot(troop_slot_010,59)
            party_slot_029 = party_get_slot(troop_slot_010,57)
            var030 = party_slot_027 + party_slot_028
            var030 += party_slot_029
            if is_between(party_id_002,p.village_1,p.salt_mine):
                party_slot_031 = 10
            else:
                party_slot_031 = party_get_slot(party_id_002,56)
                party_slot_032 = party_get_slot(party_id_002,57)
                party_slot_031 += party_slot_032
            #end
        #end
        val_max(party_slot_031,1)
        if troop_slot_eq(troop_id_001,52,1) or troop_slot_eq(troop_id_001,52,2) or troop_slot_eq(troop_id_001,52,3):
            var007 = var030 * 100
            var007 /= party_slot_031
            if var007 < 150:
                var005 = -1
                var006 = gstr.center_protected_by_enemy_army_aggressive
            elif party_slot_031 >= var030:
                var005 = -1
                var006 = gstr.center_protected_by_enemy_army_cautious
            else:
                var007 = var030 * 100
                var007 /= party_slot_031
                if var007 < 185 and troop_slot_eq(troop_id_001,52,7) or troop_slot_eq(troop_id_001,52,5) or troop_slot_eq(troop_id_001,52,6) or troop_slot_eq(troop_id_001,52,4):
                    var005 = -1
                    var006 = gstr.center_cautious_marshal_believes_center_too_difficult_to_capture
                elif var007 < 140:
                    var005 = -1
                    var006 = gstr.center_even_aggressive_marshal_believes_center_too_difficult_to_capture
                elif faction_slot_eq(troop_faction_008,4,3):
                    faction_slot_033 = faction_get_slot(troop_faction_008,5)
                    if is_between(faction_slot_033,p.village_1,p.salt_mine) and party_id_002 != faction_slot_033 and party_slot_eq(faction_slot_033,35,5):
                        cur_hours_034 = store_current_hours()
                        party_slot_035 = party_get_slot(faction_slot_033,64)
                        cur_hours_034 -= party_slot_035
                        if cur_hours_034 > 4:
                            npc_decision_checklist_evaluate_enemy_center_for_attack(troop_id_001,faction_slot_033,var003,0)
                            if reg0 > -1:
                                var005 = -1
                                var006 = gstr.center_we_have_already_committed_too_much_time_to_our_present_siege_to_move_elsewhere
                            elif faction_slot_eq(troop_faction_008,4,3):
                                faction_slot_033 = faction_get_slot(troop_faction_008,5)
                                if party_id_002 != faction_slot_033 and is_between(faction_slot_033,p.village_1,p.salt_mine):
                                    distance_parties_036 = store_distance_to_party_from_party(troop_slot_010,faction_slot_033)
                                    if distance_parties_036 < 10:
                                        npc_decision_checklist_evaluate_enemy_center_for_attack(troop_id_001,faction_slot_033,var003,0)
                                        if reg0 > -1:
                                            _g_use_current_ai_object_as_s8 = 1
                                            var005 = -1
                                            var006 = gstr.center_we_are_already_here_we_should_at_least_loot_the_village
                                        else:
                                            if _cheat_mode == 1 and troop_faction_008 == fac.kingdom_3:
                                                party_faction_011 = store_faction_of_party(party_id_002)
                                                faction_relation_012 = store_relation(party_faction_011,troop_faction_008)
                                                if faction_relation_012 < 0:
                                                    pass
                                                #end
                                            #end
                                        #end
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        calculate_center_assailability_score(troop_id_001,party_id_002,var004)
        var037 = reg0
        var007 = reg1
        var005 = var037
        if var007 <= 100:
            if troop_slot_eq(troop_id_001,52,7) or troop_slot_eq(troop_id_001,52,5) or troop_slot_eq(troop_id_001,52,6) or troop_slot_eq(troop_id_001,52,4):
                var006 = gstr.center_cautious_marshal_believes_center_too_difficult_to_capture
            else:
                var006 = gstr.center_even_aggressive_marshal_believes_center_too_difficult_to_capture
            #end
        elif var007 <= 150:
            if troop_slot_eq(troop_id_001,52,7) or troop_slot_eq(troop_id_001,52,5) or troop_slot_eq(troop_id_001,52,6) or troop_slot_eq(troop_id_001,52,4):
                var006 = gstr.center_protected_by_enemy_army_cautious
            else:
                var006 = gstr.center_protected_by_enemy_army_aggressive
            #end
        else:
            if var037 <= _g_faction_object_score:
                var006 = gstr.center_value_outweighed_by_difficulty_of_capture
            else:
                var006 = gstr.center_value_justifies_the_difficulty_of_capture
            #end
        #end
    #end
    reg0 = var005
    reg1 = var006
    reg2 = var007


def npc_decision_checklist_faction_ai_alt(troop_id_001):
    troop_slot_060_list1 = [
    3,
    2,
    1,
    ]
    troop_slot_060_list1 = [
    3,
    2,
    1,
    ]
    party_faction_048_list1 = [
    fac.player_faction,
    troop_faction_002,
    ]
    party_faction_048_list1 = [
    fac.player_faction,
    troop_faction_002,
    ]
    troop_faction_002 = store_faction_of_troop(troop_id_001)
    s4 = str_store_troop_name(troop_id_001)
    s33 = str_store_faction_name(troop_faction_002)
    if _cheat_mode == 1:
        print("@{!}DEBUG -- {s4} produces a faction strategy for {s33}")
    #end
    faction_slot_003 = faction_get_slot(troop_faction_002,8)
    faction_slot_004 = faction_get_slot(troop_faction_002,4)
    faction_slot_005 = faction_get_slot(troop_faction_002,5)
    troop_slot_006 = -1
    var007 = 0
    if faction_slot_003 > 0:
        troop_slot_006 = troop_get_slot(faction_slot_003,10)
        if party_is_active(troop_slot_006):
            party_slot_008 = party_get_slot(troop_slot_006,56)
            party_slot_009 = party_get_slot(troop_slot_006,59)
            var007 = party_slot_008 + party_slot_009
        #end
    #end
    cur_hours_010 = store_current_hours()
    faction_slot_011 = faction_get_slot(troop_faction_002,95)
    cur_hours_010 -= faction_slot_011
    cur_hours_012 = store_current_hours()
    faction_slot_013 = faction_get_slot(troop_faction_002,94)
    cur_hours_012 -= faction_slot_013
    cur_hours_014 = store_current_hours()
    faction_slot_015 = faction_get_slot(troop_faction_002,97)
    cur_hours_014 -= faction_slot_015
    cur_hours_016 = store_current_hours()
    faction_slot_017 = faction_get_slot(troop_faction_002,96)
    cur_hours_016 -= faction_slot_017
    if cur_hours_010 >= 1080:
        var018 = 100
    elif cur_hours_010 >= 480:
        var018 = cur_hours_010 - 480
        var018 /= 20
        var018 += 64
    elif cur_hours_010 >= 240:
        var018 = cur_hours_010 - 240
        var018 /= 10
        var018 += 40
    else:
        var018 = cur_hours_010 / 6
    #end
    find_center_to_defend(troop_id_001)
    var019 = reg0
    var020 = reg1
    var021 = reg2
    var022 = 0
    var023 = 0
    for trp_024 in range(trp.npc1, trp.knight_1_1_wife):
        troop_faction_025 = store_faction_of_troop(trp_024)
        if troop_faction_025 == troop_faction_002:
            troop_slot_026 = troop_get_slot(trp_024,10)
            if party_is_active(troop_slot_026):
                var023 += 1
                if party_slot_eq(troop_slot_026,4,11) and party_slot_eq(troop_slot_026,5,troop_slot_006) and party_is_active(troop_slot_006):
                    distance_parties_027 = store_distance_to_party_from_party(troop_slot_026,troop_slot_006)
                    if distance_parties_027 < 15:
                        var022 += 1
                    #end
                #end
            #end
        #end
    #end
    var028 = -1
    if var023 > 0:
        var028 = var022 * 100
        var028 /= var023
    #end
    var029 = var028 * 3
    var029 += 90
    if faction_slot_003 >= 0 and troop_slot_006 >= 0 and party_is_active(troop_slot_006):
        party_count_fit_for_battle(troop_slot_006)
        var030 = reg0
        if var030 >= 40:
            find_center_to_attack_alt(troop_id_001,1,0)
            var031 = reg0
            var032 = reg1
            find_center_to_attack_alt(troop_id_001,1,1)
            var033 = reg0
            var034 = reg1
        else:
            var032 = 0
            var034 = 0
            var031 = -1
            var033 = -1
        #end
    #end
    if var032 >= var033:
        var035 = var031
        var036 = var032
    else:
        var035 = var033
        var036 = var034
    #end
    if faction_slot_004 == 2:
        var036 *= 3
        var036 /= 2
    #end
    if _cheat_mode == 1:
        if is_between(var035,p.town_1,p.salt_mine):
            s4 = str_store_party_name(var035)
            print("@{!}Best offensive target {s4} has value level of {reg1}")
        else:
            print("@{!}No center found to attack")
        #end
        if is_between(var019,p.town_1,p.salt_mine):
            s4 = str_store_party_name(var019)
            reg1 = var020
            print("@{!}Best threat of {s4} has value level of {reg1}")
        else:
            print("@{!}No center found to defend")
        #end
    #end
    if _cheat_mode == 1:
        if is_between(var019,p.town_1,p.salt_mine):
            s4 = str_store_party_name(var019)
            reg1 = var020
            print("@Best threat of {s4} has value level of {reg1}")
        else:
            print("@No center found to defend")
        #end
    #end
    _g_target_after_gathering = -1
    cur_hours_037 = store_current_hours()
    if var036 >= var020:
        faction_set_slot(troop_faction_002,87,cur_hours_037)
    #end
    faction_slot_038 = faction_get_slot(troop_faction_002,87)
    if faction_slot_038 == 0:
        faction_set_slot(troop_faction_002,87,cur_hours_037)
    #end
    faction_slot_038 = faction_get_slot(troop_faction_002,87)
    var039 = cur_hours_037 - faction_slot_038
    s7 = str_store_faction_name(troop_faction_002)
    var040 = 1
    for fac_041 in range(fac.player_supporters_faction, fac.kingdoms_end):
        faction_relation_042 = store_relation(troop_faction_002,fac_041)
        if faction_relation_042 < 0:
            var040 = 0
        #end
    #end
    if troop_id_001 == trp.player and faction_slot_004 == 6 and cur_hours_014 >= 72:
        var043 = 0
        var044 = -1
        _player_marshal_ai_state = 0
        _player_marshal_ai_object = -1
    elif _players_kingdom == fac.player_supporters_faction and faction_slot_eq(_players_kingdom,11,trp.player) and troop_id_001 != trp.player and faction_slot_004 == 6 and cur_hours_014 <= 48 and party_slot_eq(faction_slot_005,7,trp.player):
        party_faction_045 = store_faction_of_party(faction_slot_005)
        if party_faction_045 == _players_kingdom:
            var043 = 6
            var044 = faction_slot_005
        elif troop_id_001 == trp.player:
            str_clear(14)
            var043 = _player_marshal_ai_state
            var044 = _player_marshal_ai_object
        elif faction_slot_004 != 0 and faction_slot_004 != 6 and party_is_active(troop_slot_006) and party_slot_eq(troop_slot_006,4,14):
            var043 = 0
            var044 = -1
            s14 = str_store_string(gstr.the_enemy_temporarily_has_the_field)
        elif faction_slot_004 != 6:
            var046 = 0
            if faction_slot_004 == 2 and is_between(faction_slot_005,p.town_1,p.village_1):
                party_slot_047 = party_get_slot(faction_slot_005,54)
                if party_is_active(party_slot_047):
                    party_faction_048 = store_faction_of_party(party_slot_047)
                    if party_faction_048 == troop_faction_002:
                        var046 = 1
                    #end
                #end
            #end
        #end
        var049 = 0
        if faction_slot_004 == 5 and troop_slot_006 > 0 and party_is_active(troop_slot_006):
            party_battle_opponent_050 = -1
            if party_slot_eq(troop_slot_006,4,7):
                party_slot_051 = party_get_slot(troop_slot_006,5)
                party_battle_opponent_052 = party_get_battle_opponent(party_slot_051)
                if party_battle_opponent_052 >= 0:
                    party_battle_opponent_050 = party_slot_051
                elif party_slot_eq(troop_slot_006,4,10):
                    party_slot_051 = party_get_slot(troop_slot_006,5)
                    if party_slot_051 >= 0 and not is_between(party_slot_051,p.town_1,p.salt_mine) and party_is_active(party_slot_051):
                        party_battle_opponent_050 = party_get_battle_opponent(party_slot_051)
                    #end
                #end
            #end
            if party_battle_opponent_050 == faction_slot_005:
                var049 = 1
            #end
        #end
        if var046 == 0 and var049 == 0 and cur_hours_016 >= 1240:
            var043 = 0
            var044 = -1
            s14 = str_store_string(gstr.the_vassals_are_tired_we_let_them_rest_for_some_time)
        elif party_is_active(troop_slot_006) and var040 == 0 and is_between(var019,p.town_1,p.salt_mine) and faction_slot_004 == 0 or faction_slot_004 == 6 or var020 > var036:
            var053 = 0
            var054 = 0
            if is_between(var019,p.village_1,p.salt_mine):
                var053 = 0
            else:
                if var039 < 3:
                    var055 = 150
                elif var039 < 6:
                    var055 = 140
                elif var039 < 9:
                    var055 = 132
                elif var039 < 12:
                    var055 = 124
                elif var039 < 15:
                    var055 = 118
                elif var039 < 18:
                    var055 = 114
                elif var039 < 21:
                    var055 = 110
                elif var039 < 24:
                    var055 = 106
                elif var039 < 27:
                    var055 = 102
                elif var039 < 31:
                    var055 = 98
                elif var039 < 34:
                    var055 = 94
                elif var039 < 37:
                    var055 = 90
                elif var039 < 40:
                    var055 = 86
                elif var039 < 43:
                    var055 = 82
                elif var039 < 46:
                    var055 = 79
                elif var039 < 49:
                    var055 = 76
                elif var039 < 52:
                    var055 = 73
                elif var039 < 56:
                    var055 = 70
                elif var039 < 60:
                    var055 = 68
                elif var039 < 66:
                    var055 = 66
                elif var039 < 72:
                    var055 = 64
                elif var039 < 80:
                    var055 = 62
                elif var039 < 90:
                    var055 = 60
                elif var039 < 100:
                    var055 = 58
                else:
                    var055 = 56
                #end
            #end
            var056 = var021 * var055
            var056 /= 100
            if var007 < var056:
                var053 = 1
            #end
        elif faction_slot_004 == 5 and var019 != faction_slot_005:
            var057 = 0
            if troop_slot_006 > 0 and party_is_active(troop_slot_006):
                party_battle_opponent_050 = -1
                if party_slot_eq(troop_slot_006,4,7):
                    party_slot_051 = party_get_slot(troop_slot_006,5)
                    party_battle_opponent_052 = party_get_battle_opponent(party_slot_051)
                    if party_battle_opponent_052 >= 0:
                        party_battle_opponent_050 = party_slot_051
                    elif party_slot_eq(troop_slot_006,4,10):
                        party_slot_051 = party_get_slot(troop_slot_006,5)
                        if party_slot_051 >= 0 and not is_between(party_slot_051,p.town_1,p.salt_mine) and party_is_active(party_slot_051):
                            party_battle_opponent_050 = party_get_battle_opponent(party_slot_051)
                        #end
                    #end
                #end
                if party_battle_opponent_050 == faction_slot_005:
                    var057 = 1
                #end
            #end
            if var057 == 0:
                var056 = var021 * 80
                var056 /= 100
                if var007 < var056 and is_between(var019,p.town_1,p.village_1) or troop_faction_002 != _players_kingdom:
                    var054 = 1
                #end
            #end
        #end
        if var053 == 1 or var054 == 1:
            var043 = 1
            var044 = -1
            s21 = str_store_party_name(var019)
            s14 = str_store_string(gstr.we_should_prepare_to_defend_s21_but_we_should_gather_our_forces_until_we_are_strong_enough_to_engage_them)
            if troop_faction_002 == _players_kingdom:
                _g_gathering_reason = var019
            #end
        #end
    elif party_is_active(troop_slot_006) and is_between(var019,p.town_1,p.village_1) and faction_slot_004 == 0 or faction_slot_004 == 6 or var020 >= var036 and party_slot_ge(var019,54,0):
        var043 = 5
        var044 = var019
        s21 = str_store_party_name(var019)
        s14 = str_store_string(gstr.we_should_ride_to_break_the_siege_of_s21)
    elif party_is_active(troop_slot_006) and faction_slot_004 == 0 or faction_slot_004 == 6 or var020 >= var036 and is_between(var019,p.village_1,p.salt_mine):
        var043 = 5
        var044 = var019
        s21 = str_store_party_name(var019)
        s14 = str_store_string(gstr.we_should_ride_to_defeat_the_enemy_gathered_near_s21)
    elif faction_slot_004 == 1 or faction_slot_004 == 2 or faction_slot_004 == 3 and cur_hours_016 >= var029 and cur_hours_014 >= 24:
        var058 = 0
        if is_between(faction_slot_005,p.town_1,p.village_1):
            party_slot_047 = party_get_battle_opponent(faction_slot_005)
            if party_is_active(party_slot_047):
                party_faction_048 = store_faction_of_party(party_slot_047)
                if party_faction_048 in party_faction_048_list1:
                    var058 = 1
                elif is_between(faction_slot_005,p.town_1,p.village_1):
                    party_slot_047 = party_get_slot(faction_slot_005,54)
                    if party_is_active(party_slot_047):
                        party_faction_048 = store_faction_of_party(party_slot_047)
                        if party_faction_048 in party_faction_048_list1:
                            var058 = 1
                        elif is_between(faction_slot_005,p.town_1,p.salt_mine) and not is_between(faction_slot_005,p.town_1,p.village_1) and party_slot_eq(faction_slot_005,35,1):
                            var058 = 1
                        #end
                    #end
                #end
            #end
        #end
        if var058 == 0:
            reg7 = cur_hours_016
            reg8 = var029
            s14 = str_store_string(gstr.this_offensive_needs_to_wind_down_soon_so_the_vassals_can_attend_to_their_own_business)
            var043 = 0
            var044 = -1
        elif party_is_active(troop_slot_006) and var040 == 0 and faction_slot_004 == 0 and cur_hours_010 >= 60 and cur_hours_016 < 120:
            var043 = 1
            var044 = -1
            s14 = str_store_string(gstr.it_is_time_to_go_on_the_offensive_and_we_must_first_assemble_the_army)
            if troop_faction_002 == _players_kingdom:
                _g_gathering_reason = -1
            #end
        #end
    elif party_is_active(troop_slot_006) and faction_slot_004 == 1 and var040 == 0 and cur_hours_014 < 54 and var028 < 12:
        s14 = str_store_string(gstr.we_must_continue_to_gather_the_army_before_we_ride_forth_on_an_offensive_operation)
        var043 = 1
        var044 = -1
    else:
        var059 = 50
        if var040 == 0:
            if True:
                troop_slot_060 = troop_get_slot(troop_id_001,52)
                if troop_slot_060 in troop_slot_060_list1:
                    var059 *= 9
                    var059 /= 10
                #end
            #end
        #end
        if party_is_active(troop_slot_006) and faction_slot_004 == 1:
            if cur_hours_014 < 6:
                var061 = 1500
            elif cur_hours_014 < 10:
                var061 = 1000
            elif cur_hours_014 < 14:
                var061 = 720
            elif cur_hours_014 < 18:
                var061 = 480
            elif cur_hours_014 < 22:
                var061 = 360
            elif cur_hours_014 < 26:
                var061 = 240
            elif cur_hours_014 < 30:
                var061 = 180
            elif cur_hours_014 < 34:
                var061 = 120
            elif cur_hours_014 < 38:
                var061 = 100
            elif cur_hours_014 < 42:
                var061 = 80
            elif cur_hours_014 < 46:
                var061 = 65
            elif cur_hours_014 < 50:
                var061 = 55
            else:
                var061 = var059
            #end
        #end
        if True:
            troop_slot_060 = troop_get_slot(troop_id_001,52)
            if troop_slot_060 in troop_slot_060_list1:
                var061 *= 9
                var061 /= 10
            #end
        #end
        if var036 <= var061 and cur_hours_014 <= 54:
            s14 = str_store_string(gstr.we_have_assembled_some_vassals)
            var043 = 1
            var044 = -1
        elif party_is_active(troop_slot_006) and faction_slot_004 != 0 and faction_slot_004 != 6:
            var035 = var033
            if is_between(var035,p.town_1,p.village_1) and var036 >= var059:
                var043 = 2
                var044 = var035
                s14 = str_store_string(gstr.we_believe_the_fortress_will_be_worth_the_effort_to_take_it)
            elif party_is_active(troop_slot_006) and faction_slot_004 != 0 and faction_slot_004 != 6:
                var035 = var033
                if is_between(var035,p.village_1,p.salt_mine) and var036 >= var059:
                    var043 = 3
                    var044 = var035
                    s14 = str_store_string(gstr.we_shall_leave_a_fiery_trail_through_the_heart_of_the_enemys_lands_targeting_the_wealthy_settlements_if_we_can)
                elif faction_slot_004 == 1:
                    s14 = str_store_string(gstr.the_army_will_be_disbanded_because_we_have_been_waiting_too_long_without_a_target)
                    var043 = 0
                    var044 = -1
                elif faction_slot_004 == 6 and cur_hours_014 > 72:
                    var043 = 0
                    var044 = -1
                    s14 = str_store_string(gstr.it_is_time_for_the_feast_to_conclude)
                elif faction_slot_004 == 6 and cur_hours_014 <= 72:
                    var043 = 6
                    var044 = faction_slot_005
                    s14 = str_store_string(gstr.we_should_continue_the_feast_unless_there_is_an_emergency)
                elif check_quest_active(qst.organize_feast) and _players_kingdom == troop_faction_002:
                    quest_slot_062 = quest_get_slot(qst.organize_feast,1)
                    var043 = 6
                    var044 = quest_slot_062
                    s14 = str_store_string(gstr.you_had_wished_to_hold_a_feast)
                elif check_quest_active(qst.wed_betrothed_female):
                    quest_slot_063 = quest_get_slot(qst.wed_betrothed_female,6)
                    if troop_slot_eq(quest_slot_063,8,-1):
                        troop_faction_064 = store_faction_of_troop(quest_slot_063)
                        if troop_faction_064 == troop_faction_002:
                            faction_slot_065 = faction_get_slot(troop_faction_064,11)
                            party_id_066 = -1
                            for p_067 in range(p.town_1, p.village_1):
                                if party_id_066 == -1 and party_slot_eq(p_067,7,quest_slot_063) and party_slot_ge(p_067,54,0):
                                    party_id_066 = p_067
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        for p_067 in range(p.town_1, p.village_1):
            if party_id_066 == -1 and party_slot_eq(p_067,7,faction_slot_065) and party_slot_ge(p_067,54,0):
                party_id_066 = p_067
            #end
        #end
        if is_between(party_id_066,p.town_1,p.village_1):
            var043 = 6
            var044 = party_id_066
            s14 = str_store_string(gstr.your_wedding_day_approaches_my_lady)
        elif check_quest_active(qst.wed_betrothed) and not quest_slot_ge(qst.wed_betrothed,23,362):
            quest_slot_068 = quest_get_slot(qst.wed_betrothed,2)
            get_kingdom_lady_social_determinants(quest_slot_068)
            troop_id_069 = reg0
            troop_faction_070 = store_faction_of_troop(troop_id_069)
            if troop_faction_070 == troop_faction_002 and troop_slot_eq(troop_id_069,8,-1):
                var071 = reg1
                if is_between(var071,p.town_1,p.salt_mine) and party_slot_eq(var071,54,-1):
                    var043 = 6
                    var044 = var071
                    s14 = str_store_string(gstr.your_wedding_day_approaches)
                elif cur_hours_012 >= 192:
                    party_id_066 = -1
                    for trp_072 in range(trp.knight_1_1_wife, trp.heroes_end):
                        quest_slot_063 = troop_get_slot(trp_072,34)
                        if quest_slot_063 > 0:
                            troop_faction_073 = store_faction_of_troop(trp_072)
                            troop_faction_064 = store_faction_of_troop(quest_slot_063)
                            if troop_slot_ge(quest_slot_063,8,0):
                                pass
                            elif troop_faction_064 != troop_faction_073 and troop_faction_064 != fac.player_faction:
                                courtship_event_lady_break_relation_with_suitor(trp_072,quest_slot_063)
                            elif troop_faction_073 == troop_faction_002:
                                cur_hours_074 = store_current_hours()
                                troop_slot_075 = troop_get_slot(trp_072,39)
                                cur_hours_074 -= troop_slot_075
                                if cur_hours_074 >= 719:
                                    get_kingdom_lady_social_determinants(trp_072)
                                    var071 = reg1
                                    party_id_066 = var071
                                    var076 = trp_072
                                    var077 = quest_slot_063
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if party_id_066 >= p.town_1:
            var043 = 6
            var044 = party_id_066
            s22 = str_store_troop_name(var076)
            s23 = str_store_troop_name(var077)
            s14 = str_store_string(gstr.s22_and_s23_wish_to_marry)
        elif faction_slot_004 == 0 and cur_hours_012 > 240:
            var078 = 0
            party_id_066 = -1
            for p_079 in range(p.town_1, p.village_1):
                party_faction_080 = store_faction_of_party(p_079)
                if party_faction_080 == troop_faction_002:
                    if not party_slot_eq(p_079,35,5):
                        party_slot_081 = party_get_slot(p_079,7)
                        if is_between(party_slot_081,trp.npc1,trp.knight_1_1_wife):
                            troop_slot_082 = troop_get_slot(party_slot_081,7)
                            random_x_083 = store_random_in_range(0,1000)
                            troop_slot_082 += random_x_083
                            if troop_slot_082 > var078:
                                var078 = troop_slot_082
                                party_id_066 = p_079
                            elif party_slot_eq(p_079,35,5) or party_slot_eq(p_079,35,1):
                                var078 = 9999
                                party_id_066 = -1
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if is_between(party_id_066,p.town_1,p.village_1):
            troop_id_069 = party_get_slot(party_id_066,7)
            if troop_slot_eq(troop_id_069,8,-1):
                var043 = 6
                var044 = party_id_066
                s14 = str_store_string(gstr.it_has_been_a_long_time_since_the_lords_of_the_realm_gathered_for_a_feast)
            elif faction_slot_004 != 0:
                var043 = 0
                var044 = -1
                s14 = str_store_string(gstr.the_circumstances_which_led_to_this_decision_no_longer_apply_so_we_should_stop_and_reconsider_shortly)
            elif faction_slot_004 == 0 and var040 == 1:
                var043 = 0
                var044 = -1
                s14 = str_store_string(gstr.we_are_currently_at_peace)
            elif faction_slot_004 == 0 and faction_slot_eq(troop_faction_002,8,-1):
                var043 = 0
                var044 = -1
                s14 = str_store_string(gstr.we_are_waiting_for_selection_of_marshal)
            elif faction_slot_004 == 0:
                var043 = 0
                var044 = -1
                s14 = str_store_string(gstr.the_vassals_still_need_time_to_attend_to_their_own_business)
            #end
        #end
    #end
    reg0 = var043
    reg1 = var044


def faction_last_reconnoitered_center(var001, party_id_002):
    slot_no_003 = var001 - fac.player_supporters_faction
    slot_no_003 += 350
    cur_hours_004 = store_current_hours()
    party_slot_005 = party_get_slot(party_id_002,slot_no_003)
    if party_slot_005 < 1:
        cur_hours_004 = 1000
    else:
        cur_hours_004 -= party_slot_005
    #end
    reg0 = cur_hours_004
    reg1 = party_slot_005


def reduce_exact_number_to_estimate(var001):
    if var001 < 500:
        var002 = 0
    elif var001 < 1000:
        var002 = 750
    elif var001 < 2000:
        var002 = 1500
    elif var001 < 4000:
        var002 = 3000
    elif var001 < 8000:
        var002 = 6000
    elif var001 < 16000:
        var002 = 12000
    else:
        var002 = 24000
    #end
    reg0 = var002


def calculate_castle_prosperities_by_using_its_villages():
    for p_001 in range(p.castle_1, p.village_1):
        var002 = 0
        var003 = 0
        for p_004 in range(p.village_1, p.salt_mine):
            party_slot_005 = party_get_slot(p_004,120)
            if p_001 == party_slot_005:
                party_slot_006 = party_get_slot(p_004,50)
                var002 += party_slot_006
                var003 += 1
            #end
        #end
        if True:
            var007 = var002 / var003
        else:
            var007 = 50
        #end
        party_set_slot(p_001,50,var007)
    #end


def initialize_tavern_variables():
    _g_main_attacker_agent = 0
    _g_attacker_drawn_weapon = 0
    _g_start_belligerent_drunk_fight = 0
    _g_start_hired_assassin_fight = 0
    _g_belligerent_drunk_leaving = 0


def prepare_alley_to_fight():
    party_slot_001 = party_get_slot(_current_town,17)
    modify_visitors_at_site(party_slot_001)
    reset_visitors()
    set_visitor(0,trp.player)
    set_visitor(3,trp.bandit)
    _talked_with_merchant = 0
    set_jump_mission(mt.alley_fight)
    jump_to_scene(party_slot_001)
    change_screen_mission()


def prepare_town_to_fight():
    s9 = str_store_party_name_link(_g_starting_town)
    s2 = str_store_string(gstr.save_town_from_bandits)
    start_quest(qst.save_town_from_bandits,_g_talk_troop)
    _g_mt_mode = 0
    party_faction_001 = store_faction_of_party(_current_town)
    faction_slot_002 = faction_get_slot(party_faction_001,43)
    faction_slot_003 = faction_get_slot(party_faction_001,43)
    faction_slot_004 = faction_get_slot(party_faction_001,44)
    party_slot_005 = party_get_slot(_current_town,10)
    modify_visitors_at_site(party_slot_005)
    reset_visitors()
    if True:
        for var006 in range(0, 8):
            slot_no_007 = 160 + var006
            party_slot_008 = party_get_slot(_current_town,slot_no_007)
            if party_slot_008 > 0:
                entry_no_009 = 32 + var006
                set_visitor(entry_no_009,party_slot_008)
            #end
        #end
    #end
    set_visitors(25,faction_slot_002,1)
    set_visitors(26,faction_slot_003,1)
    set_visitors(27,faction_slot_004,1)
    set_visitors(10,trp.looter,1)
    set_visitors(11,trp.bandit,1)
    set_visitors(12,trp.looter,1)
    party_faction_010 = store_faction_of_party(_g_starting_town)
    if party_faction_010 == fac.kingdom_1:
        troop_id_011 = trp.swadian_merchant
    elif party_faction_010 == fac.kingdom_2:
        troop_id_011 = trp.vaegir_merchant
    elif party_faction_010 == fac.kingdom_3:
        troop_id_011 = trp.khergit_merchant
    elif party_faction_010 == fac.kingdom_4:
        troop_id_011 = trp.nord_merchant
    elif party_faction_010 == fac.kingdom_5:
        troop_id_011 = trp.rhodok_merchant
    elif party_faction_010 == fac.kingdom_6:
        troop_id_011 = trp.sarranid_merchant
    #end
    s10 = str_store_troop_name(troop_id_011)
    set_visitors(24,trp.looter,1)
    set_visitors(2,trp.looter,2)
    set_visitors(4,trp.looter,1)
    set_visitors(5,trp.looter,2)
    set_visitors(6,trp.looter,1)
    set_visitors(7,trp.looter,1)
    set_visitors(3,troop_id_011,1)
    set_jump_mission(mt.town_fight)
    jump_to_scene(party_slot_005)
    change_screen_mission()


def change_player_right_to_rule(var001):
    _player_right_to_rule += var001
    val_clamp(_player_right_to_rule,0,100)
    if var001 > 0:
        print("@You gain right to rule.")
    elif var001 < 0:
        print("@You lose right to rule.")
    #end


def indict_lord_for_treason(troop_id_001, faction_id_002):
    reg4 = troop_get_type(troop_id_001)
    for p_003 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_003,7,troop_id_001):
            party_set_slot(p_003,7,-1)
        #end
    #end
    faction_slot_004 = faction_get_slot(faction_id_002,11)
    troop_get_relation_with_troop(troop_id_001,faction_slot_004)
    var005 = reg0
    var006 = -150 - var005
    var006 /= 40
    val_min(var006,-1)
    for trp_007 in range(trp.npc1, trp.knight_1_1_wife):
        troop_faction_008 = store_faction_of_troop(trp_007)
        if faction_id_002 == troop_faction_008:
            troop_get_family_relation_to_troop(troop_id_001,trp_007)
            var009 = reg0
            var010 = var006
            if var009 > 1:
                var011 = reg0 / 3
                var010 -= var011
            #end
        #end
        if var010 < 0:
            troop_change_relation_with_troop(faction_slot_004,trp_007,var010)
            _total_indictment_changes += var010
            if _cheat_mode == 1:
                s17 = str_store_troop_name(trp_007)
                s18 = str_store_troop_name(faction_slot_004)
                reg3 = var010
                print(gstr.trial_influences_s17s_relation_with_s18_by_reg3)
            #end
        #end
    #end
    var012 = fac.outlaws
    if troop_id_001 == trp.player:
        var012 = 0
    else:
        lord_find_alternative_faction(troop_id_001)
        var012 = reg0
    #end
    if is_between(var012,fac.player_supporters_faction,fac.kingdoms_end):
        if _cheat_mode >= 1:
            s4 = str_store_troop_name(troop_id_001)
            print("@{!}DEBUG - {s4} faction changed in indictment")
        #end
        change_troop_faction(troop_id_001,var012)
        if var012 != fac.player_supporters_faction and troop_slot_eq(troop_id_001,2,0):
            troop_set_slot(troop_id_001,2,2)
        #end
        s10 = str_store_faction_name(var012)
        s11 = str_store_string(gstr.with_the_s10)
    elif troop_id_001 != trp.player:
        change_troop_faction(troop_id_001,fac.outlaws)
        s11 = str_store_string(gstr.outside_calradia)
    elif troop_id_001 == trp.player:
        player_leave_faction(1)
    #end
    if troop_id_001 == trp.player:
        s9 = str_store_string(gstr.you_have_been_indicted_for_treason_to_s7_your_properties_have_been_confiscated_and_you_would_be_well_advised_to_flee_for_your_life)
    else:
        s4 = str_store_troop_name(troop_id_001)
        s5 = str_store_faction_name(faction_id_002)
        s6 = str_store_troop_name(faction_slot_004)
        reg4 = troop_get_type(troop_id_001)
        s9 = str_store_string(gstr.by_order_of_s6_s4_of_the_s5_has_been_indicted_for_treason_the_lord_has_been_stripped_of_all_reg4herhis_properties_and_has_fled_for_reg4herhis_life_he_is_rumored_to_have_gone_into_exile_s11)
    #end
    print("@{!}{s9}")
    troop_slot_013 = troop_get_slot(troop_id_001,10)
    if party_is_active(troop_slot_013) and troop_slot_013 != p.main_party:
        remove_party(troop_slot_013)
        troop_set_slot(troop_id_001,10,-1)
    #end
    if _cheat_mode == 1 and faction_id_002 == _players_kingdom or var012 == _players_kingdom:
        add_notification_menu(mnu.notification_treason_indictment,troop_id_001,faction_id_002)
    #end


def give_center_to_faction_while_maintaining_lord(party_id_001, var002):
    party_faction_003 = store_faction_of_party(party_id_001)
    party_set_slot(party_id_001,62,party_faction_003)
    party_set_faction(party_id_001,var002)
    if party_slot_eq(party_id_001,0,4):
        party_slot_004 = party_get_slot(party_id_001,122)
        if party_slot_004 > 0 and party_is_active(party_slot_004):
            party_set_faction(party_slot_004,var002)
        #end
    #end
    update_faction_notes(var002)
    update_center_notes(party_id_001)
    for p_005 in range(p.town_1, p.salt_mine):
        if party_slot_eq(p_005,120,party_id_001):
            give_center_to_faction_while_maintaining_lord(p_005,var002)
        #end
    #end


def check_concilio_calradi_achievement():
    if _players_kingdom == fac.player_supporters_faction:
        faction_slot_001 = faction_get_slot(fac.player_supporters_faction,11)
        if faction_slot_001 == trp.player:
            var002 = 0
            for trp_003 in range(trp.npc1, trp.knight_1_1_wife):
                if troop_slot_eq(trp_003,2,2):
                    troop_faction_004 = store_faction_of_troop(trp_003)
                    if troop_faction_004 == fac.player_supporters_faction:
                        var002 += 1
                    #end
                #end
            #end
        #end
        if var002 >= 3:
            unlock_achievement(54)
        #end
    #end


def refresh_center_inventories():
    set_merchandise_modifier_quality(150)
    reset_item_probabilities(100)
    for p_001 in range(p.town_1, p.castle_1):
        party_slot_002 = party_get_slot(p_001,23)
        reset_item_probabilities(100)
        var003 = 0
        for itm_004 in range(itm.spice, itm.siege_supply):
            center_get_production(p_001,itm_004)
            item_probability_005 = reg0
            for p_006 in range(p.village_1, p.salt_mine):
                if party_slot_eq(p_006,120,p_001):
                    center_get_production(p_006,itm_004)
                    reg0 /= 3
                    item_probability_005 += reg0
                #end
            #end
            val_max(item_probability_005,1)
            item_probability_005 *= 4
            var003 += item_probability_005
        #end
        party_slot_007 = party_get_slot(p_001,50)
        merch_amount_008 = 25
        if party_slot_007 >= 50:
            var009 = party_slot_007 - 50
            var009 *= 2
            var009 += 100
            merch_amount_008 *= var009
            merch_amount_008 /= 100
        else:
            var009 = party_slot_007 - 50
            var009 += 100
            merch_amount_008 *= var009
            merch_amount_008 /= 100
        #end
        val_clamp(merch_amount_008,10,40)
        if is_between(p_001,p.castle_1,p.village_1):
            merch_amount_008 /= 2
        #end
        for itm_004 in range(itm.spice, itm.siege_supply):
            center_get_production(p_001,itm_004)
            item_probability_005 = reg0
            for p_006 in range(p.village_1, p.salt_mine):
                if party_slot_eq(p_006,120,p_001):
                    center_get_production(p_006,itm_004)
                    reg0 /= 3
                    item_probability_005 += reg0
                #end
            #end
            val_max(item_probability_005,1)
            item_probability_005 *= 4
            item_probability_005 *= merch_amount_008
            item_probability_005 *= 100
            item_probability_005 /= var003
            set_item_probability_in_merchandise(itm_004,item_probability_005)
        #end
        troop_clear_inventory(party_slot_002)
        troop_add_merchandise(party_slot_002,11,merch_amount_008)
        troop_ensure_inventory_space(party_slot_002,20)
        troop_sort_inventory(party_slot_002)
        troop_gold_010 = store_troop_gold(party_slot_002)
        if troop_gold_010 < 1500:
            random_x_011 = store_random_in_range(500,1000)
            troop_add_gold(party_slot_002,random_x_011)
        #end
    #end


def refresh_center_armories():
    reset_item_probabilities(100)
    set_merchandise_modifier_quality(150)
    for trp_001 in range(trp.town_1_armorer, trp.town_1_weaponsmith):
        party_id_002 = trp_001 - trp.town_1_armorer
        party_id_002 += p.town_1
        troop_clear_inventory(trp_001)
        party_slot_003 = party_get_slot(party_id_002,61)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,13,16)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,12,16)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,14,8)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,15,4)
        troop_ensure_inventory_space(trp_001,30)
        troop_sort_inventory(trp_001)
        reg6 = store_troop_gold(trp_001)
        if reg6 < 1000:
            random_x_004 = store_random_in_range(250,500)
            troop_add_gold(trp_001,random_x_004)
        #end
    #end


def refresh_center_weaponsmiths():
    reset_item_probabilities(100)
    set_merchandise_modifier_quality(150)
    for trp_001 in range(trp.town_1_weaponsmith, trp.town_1_tavernkeeper):
        party_id_002 = trp_001 - trp.town_1_weaponsmith
        party_id_002 += p.town_1
        troop_clear_inventory(trp_001)
        party_slot_003 = party_get_slot(party_id_002,61)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,2,5)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,3,5)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,4,5)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,7,6)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,8,4)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,9,3)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,10,5)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,5,2)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,6,2)
        troop_ensure_inventory_space(trp_001,30)
        troop_sort_inventory(trp_001)
        reg6 = store_troop_gold(trp_001)
        if reg6 < 1000:
            random_x_004 = store_random_in_range(250,500)
            troop_add_gold(trp_001,random_x_004)
        #end
    #end


def refresh_center_stables():
    reset_item_probabilities(100)
    set_merchandise_modifier_quality(150)
    for trp_001 in range(trp.town_1_horse_merchant, trp.town_1_mayor):
        troop_clear_inventory(trp_001)
        party_id_002 = trp_001 - trp.town_1_horse_merchant
        party_id_002 += p.town_1
        party_slot_003 = party_get_slot(party_id_002,61)
        troop_add_merchandise_with_faction(trp_001,party_slot_003,1,5)
        troop_ensure_inventory_space(trp_001,65)
        troop_sort_inventory(trp_001)
        troop_gold_004 = store_troop_gold(trp_001)
        if troop_gold_004 < 600:
            random_x_005 = store_random_in_range(250,500)
            troop_add_gold(trp_001,random_x_005)
        #end
    #end


def player_get_value_of_original_items(player_id_001, agent_id_002, var003):
    var004 = 0
    for var005 in range(0, 8):
        if not player_item_slot_is_picked_up(player_id_001,var005):
            agent_item_slot_006 = agent_get_item_slot(agent_id_002,var005)
            if agent_item_slot_006 != -1:
                multiplayer_get_item_value_for_troop(agent_item_slot_006,var003)
                var004 += reg0
            #end
        #end
    #end
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and not agent_is_human(cur_agent):
            agent_slot_008 = agent_get_slot(agent_id_002,26)
            if agent_slot_008 == cur_agent:
                var009 = 0
                if True:
                    agent_rider_010 = agent_get_rider(cur_agent)
                    if agent_rider_010 != -1 and not agent_is_non_player(agent_rider_010):
                        agent_slot_008 = agent_get_slot(agent_rider_010,26)
                        if agent_slot_008 == cur_agent:
                            var009 = 1
                        elif agent_rider_010 == -1:
                            agent_horse_011 = agent_get_horse(agent_id_002)
                            if agent_horse_011 == -1:
                                agent_slot_008 = agent_get_slot(agent_id_002,26)
                                if agent_slot_008 == cur_agent:
                                    var009 = 1
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if var009 == 1:
                agent_item_id_012 = agent_get_item_id(cur_agent)
                multiplayer_get_item_value_for_troop(agent_item_id_012,var003)
                var004 += reg0
                multiplayer_send_string_to_player(player_id_001,111,"@Added money for your old horse")
            #end
        #end
    #end
    agent_set_slot(agent_id_002,26,-1)
    reg0 = var004


def multiplayer_ccoop_prepare_spawn_wave():
    if multiplayer_is_server():
        set_fixed_point_multiplier(100)
        random_x_001 = store_random_in_range(80,88)
        random_x_002 = store_random_in_range(80,88)
        if random_x_001 == random_x_002:
            random_x_002 = -1
        #end
        var003 = _g_multiplayer_ccoop_wave_no - _g_mp_coop_last_king_wave
        var004 = 4
        var005 = 0
        max_players = get_max_players()
        for player_id_007 in range(0, max_players):
            if player_is_active(player_id_007):
                team_no_008 = player_get_team_no(player_id_007)
                if team_no_008 == 0:
                    var005 += 1
                #end
            #end
        #end
        reg0 = var005
        var005 -= 1
        for var009 in range(1, 4):
            if var005 > 0:
                var010 = var009 * 2
                val_min(var010,var005)
                var005 -= var010
                var011 = 5 - var009
                var012 = var011 * var010
                var004 += var012
            #end
        #end
        if _g_multiplayer_ccoop_wave_no <= 3:
            random_x_002 = -1
        #end
        troop_set_slot(trp.multiplayer_data,186,0)
        troop_set_slot(trp.multiplayer_data,187,0)
        troop_set_slot(trp.multiplayer_data,188,0)
        troop_set_slot(trp.multiplayer_data,189,0)
        troop_set_slot(trp.multiplayer_data,190,0)
        troop_set_slot(trp.multiplayer_data,191,0)
        troop_set_slot(trp.multiplayer_data,192,0)
        troop_set_slot(trp.multiplayer_data,193,0)
        troop_set_slot(trp.multiplayer_data,194,0)
        troop_set_slot(trp.multiplayer_data,195,0)
        troop_set_slot(trp.multiplayer_data,196,0)
        troop_set_slot(trp.multiplayer_data,197,0)
        troop_set_slot(trp.multiplayer_data,198,0)
        troop_set_slot(trp.multiplayer_data,199,0)
        troop_set_slot(trp.multiplayer_data,200,0)
        troop_set_slot(trp.multiplayer_data,201,0)
        var013 = 20 * var003
        var013 += 80
        var004 *= var013
        var004 /= 100
        if _g_mp_coop_king_waves >= 1:
            var004 *= 130
            var004 /= 100
        #end
        var014 = _g_multiplayer_ccoop_wave_no - _g_mp_coop_last_king_wave
        if var014 >= 10:
            var015 = 30
        elif var014 >= 8:
            var015 = 24
        elif var014 >= 6:
            var015 = 20
        elif var014 >= 4:
            var015 = 15
        elif var014 >= 2:
            var015 = 10
        elif var014 >= 1:
            var015 = 6
        #end
        var016 = 0
        _g_ccoop_king_troop = -1
        if var014 >= 3:
            random_x_017 = store_random_in_range(0,2)
            if random_x_017 >= 1 or var014 == 3 or var014 == 10:
                _g_mp_coop_lord_waves += 1
                if True:
                    var018 = store_mod(_g_mp_coop_lord_waves,5)
                    if var018 == 0 or var014 == 10 and _g_mp_coop_lord_waves > 0 and var014 > 1:
                        if _g_multiplayer_team_2_faction == fac.ccoop_all_stars:
                            random_x_019 = store_random_in_range(trp.kingdom_1_lord,trp.knight_1_1)
                        elif _g_multiplayer_team_2_faction == fac.outlaws:
                            var020 = 1
                            for var021 in range(0, 10):
                                if var020 == 1:
                                    random_x_019 = store_random_in_range(trp.quick_battle_troop_1,trp.quick_battle_troops_end)
                                    if not troop_slot_eq(random_x_019,155,2):
                                        var020 = 0
                                    #end
                                #end
                            #end
                        #end
                    #end
                else:
                    for trp_022 in range(trp.kingdom_1_lord, trp.knight_1_1):
                        troop_faction_023 = store_faction_of_troop(trp_022)
                        if troop_faction_023 == _g_multiplayer_team_2_faction:
                            random_x_019 = trp_022
                        #end
                    #end
                #end
                var016 = 1
                _g_ccoop_king_troop = random_x_019
                for trp_022 in range(trp.knight_1_1, trp.kingdom_1_pretender):
                    troop_set_slot(trp_022,155,0)
                #end
                for trp_022 in range(trp.quick_battle_troop_1, trp.quick_battle_troops_end):
                    troop_set_slot(trp_022,155,0)
                #end
            else:
                var016 = 1
                for trp_022 in range(trp.knight_1_1, trp.kingdom_1_pretender):
                    if not troop_slot_eq(trp_022,155,2):
                        troop_set_slot(trp_022,155,0)
                    #end
                #end
                for trp_022 in range(trp.quick_battle_troop_1, trp.quick_battle_troops_end):
                    if not troop_slot_eq(trp_022,155,2):
                        troop_set_slot(trp_022,155,0)
                    #end
                #end
                var024 = 0
                for trp_022 in range(trp.knight_1_1, trp.kingdom_1_pretender):
                    troop_faction_023 = store_faction_of_troop(trp_022)
                    if troop_faction_023 == _g_multiplayer_team_2_faction or _g_multiplayer_team_2_faction == fac.ccoop_all_stars and not troop_slot_eq(trp_022,155,2):
                        troop_set_slot(trp_022,155,1)
                        var024 += 1
                    #end
                #end
                for trp_022 in range(trp.quick_battle_troop_1, trp.quick_battle_troops_end):
                    troop_faction_023 = store_faction_of_troop(trp_022)
                    if _g_multiplayer_team_2_faction == fac.outlaws or _g_multiplayer_team_2_faction == fac.ccoop_all_stars and not troop_slot_eq(trp_022,155,2):
                        troop_set_slot(trp_022,155,1)
                        var024 += 1
                    #end
                #end
                random_x_025 = store_random_in_range(0,var024)
                var026 = 0
                for trp_022 in range(trp.knight_1_1, trp.kingdom_1_pretender):
                    if troop_slot_eq(trp_022,155,1):
                        reg0 = trp_022
                        if var026 == random_x_025:
                            random_x_019 = trp_022
                            troop_set_slot(trp_022,155,2)
                        #end
                    #end
                    var026 += 1
                #end
                for trp_022 in range(trp.quick_battle_troop_1, trp.quick_battle_troops_end):
                    if troop_slot_eq(trp_022,155,1):
                        reg0 = trp_022
                        if var026 == random_x_025:
                            random_x_019 = trp_022
                            troop_set_slot(trp_022,155,2)
                        #end
                    #end
                    var026 += 1
                #end
            #end
            troop_set_slot(trp.multiplayer_data,187,random_x_019)
            troop_set_slot(trp.multiplayer_data,188,1)
            troop_set_slot(trp.multiplayer_data,189,random_x_001)
            troop_slot_027 = troop_get_slot(trp.multiplayer_data,186)
            troop_slot_027 += 2
            troop_set_slot(trp.multiplayer_data,186,troop_slot_027)
            var028 = -1
            troop_faction_029 = store_faction_of_troop(random_x_019)
            if _g_multiplayer_team_2_faction == fac.outlaws:
                var030 = trp.sea_raider_leader
            else:
                for trp_022 in range(trp.farmer, trp.town_walker_1):
                    troop_faction_023 = store_faction_of_troop(trp_022)
                    if troop_faction_023 == troop_faction_029:
                        character_lvl_031 = store_character_level(trp_022)
                        if character_lvl_031 > var028:
                            var028 = character_lvl_031
                            var030 = trp_022
                        #end
                    #end
                #end
            #end
            troop_set_slot(trp.multiplayer_data,190,var030)
            if var018 == 0 and _g_mp_coop_lord_waves > 0 and var014 > 1:
                var032 = 2
            else:
                var032 = 1
            #end
            max_players = get_max_players()
            var033 = 0
            for player_id_007 in range(0, max_players):
                if player_is_active(player_id_007):
                    team_no_034 = player_get_team_no(player_id_007)
                    multiplayer_send_int_to_player(player_id_007,124,_g_ccoop_king_troop)
                    if team_no_034 == 0:
                        var033 += 1
                    #end
                #end
            #end
            var032 *= var033
            troop_set_slot(trp.multiplayer_data,191,var032)
            troop_set_slot(trp.multiplayer_data,192,random_x_001)
            var016 += 1
        #end
        var024 = 0
        for trp_022 in range(trp.farmer, trp.town_walker_1):
            troop_set_slot(trp_022,156,0)
        #end
        for trp_022 in range(trp.farmer, trp.town_walker_1):
            if trp_022 != trp.mercenaries_end:
                troop_faction_023 = store_faction_of_troop(trp_022)
                if troop_faction_023 == _g_multiplayer_team_2_faction or _g_multiplayer_team_2_faction == fac.ccoop_all_stars:
                    character_lvl_035 = store_character_level(trp_022)
                    if character_lvl_035 <= var015:
                        troop_set_slot(trp_022,156,1)
                        var024 += 1
                        reg0 = random_x_019
                        display_debug_message("@{!}used troop no is {reg0}")
                    #end
                #end
            #end
        #end
        for var036 in range(0, var004):
            reg0 = var036
            if not troop_slot_eq(trp.multiplayer_data,199,0):
                random_x_037 = store_random_in_range(var016,5)
                random_x_037 *= 3
                random_x_037 += 187
                random_x_037 += 1
                troop_slot_038 = troop_get_slot(trp.multiplayer_data,random_x_037)
                troop_slot_038 += 1
                troop_set_slot(trp.multiplayer_data,random_x_037,troop_slot_038)
            else:
                random_x_025 = store_random_in_range(0,var024)
                var026 = 0
                for trp_022 in range(trp.farmer, trp.town_walker_1):
                    if troop_slot_eq(trp_022,156,1):
                        if var026 == random_x_025:
                            random_x_019 = trp_022
                        #end
                    #end
                    var026 += 1
                #end
                if True:
                    var039 = 0
                    for slot_no_040 in range(0, 5):
                        slot_no_040 *= 3
                        slot_no_040 += 187
                        troop_slot_041 = troop_get_slot(trp.multiplayer_data,slot_no_040)
                        if troop_slot_041 == random_x_019:
                            slot_no_040 += 1
                            troop_slot_038 = troop_get_slot(trp.multiplayer_data,slot_no_040)
                            troop_slot_038 += 1
                            troop_set_slot(trp.multiplayer_data,slot_no_040,troop_slot_038)
                            var039 = 1
                        #end
                    #end
                    if var039 == 1:
                        pass
                    else:
                        var042 = 0
                        for slot_no_040 in range(var016, 5):
                            if var042 != 1:
                                slot_no_040 *= 3
                                slot_no_040 += 187
                                troop_slot_041 = troop_get_slot(trp.multiplayer_data,slot_no_040)
                                if troop_slot_041 == 0:
                                    troop_set_slot(trp.multiplayer_data,slot_no_040,random_x_019)
                                    slot_no_040 += 1
                                    troop_slot_038 = troop_get_slot(trp.multiplayer_data,slot_no_040)
                                    troop_slot_038 += 1
                                    troop_set_slot(trp.multiplayer_data,slot_no_040,troop_slot_038)
                                    troop_slot_027 = troop_get_slot(trp.multiplayer_data,186)
                                    troop_slot_027 += 1
                                    troop_set_slot(trp.multiplayer_data,186,troop_slot_027)
                                    slot_no_043 = slot_no_040
                                    var042 = 1
                                    random_x_044 = store_random_in_range(0,2)
                                    if random_x_044 == 0 or random_x_002 <= 0:
                                        random_x_044 = random_x_001
                                    else:
                                        random_x_044 = random_x_002
                                    #end
                                #end
                            #end
                        #end
                        slot_no_043 += 1
                        troop_set_slot(trp.multiplayer_data,slot_no_043,random_x_044)
                    #end
                #end
            #end
        #end
        max_players = get_max_players()
        for player_id_007 in range(1, max_players):
            if player_is_active(player_id_007):
                multiplayer_ccoop_send_troop_data_to_client(player_id_007)
            #end
        #end
    #end


def multiplayer_ccoop_calculate_round_duration():
    if multiplayer_is_server():
        _g_multiplayer_ccoop_enemy_respawn_secs = 300
        var001 = _g_multiplayer_ccoop_wave_no - 1
        val_max(var001,0)
        var002 = store_mod(var001,10)
        var002 *= 30
        _g_multiplayer_ccoop_enemy_respawn_secs += var002
        if _g_multiplayer_ccoop_wave_no > 20:
            _g_multiplayer_ccoop_enemy_respawn_secs *= 2
        elif _g_multiplayer_ccoop_wave_no > 10:
            _g_multiplayer_ccoop_enemy_respawn_secs *= 3
            _g_multiplayer_ccoop_enemy_respawn_secs /= 2
        #end
        max_players = get_max_players()
        for player_id_004 in range(1, max_players):
            if player_is_active(player_id_004):
                reg0 = player_id_004
                display_debug_message("@{!}sending message to {reg0} multiplayer event other event ccoop count down invisible")
                multiplayer_send_3_int_to_player(player_id_004,48,4,_g_multiplayer_ccoop_enemy_respawn_secs,_g_multiplayer_ccoop_wave_no)
            #end
        #end
    #end


def multiplayer_ccoop_send_troop_data_to_client(player_id_001):
    if True:
        troop_slot_002 = troop_get_slot(trp.multiplayer_data,186)
        troop_slot_003 = troop_get_slot(trp.multiplayer_data,187)
        troop_slot_004 = troop_get_slot(trp.multiplayer_data,188)
        multiplayer_send_4_int_to_player(player_id_001,48,7,troop_slot_002,troop_slot_003,troop_slot_004)
        troop_slot_002 = troop_get_slot(trp.multiplayer_data,189)
        troop_slot_003 = troop_get_slot(trp.multiplayer_data,190)
        troop_slot_004 = troop_get_slot(trp.multiplayer_data,191)
        multiplayer_send_4_int_to_player(player_id_001,48,8,troop_slot_002,troop_slot_003,troop_slot_004)
        troop_slot_002 = troop_get_slot(trp.multiplayer_data,192)
        troop_slot_003 = troop_get_slot(trp.multiplayer_data,193)
        troop_slot_004 = troop_get_slot(trp.multiplayer_data,194)
        multiplayer_send_4_int_to_player(player_id_001,48,9,troop_slot_002,troop_slot_003,troop_slot_004)
        troop_slot_002 = troop_get_slot(trp.multiplayer_data,195)
        troop_slot_003 = troop_get_slot(trp.multiplayer_data,196)
        troop_slot_004 = troop_get_slot(trp.multiplayer_data,197)
        multiplayer_send_4_int_to_player(player_id_001,48,10,troop_slot_002,troop_slot_003,troop_slot_004)
        troop_slot_002 = troop_get_slot(trp.multiplayer_data,198)
        troop_slot_003 = troop_get_slot(trp.multiplayer_data,199)
        troop_slot_004 = troop_get_slot(trp.multiplayer_data,200)
        multiplayer_send_4_int_to_player(player_id_001,48,11,troop_slot_002,troop_slot_003,troop_slot_004)
        troop_slot_002 = troop_get_slot(trp.multiplayer_data,201)
        multiplayer_send_2_int_to_player(player_id_001,48,12,troop_slot_002)
    #end


def multiplayer_ccoop_spawn_wave(var001):
    if multiplayer_is_server():
        set_fixed_point_multiplier(100)
        reg0 = var001
        display_debug_message("@{!}spawn required is: {reg0}")
        var002 = 0
        for var003 in range(0, 5):
            slot_no_004 = var003 * 3
            slot_no_004 += 188
            troop_slot_005 = troop_get_slot(trp.multiplayer_data,slot_no_004)
            var002 += troop_slot_005
        #end
        reg0 = var002
        display_debug_message("@{!}num troops for wave is {reg0}")
        var006 = 0
        var007 = 0
        if var002 > var001:
            var006 = var002 - var001
            reg0 = var006
            reg1 = var007
            display_debug_message("@{!}num troops for wave is gt spawn required. reduced spawn amount is {reg0};;; reduced spawn amount mod is {reg1}")
        #end
        cur_scene_008 = store_current_scene()
        modify_visitors_at_site(cur_scene_008)
        var009 = 0
        for var010 in range(0, 5):
            slot_no_004 = var010 * 3
            slot_no_004 += 187
            troop_slot_011 = troop_get_slot(trp.multiplayer_data,slot_no_004)
            if troop_slot_011 > 0:
                slot_no_004 += 1
                troop_slot_012 = troop_get_slot(trp.multiplayer_data,slot_no_004)
                var013 = troop_slot_012
                reg0 = var013
                display_debug_message("@{!}original spawned troop count is {reg0}")
                slot_no_004 += 1
                troop_slot_014 = troop_get_slot(trp.multiplayer_data,slot_no_004)
                troop_slot_012 -= var006
                if var010 < var007:
                    troop_slot_012 -= 1
                    reg0 = var010
                    reg1 = var007
                    display_debug_message("@{!}reducing spawn amount by one")
                #end
            #end
            reg0 = var010
            reg1 = troop_slot_014
            s0 = str_store_troop_name(troop_slot_011)
            reg2 = troop_slot_012
            display_debug_message("@{!}spawning bot group {reg0}: {reg2} {s0} from entry point {reg1}")
            add_visitors_to_current_scene(troop_slot_014,troop_slot_011,troop_slot_012,1,-1)
            var009 += troop_slot_012
            var013 -= troop_slot_012
            slot_no_004 = var010 * 3
            slot_no_004 += 188
            troop_set_slot(trp.multiplayer_data,slot_no_004,var013)
        #end
        max_players = get_max_players()
        for player_id_016 in range(1, max_players):
            if player_is_active(player_id_016):
                multiplayer_ccoop_send_troop_data_to_client(player_id_016)
            #end
        #end
    #end


def multiplayer_ccoop_check_reinforcement():
    if multiplayer_is_server():
        multiplayer_ccoop_get_alive_enemy_count()
        var001 = 100 - reg0
        if var001 >= 50:
            multiplayer_ccoop_spawn_wave(var001)
        else:
            var002 = 0
            troop_slot_003 = troop_get_slot(trp.multiplayer_data,186)
            for var004 in range(0, troop_slot_003):
                slot_no_005 = var004 * 3
                slot_no_005 += 188
                troop_slot_006 = troop_get_slot(trp.multiplayer_data,slot_no_005)
                var002 += troop_slot_006
            #end
            if var001 >= var002:
                multiplayer_ccoop_spawn_wave(var001)
            #end
        #end
    #end


def multiplayer_get_balance_dif(var001, var002):
    max_players = get_max_players()
    for player_id_004 in range(0, max_players):
        if player_is_active(player_id_004):
            team_no_005 = player_get_team_no(player_id_004)
            if team_no_005 == 0:
                var001 += 1
            elif team_no_005 == 1:
                var002 += 1
            #end
        #end
    #end
    var006 = 2
    var007 = var001 - var002
    var008 = 0
    if True:
        var009 = _g_multiplayer_auto_team_balance_limit * -1
        if var007 <= var009:
            var008 = var007 / var006
        elif var007 >= _g_multiplayer_auto_team_balance_limit:
            var008 = var007 / var006
        #end
    #end
    reg0 = var008


def multiplayer_server_play_sound_at_position(var001):
    if multiplayer_is_server() or not game_in_multiplayer_mode() and is_between(var001,0,snd.sounds_end):
        if not multiplayer_is_dedicated_server():
            play_sound_at_position(var001,60)
        #end
        if multiplayer_is_server():
            set_fixed_point_multiplier(100)
            pos_x_002 = position_get_x(60)
            pos_y_003 = position_get_y(60)
            pos_z_004 = position_get_z(60)
            max_players = get_max_players()
            for player_id_006 in range(1, max_players):
                if player_is_active(player_id_006):
                    multiplayer_send_4_int_to_player(player_id_006,117,pos_x_002,pos_y_003,pos_z_004,var001)
                #end
            #end
        #end
    #end


def mp_set_coop_companions(player_id_001):
    slot_no_002 = 43
    player_set_slot(player_id_001,slot_no_002,_g_presentation_obj_coop_companion_0)
    slot_no_002 += 1
    player_set_slot(player_id_001,slot_no_002,_g_presentation_obj_coop_companion_1)
    slot_no_002 += 1
    player_set_slot(player_id_001,slot_no_002,_g_presentation_obj_coop_companion_class_0)
    reg0 = _g_presentation_obj_coop_companion_class_0
    slot_no_002 += 1
    player_set_slot(player_id_001,slot_no_002,_g_presentation_obj_coop_companion_class_1)


def mp_get_player_alive_troop_count(player_id_001, var002):
    team_no_003 = player_get_team_no(player_id_001)
    var004 = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and agent_is_non_player(cur_agent):
            agent_team_no_006 = agent_get_team(cur_agent)
            if team_no_003 == agent_team_no_006:
                troop_id_007 = agent_get_troop_id(cur_agent)
                if var002 == troop_id_007:
                    agent_group_008 = agent_get_group(cur_agent)
                    if agent_group_008 == player_id_001:
                        var004 += 1
                    #end
                #end
            #end
        #end
    #end
    reg0 = var004


def mp_get_player_total_alive_troop_count(player_id_001):
    team_no_002 = player_get_team_no(player_id_001)
    var003 = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and agent_is_non_player(cur_agent):
            agent_team_no_005 = agent_get_team(cur_agent)
            agent_group_006 = agent_get_group(cur_agent)
            if agent_group_006 == player_id_001:
                if team_no_002 == agent_team_no_005:
                    var003 += 1
                #end
            #end
        #end
    #end
    reg0 = var003


def multiplayer_spawn_player_bot_squad_at_point(player_id_001, var002, var003):
    if True:
        multiplayer_get_bots_count(player_id_001)
        var004 = reg0
        for slot_no_005 in range(43, 45):
            if var004 < 2:
                player_slot_006 = player_get_slot(player_id_001,slot_no_005)
                mp_get_player_alive_troop_count(player_id_001,player_slot_006)
                if reg0 == 0:
                    mp_spawn_coop_companion(player_id_001,player_slot_006,slot_no_005,var002,var003)
                    var004 += 1
                #end
            #end
        #end
    #end


def multiplayer_get_spawn_point_close_to_bots(player_id_001):
    team_no_002 = player_get_team_no(player_id_001)
    var003 = 0
    var004 = 0
    var005 = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and agent_is_non_player(cur_agent):
            agent_group_007 = agent_get_group(cur_agent)
            agent_team_no_008 = agent_get_team(cur_agent)
            if agent_group_007 == player_id_001 and agent_team_no_008 == team_no_002:
                pos2 = agent_get_position(cur_agent)
                pos_x_009 = position_get_x(2)
                pos_y_010 = position_get_y(2)
                var003 += pos_x_009
                var004 += pos_y_010
                var005 += 1
            #end
        #end
    #end
    if var005 > 0:
        var003 /= var005
        var004 /= var005
    #end
    position_set_x(0,var003)
    position_set_y(0,var004)
    position_set_z(0,0)
    var011 = 0
    var012 = 0
    for var013 in range(0, 64):
        pos1 = entry_point_get_position(var013)
        position_set_z(1,0)
        sq_distance_014 = get_sq_distance_between_positions_in_meters(0,1)
        if sq_distance_014 <= 1500:
            val_max(sq_distance_014,1)
            var015 = 1500 * 1000
            var015 /= sq_distance_014
            if var015 > var011:
                var012 = var013
                var011 = var015
            #end
        #end
    #end
    reg0 = var012


def multiplayer_get_spawn_point_close_to_player(player_id_001):
    agent_id_002 = player_get_agent_id(player_id_001)
    position_set_x(0,0)
    position_set_y(0,0)
    if agent_is_alive(agent_id_002):
        pos0 = agent_get_position(agent_id_002)
    #end
    position_set_z(0,0)
    var003 = 0
    var004 = 0
    for var005 in range(0, 64):
        pos1 = entry_point_get_position(var005)
        position_set_z(1,0)
        sq_distance_006 = get_sq_distance_between_positions_in_meters(0,1)
        if sq_distance_006 <= 1500:
            val_max(sq_distance_006,1)
            var007 = 1500 * 1000
            var007 /= sq_distance_006
            if var007 > var003:
                var004 = var005
                var003 = var007
            #end
        #end
    #end
    reg0 = var004


def multiplayer_get_bots_count(player_id_001):
    team_no_002 = player_get_team_no(player_id_001)
    var003 = 0
    for cur_agent in __all_agents__:
        if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and agent_is_non_player(cur_agent):
            agent_group_005 = agent_get_group(cur_agent)
            agent_team_no_006 = agent_get_team(cur_agent)
            if agent_group_005 == player_id_001 and agent_team_no_006 == team_no_002:
                var003 += 1
            #end
        #end
    #end
    reg0 = var003


def multiplayer_get_selected_squad_slot_id(player_id_001):
    var002 = 35
    for slot_no_003 in range(35, 39):
        player_slot_004 = player_get_slot(player_id_001,slot_no_003)
        if player_slot_004 == 1:
            var002 = slot_no_003
        #end
    #end
    reg0 = var002


def cf_multiplayer_event_team_change(player_id_001):
    if _g_multiplayer_is_game_type_captain == 1:
        team_no_002 = player_get_team_no(player_id_001)
        for cur_agent in __all_agents__:
            if agent_is_human(cur_agent) and agent_is_alive(cur_agent) and agent_is_non_player(cur_agent):
                agent_group_004 = agent_get_group(cur_agent)
                agent_team_no_005 = agent_get_team(cur_agent)
                if agent_group_004 == player_id_001 and agent_team_no_005 == team_no_002:
                    remove_agent(cur_agent)
                #end
            #end
        #end
    #end


def team_get_attack_readying_ranged_agent_percentage(var001, var002):
    var003 = 0
    var004 = 0
    for cur_agent in __all_agents__:
        if agent_is_alive(cur_agent) and agent_is_human(cur_agent):
            agent_team_no_006 = agent_get_team(cur_agent)
            var007 = 0
            if var002 == 1 and teams_are_enemies(agent_team_no_006,var001):
                var007 = 1
            elif agent_team_no_006 == var001:
                var007 = 1
            #end
        #end
        if var007 == 1:
            agent_combat_state_008 = agent_get_combat_state(cur_agent)
            agent_wieled_item_009 = agent_get_wielded_item(cur_agent,0)
            if is_between(agent_wieled_item_009,itm.darts,itm.torch):
                var003 += 1
                if agent_combat_state_008 == 1:
                    var004 += 1
                #end
            #end
        #end
    #end
    if var003 == 0:
        var003 = 1
    #end
    var010 = var004 * 100
    var010 /= var003
    reg0 = var010


def multiplayer_get_requested_squad_count(player_id_001):
    var002 = 0
    for slot_no_003 in range(43, 45):
        player_slot_004 = player_get_slot(player_id_001,slot_no_003)
        var002 += player_slot_004
    #end
    reg0 = var002


def multiplayer_update_cost_labels():
    my_player = multiplayer_get_my_player()
    gold_002 = player_get_gold(my_player)
    multiplayer_calculate_cur_selected_items_cost(my_player,1)
    overlay_set_text(_g_presentation_obj_item_select_12,gstr.total_item_cost_reg0)
    if gold_002 >= reg0:
        overlay_set_color(_g_presentation_obj_item_select_12,16777215)
    else:
        overlay_set_color(_g_presentation_obj_item_select_12,16711680)
    #end


def multiplayer_ccoop_give_round_bonus_gold():
    if _g_multiplayer_ccoop_wave_no > 0:
        var001 = _g_multiplayer_ccoop_wave_no * 100
        var001 += 400
        max_players = get_max_players()
        for player_id_003 in range(0, max_players):
            if player_is_active(player_id_003):
                gold_004 = player_get_gold(player_id_003)
                gold_004 += var001
                player_set_gold(player_id_003,gold_004,15000)
            #end
        #end
    #end


def multiplayer_ccoop_destroy_prison_cart():
    if multiplayer_is_server():
        if multiplayer_is_dedicated_server():
            _g_prison_cart_previous_point = _g_prison_cart_point
            _g_prison_cart_point = 0
            scp_instance_001 = scene_prop_get_instance(spr.prison_cart,0)
            scp_instance_002 = scene_prop_get_instance(spr.prison_cart_door_left,0)
            scp_instance_003 = scene_prop_get_instance(spr.prison_cart_door_right,0)
            set_fixed_point_multiplier(100)
            pos1 = prop_instance_get_position(scp_instance_001)
            position_set_z(1,-4000)
            prop_instance_set_position(scp_instance_001,1)
            prop_instance_set_position(scp_instance_002,1)
            prop_instance_set_position(scp_instance_003,1)
        #end
        display_debug_message("@{!}destroy prison cart")
        max_players = get_max_players()
        for player_id_005 in range(0, max_players):
            if player_is_active(player_id_005):
                multiplayer_send_int_to_player(player_id_005,48,6)
            #end
        #end
    #end


def multiplayer_ccoop_spawn_prison_cart():
    if multiplayer_is_server():
        _g_prison_cart_point = store_random_in_range(70,75)
        reg0 = _g_prison_cart_point
        display_debug_message("@{!}spawning prison cart at point {reg0}")
        set_fixed_point_multiplier(100)
        scp_instance_001 = scene_prop_get_instance(spr.prison_cart,0)
        pos1 = entry_point_get_position(_g_prison_cart_point)
        position_move_y(1,-400)
        position_set_z_to_ground_level(1)
        prop_instance_set_position(scp_instance_001,1)
        scp_instance_002 = scene_prop_get_instance(spr.prison_cart_door_left,0)
        init_position(2)
        position_set_x(2,84,0)
        position_set_y(2,-314,0)
        position_set_z(2,121,0)
        position_transform_position_to_parent(3,1,2)
        prop_instance_set_position(scp_instance_002,3)
        scene_prop_set_hit_points(scp_instance_002,300)
        scp_instance_003 = scene_prop_get_instance(spr.prison_cart_door_right,0)
        init_position(2)
        position_set_x(2,-84,0)
        position_set_y(2,-315,0)
        position_set_z(2,123,0)
        position_transform_position_to_parent(3,1,2)
        prop_instance_set_position(scp_instance_003,3)
        scene_prop_set_hit_points(scp_instance_003,300)
        if True:
            multiplayer_ccoop_set_prison_cart_visibility(1)
            agent_no_004 = get_player_agent_no()
            if agent_no_004 >= 0:
                print(gstr.prison_cart_hint)
                start_presentation(prsnt.multiplayer_ccoop_next_wave_time_counter)
            #end
        #end
        max_players = get_max_players()
        for player_id_006 in range(1, max_players):
            if player_is_active(player_id_006):
                multiplayer_send_3_int_to_player(player_id_006,48,5,_g_prison_cart_point,300)
            #end
        #end
    #end


def multiplayer_ccoop_get_alive_enemy_count():
    var001 = 0
    for cur_agent in __all_agents__:
        if agent_is_active(cur_agent) and agent_is_human(cur_agent) and agent_is_alive(cur_agent):
            agent_team_no_003 = agent_get_team(cur_agent)
            if agent_team_no_003 == 1:
                var001 += 1
            #end
        #end
    #end
    reg0 = var001


def add_troop_to_cur_tableau_for_multiplayer(troop_id_001):
    set_fixed_point_multiplier(100)
    cur_tableau_clear_override_items()
    cur_tableau_set_override_flags(512)
    init_position(2)
    cur_tableau_set_camera_parameters(1,8,8,10,10000)
    init_position(5)
    var002 = 300
    var003 = 1000
    var004 = -15
    var005 = -18
    var006 = 1
    troop_inv_slot_007 = troop_get_inventory_slot(troop_id_001,8)
    if troop_inv_slot_007 > 0:
        cur_tableau_add_horse(troop_inv_slot_007,2,anim.horse_stand,0)
        var006 = anim.ride_0
        var005 = -20
        var004 = -25
        var002 = 500
        var003 = 1400
        position_move_x(5,50,0)
    #end
    position_set_z(5,var002)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    position_rotate_y(5,var004)
    position_rotate_x(5,var005)
    position_move_z(5,var003,0)
    position_move_x(5,-120,0)
    position_move_y(5,130,0)
    if troop_is_hero(troop_id_001):
        cur_tableau_add_troop(troop_id_001,2,var006,-1)
    else:
        var008 = troop_id_001 * 126233
        var008 %= 1000
        var008 += 1
        cur_tableau_add_troop(troop_id_001,2,var006,var008)
    #end
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-60)
    cur_tableau_add_sun_light(0,8,175,150,125)


def mp_set_player_troop_id(player_id_001, troop_id_002, var003):
    player_set_troop_id(player_id_001,troop_id_002)
    if troop_id_002 == -1:
        multiplayer_clear_player_selected_items(player_id_001)
    else:
        multiplayer_set_default_item_selections_for_troop(player_id_001,troop_id_002)
    #end
    if var003 != 0:
        multiplayer_send_int_to_server(20,troop_id_002)
    #end


def mp_set_player_team_no(player_id_001, team_no_002, var003):
    player_set_team_no(player_id_001,team_no_002)
    if var003 != 0:
        multiplayer_send_int_to_server(19,team_no_002)
    #end
    mp_set_player_troop_id(player_id_001,-1,0)


def multiplayer_ccoop_set_prison_cart_visibility(var001):
    set_fixed_point_multiplier(100)
    if True:
        scp_instance_002 = scene_prop_get_instance(spr.prison_cart,0)
        scp_instance_003 = scene_prop_get_instance(spr.prison_cart_door_left,0)
        scp_instance_004 = scene_prop_get_instance(spr.prison_cart_door_right,0)
        if var001 == 0:
            scene_prop_fade_out(scp_instance_002,400)
            scene_prop_fade_out(scp_instance_003,400)
            scene_prop_fade_out(scp_instance_004,400)
            prop_instance_enable_physics(scp_instance_002,0)
            prop_instance_enable_physics(scp_instance_003,0)
            prop_instance_enable_physics(scp_instance_004,0)
            _g_multiplayer_ccoop_move_prison_cart = store_mission_timer_a()
            _g_multiplayer_ccoop_move_prison_cart += 5
            _g_prison_cart_previous_point = _g_prison_cart_point
            _g_prison_cart_point = 0
        elif var001 > 0:
            scene_prop_fade_in(scp_instance_002,300)
            scene_prop_fade_in(scp_instance_003,300)
            scene_prop_fade_in(scp_instance_004,300)
            prop_instance_enable_physics(scp_instance_002,1)
            prop_instance_enable_physics(scp_instance_003,1)
            prop_instance_enable_physics(scp_instance_004,1)
        #end
    #end


def multiplayer_ccoop_spawn_player_and_bots(player_id_001):
    if not player_is_busy_with_menus(player_id_001):
        team_no_002 = player_get_team_no(player_id_001)
        if team_no_002 < 2:
            troop_id_003 = player_get_troop_id(player_id_001)
            if troop_id_003 >= 0:
                multiplayer_buy_agent_equipment(player_id_001)
                troop_inv_slot_004 = troop_get_inventory_slot(troop_id_003,8)
                if troop_inv_slot_004 >= 0:
                    var005 = 1
                else:
                    var005 = 0
                #end
            #end
        #end
        multiplayer_get_bots_count(player_id_001)
        var006 = reg0
        if _g_multiplayer_ccoop_enemy_respawn_secs > 31:
            reg0 = _g_prison_cart_previous_point
            display_debug_message("@{!}prison cart spawn at point {reg0}")
            player_spawn_new_agent(player_id_001,_g_prison_cart_previous_point)
            multiplayer_spawn_player_bot_squad_at_point(player_id_001,team_no_002,_g_prison_cart_previous_point)
        else:
            if var006 > 0:
                multiplayer_get_spawn_point_close_to_bots(player_id_001)
                player_spawn_new_agent(player_id_001,reg0)
                multiplayer_get_spawn_point_close_to_bots(player_id_001)
                multiplayer_spawn_player_bot_squad_at_point(player_id_001,team_no_002,reg0)
            else:
                multiplayer_find_spawn_point(team_no_002,1,var005)
                entry_point_007 = reg0
                player_spawn_new_agent(player_id_001,entry_point_007)
                multiplayer_spawn_player_bot_squad_at_point(player_id_001,team_no_002,entry_point_007)
            #end
        #end
        if True:
            player_slot_008 = player_get_slot(player_id_001,24)
            if player_slot_008 > 0:
                player_set_slot(player_id_001,24,0)
            #end
        #end
        reg0 = 1
    else:
        reg0 = 0
    #end


def multiplayer_set_g_multiplayer_is_game_type_captain():
    if _g_multiplayer_game_type == 8:
        _g_multiplayer_is_game_type_captain = 1
    else:
        _g_multiplayer_is_game_type_captain = 0
    #end


def cf_multiplayer_can_buy_squad():
    var001 = 0
    if _g_multiplayer_is_game_type_captain == 1:
        var001 = 1
    #end


def avarage_of_two_points():
    pos_x_001 = position_get_x(1)
    pos_x_002 = position_get_x(2)
    pos_x_001 += pos_x_002
    pos_x_001 /= 2
    position_set_x(1,pos_x_001)
    pos_y_003 = position_get_y(1)
    pos_y_004 = position_get_y(2)
    pos_y_003 += pos_y_004
    pos_y_003 /= 2
    position_set_y(1,pos_y_003)
    pos_z_005 = position_get_z(1)
    pos_z_006 = position_get_z(2)
    pos_z_005 += pos_z_006
    pos_z_005 /= 2
    position_set_z(1,pos_z_005)


def multiplayer_ccoop_start_player_and_squad_respawn_period(_g_multiplayer_ccoop_spawn_alive_player_squad_and_minus_one_first_spawn_slots_and_minus_one_first_spawn_slots):
    if multiplayer_is_server():
        max_players = get_max_players()
        for player_id_002 in range(0, max_players):
            if player_is_active(player_id_002):
                if _g_multiplayer_ccoop_spawn_alive_player_squad_and_minus_one_first_spawn_slots_and_minus_one_first_spawn_slots == 1:
                    player_set_slot(player_id_002,24,1)
                else:
                    player_slot_003 = player_get_slot(player_id_002,24)
                    if player_slot_003 >= 0:
                        player_set_slot(player_id_002,24,1)
                    #end
                #end
            #end
        #end
        _g_multiplayer_ccoop_spawn_player_and_squad_counter = 30
    #end


def multiplayer_upgrade_player_equipment(player_id_001):
    var022_list1 = [
    3,
    2,
    1,
    0,
    ]
    reg0 = player_id_001
    display_debug_message("@{!}multiplayer upgrade player equipment: {reg0}")
    troop_id_002 = player_get_troop_id(player_id_001)
    agent_id_003 = player_get_agent_id(player_id_001)
    gold_004 = player_get_gold(player_id_001)
    for var005 in range(0, 8):
        slot_no_006 = var005 + 11
        slot_no_007 = var005 + 2
        player_slot_008 = player_get_slot(player_id_001,slot_no_007)
        agent_item_slot_009 = agent_get_item_slot(agent_id_003,var005)
        if player_slot_008 >= 0 or is_between(agent_item_slot_009,itm.javelin_bow,itm.ccoop_new_items_end) or player_item_slot_is_picked_up(player_id_001,var005):
            player_set_slot(player_id_001,slot_no_006,-1)
        else:
            player_set_slot(player_id_001,slot_no_006,agent_item_slot_009)
        #end
    #end
    player_set_slot(player_id_001,19,-1)
    multiplayer_calculate_cur_selected_items_cost(player_id_001,0)
    var010 = reg0
    gold_004 += var010
    for slot_no_011 in range(2, 11):
        player_slot_012 = player_get_slot(player_id_001,slot_no_011)
        slot_no_013 = slot_no_011 - 2
        agent_item_slot_009 = agent_get_item_slot(agent_id_003,slot_no_013)
        if player_slot_012 >= 0 or player_item_slot_is_picked_up(player_id_001,slot_no_013) or is_between(agent_item_slot_009,itm.javelin_bow,itm.ccoop_new_items_end) or slot_no_013 == 8:
            player_slot_012 = -1
        #end
        slot_no_013 += 11
        player_set_slot(player_id_001,slot_no_013,player_slot_012)
    #end
    var014 = 1000
    for var015 in range(0, var014):
        multiplayer_calculate_cur_selected_items_cost(player_id_001,0)
        var016 = reg0
        if var016 > gold_004:
            multiplayer_get_troop_class(troop_id_002)
            var017 = reg0
            var018 = 0
            slot_no_019 = -1
            for slot_no_011 in range(11, 20):
                player_slot_020 = player_get_slot(player_id_001,slot_no_011)
                if player_slot_020 >= 0:
                    multiplayer_get_item_value_for_troop(player_slot_020,troop_id_002)
                    var021 = reg0
                    var022 = slot_no_011 - 11
                    if var022 in var022_list1:
                        var021 *= 5
                    elif var022 == 4:
                        var021 *= 4
                    elif var022 == 5:
                        var021 *= 2
                    elif var022 == 6:
                        var021 *= 8
                    elif var022 == 7:
                        var021 *= 8
                    else:
                        pass
                    #end
                #end
                item_slot_023 = item_get_slot(player_slot_020,60)
                if var017 == 1 and item_slot_023 == 1 or item_slot_023 == 2 or item_slot_023 == 3 or item_slot_023 == 4 or item_slot_023 == 6 or item_slot_023 == 10 or item_slot_023 == 7:
                    var021 /= 2
                elif var017 == 2 and item_slot_023 == 8 or item_slot_023 == 11:
                    var021 /= 2
                elif var017 == 3 and item_slot_023 == 9 or item_slot_023 == 1 or item_slot_023 == 18:
                    var021 /= 2
                elif var017 == 4 and item_slot_023 == 12 or item_slot_023 == 14:
                    var021 /= 2
                elif var017 == 5 and item_slot_023 == 13 or item_slot_023 == 15:
                    var021 /= 2
                elif var017 == 6 and item_slot_023 == 12 or item_slot_023 == 14 or item_slot_023 == 18:
                    var021 /= 2
                elif var017 == 7 and item_slot_023 == 13 or item_slot_023 == 15 or item_slot_023 == 18:
                    var021 /= 2
                #end
                if var021 > var018:
                    var018 = var021
                    slot_no_019 = slot_no_011
                #end
            #end
            player_slot_020 = player_get_slot(player_id_001,slot_no_019)
            multiplayer_get_previous_item_for_item_and_troop(player_slot_020,troop_id_002)
            player_slot_020 = reg0
            player_set_slot(player_id_001,slot_no_019,player_slot_020)
        else:
            var014 = 0
            var016 = reg0
            gold_004 -= var016
            player_set_gold(player_id_001,gold_004,15000)
            for slot_no_011 in range(11, 20):
                player_slot_020 = player_get_slot(player_id_001,slot_no_011)
                if player_slot_020 >= 0:
                    var024 = slot_no_011 - 11
                    agent_item_slot_009 = agent_get_item_slot(agent_id_003,var024)
                    if agent_item_slot_009 != player_slot_020 and not is_between(agent_item_slot_009,itm.javelin_bow,itm.ccoop_new_items_end):
                        max_players = get_max_players()
                        if agent_item_slot_009 >= 0:
                            agent_unequip_item(agent_id_003,agent_item_slot_009,var024)
                            for player_id_026 in range(1, max_players):
                                if player_is_active(player_id_026):
                                    multiplayer_send_4_int_to_player(player_id_026,48,15,agent_id_003,agent_item_slot_009,var024)
                                #end
                            #end
                        #end
                    #end
                    agent_equip_item(agent_id_003,player_slot_020)
                    for player_id_026 in range(1, max_players):
                        if player_is_active(player_id_026):
                            multiplayer_send_3_int_to_player(player_id_026,48,16,agent_id_003,player_slot_020)
                        #end
                    #end
                #end
            #end
            player_set_slot(player_id_001,27,var016)
        #end
    #end


def cf_multiplayer_upgrade_companion_equipment(var001):
    item_type_015_list2 = [
    10,
    9,
    8,
    ]
    item_type_015_list1 = [
    4,
    3,
    2,
    ]
    agent_group_002 = agent_get_group(var001)
    if player_is_active(agent_group_002):
        troop_id_003 = agent_get_troop_id(var001)
        var004 = 0
        for slot_no_005 in range(43, 45):
            player_slot_006 = player_get_slot(agent_group_002,slot_no_005)
            if troop_id_003 == player_slot_006:
                var004 = 1
                slot_no_005 -= 43
                slot_no_005 += 47
                player_slot_007 = player_get_slot(agent_group_002,slot_no_005)
                slot_no_005 -= 47
                slot_no_005 += 45
                player_slot_008 = player_get_slot(agent_group_002,slot_no_005)
            #end
        #end
    #end
    if var004 == 1:
        if is_between(player_slot_008,trp.swadian_crossbowman_multiplayer_coop_tier_1,trp.coop_faction_troop_templates_end):
            var009 = 18
        else:
            var009 = 16
        #end
    #end
    if player_slot_007 < 3:
        var010 = player_slot_007 * var009
        player_slot_008 += var010
    else:
        var010 = 3 * var009
        player_slot_008 += var010
    #end
    var011 = 0
    var012 = 0
    troop_equip_items(player_slot_008)
    max_players = get_max_players()
    for slot_no_005 in range(0, 4):
        agent_item_slot_014 = agent_get_item_slot(var001,slot_no_005)
        if agent_item_slot_014 >= 0:
            if is_between(agent_item_slot_014,itm.javelin_bow,itm.ccoop_new_items_end):
                item_type_015 = item_get_type(agent_item_slot_014)
                if item_type_015 in item_type_015_list1:
                    var011 = 1
                elif item_type_015 in item_type_015_list2:
                    var012 = 1
                #end
            #end
        else:
            agent_unequip_item(var001,agent_item_slot_014,slot_no_005)
            for player_id_016 in range(1, max_players):
                if player_is_active(player_id_016):
                    multiplayer_send_4_int_to_player(player_id_016,48,15,var001,agent_item_slot_014,slot_no_005)
                #end
            #end
        #end
    #end
    for slot_no_005 in range(0, 9):
        troop_inv_slot_017 = troop_get_inventory_slot(player_slot_008,slot_no_005)
        if troop_inv_slot_017 > 0:
            item_type_018 = item_get_type(troop_inv_slot_017)
            if is_between(item_type_018,12,16):
                var019 = 0
                for var020 in range(4, 8):
                    agent_item_slot_021 = agent_get_item_slot(var001,var020)
                    if agent_item_slot_021 >= 0:
                        item_type_022 = item_get_type(agent_item_slot_021)
                        if item_type_018 == item_type_022:
                            var019 = 1
                            if agent_item_slot_021 != troop_inv_slot_017 and not is_between(agent_item_slot_021,itm.javelin_bow,itm.ccoop_new_items_end):
                                agent_unequip_item(var001,agent_item_slot_021,var020)
                                for player_id_016 in range(1, max_players):
                                    if player_is_active(player_id_016):
                                        multiplayer_send_4_int_to_player(player_id_016,48,15,var001,agent_item_slot_021,var020)
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
                agent_equip_item(var001,troop_inv_slot_017)
                for player_id_016 in range(1, max_players):
                    if player_is_active(player_id_016):
                        multiplayer_send_3_int_to_player(player_id_016,48,16,var001,troop_inv_slot_017)
                    #end
                #end
            #end
            if var019 == 0:
                agent_equip_item(var001,troop_inv_slot_017)
                for player_id_016 in range(1, max_players):
                    if player_is_active(player_id_016):
                        multiplayer_send_3_int_to_player(player_id_016,48,16,var001,troop_inv_slot_017)
                    #end
                #end
            #end
        else:
            var023 = 0
            if item_type_018 == 2 or item_type_018 == 3 or item_type_018 == 7 or item_type_018 == 4 and var011 == 0:
                var023 = 1
            elif item_type_018 == 8 or item_type_018 == 9 or item_type_018 == 10 or item_type_018 == 6 or item_type_018 == 5 and var012 == 0:
                var023 = 1
            #end
            if var023 == 1:
                agent_equip_item(var001,troop_inv_slot_017)
                for player_id_016 in range(1, max_players):
                    if player_is_active(player_id_016):
                        multiplayer_send_3_int_to_player(player_id_016,48,16,var001,troop_inv_slot_017)
                    #end
                #end
            #end
        #end
    #end


def mp_spawn_coop_companion(player_id_001, troop_id_002, slot_no_003, team_no_004, entry_no_005):
    troop_equip_items(troop_id_002)
    slot_no_003 += 2
    player_slot_006 = player_get_slot(player_id_001,slot_no_003)
    var007 = 0
    for inventory_slot_no_008 in range(0, 9):
        if var007 == 0:
            troop_inv_slot_009 = troop_get_inventory_slot(player_slot_006,inventory_slot_no_008)
            if troop_inv_slot_009 > 0:
                item_type_010 = item_get_type(troop_inv_slot_009)
                if item_type_010 == 1:
                    var007 = 1
                #end
            #end
        #end
    #end
    cur_scene_011 = store_current_scene()
    scene_slot_012 = scene_get_slot(cur_scene_011,1)
    for inventory_slot_no_008 in range(0, 9):
        troop_inv_slot_009 = troop_get_inventory_slot(troop_id_002,inventory_slot_no_008)
        if troop_inv_slot_009 >= 0:
            item_type_010 = item_get_type(troop_inv_slot_009)
            troop_remove_item(troop_id_002,troop_inv_slot_009)
            if item_type_010 == 1:
                troop_set_slot(troop_id_002,155,troop_inv_slot_009)
            else:
                inventory_slot_no_008 += 202
                troop_set_slot(trp.multiplayer_data,inventory_slot_no_008,troop_inv_slot_009)
            #end
        #end
    #end
    troop_clear_inventory(troop_id_002)
    for inventory_slot_no_008 in range(202, 211):
        troop_inv_slot_009 = troop_get_slot(trp.multiplayer_data,inventory_slot_no_008)
        if troop_inv_slot_009 > 0:
            troop_add_item(troop_id_002,troop_inv_slot_009)
        #end
    #end
    if scene_slot_012 == 0 and var007 == 1:
        troop_slot_013 = troop_get_slot(troop_id_002,155)
        troop_add_item(troop_id_002,troop_slot_013)
        troop_set_slot(troop_id_002,155,-1)
    #end
    troop_equip_items(troop_id_002)
    modify_visitors_at_site(cur_scene_011)
    add_visitors_to_current_scene(entry_no_005,troop_id_002,1,team_no_004,player_id_001)


def coop_generate_item_drop(player_id_001):
    _g_ccoop_currently_dropping_item = store_random_in_range(itm.javelin_bow,itm.javelin_bow_ammo)
    player_set_slot(player_id_001,49,_g_ccoop_currently_dropping_item)


def coop_drop_item(reg0, reg1, reg2):
    start_presentation(prsnt.coop_assign_drop_to_group_member)


def cf_coop_give_item_to_assigned_group_member(player_id_001, agent_id_002):
    item_type_013_list1 = [
    5,
    6,
    10,
    9,
    8,
    ]
    item_type_011_list2 = [
    10,
    9,
    8,
    ]
    item_type_013_list1 = [
    4,
    7,
    3,
    2,
    ]
    item_type_011_list1 = [
    4,
    3,
    2,
    ]
    if player_is_active(player_id_001):
        var003 = 0
        var004 = 0
        player_slot_005 = player_get_slot(player_id_001,49)
        if player_slot_005 >= 0:
            if agent_id_002 == 0:
                agent_id_002 = player_get_agent_id(player_id_001)
                agent_group_006 = player_id_001
                if agent_is_active(agent_id_002) and agent_is_alive(agent_id_002):
                    var007 = 0
                    item_slot_008 = item_get_slot(player_slot_005,59)
                    item_slot_008 += 1
                    for var009 in range(0, 4):
                        agent_item_slot_010 = agent_get_item_slot(agent_id_002,var009)
                        if agent_item_slot_010 >= 0:
                            var007 += 1
                        #end
                    #end
                #end
            #end
            if True:
                item_type_011 = item_get_type(player_slot_005)
                if item_type_011 >= 12:
                    item_slot_008 = 0
                #end
            #end
            var004 = var007 + item_slot_008
        else:
            var003 = 1
            player_set_slot(player_id_001,49,-1)
        #end
    elif agent_is_active(agent_id_002) and agent_is_alive(agent_id_002) and agent_is_human(agent_id_002):
        agent_group_006 = agent_get_group(agent_id_002)
    else:
        var003 = 1
        player_set_slot(player_id_001,49,-1)
    #end
    if var003 == 0:
        if var004 > 4:
            var003 = 1
            player_set_slot(player_id_001,49,-1)
            pos1 = agent_get_position(agent_id_002)
            position_move_z(1,20)
            set_spawn_position(1)
            spawn_item(player_slot_005)
            s0 = str_store_string(gstr.ccoop_dropping_item_on_ground)
            multiplayer_send_string_to_player(player_id_001,111,0)
            if player_slot_005 == itm.javelin_bow:
                spawn_item(itm.javelin_bow_ammo)
            #end
        #end
    #end
    if var003 == 0:
        max_players = get_max_players()
        if agent_group_006 == player_id_001 and player_is_active(agent_group_006):
            item_type_011 = item_get_type(player_slot_005)
            if agent_is_non_player(agent_id_002):
                if item_type_011 in item_type_011_list1:
                    for var009 in range(0, 4):
                        agent_item_slot_010 = agent_get_item_slot(agent_id_002,var009)
                        if agent_item_slot_010 >= 0:
                            item_type_013 = item_get_type(agent_item_slot_010)
                            if item_type_013 in item_type_013_list1:
                                agent_unequip_item(agent_id_002,agent_item_slot_010,var009)
                                for player_id_014 in range(0, max_players):
                                    if player_is_active(player_id_014):
                                        multiplayer_send_4_int_to_player(player_id_014,48,15,agent_id_002,agent_item_slot_010,var009)
                                    #end
                                #end
                            #end
                        #end
                    #end
                #end
            elif item_type_011 in item_type_011_list2:
                for var009 in range(0, 4):
                    agent_item_slot_010 = agent_get_item_slot(agent_id_002,var009)
                    if agent_item_slot_010 >= 0:
                        item_type_013 = item_get_type(agent_item_slot_010)
                        if item_type_013 in item_type_013_list1:
                            agent_unequip_item(agent_id_002,agent_item_slot_010,var009)
                            for player_id_014 in range(0, max_players):
                                if player_is_active(player_id_014):
                                    multiplayer_send_4_int_to_player(player_id_014,48,15,agent_id_002,agent_item_slot_010,var009)
                                #end
                            #end
                        #end
                    #end
                #end
            #end
        #end
        if is_between(item_type_011,12,16):
            for var009 in range(4, 8):
                agent_item_slot_010 = agent_get_item_slot(agent_id_002,var009)
                if agent_item_slot_010 >= 0:
                    item_type_013 = item_get_type(agent_item_slot_010)
                    if item_type_013 == item_type_011:
                        agent_unequip_item(agent_id_002,agent_item_slot_010)
                        for player_id_014 in range(0, max_players):
                            if player_is_active(player_id_014):
                                multiplayer_send_4_int_to_player(player_id_014,48,15,agent_id_002,agent_item_slot_010,var009)
                            #end
                        #end
                    #end
                #end
                if agent_item_slot_010 == itm.running_boots:
                    agent_set_speed_modifier(agent_id_002,100)
                elif agent_item_slot_010 == itm.power_gloves:
                    agent_set_damage_modifier(agent_id_002,100)
                #end
            #end
        #end
        agent_equip_item(agent_id_002,player_slot_005)
        for player_id_014 in range(0, max_players):
            if player_is_active(player_id_014):
                multiplayer_send_3_int_to_player(player_id_014,48,16,agent_id_002,player_slot_005)
            #end
        #end
        if player_slot_005 == itm.javelin_bow:
            agent_equip_item(agent_id_002,itm.javelin_bow_ammo)
            for player_id_014 in range(0, max_players):
                if player_is_active(player_id_014):
                    multiplayer_send_3_int_to_player(player_id_014,48,16,agent_id_002,itm.javelin_bow_ammo)
                #end
            #end
        elif player_slot_005 == itm.running_boots:
            agent_set_speed_modifier(agent_id_002,150)
        elif player_slot_005 == itm.power_gloves:
            agent_set_damage_modifier(agent_id_002,150)
        elif player_slot_005 == itm.kicking_boots and agent_is_non_player(agent_id_002):
            agent_set_kick_allowed(agent_id_002,1)
        #end
    #end
    player_set_slot(player_id_001,49,-1)


def add_player_to_cur_tableau_for_coop():
    cur_tableau_set_override_flags(511)
    my_player = multiplayer_get_my_player()
    var002 = trp.coop_companion_equipment_ui_0
    agent_id_003 = player_get_agent_id(my_player)
    for var004 in range(0, 8):
        agent_item_slot_005 = agent_get_item_slot(agent_id_003,var004)
        if agent_item_slot_005 >= 0:
            cur_tableau_add_override_item(agent_item_slot_005)
        #end
    #end
    if True:
        gender_006 = player_get_gender(my_player)
        if gender_006 == 1:
            var002 += 1
        #end
    #end
    s0 = str_store_player_face_keys(my_player)
    troop_set_face_keys(var002,0)
    var007 = store_mod(agent_id_003,4)
    var007 += anim.pose_1
    set_fixed_point_multiplier(100)
    cur_tableau_set_camera_parameters(1,6,6,10,10000)
    var008 = 145
    var009 = 350
    var010 = 2
    init_position(5)
    position_set_z(5,var008)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    var011 = -50
    position_move_x(5,-10,0)
    position_rotate_y(5,var011)
    position_rotate_x(5,var010)
    position_move_z(5,var009,0)
    position_move_y(5,60,0)
    init_position(2)
    cur_tableau_add_troop(var002,2,var007,0)
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-50)
    cur_tableau_add_sun_light(0,8,175,150,125)


def add_troop_to_cur_tableau_for_coop(troop_id_001):
    cur_tableau_set_override_flags(511)
    my_player = multiplayer_get_my_player()
    var003 = 0
    var004 = trp.coop_companion_equipment_ui_0
    for cur_agent in __all_agents__:
        if var003 == 0 and agent_is_active(cur_agent) and agent_is_alive(cur_agent) and agent_is_non_player(cur_agent):
            troop_id_006 = agent_get_troop_id(cur_agent)
            if troop_id_006 == troop_id_001:
                agent_group_007 = agent_get_group(cur_agent)
                if agent_group_007 == my_player:
                    for slot_no_008 in range(43, 45):
                        if player_slot_eq(my_player,slot_no_008,troop_id_006):
                            for inventory_slot_no_009 in range(0, 8):
                                agent_item_slot_010 = agent_get_item_slot(cur_agent,inventory_slot_no_009)
                                if agent_item_slot_010 >= 0:
                                    cur_tableau_add_override_item(agent_item_slot_010)
                                #end
                            #end
                        #end
                    #end
                #end
            #end
            if slot_no_008 > 43:
                var004 += 2
            #end
        #end
        var003 = 1
    #end
    if var003 == 0:
        for slot_no_008 in range(43, 45):
            if player_slot_eq(my_player,slot_no_008,troop_id_001):
                if slot_no_008 > 43:
                    var004 += 2
                #end
            #end
            slot_no_008 += 2
            player_slot_011 = player_get_slot(my_player,slot_no_008)
            slot_no_008 += 2
            player_slot_012 = player_get_slot(my_player,slot_no_008)
            if player_slot_011 >= trp.npc1_1:
                player_slot_012 *= 16
                player_slot_011 += player_slot_012
            else:
                player_slot_012 *= 18
                player_slot_011 += player_slot_012
            #end
            for inventory_slot_no_009 in range(0, 8):
                agent_item_slot_010 = troop_get_inventory_slot(player_slot_011,inventory_slot_no_009)
                if agent_item_slot_010 >= 0:
                    cur_tableau_add_override_item(agent_item_slot_010)
                #end
            #end
        #end
    #end
    if True:
        troop_type_013 = troop_get_type(troop_id_001)
        if troop_type_013 == 1:
            var004 += 1
        #end
    #end
    s0 = str_store_troop_face_keys(troop_id_001)
    troop_set_face_keys(var004,0)
    if var003 == 1:
        var014 = store_mod(cur_agent,4)
    else:
        var014 = store_mod(player_slot_011,4)
    #end
    var014 += anim.pose_1
    set_fixed_point_multiplier(100)
    cur_tableau_set_camera_parameters(1,6,6,10,10000)
    var015 = 145
    var016 = 350
    var017 = 2
    init_position(5)
    position_set_z(5,var015)
    position_rotate_x(5,-90)
    position_rotate_z(5,180)
    if var004 < trp.coop_companion_equipment_ui_1:
        var018 = -50
        position_move_x(5,-10,0)
    else:
        var018 = -10
        position_move_x(5,10,0)
    #end
    position_rotate_y(5,var018)
    position_rotate_x(5,var017)
    position_move_z(5,var016,0)
    position_move_y(5,60,0)
    init_position(2)
    cur_tableau_add_troop(var004,2,var014,0)
    cur_tableau_set_camera_position(5)
    copy_position(8,5)
    position_rotate_x(8,-90)
    position_rotate_z(8,30)
    position_rotate_x(8,-50)
    cur_tableau_add_sun_light(0,8,175,150,125)


